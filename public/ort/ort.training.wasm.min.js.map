{
  "version": 3,
  "sources": ["../../common/lib/backend-impl.ts", "../../common/lib/backend.ts", "../../common/lib/version.ts", "../../common/lib/env-impl.ts", "../../common/lib/env.ts", "../../common/lib/tensor-conversion-impl.ts", "../../common/lib/tensor-factory-impl.ts", "../../common/lib/tensor-impl-type-mapping.ts", "../../common/lib/tensor-utils-impl.ts", "../../common/lib/tensor-impl.ts", "../../common/lib/tensor.ts", "../../common/lib/trace.ts", "../../common/lib/inference-session-impl.ts", "../../common/lib/inference-session.ts", "../../common/lib/onnx-value.ts", "../../common/lib/training-session-impl.ts", "../../common/lib/training-session.ts", "../../common/lib/index.ts", "nodejs-ignore:fs", "nodejs-ignore:path", "../lib/wasm/binding/ort-training-wasm-simd.js", "nodejs-ignore:worker_threads", "nodejs-ignore:perf_hooks", "nodejs-ignore:os", "../lib/wasm/binding/ort-wasm-threaded.js", "../lib/wasm/binding/ort-wasm-threaded.worker.js", "../lib/wasm/wasm-factory.ts", "../lib/wasm/wasm-utils.ts", "../lib/wasm/run-options.ts", "../lib/wasm/session-options.ts", "../lib/wasm/wasm-common.ts", "../lib/wasm/wasm-utils-load-file.ts", "../lib/wasm/wasm-core-impl.ts", "proxy-worker:./proxy-worker/main", "../lib/wasm/proxy-wrapper.ts", "../lib/wasm/session-handler-inference.ts", "../lib/backend-wasm.ts", "../lib/wasm/wasm-training-core-impl.ts", "../lib/wasm/session-handler-training.ts", "../lib/backend-wasm-training.ts", "../lib/index.ts", "../lib/version.ts"],
  "sourcesContent": ["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend} from './backend.js';\n\ninterface BackendInfo {\n  backend: Backend;\n  priority: number;\n\n  initPromise?: Promise<void>;\n  initialized?: boolean;\n  aborted?: boolean;\n}\n\nconst backends: Map<string, BackendInfo> = new Map();\nconst backendsSortedByPriority: string[] = [];\n\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @ignore\n */\nexport const registerBackend = (name: string, backend: Backend, priority: number): void => {\n  if (backend && typeof backend.init === 'function' && typeof backend.createInferenceSessionHandler === 'function') {\n    const currentBackend = backends.get(name);\n    if (currentBackend === undefined) {\n      backends.set(name, {backend, priority});\n    } else if (currentBackend.priority > priority) {\n      // same name is already registered with a higher priority. skip registeration.\n      return;\n    } else if (currentBackend.priority === priority) {\n      if (currentBackend.backend !== backend) {\n        throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n      }\n    }\n\n    if (priority >= 0) {\n      const i = backendsSortedByPriority.indexOf(name);\n      if (i !== -1) {\n        backendsSortedByPriority.splice(i, 1);\n      }\n\n      for (let i = 0; i < backendsSortedByPriority.length; i++) {\n        if (backends.get(backendsSortedByPriority[i])!.priority <= priority) {\n          backendsSortedByPriority.splice(i, 0, name);\n          return;\n        }\n      }\n      backendsSortedByPriority.push(name);\n    }\n    return;\n  }\n\n  throw new TypeError('not a valid backend');\n};\n\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @ignore\n */\nexport const resolveBackend = async(backendHints: readonly string[]): Promise<Backend> => {\n  const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n  const errors = [];\n  for (const backendName of backendNames) {\n    const backendInfo = backends.get(backendName);\n    if (backendInfo) {\n      if (backendInfo.initialized) {\n        return backendInfo.backend;\n      } else if (backendInfo.aborted) {\n        continue;  // current backend is unavailable; try next\n      }\n\n      const isInitializing = !!backendInfo.initPromise;\n      try {\n        if (!isInitializing) {\n          backendInfo.initPromise = backendInfo.backend.init(backendName);\n        }\n        await backendInfo.initPromise;\n        backendInfo.initialized = true;\n        return backendInfo.backend;\n      } catch (e) {\n        if (!isInitializing) {\n          errors.push({name: backendName, err: e});\n        }\n        backendInfo.aborted = true;\n      } finally {\n        delete backendInfo.initPromise;\n      }\n    }\n  }\n\n  throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {TrainingSession} from './training-session.js';\n\n/**\n * @ignore\n */\nexport declare namespace SessionHandler {\n  type FeedsType = {[name: string]: OnnxValue};\n  type FetchesType = {[name: string]: OnnxValue | null};\n  type ReturnType = {[name: string]: OnnxValue};\n}\n\n/**\n * Represents shared SessionHandler functionality\n *\n * @ignore\n */\ninterface SessionHandler {\n  dispose(): Promise<void>;\n\n  readonly inputNames: readonly string[];\n  readonly outputNames: readonly string[];\n}\n\n/**\n * Represent a handler instance of an inference session.\n *\n * @ignore\n */\nexport interface InferenceSessionHandler extends SessionHandler {\n  startProfiling(): void;\n  endProfiling(): void;\n\n  run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n}\n\n/**\n * Represent a handler instance of a training inference session.\n *\n * @ignore\n */\nexport interface TrainingSessionHandler extends SessionHandler {\n  readonly evalInputNames: readonly string[];\n  readonly evalOutputNames: readonly string[];\n\n  lazyResetGrad(): Promise<void>;\n  runTrainStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n  runOptimizerStep(options: InferenceSession.RunOptions): Promise<void>;\n  runEvalStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n\n  getParametersSize(trainableOnly: boolean): Promise<number>;\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n  getContiguousParameters(trainableOnly: boolean): Promise<OnnxValue>;\n}\n\n/**\n * Represent a backend that provides implementation of model inferencing.\n *\n * @ignore\n */\nexport interface Backend {\n  /**\n   * Initialize the backend asynchronously. Should throw when failed.\n   */\n  init(backendName: string): Promise<void>;\n\n  createInferenceSessionHandler(uriOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n\n  createTrainingSessionHandler?\n      (checkpointStateUriOrBuffer: TrainingSession.URIorBuffer, trainModelUriOrBuffer: TrainingSession.URIorBuffer,\n       evalModelUriOrBuffer: TrainingSession.URIorBuffer, optimizerModelUriOrBuffer: TrainingSession.URIorBuffer,\n       options: InferenceSession.SessionOptions): Promise<TrainingSessionHandler>;\n}\n\nexport {registerBackend} from './backend-impl.js';\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.1';\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from './env.js';\nimport {version} from './version.js';\n\ntype LogLevelType = Env['logLevel'];\n\nlet logLevelValue: Required<LogLevelType> = 'warning';\n\nexport const env: Env = {\n  wasm: {} as Env.WebAssemblyFlags,\n  webgl: {} as Env.WebGLFlags,\n  webgpu: {} as Env.WebGpuFlags,\n  versions: {common: version},\n\n  set logLevel(value: LogLevelType) {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n      throw new Error(`Unsupported logging level: ${value}`);\n    }\n    logLevelValue = value;\n  },\n  get logLevel(): Required<LogLevelType> {\n    return logLevelValue;\n  },\n};\n\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', {enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env as envImpl} from './env-impl.js';\n\nexport declare namespace Env {\n  export type WasmPrefixOrFilePaths = string|{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    'ort-wasm.wasm'?: string;\n    'ort-wasm-threaded.wasm'?: string;\n    'ort-wasm-simd.wasm'?: string;\n    'ort-training-wasm-simd.wasm'?: string;\n    'ort-wasm-simd-threaded.wasm'?: string;\n    /* eslint-enable @typescript-eslint/naming-convention */\n  };\n  export interface WebAssemblyFlags {\n    /**\n     * set or get number of thread(s). If omitted or set to 0, number of thread(s) will be determined by system. If set\n     * to 1, no worker thread will be spawned.\n     *\n     * This setting is available only when WebAssembly multithread feature is available in current context.\n     *\n     * @defaultValue `0`\n     */\n    numThreads?: number;\n\n    /**\n     * set or get a boolean value indicating whether to enable SIMD. If set to false, SIMD will be forcely disabled.\n     *\n     * This setting is available only when WebAssembly SIMD feature is available in current context.\n     *\n     * @defaultValue `true`\n     */\n    simd?: boolean;\n\n    /**\n     * set or get a boolean value indicating whether to enable trace.\n     *\n     * @defaultValue `false`\n     */\n    trace?: boolean;\n\n    /**\n     * Set or get a number specifying the timeout for initialization of WebAssembly backend, in milliseconds. A zero\n     * value indicates no timeout is set.\n     *\n     * @defaultValue `0`\n     */\n    initTimeout?: number;\n\n    /**\n     * Set a custom URL prefix to the .wasm files or a set of overrides for each .wasm file. The override path should be\n     * an absolute path.\n     */\n    wasmPaths?: WasmPrefixOrFilePaths;\n\n    /**\n     * Set or get a boolean value indicating whether to proxy the execution of main thread to a worker thread.\n     *\n     * @defaultValue `false`\n     */\n    proxy?: boolean;\n  }\n\n  export interface WebGLFlags {\n    /**\n     * Set or get the WebGL Context ID (webgl or webgl2).\n     *\n     * @defaultValue `'webgl2'`\n     */\n    contextId?: 'webgl'|'webgl2';\n    /**\n     * Get the WebGL rendering context.\n     */\n    readonly context: WebGLRenderingContext;\n    /**\n     * Set or get the maximum batch size for matmul. 0 means to disable batching.\n     *\n     * @deprecated\n     */\n    matmulMaxBatchSize?: number;\n    /**\n     * Set or get the texture cache mode.\n     *\n     * @defaultValue `'full'`\n     */\n    textureCacheMode?: 'initializerOnly'|'full';\n    /**\n     * Set or get the packed texture mode\n     *\n     * @defaultValue `false`\n     */\n    pack?: boolean;\n    /**\n     * Set or get whether enable async download.\n     *\n     * @defaultValue `false`\n     */\n    async?: boolean;\n  }\n\n  export interface WebGpuProfilingDataV1TensorMetadata {\n    dims: readonly number[];\n    dataType: string;\n  }\n  export interface WebGpuProfilingDataV1 {\n    version: 1;\n    inputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    outputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    kernelId: number;\n    kernelType: string;\n    kernelName: string;\n    programName: string;\n    startTime: number;\n    endTime: number;\n  }\n\n  export type WebGpuProfilingData = WebGpuProfilingDataV1;\n\n  export interface WebGpuFlags {\n    /**\n     * Set or get the profiling mode.\n     *\n     * @deprecated Use `env.webgpu.profiling.mode` instead. If `env.webgpu.profiling.mode` is set, this property will be\n     * ignored.\n     */\n    profilingMode?: 'off'|'default';\n    /**\n     * Set or get the profiling configuration.\n     */\n    profiling?: {\n      /**\n       * Set or get the profiling mode.\n       *\n       * @defaultValue `'off'`\n       */\n      mode?: 'off'|'default';\n\n      /**\n       * Set or get a callback function when a profiling data is received. If not set, the profiling data will be\n       * printed to console.\n       */\n      ondata?: (data: WebGpuProfilingData) => void;\n    };\n    /**\n     * Get the device for WebGPU.\n     *\n     * When use with TypeScript, the type of this property is `GPUDevice` defined in \"@webgpu/types\".\n     * Use `const device = env.webgpu.device as GPUDevice;` in TypeScript to access this property with correct type.\n     *\n     * see comments on {@link GpuBufferType} for more details about why not use types defined in \"@webgpu/types\".\n     */\n    readonly device: unknown;\n    /**\n     * Set or get whether validate input content.\n     *\n     * @defaultValue `false`\n     */\n    validateInputContent?: boolean;\n  }\n}\n\nexport interface Env {\n  /**\n   * set the severity level for logging.\n   *\n   * @defaultValue `'warning'`\n   */\n  logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal';\n  /**\n   * Indicate whether run in debug mode.\n   *\n   * @defaultValue `false`\n   */\n  debug?: boolean;\n\n  /**\n   * Get version of the current package.\n   */\n  readonly versions: {\n    readonly common: string;\n    readonly web?: string;\n    readonly node?: string;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    readonly 'react-native'?: string;\n  };\n\n  /**\n   * Represent a set of flags for WebAssembly\n   */\n  readonly wasm: Env.WebAssemblyFlags;\n\n  /**\n   * Represent a set of flags for WebGL\n   */\n  readonly webgl: Env.WebGLFlags;\n\n  /**\n   * Represent a set of flags for WebGPU\n   */\n  readonly webgpu: Env.WebGpuFlags;\n\n  [name: string]: unknown;\n}\n\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env: Env = envImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {Tensor} from './tensor.js';\n\n/**\n * implementation of Tensor.toDataURL()\n */\nexport const tensorToDataURL = (tensor: Tensor, options?: TensorToDataUrlOptions): string => {\n  const canvas = typeof document !== 'undefined' ? document.createElement('canvas') : (new OffscreenCanvas(1, 1));\n  canvas.width = tensor.dims[3];\n  canvas.height = tensor.dims[2];\n  const pixels2DContext =\n      canvas.getContext('2d') as (CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D | null);\n\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n    }\n\n    const inputformat = options?.format !== undefined ? options.format : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    // Default pointer assignments\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const R = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n        const G = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n        const B = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n        const A = aTensorPointer === -1 ?\n            255 :\n            ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n        pixels2DContext.fillRect(j, i, 1, 1);\n      }\n    }\n    if ('toDataURL' in canvas) {\n      return canvas.toDataURL();\n    } else {\n      throw new Error('toDataURL is not supported');\n    }\n  } else {\n    throw new Error('Can not access image data');\n  }\n};\n\n/**\n * implementation of Tensor.toImageData()\n */\nexport const tensorToImageData = (tensor: Tensor, options?: TensorToImageDataOptions): ImageData => {\n  const pixels2DContext = typeof document !== 'undefined' ?\n      document.createElement('canvas').getContext('2d') :\n      new OffscreenCanvas(1, 1).getContext('2d') as OffscreenCanvasRenderingContext2D;\n  let image: ImageData;\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    let channels: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[1];\n      channels = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n      channels = tensor.dims[1];\n    }\n    const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    if (options !== undefined) {\n      if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n          (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n        throw new Error('Tensor format doesn\\'t match input tensor dims');\n      }\n    }\n\n    // Default pointer assignments\n    const step = 4;\n    let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    image = pixels2DContext.createImageData(width, height);\n\n    for (let i = 0; i < height * width;\n         rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n      image.data[rImagePointer] = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n      image.data[gImagePointer] = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n      image.data[bImagePointer] = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n      image.data[aImagePointer] = aTensorPointer === -1 ?\n          255 :\n          ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n    }\n\n  } else {\n    throw new Error('Can not access image data');\n  }\n  return image;\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OptionsDimensions, OptionsFormat, OptionsNormalizationParameters, OptionsTensorFormat, OptionsTensorLayout, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\ninterface BufferToTensorOptions extends OptionsDimensions, OptionsTensorLayout, OptionsNormalizationParameters,\n                                        OptionsFormat, OptionsTensorFormat {}\n\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nexport const bufferToTensor = (buffer: Uint8ClampedArray|undefined, options: BufferToTensorOptions): Tensor => {\n  if (buffer === undefined) {\n    throw new Error('Image buffer must be defined');\n  }\n  if (options.height === undefined || options.width === undefined) {\n    throw new Error('Image height and width must be defined');\n  }\n  if (options.tensorLayout === 'NHWC') {\n    throw new Error('NHWC Tensor layout is not supported yet');\n  }\n\n  const {height, width} = options;\n\n  const norm = options.norm ?? {mean: 255, bias: 0};\n  let normMean: [number, number, number, number];\n  let normBias: [number, number, number, number];\n\n  if (typeof (norm.mean) === 'number') {\n    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n  } else {\n    normMean = [norm.mean![0], norm.mean![1], norm.mean![2], norm.mean![3] ?? 255];\n  }\n\n  if (typeof (norm.bias) === 'number') {\n    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n  } else {\n    normBias = [norm.bias![0], norm.bias![1], norm.bias![2], norm.bias![3] ?? 0];\n  }\n\n  const inputformat = options.format !== undefined ? options.format : 'RGBA';\n  // default value is RGBA since imagedata and HTMLImageElement uses it\n\n  const outputformat =\n      options.tensorFormat !== undefined ? (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') : 'RGB';\n  const stride = height * width;\n  const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n\n  // Default pointer assignments\n  let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n  let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n  // Updating the pointer assignments based on the input image format\n  if (inputformat === 'RGB') {\n    step = 3;\n    rImagePointer = 0;\n    gImagePointer = 1;\n    bImagePointer = 2;\n    aImagePointer = -1;\n  }\n\n  // Updating the pointer assignments based on the output tensor format\n  if (outputformat === 'RGBA') {\n    aTensorPointer = stride * 3;\n  } else if (outputformat === 'RBG') {\n    rTensorPointer = 0;\n    bTensorPointer = stride;\n    gTensorPointer = stride * 2;\n  } else if (outputformat === 'BGR') {\n    bTensorPointer = 0;\n    gTensorPointer = stride;\n    rTensorPointer = stride * 2;\n  }\n\n  for (let i = 0; i < stride;\n       i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n    float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n    float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n    float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n    if (aTensorPointer !== -1 && aImagePointer !== -1) {\n      float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n    }\n  }\n\n  // Float32Array -> ort.Tensor\n  const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n                                                 new Tensor('float32', float32Data, [1, 3, height, width]);\n  return outputTensor;\n};\n\n/**\n * implementation of Tensor.fromImage().\n */\nexport const tensorFromImage = async(\n    image: ImageData|HTMLImageElement|ImageBitmap|string,\n    options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n    TensorFromUrlOptions): Promise<Tensor> => {\n  // checking the type of image object\n  const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n  const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n  const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n  const isString = typeof image === 'string';\n\n  let data: Uint8ClampedArray|undefined;\n  let bufferToTensorOptions: BufferToTensorOptions = options ?? {};\n\n  const createCanvas = () => {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(1, 1);\n    } else {\n      throw new Error('Canvas is not supported');\n    }\n  };\n  const createCanvasContext = (canvas: HTMLCanvasElement|OffscreenCanvas) => {\n    if (canvas instanceof HTMLCanvasElement) {\n      return canvas.getContext('2d');\n    } else if (canvas instanceof OffscreenCanvas) {\n      return canvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n    } else {\n      return null;\n    }\n  };\n  // filling and checking image configuration options\n  if (isHTMLImageEle) {\n    // HTMLImageElement - image object - format is RGBA by default\n    const canvas = createCanvas();\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = createCanvasContext(canvas);\n\n    if (pixels2DContext != null) {\n      let height = image.height;\n      let width = image.width;\n      if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n        height = options.resizedHeight;\n        width = options.resizedWidth;\n      }\n\n      if (options !== undefined) {\n        bufferToTensorOptions = options;\n        if (options.tensorFormat !== undefined) {\n          throw new Error('Image input config format must be RGBA for HTMLImageElement');\n        } else {\n          bufferToTensorOptions.tensorFormat = 'RGBA';\n        }\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      } else {\n        bufferToTensorOptions.tensorFormat = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      }\n\n      pixels2DContext.drawImage(image, 0, 0);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isImageDataEle) {\n    let height: number;\n    let width: number;\n\n    if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n      height = options.resizedHeight;\n      width = options.resizedWidth;\n    } else {\n      height = image.height;\n      width = image.width;\n    }\n\n    if (options !== undefined) {\n      bufferToTensorOptions = options;\n    }\n    bufferToTensorOptions.format = 'RGBA';\n    bufferToTensorOptions.height = height;\n    bufferToTensorOptions.width = width;\n\n    if (options !== undefined) {\n      const tempCanvas = createCanvas();\n\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n\n      const pixels2DContext = createCanvasContext(tempCanvas);\n\n      if (pixels2DContext != null) {\n        pixels2DContext.putImageData(image, 0, 0);\n        data = pixels2DContext.getImageData(0, 0, width, height).data;\n      } else {\n        throw new Error('Can not access image data');\n      }\n    } else {\n      data = image.data;\n    }\n  } else if (isImageBitmap) {\n    // ImageBitmap - image object - format must be provided by user\n    if (options === undefined) {\n      throw new Error('Please provide image config with format for Imagebitmap');\n    }\n\n    const canvas = createCanvas();\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = createCanvasContext(canvas);\n\n    if (pixels2DContext != null) {\n      const height = image.height;\n      const width = image.width;\n      pixels2DContext.drawImage(image, 0, 0, width, height);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n      bufferToTensorOptions.height = height;\n      bufferToTensorOptions.width = width;\n      return bufferToTensor(data, bufferToTensorOptions);\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isString) {\n    return new Promise((resolve, reject) => {\n      const canvas = createCanvas();\n      const context = createCanvasContext(canvas);\n      if (!image || !context) {\n        return reject();\n      }\n      const newImage = new Image();\n      newImage.crossOrigin = 'Anonymous';\n      newImage.src = image;\n      newImage.onload = () => {\n        canvas.width = newImage.width;\n        canvas.height = newImage.height;\n        context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n        const img = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        bufferToTensorOptions.height = canvas.height;\n        bufferToTensorOptions.width = canvas.width;\n        resolve(bufferToTensor(img.data, bufferToTensorOptions));\n      };\n    });\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n\n  if (data !== undefined) {\n    return bufferToTensor(data, bufferToTensorOptions);\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n};\n\n/**\n * implementation of Tensor.fromTexture().\n */\nexport const tensorFromTexture = <T extends TensorInterface.TextureDataTypes>(\n    texture: TensorInterface.TextureType, options: TensorFromTextureOptions<T>): Tensor => {\n  const {width, height, download, dispose} = options;\n  // Always assume RGBAF32. TODO: support different texture format\n  const dims = [1, height, width, 4];\n  return new Tensor({location: 'texture', type: 'float32', texture, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromGpuBuffer().\n */\nexport const tensorFromGpuBuffer = <T extends TensorInterface.GpuBufferDataTypes>(\n    gpuBuffer: TensorInterface.GpuBufferType, options: TensorFromGpuBufferOptions<T>): Tensor => {\n  const {dataType, dims, download, dispose} = options;\n  return new Tensor({location: 'gpu-buffer', type: dataType ?? 'float32', gpuBuffer, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromPinnedBuffer().\n */\nexport const tensorFromPinnedBuffer = <T extends TensorInterface.CpuPinnedDataTypes>(\n    type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor =>\n    new Tensor({location: 'cpu-pinned', type, data: buffer, dims: dims ?? [buffer.length]});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\nexport type SupportedTypedArrayConstructors = Float32ArrayConstructor|Uint8ArrayConstructor|Int8ArrayConstructor|\n    Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|Uint8ArrayConstructor|\n    Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor;\nexport type SupportedTypedArray = InstanceType<SupportedTypedArrayConstructors>;\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map<string, SupportedTypedArrayConstructors>([\n  ['float32', Float32Array],\n  ['uint8', Uint8Array],\n  ['int8', Int8Array],\n  ['uint16', Uint16Array],\n  ['float16', Uint16Array],\n  ['int16', Int16Array],\n  ['int32', Int32Array],\n  ['bool', Uint8Array],\n  ['float64', Float64Array],\n  ['uint32', Uint32Array],\n]);\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map<SupportedTypedArrayConstructors, Tensor.Type>([\n  [Float32Array, 'float32'],\n  [Uint8Array, 'uint8'],\n  [Int8Array, 'int8'],\n  [Uint16Array, 'uint16'],\n  [Int16Array, 'int16'],\n  [Int32Array, 'int32'],\n  [Float64Array, 'float64'],\n  [Uint32Array, 'uint32'],\n]);\n\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nexport const checkBigInt = () => {\n  if (!isBigIntChecked) {\n    isBigIntChecked = true;\n    const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n    const isBigUint64ArrayAvailable =\n        typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n\n    if (isBigInt64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n    }\n    if (isBigUint64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n    }\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TextureConstructorParameters} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\n\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nexport const calculateSize = (dims: readonly unknown[]): number => {\n  let size = 1;\n  for (let i = 0; i < dims.length; i++) {\n    const dim = dims[i];\n    if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n      throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n    }\n    if (dim < 0) {\n      throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n    }\n    size *= dim;\n  }\n  return size;\n};\n\n/**\n * implementation of Tensor.reshape()\n */\nexport const tensorReshape = (tensor: Tensor, dims: readonly number[]): Tensor => {\n  switch (tensor.location) {\n    case 'cpu':\n      return new Tensor(tensor.type, tensor.data, dims);\n    case 'cpu-pinned':\n      return new Tensor({\n        location: 'cpu-pinned',\n        data: tensor.data as CpuPinnedConstructorParameters['data'],\n        type: tensor.type as CpuPinnedConstructorParameters['type'],\n        dims,\n      });\n    case 'texture':\n      return new Tensor({\n        location: 'texture',\n        texture: tensor.texture,\n        type: tensor.type as TextureConstructorParameters['type'],\n        dims,\n      });\n    case 'gpu-buffer':\n      return new Tensor({\n        location: 'gpu-buffer',\n        gpuBuffer: tensor.gpuBuffer,\n        type: tensor.type as GpuBufferConstructorParameters['type'],\n        dims,\n      });\n    default:\n      throw new Error(`tensorReshape: tensor location ${tensor.location} is not supported`);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {tensorToDataURL, tensorToImageData} from './tensor-conversion-impl.js';\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {tensorFromGpuBuffer, tensorFromImage, tensorFromPinnedBuffer, tensorFromTexture} from './tensor-factory-impl.js';\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions, TextureConstructorParameters} from './tensor-factory.js';\nimport {checkBigInt, NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP, NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, SupportedTypedArray, SupportedTypedArrayConstructors} from './tensor-impl-type-mapping.js';\nimport {calculateSize, tensorReshape} from './tensor-utils-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\n// type aliases for those exported from Tensor interface\n\ntype TensorType = TensorInterface.Type;\ntype TensorDataType = TensorInterface.DataType;\ntype TensorDataLocation = TensorInterface.DataLocation;\ntype TensorTextureType = TensorInterface.TextureType;\ntype TensorGpuBufferType = TensorInterface.GpuBufferType;\n\n/**\n * the implementation of Tensor interface.\n *\n * @ignore\n */\nexport class Tensor implements TensorInterface {\n  // #region constructors\n\n  /**\n   * Construct a new CPU tensor object from the given type, data and dims.\n   */\n  constructor(\n      type: TensorType, data: TensorDataType|readonly string[]|readonly number[]|readonly boolean[],\n      dims?: readonly number[]);\n  /**\n   * Construct a new CPU tensor object from the given data and dims. Type is inferred from data.\n   */\n  constructor(data: TensorDataType|readonly string[]|readonly boolean[], dims?: readonly number[]);\n  /**\n   * Construct a new tensor object from the pinned CPU data with the given type and dims.\n   *\n   * Tensor's location will be set to 'cpu-pinned'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: CpuPinnedConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGL texture with the given type and dims.\n   *\n   * Tensor's location will be set to 'texture'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: TextureConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGPU buffer with the given type and dims.\n   *\n   * Tensor's location will be set to 'gpu-buffer'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: GpuBufferConstructorParameters);\n\n  /**\n   * implementation.\n   */\n  constructor(\n      arg0: TensorType|TensorDataType|readonly string[]|readonly boolean[]|CpuPinnedConstructorParameters|\n      TextureConstructorParameters|GpuBufferConstructorParameters,\n      arg1?: TensorDataType|readonly number[]|readonly string[]|readonly boolean[], arg2?: readonly number[]) {\n    // perform one-time check for BigInt support\n    checkBigInt();\n\n    let type: TensorType;\n    let dims: readonly number[];\n\n    if (typeof arg0 === 'object' && 'location' in arg0) {\n      //\n      // constructing tensor from specific location\n      //\n      this.dataLocation = arg0.location;\n      type = arg0.type;\n      dims = arg0.dims;\n      switch (arg0.location) {\n        case 'cpu-pinned': {\n          const expectedTypedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(type);\n          if (!expectedTypedArrayConstructor) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from pinned buffer`);\n          }\n          if (!(arg0.data instanceof expectedTypedArrayConstructor)) {\n            throw new TypeError(`buffer should be of type ${expectedTypedArrayConstructor.name}`);\n          }\n          this.cpuData = arg0.data;\n          break;\n        }\n        case 'texture': {\n          if (type !== 'float32') {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from texture`);\n          }\n          this.gpuTextureData = arg0.texture;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        case 'gpu-buffer': {\n          if ((type !== 'float32' && type !== 'float16' && type !== 'int32' && type !== 'int64' && type !== 'uint32' &&\n               type !== 'bool')) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from gpu buffer`);\n          }\n          this.gpuBufferData = arg0.gpuBuffer;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        default:\n          throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`);\n      }\n    } else {\n      //\n      // constructing tensor of location 'cpu'\n      //\n      let data: TensorDataType;\n      let maybeDims: typeof arg1|typeof arg2;\n      // check whether arg0 is type or data\n      if (typeof arg0 === 'string') {\n        //\n        // Override: constructor(type, data, ...)\n        //\n        type = arg0;\n        maybeDims = arg2;\n        if (arg0 === 'string') {\n          // string tensor\n          if (!Array.isArray(arg1)) {\n            throw new TypeError('A string tensor\\'s data must be a string array.');\n          }\n          // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n          // error will be populated at inference\n          data = arg1;\n        } else {\n          // numeric tensor\n          const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n          if (typedArrayConstructor === undefined) {\n            throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n          }\n          if (Array.isArray(arg1)) {\n            if (arg0 === 'float16') {\n              // Throw error here because when user try to use number array as data,\n              // e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n              // Uint16Array.from(arg1) which generates wrong data.\n              throw new TypeError(\n                  'Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.');\n            } else if (arg0 === 'uint64' || arg0 === 'int64') {\n              // use 'as any' here because:\n              // 1. TypeScript's check on type of 'Array.isArray()' does not work with readonly arrays.\n              // see https://github.com/microsoft/TypeScript/issues/17002\n              // 2. TypeScript's check on union type of '(BigInt64ArrayConstructor|BigUint64ArrayConstructor).from()'\n              // does not accept parameter mapFn.\n              // 3. parameters of 'SupportedTypedArrayConstructors.from()' does not match the requirement of the union\n              // type.\n\n              // assume 'arg1' is of type \"readonly number[]|readonly bigint[]\" here.\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1, BigInt);\n            } else {\n              // assume 'arg1' is of type \"readonly number[]\" here.\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1);\n            }\n          } else if (arg1 instanceof typedArrayConstructor) {\n            data = arg1;\n          } else {\n            throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n          }\n        }\n      } else {\n        //\n        // Override: constructor(data, ...)\n        //\n        maybeDims = arg1;\n        if (Array.isArray(arg0)) {\n          // only boolean[] and string[] is supported\n          if (arg0.length === 0) {\n            throw new TypeError('Tensor type cannot be inferred from an empty array.');\n          }\n          const firstElementType = typeof arg0[0];\n          if (firstElementType === 'string') {\n            type = 'string';\n            data = arg0;\n          } else if (firstElementType === 'boolean') {\n            type = 'bool';\n            // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n            // wrong type. We use 'as any' to make it happy.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data = Uint8Array.from(arg0 as any[]);\n          } else {\n            throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n          }\n        } else {\n          // get tensor type from TypedArray\n          const mappedType =\n              NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor as SupportedTypedArrayConstructors);\n          if (mappedType === undefined) {\n            throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n          }\n          type = mappedType;\n          data = arg0 as SupportedTypedArray;\n        }\n      }\n\n      // type and data is processed, now processing dims\n      if (maybeDims === undefined) {\n        // assume 1-D tensor if dims omitted\n        maybeDims = [data.length];\n      } else if (!Array.isArray(maybeDims)) {\n        throw new TypeError('A tensor\\'s dims must be a number array');\n      }\n      dims = maybeDims as readonly number[];\n\n      this.cpuData = data;\n      this.dataLocation = 'cpu';\n    }\n\n    // perform check on dims\n    const size = calculateSize(dims);\n    // if data is on CPU, check whether data length matches tensor size\n    if (this.cpuData && size !== this.cpuData.length) {\n      throw new Error(`Tensor's size(${size}) does not match data length(${this.cpuData.length}).`);\n    }\n\n    this.type = type;\n    this.dims = dims;\n    this.size = size;\n  }\n  // #endregion\n\n  // #region factory\n  static async fromImage(\n      image: ImageData|HTMLImageElement|ImageBitmap|string,\n      options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n      TensorFromUrlOptions): Promise<TensorInterface> {\n    return tensorFromImage(image, options);\n  }\n\n  static fromTexture<T extends TensorInterface.TextureDataTypes>(\n      texture: TensorTextureType, options: TensorFromTextureOptions<T>): TensorInterface {\n    return tensorFromTexture(texture, options);\n  }\n\n  static fromGpuBuffer<T extends TensorInterface.GpuBufferDataTypes>(\n      gpuBuffer: TensorGpuBufferType, options: TensorFromGpuBufferOptions<T>): TensorInterface {\n    return tensorFromGpuBuffer(gpuBuffer, options);\n  }\n\n  static fromPinnedBuffer<T extends TensorInterface.CpuPinnedDataTypes>(\n      type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor {\n    return tensorFromPinnedBuffer(type, buffer, dims);\n  }\n\n  // #endregion\n\n  // #region conversions\n  toDataURL(options?: TensorToDataUrlOptions): string {\n    return tensorToDataURL(this, options);\n  }\n\n  toImageData(options?: TensorToImageDataOptions): ImageData {\n    return tensorToImageData(this, options);\n  }\n  // #endregion\n\n  // #region public fields\n  readonly dims: readonly number[];\n  readonly type: TensorType;\n  readonly size: number;\n  // #endregion\n\n  // #region private fields\n\n  /**\n   * stores the location of the data.\n   */\n  private dataLocation: TensorDataLocation;\n\n  /**\n   * stores the data on CPU, if location is 'cpu' or 'cpu-pinned'. otherwise empty.\n   */\n  private cpuData?: TensorDataType;\n\n  /**\n   * stores the underlying texture when location is 'texture'. otherwise empty.\n   */\n  private gpuTextureData?: TensorTextureType;\n\n  /**\n   * stores the underlying GPU buffer when location is 'gpu-buffer'. otherwise empty.\n   */\n  private gpuBufferData?: TensorGpuBufferType;\n\n  /**\n   * stores an optional downloader function to download data from GPU to CPU.\n   */\n  private downloader?(): Promise<TensorDataType>;\n\n  /**\n   * a flag indicating whether the data is being downloaded from GPU to CPU.\n   */\n  private isDownloading?: boolean;\n\n  /**\n   * stores an optional disposer function to dispose the underlying data.\n   */\n  private disposer?(): void;\n  // #endregion\n\n  // #region properties\n  get data(): TensorDataType {\n    this.ensureValid();\n    if (!this.cpuData) {\n      throw new Error(\n          'The data is not on CPU. Use `getData()` to download GPU data to CPU, ' +\n          'or use `texture` or `gpuBuffer` property to access the GPU data directly.');\n    }\n    return this.cpuData;\n  }\n\n  get location(): TensorDataLocation {\n    return this.dataLocation;\n  }\n\n  get texture(): TensorTextureType {\n    this.ensureValid();\n    if (!this.gpuTextureData) {\n      throw new Error('The data is not stored as a WebGL texture.');\n    }\n    return this.gpuTextureData;\n  }\n\n  get gpuBuffer(): TensorGpuBufferType {\n    this.ensureValid();\n    if (!this.gpuBufferData) {\n      throw new Error('The data is not stored as a WebGPU buffer.');\n    }\n    return this.gpuBufferData;\n  }\n  // #endregion\n\n  // #region methods\n\n  async getData(releaseData?: boolean): Promise<TensorDataType> {\n    this.ensureValid();\n    switch (this.dataLocation) {\n      case 'cpu':\n      case 'cpu-pinned':\n        return this.data;\n      case 'texture':\n      case 'gpu-buffer': {\n        if (!this.downloader) {\n          throw new Error('The current tensor is not created with a specified data downloader.');\n        }\n        if (this.isDownloading) {\n          throw new Error('The current tensor is being downloaded.');\n        }\n        try {\n          this.isDownloading = true;\n          const data = await this.downloader();\n          this.downloader = undefined;\n          this.dataLocation = 'cpu';\n          this.cpuData = data;\n\n          if (releaseData && this.disposer) {\n            this.disposer();\n            this.disposer = undefined;\n          }\n\n          return data;\n\n        } finally {\n          this.isDownloading = false;\n        }\n      }\n      default:\n        throw new Error(`cannot get data from location: ${this.dataLocation}`);\n    }\n  }\n\n  dispose(): void {\n    if (this.isDownloading) {\n      throw new Error('The current tensor is being downloaded.');\n    }\n\n    if (this.disposer) {\n      this.disposer();\n      this.disposer = undefined;\n    }\n    this.cpuData = undefined;\n    this.gpuTextureData = undefined;\n    this.gpuBufferData = undefined;\n    this.downloader = undefined;\n    this.isDownloading = undefined;\n\n    this.dataLocation = 'none';\n  }\n\n  // #endregion\n\n  // #region tensor utilities\n  private ensureValid(): void {\n    if (this.dataLocation === 'none') {\n      throw new Error('The tensor is disposed.');\n    }\n  }\n\n  reshape(dims: readonly number[]): TensorInterface {\n    this.ensureValid();\n    if (this.downloader || this.disposer) {\n      throw new Error('Cannot reshape a tensor that owns GPU resource.');\n    }\n    return tensorReshape(this, dims);\n  }\n  // #endregion\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorFactory} from './tensor-factory.js';\nimport {Tensor as TensorImpl} from './tensor-impl.js';\nimport {TypedTensorUtils} from './tensor-utils.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/**\n * represent a basic tensor with specified dimensions and data type.\n */\ninterface TypedTensorBase<T extends Tensor.Type> {\n  /**\n   * Get the dimensions of the tensor.\n   */\n  readonly dims: readonly number[];\n  /**\n   * Get the data type of the tensor.\n   */\n  readonly type: T;\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is not on CPU (eg. it's in the form of WebGL texture or WebGPU buffer), throw error.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n  /**\n   * Get the location of the data.\n   */\n  readonly location: Tensor.DataLocation;\n  /**\n   * Get the WebGL texture that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGL texture, throw error.\n   */\n  readonly texture: Tensor.TextureType;\n  /**\n   * Get the WebGPU buffer that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGPU buffer, throw error.\n   */\n  readonly gpuBuffer: Tensor.GpuBufferType;\n\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is on CPU, returns the data immediately.\n   * If the data is on GPU, downloads the data and returns the promise.\n   *\n   * @param releaseData - whether release the data on GPU. Ignore if data is already on CPU.\n   */\n  getData(releaseData?: boolean): Promise<Tensor.DataTypeMap[T]>;\n\n  /**\n   * Dispose the tensor data.\n   *\n   * If the data is on CPU, remove its internal reference to the underlying data.\n   * If the data is on GPU, release the data on GPU.\n   *\n   * After calling this function, the tensor is considered no longer valid. Its location will be set to 'none'.\n   */\n  dispose(): void;\n}\n\nexport declare namespace Tensor {\n  interface DataTypeMap {\n    float32: Float32Array;\n    uint8: Uint8Array;\n    int8: Int8Array;\n    uint16: Uint16Array;\n    int16: Int16Array;\n    int32: Int32Array;\n    int64: BigInt64Array;\n    string: string[];\n    bool: Uint8Array;\n    float16: Uint16Array;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: Float64Array;\n    uint32: Uint32Array;\n    uint64: BigUint64Array;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  interface ElementTypeMap {\n    float32: number;\n    uint8: number;\n    int8: number;\n    uint16: number;\n    int16: number;\n    int32: number;\n    int64: bigint;\n    string: string;\n    bool: boolean;\n    float16: number;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: number;\n    uint32: number;\n    uint64: bigint;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  type DataType = DataTypeMap[Type];\n  type ElementType = ElementTypeMap[Type];\n\n  /**\n   * supported data types for constructing a tensor from a pinned CPU buffer\n   */\n  export type CpuPinnedDataTypes = Exclude<Tensor.Type, 'string'>;\n\n  /**\n   * type alias for WebGL texture\n   */\n  export type TextureType = WebGLTexture;\n\n  /**\n   * supported data types for constructing a tensor from a WebGL texture\n   */\n  export type TextureDataTypes = 'float32';\n\n  /**\n   * type alias for WebGPU buffer\n   *\n   * The reason why we don't use type \"GPUBuffer\" defined in webgpu.d.ts from @webgpu/types is because \"@webgpu/types\"\n   * requires \"@types/dom-webcodecs\" as peer dependency when using TypeScript < v5.1 and its version need to be chosen\n   * carefully according to the TypeScript version being used. This means so far there is not a way to keep every\n   * TypeScript version happy. It turns out that we will easily broke users on some TypeScript version.\n   *\n   * for more info see https://github.com/gpuweb/types/issues/127\n   */\n  export type GpuBufferType = {size: number; mapState: 'unmapped' | 'pending' | 'mapped'};\n\n  /**\n   * supported data types for constructing a tensor from a WebGPU buffer\n   */\n  export type GpuBufferDataTypes = 'float32'|'float16'|'int32'|'int64'|'uint32'|'bool';\n\n  /**\n   * represent where the tensor data is stored\n   */\n  export type DataLocation = 'none'|'cpu'|'cpu-pinned'|'texture'|'gpu-buffer';\n\n  /**\n   * represent the data type of a tensor\n   */\n  export type Type = keyof DataTypeMap;\n}\n\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface TypedTensor<T extends Tensor.Type> extends TypedTensorBase<T>, TypedTensorUtils<T> {}\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface Tensor extends TypedTensorBase<Tensor.Type>, TypedTensorUtils<Tensor.Type> {}\n\n/**\n * type TensorConstructor defines the constructors of 'Tensor' to create CPU tensor instances.\n */\nexport interface TensorConstructor {\n  // #region CPU tensor - specify element type\n  /**\n   * Construct a new string tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'string', data: Tensor.DataTypeMap['string']|readonly string[],\n      dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'bool', data: Tensor.DataTypeMap['bool']|readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new 64-bit integer typed tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends 'uint64'|'int64'>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly bigint[]|readonly number[],\n      dims?: readonly number[]): TypedTensor<T>;\n\n  /**\n   * Construct a new numeric tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends Exclude<Tensor.Type, 'string'|'bool'|'uint64'|'int64'>>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly number[], dims?: readonly number[]): TypedTensor<T>;\n  // #endregion\n\n  // #region CPU tensor - infer element types\n\n  /**\n   * Construct a new float32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float32Array, dims?: readonly number[]): TypedTensor<'float32'>;\n\n  /**\n   * Construct a new int8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int8Array, dims?: readonly number[]): TypedTensor<'int8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint8Array, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint16Array, dims?: readonly number[]): TypedTensor<'uint16'>;\n\n  /**\n   * Construct a new int16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int16Array, dims?: readonly number[]): TypedTensor<'int16'>;\n\n  /**\n   * Construct a new int32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int32Array, dims?: readonly number[]): TypedTensor<'int32'>;\n\n  /**\n   * Construct a new int64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigInt64Array, dims?: readonly number[]): TypedTensor<'int64'>;\n\n  /**\n   * Construct a new string tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly string[], dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new float64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float64Array, dims?: readonly number[]): TypedTensor<'float64'>;\n\n  /**\n   * Construct a new uint32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint32Array, dims?: readonly number[]): TypedTensor<'uint32'>;\n\n  /**\n   * Construct a new uint64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigUint64Array, dims?: readonly number[]): TypedTensor<'uint64'>;\n\n  // #endregion\n\n  // #region CPU tensor - fall back to non-generic tensor type declaration\n\n  /**\n   * Construct a new tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: Tensor.Type, data: Tensor.DataType|readonly number[]|readonly string[]|readonly bigint[]|readonly boolean[],\n      dims?: readonly number[]): Tensor;\n\n  /**\n   * Construct a new tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Tensor.DataType, dims?: readonly number[]): Tensor;\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl as (TensorConstructor & TensorFactory);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from './env-impl.js';\n\nexport const TRACE = (deviceType: string, label: string) => {\n  if (!env.wasm.trace) {\n    return;\n  }\n  // eslint-disable-next-line no-console\n  console.timeStamp(`${deviceType}::ORT::${label}`);\n};\n\nconst TRACE_FUNC = (msg: string, extraMsg?: string) => {\n  const stack = new Error().stack?.split(/\\r\\n|\\r|\\n/g) || [];\n  let hasTraceFunc = false;\n  for (let i = 0; i < stack.length; i++) {\n    if (hasTraceFunc && !stack[i].includes('TRACE_FUNC')) {\n      let label = `FUNC_${msg}::${stack[i].trim().split(' ')[1]}`;\n      if (extraMsg) {\n        label += `::${extraMsg}`;\n      }\n      TRACE('CPU', label);\n      return;\n    }\n    if (stack[i].includes('TRACE_FUNC')) {\n      hasTraceFunc = true;\n    }\n  }\n};\n\nexport const TRACE_FUNC_BEGIN = (extraMsg?: string) => {\n  if (!env.wasm.trace) {\n    return;\n  }\n  TRACE_FUNC('BEGIN', extraMsg);\n};\n\nexport const TRACE_FUNC_END = (extraMsg?: string) => {\n  if (!env.wasm.trace) {\n    return;\n  }\n  TRACE_FUNC('END', extraMsg);\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {resolveBackend} from './backend-impl.js';\nimport {InferenceSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSessionInterface} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {Tensor} from './tensor.js';\nimport {TRACE_FUNC_BEGIN, TRACE_FUNC_END} from './trace.js';\n\ntype SessionOptions = InferenceSessionInterface.SessionOptions;\ntype RunOptions = InferenceSessionInterface.RunOptions;\ntype FeedsType = InferenceSessionInterface.FeedsType;\ntype FetchesType = InferenceSessionInterface.FetchesType;\ntype ReturnType = InferenceSessionInterface.ReturnType;\n\nexport class InferenceSession implements InferenceSessionInterface {\n  private constructor(handler: InferenceSessionHandler) {\n    this.handler = handler;\n  }\n  run(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  run(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async run(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    TRACE_FUNC_BEGIN();\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of this.outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSessionInterface.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of this.inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of this.outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    // feeds, fetches and options are prepared\n\n    const results = await this.handler.run(feeds, fetches, options);\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    TRACE_FUNC_END();\n    return returnValue;\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n\n  static create(path: string, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: SessionOptions):\n      Promise<InferenceSessionInterface>;\n  static create(buffer: Uint8Array, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static async create(\n      arg0: string|ArrayBufferLike|Uint8Array, arg1?: SessionOptions|number, arg2?: number,\n      arg3?: SessionOptions): Promise<InferenceSessionInterface> {\n    TRACE_FUNC_BEGIN();\n    // either load from a file or buffer\n    let filePathOrUint8Array: string|Uint8Array;\n    let options: SessionOptions = {};\n\n    if (typeof arg0 === 'string') {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (arg0 instanceof Uint8Array) {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (\n        arg0 instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n      const buffer = arg0;\n      let byteOffset = 0;\n      let byteLength = arg0.byteLength;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 === 'number') {\n        byteOffset = arg1;\n        if (!Number.isSafeInteger(byteOffset)) {\n          throw new RangeError('\\'byteOffset\\' must be an integer.');\n        }\n        if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n          throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n        }\n        byteLength = arg0.byteLength - byteOffset;\n        if (typeof arg2 === 'number') {\n          byteLength = arg2;\n          if (!Number.isSafeInteger(byteLength)) {\n            throw new RangeError('\\'byteLength\\' must be an integer.');\n          }\n          if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n            throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n          }\n          if (typeof arg3 === 'object' && arg3 !== null) {\n            options = arg3;\n          } else if (typeof arg3 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'byteLength\\' must be a number.');\n        }\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n      filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n    } else {\n      throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n    }\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    const handler = await backend.createInferenceSessionHandler(filePathOrUint8Array, options);\n    TRACE_FUNC_END();\n    return new InferenceSession(handler);\n  }\n\n  startProfiling(): void {\n    this.handler.startProfiling();\n  }\n  endProfiling(): void {\n    this.handler.endProfiling();\n  }\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  private handler: InferenceSessionHandler;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession as InferenceSessionImpl} from './inference-session-impl.js';\nimport {OnnxModelOptions} from './onnx-model.js';\nimport {OnnxValue, OnnxValueDataLocation} from './onnx-value.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace InferenceSession {\n  // #region input/output types\n\n  type OnnxValueMapType = {readonly [name: string]: OnnxValue};\n  type NullableOnnxValueMapType = {readonly [name: string]: OnnxValue | null};\n\n  /**\n   * A feeds (model inputs) is an object that uses input names as keys and OnnxValue as corresponding values.\n   */\n  type FeedsType = OnnxValueMapType;\n\n  /**\n   * A fetches (model outputs) could be one of the following:\n   *\n   * - Omitted. Use model's output names definition.\n   * - An array of string indicating the output names.\n   * - An object that use output names as keys and OnnxValue or null as corresponding values.\n   *\n   * @remark\n   * different from input argument, in output, OnnxValue is optional. If an OnnxValue is present it will be\n   * used as a pre-allocated value by the inference engine; if omitted, inference engine will allocate buffer\n   * internally.\n   */\n  type FetchesType = readonly string[]|NullableOnnxValueMapType;\n\n  /**\n   * A inferencing return type is an object that uses output names as keys and OnnxValue as corresponding values.\n   */\n  type ReturnType = OnnxValueMapType;\n\n  // #endregion\n\n  // #region session options\n\n  /**\n   * A set of configurations for session behavior.\n   */\n  export interface SessionOptions extends OnnxModelOptions {\n    /**\n     * An array of execution provider options.\n     *\n     * An execution provider option can be a string indicating the name of the execution provider,\n     * or an object of corresponding type.\n     */\n    executionProviders?: readonly ExecutionProviderConfig[];\n\n    /**\n     * The intra OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    intraOpNumThreads?: number;\n\n    /**\n     * The inter OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    interOpNumThreads?: number;\n\n    /**\n     * The free dimension override.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    freeDimensionOverrides?: {readonly [dimensionName: string]: number};\n\n    /**\n     * The optimization level.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    graphOptimizationLevel?: 'disabled'|'basic'|'extended'|'all';\n\n    /**\n     * Whether enable CPU memory arena.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableCpuMemArena?: boolean;\n\n    /**\n     * Whether enable memory pattern.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableMemPattern?: boolean;\n\n    /**\n     * Execution mode.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    executionMode?: 'sequential'|'parallel';\n\n    /**\n     * Optimized model file path.\n     *\n     * If this setting is specified, the optimized model will be dumped. In browser, a blob will be created\n     * with a pop-up window.\n     */\n    optimizedModelFilePath?: string;\n\n    /**\n     * Wether enable profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    enableProfiling?: boolean;\n\n    /**\n     * File prefix for profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    profileFilePrefix?: string;\n\n    /**\n     * Log ID.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logId?: string;\n\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Specify string as a preferred data location for all outputs, or an object that use output names as keys and a\n     * preferred data location as corresponding values.\n     *\n     * This setting is available only in ONNXRuntime Web for WebGL and WebGPU EP.\n     */\n    preferredOutputLocation?: OnnxValueDataLocation|{readonly [outputName: string]: OnnxValueDataLocation};\n\n    /**\n     * Store configurations for a session. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_session_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     * ```js\n     * extra: {\n     *   session: {\n     *     set_denormal_as_zero: \"1\",\n     *     disable_prepacking: \"1\"\n     *   },\n     *   optimization: {\n     *     enable_gelu_approximation: \"1\"\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #region execution providers\n\n  // Currently, we have the following backends to support execution providers:\n  // Backend Node.js binding: supports 'cpu' and 'cuda'.\n  // Backend WebAssembly: supports 'cpu', 'wasm', 'webgpu' and 'webnn'.\n  // Backend ONNX.js: supports 'webgl'.\n  // Backend React Native: supports 'cpu', 'xnnpack', 'coreml' (iOS), 'nnapi' (Android).\n  interface ExecutionProviderOptionMap {\n    cpu: CpuExecutionProviderOption;\n    coreml: CoreMlExecutionProviderOption;\n    cuda: CudaExecutionProviderOption;\n    dml: DmlExecutionProviderOption;\n    tensorrt: TensorRtExecutionProviderOption;\n    wasm: WebAssemblyExecutionProviderOption;\n    webgl: WebGLExecutionProviderOption;\n    xnnpack: XnnpackExecutionProviderOption;\n    webgpu: WebGpuExecutionProviderOption;\n    webnn: WebNNExecutionProviderOption;\n    nnapi: NnapiExecutionProviderOption;\n  }\n\n  type ExecutionProviderName = keyof ExecutionProviderOptionMap;\n  type ExecutionProviderConfig =\n      ExecutionProviderOptionMap[ExecutionProviderName]|ExecutionProviderOption|ExecutionProviderName|string;\n\n  export interface ExecutionProviderOption {\n    readonly name: string;\n  }\n  export interface CpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cpu';\n    useArena?: boolean;\n  }\n  export interface CudaExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cuda';\n    deviceId?: number;\n  }\n  export interface CoreMlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    coreMlFlags?: number;\n  }\n  export interface DmlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'dml';\n    deviceId?: number;\n  }\n  export interface TensorRtExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'tensorrt';\n    deviceId?: number;\n  }\n  export interface WebAssemblyExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'wasm';\n  }\n  export interface WebGLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgl';\n    // TODO: add flags\n  }\n  export interface XnnpackExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'xnnpack';\n  }\n  export interface WebGpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgpu';\n    preferredLayout?: 'NCHW'|'NHWC';\n  }\n  export interface WebNNExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webnn';\n    deviceType?: 'cpu'|'gpu';\n    numThreads?: number;\n    powerPreference?: 'default'|'low-power'|'high-performance';\n  }\n  export interface CoreMLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    useCPUOnly?: boolean;\n    enableOnSubgraph?: boolean;\n    onlyEnableDeviceWithANE?: boolean;\n  }\n  export interface NnapiExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'nnapi';\n    useFP16?: boolean;\n    useNCHW?: boolean;\n    cpuDisabled?: boolean;\n    cpuOnly?: boolean;\n  }\n  // #endregion\n\n  // #endregion\n\n  // #region run options\n\n  /**\n   * A set of configurations for inference run behavior\n   */\n  export interface RunOptions {\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Terminate all incomplete OrtRun calls as soon as possible if true\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    terminate?: boolean;\n\n    /**\n     * A tag for the Run() calls using this\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    tag?: string;\n\n    /**\n     * Set a single run configuration entry. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_run_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     *\n     * ```js\n     * extra: {\n     *   memory: {\n     *     enable_memory_arena_shrinkage: \"1\",\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #endregion\n\n  // #region value metadata\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface ValueMetadata {\n    // TBD\n  }\n\n  // #endregion\n}\n\n/**\n * Represent a runtime instance of an ONNX model.\n */\nexport interface InferenceSession {\n  // #region run()\n\n  /**\n   * Execute the model asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Execute the model asynchronously with the given feeds, fetches and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param fetches - Representation of the model output. See type description of `InferenceSession.OutputType` for\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n\n  // #endregion\n\n  // #region profiling\n\n  /**\n   * Start profiling.\n   */\n  startProfiling(): void;\n\n  /**\n   * End profiling.\n   */\n  endProfiling(): void;\n\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n\n  // /**\n  //  * Get input metadata of the loaded model.\n  //  */\n  // readonly inputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // /**\n  //  * Get output metadata of the loaded model.\n  //  */\n  // readonly outputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // #endregion\n}\n\nexport interface InferenceSessionFactory {\n  // #region create()\n\n  /**\n   * Create a new inference session and load model asynchronously from an ONNX model file.\n   *\n   * @param uri - The URI or file path of the model to load.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(uri: string, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from segment of an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param byteOffset - The beginning of the specified portion of the array buffer.\n   * @param byteLength - The length in bytes of the array buffer.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from a Uint8Array.\n   *\n   * @param buffer - A Uint8Array representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession: InferenceSessionFactory = InferenceSessionImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\ntype NonTensorType = never;\n\n/**\n * Type OnnxValue Represents both tensors and non-tensors value for model's inputs/outputs.\n *\n * NOTE: currently not support non-tensor\n */\nexport type OnnxValue = Tensor|NonTensorType;\n\n/**\n * Type OnnxValueDataLocation represents the location of the data of an OnnxValue.\n */\nexport type OnnxValueDataLocation = Tensor.DataLocation;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {resolveBackend} from './backend-impl.js';\nimport {SessionHandler, TrainingSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {Tensor} from './tensor.js';\nimport {TrainingSession as TrainingSessionInterface, TrainingSessionCreateOptions} from './training-session.js';\n\ntype SessionOptions = InferenceSession.SessionOptions;\ntype FeedsType = InferenceSession.FeedsType;\ntype FetchesType = InferenceSession.FetchesType;\ntype ReturnType = InferenceSession.ReturnType;\ntype RunOptions = InferenceSession.RunOptions;\n\nconst noBackendErrMsg: string = 'Training backend could not be resolved. ' +\n    'Make sure you\\'re using the correct configuration & WebAssembly files.';\n\nexport class TrainingSession implements TrainingSessionInterface {\n  private constructor(handler: TrainingSessionHandler, hasOptimizerModel: boolean, hasEvalModel: boolean) {\n    this.handler = handler;\n    this.hasOptimizerModel = hasOptimizerModel;\n    this.hasEvalModel = hasEvalModel;\n  }\n  private handler: TrainingSessionHandler;\n  private hasOptimizerModel: boolean;\n  private hasEvalModel: boolean;\n\n  get trainingInputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get trainingOutputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  get evalInputNames(): readonly string[] {\n    if (this.hasEvalModel) {\n      return this.handler.evalInputNames;\n    } else {\n      throw new Error('This training session has no evalModel loaded.');\n    }\n  }\n  get evalOutputNames(): readonly string[] {\n    if (this.hasEvalModel) {\n      return this.handler.evalOutputNames;\n    } else {\n      throw new Error('This training session has no evalModel loaded.');\n    }\n  }\n\n  static async create(trainingOptions: TrainingSessionCreateOptions, sessionOptions?: SessionOptions):\n      Promise<TrainingSession> {\n    const evalModel: string|Uint8Array = trainingOptions.evalModel || '';\n    const optimizerModel: string|Uint8Array = trainingOptions.optimizerModel || '';\n    const options: SessionOptions = sessionOptions || {};\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    if (backend.createTrainingSessionHandler) {\n      const handler = await backend.createTrainingSessionHandler(\n          trainingOptions.checkpointState, trainingOptions.trainModel, evalModel, optimizerModel, options);\n      return new TrainingSession(handler, !!trainingOptions.optimizerModel, !!trainingOptions.evalModel);\n    } else {\n      throw new Error(noBackendErrMsg);\n    }\n  }\n\n  /**\n   * Helper function for runTrainStep and future runStep methods that handles the type-narrowing conversion from\n   * the given parameters to SessionHandler.FetchesType and RunOptions.\n   *\n   * @param inputNames the feeds object is checked that they contain all input names in the provided list of input\n   * names.\n   * @param outputNames the fetches object is checked that their keys match up with valid names in the list of output\n   * names.\n   * @param feeds the required input\n   * @param arg1 narrowed & converted into the SessionHandler.FetchesType or RunOptions object\n   * @param arg2 optional RunOptions object.\n   * @returns\n   */\n  typeNarrowingForRunStep(\n      inputNames: readonly string[], outputNames: readonly string[], feeds: FeedsType, arg1?: FetchesType|RunOptions,\n      arg2?: RunOptions): [SessionHandler.FetchesType, RunOptions] {\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSession.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    return [fetches, options];\n  }\n\n  /**\n   * Helper method for runTrainStep and any other runStep methods. Takes the ReturnType result from the SessionHandler\n   * and changes it into a map of Tensors.\n   *\n   * @param results\n   * @returns\n   */\n  convertHandlerReturnTypeToMapOfTensors(results: SessionHandler.ReturnType): ReturnType {\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    return returnValue;\n  }\n\n  async lazyResetGrad(): Promise<void> {\n    await this.handler.lazyResetGrad();\n  }\n\n  runTrainStep(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  runTrainStep(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async runTrainStep(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    const [fetches, options] =\n        this.typeNarrowingForRunStep(this.trainingInputNames, this.trainingOutputNames, feeds, arg1, arg2);\n    const results = await this.handler.runTrainStep(feeds, fetches, options);\n    return this.convertHandlerReturnTypeToMapOfTensors(results);\n  }\n\n  async runOptimizerStep(options?: InferenceSession.RunOptions|undefined): Promise<void> {\n    if (this.hasOptimizerModel) {\n      await this.handler.runOptimizerStep(options || {});\n    } else {\n      throw new Error('This TrainingSession has no OptimizerModel loaded.');\n    }\n  }\n\n  runEvalStep(feeds: FeedsType, options?: RunOptions|undefined): Promise<ReturnType>;\n  runEvalStep(feeds: FeedsType, fetches: FetchesType, options?: RunOptions|undefined): Promise<ReturnType>;\n  async runEvalStep(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    if (this.hasEvalModel) {\n      const [fetches, options] =\n          this.typeNarrowingForRunStep(this.evalInputNames, this.evalOutputNames, feeds, arg1, arg2);\n      const results = await this.handler.runEvalStep(feeds, fetches, options);\n      return this.convertHandlerReturnTypeToMapOfTensors(results);\n    } else {\n      throw new Error('This TrainingSession has no EvalModel loaded.');\n    }\n  }\n\n  async getParametersSize(trainableOnly = true): Promise<number> {\n    return this.handler.getParametersSize(trainableOnly);\n  }\n\n  async loadParametersBuffer(array: Uint8Array, trainableOnly = true): Promise<void> {\n    const paramsSize = await this.getParametersSize(trainableOnly);\n    // checking that the size of the Uint8Array is equivalent to the byte length of a Float32Array of the number\n    // of parameters\n    if (array.length !== 4 * paramsSize) {\n      throw new Error(\n          'Size of the buffer passed into loadParametersBuffer must match the number of parameters in ' +\n          'the model. Please use getParametersSize method to check.');\n    }\n    return this.handler.loadParametersBuffer(array, trainableOnly);\n  }\n\n  async getContiguousParameters(trainableOnly = true): Promise<OnnxValue> {\n    return this.handler.getContiguousParameters(trainableOnly);\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {TrainingSession as TrainingSessionImpl} from './training-session-impl.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace TrainingSession {\n  /**\n   * Either URI file path (string) or Uint8Array containing model or checkpoint information.\n   */\n  type URIorBuffer = string|Uint8Array;\n}\n\n/**\n * Represent a runtime instance of an ONNX training session,\n * which contains a model that can be trained, and, optionally,\n * an eval and optimizer model.\n */\nexport interface TrainingSession {\n  // #region run()\n\n  /**\n   * Lazily resets the gradients of all trainable parameters to zero. Should happen after the invocation of\n   * runOptimizerStep.\n   */\n  lazyResetGrad(): Promise<void>;\n\n  /**\n   * Run TrainStep asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for\n   detail.\n   * @param options - Optional. A set of options that controls the behavior of model training.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  runTrainStep(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions):\n      Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Run a single train step with the given inputs and options.\n   *\n   * @param feeds - Representation of the model input.\n   * @param fetches - Representation of the model output.\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model training.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runTrainStep(\n      feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Runs a single optimizer step, which performs weight updates for the trainable parameters using the optimizer model.\n   *\n   * @param options - Optional. A set of options that controls the behavior of model optimizing.\n   */\n  runOptimizerStep(options?: InferenceSession.RunOptions): Promise<void>;\n\n  /**\n   * Run a single eval step with the given inputs and options using the eval model.\n   *\n   * @param feeds - Representation of the model input.\n   * @param options - Optional. A set of options that controls the behavior of model eval step.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runEvalStep(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions):\n      Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Run a single eval step with the given inputs and options using the eval model.\n   *\n   * @param feeds - Representation of the model input.\n   * @param fetches - Representation of the model output.\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model eval step.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runEvalStep(\n      feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region copy parameters\n\n  /**\n   * Retrieves the size of all parameters for the training state. Calculates the total number of primitive (datatype of\n   * the parameters) elements of all the parameters in the training state.\n   *\n   * @param trainableOnly - When set to true, the size is calculated for trainable params only. Default value is true.\n   */\n  getParametersSize(trainableOnly: boolean): Promise<number>;\n\n  /**\n   * Copies parameter values from the given array to the training state. Currently, only supporting models with\n   * parameters of type Float32.\n   *\n   * @param buffer - Float32 buffer containing parameters converted to a Uint8Array.\n   * @param trainableOnly - True if trainable parameters only to be modified, false otherwise. Default value is true.\n   */\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n\n  /**\n   * Copies the model parameters to a contiguous buffer. Usually used in the context of Federated Learning.\n   * Currently, only supporting models with parameters of type Float32.\n   *\n   * @param trainableOnly - When set to true, only trainable parameters are copied. Trainable parameters are parameters\n   * for which requires_grad is set to true. Default value is true.\n   * @returns A promise that resolves to a Float32 OnnxValue of the requested parameters.\n   */\n  getContiguousParameters(trainableOnly: boolean): Promise<OnnxValue>;\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded training model.\n   */\n  readonly trainingInputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded training model.\n   */\n  readonly trainingOutputNames: readonly string[];\n\n  /**\n   * Get input names of the loaded eval model. Is an empty array if no eval model is loaded.\n   */\n  readonly evalInputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded eval model. Is an empty array if no eval model is loaded.\n   */\n  readonly evalOutputNames: readonly string[];\n\n  // #endregion\n}\n\n/**\n * Represents the optional parameters that can be passed into the TrainingSessionFactory.\n */\nexport interface TrainingSessionCreateOptions {\n  /**\n   * URI or buffer for a .ckpt file that contains the checkpoint for the training model.\n   */\n  checkpointState: TrainingSession.URIorBuffer;\n  /**\n   * URI or buffer for the .onnx training file.\n   */\n  trainModel: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx optimizer model file.\n   */\n  optimizerModel?: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx eval model file.\n   */\n  evalModel?: TrainingSession.URIorBuffer;\n}\n\n/**\n * Defines method overload possibilities for creating a TrainingSession.\n */\nexport interface TrainingSessionFactory {\n  // #region create()\n\n  /**\n   * Creates a new TrainingSession and asynchronously loads any models passed in through trainingOptions\n   *\n   * @param trainingOptions specify models and checkpoints to load into the Training Session\n   * @param sessionOptions specify configuration for training session behavior\n   *\n   * @returns Promise that resolves to a TrainingSession object\n   */\n  create(trainingOptions: TrainingSessionCreateOptions, sessionOptions?: InferenceSession.SessionOptions):\n      Promise<TrainingSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const TrainingSession: TrainingSessionFactory = TrainingSessionImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript.html)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n\nexport * from './backend.js';\nexport * from './env.js';\nexport * from './inference-session.js';\nexport * from './tensor.js';\nexport * from './trace.js';\nexport * from './onnx-value.js';\nexport * from './training-session.js';\n", "export const readFile = undefined;export const readFileSync = undefined;export const createReadStream = undefined;", "export const join = undefined;", "\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar e=moduleArg,k,l;e.ready=new Promise((a,b)=>{k=a;l=b});var aa=Object.assign({},e),ba=\"./this.program\",ca=\"object\"==typeof window,q=\"function\"==typeof importScripts,da=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,v=\"\",x,z,A;\nif(da){var fs=require(\"fs\"),B=require(\"path\");v=q?B.dirname(v)+\"/\":__dirname+\"/\";x=(a,b)=>{a=C(a)?new URL(a):B.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};A=a=>{a=x(a,!0);a.buffer||(a=new Uint8Array(a));return a};z=(a,b,c,d=!0)=>{a=C(a)?new URL(a):B.normalize(a);fs.readFile(a,d?void 0:\"utf8\",(g,h)=>{g?c(g):b(d?h.buffer:h)})};!e.thisProgram&&1<process.argv.length&&(ba=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);e.inspect=()=>\"[Emscripten Module object]\"}else if(ca||q)q?v=\nself.location.href:\"undefined\"!=typeof document&&document.currentScript&&(v=document.currentScript.src),_scriptDir&&(v=_scriptDir),0!==v.indexOf(\"blob:\")?v=v.substr(0,v.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):v=\"\",x=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},q&&(A=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),z=(a,b,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\n\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ea=console.log.bind(console),D=console.error.bind(console);Object.assign(e,aa);aa=null;\"object\"!=typeof WebAssembly&&E(\"no native wasm support detected\");var F,fa=!1,G,H,I,J,ha;\nfunction ia(){var a=F.buffer;e.HEAP8=G=new Int8Array(a);e.HEAP16=new Int16Array(a);e.HEAPU8=H=new Uint8Array(a);e.HEAPU16=new Uint16Array(a);e.HEAP32=I=new Int32Array(a);e.HEAPU32=J=new Uint32Array(a);e.HEAPF32=new Float32Array(a);e.HEAPF64=ha=new Float64Array(a)}var K=[],L=[],ja=[],M=0,N=null,O=null;function E(a){a=\"Aborted(\"+a+\")\";D(a);fa=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");l(a);throw a;}\nvar ka=a=>a.startsWith(\"data:application/octet-stream;base64,\"),C=a=>a.startsWith(\"file://\"),P;P=\"ort-training-wasm-simd.wasm\";if(!ka(P)){var la=P;P=e.locateFile?e.locateFile(la,v):v+la}function ma(a){if(A)return A(a);throw\"both async and sync fetching of the wasm failed\";}\nfunction na(a){if(ca||q){if(\"function\"==typeof fetch&&!C(a))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>ma(a));if(z)return new Promise((b,c)=>{z(a,d=>b(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>ma(a))}function oa(a,b,c){return na(a).then(d=>WebAssembly.instantiate(d,b)).then(d=>d).then(c,d=>{D(`failed to asynchronously prepare wasm: ${d}`);E(d)})}\nfunction pa(a,b){var c=P;return\"function\"!=typeof WebAssembly.instantiateStreaming||ka(c)||C(c)||da||\"function\"!=typeof fetch?oa(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,a).then(b,function(g){D(`wasm streaming compile failed: ${g}`);D(\"falling back to ArrayBuffer instantiation\");return oa(c,a,b)}))}\nvar Q,qa={990416:(a,b,c,d)=>{if(\"undefined\"==typeof e||!e.Qa)return 1;a=R(a>>>0);a.startsWith(\"./\")&&(a=a.substring(2));a=e.Qa.get(a);if(!a)return 2;b>>>=0;c>>>=0;if(b+c>a.byteLength)return 3;try{return H.set(a.subarray(b,b+c),d>>>0>>>0),0}catch{return 4}}};function ra(a){this.Ka=a-24;this.Pa=function(b){J[this.Ka+4>>>2>>>0]=b};this.Oa=function(b){J[this.Ka+8>>>2>>>0]=b};this.Ma=function(b,c){this.Na();this.Pa(b);this.Oa(c)};this.Na=function(){J[this.Ka+16>>>2>>>0]=0}}\nvar sa=0,ta=0,ua=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,va=(a,b,c)=>{b>>>=0;var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.buffer&&ua)return ua.decode(a.subarray(b,c));for(d=\"\";b<c;){var g=a[b++];if(g&128){var h=a[b++]&63;if(192==(g&224))d+=String.fromCharCode((g&31)<<6|h);else{var m=a[b++]&63;g=224==(g&240)?(g&15)<<12|h<<6|m:(g&7)<<18|h<<12|m<<6|a[b++]&63;65536>g?d+=String.fromCharCode(g):(g-=65536,d+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else d+=String.fromCharCode(g)}return d},\nR=(a,b)=>(a>>>=0)?va(H,a,b):\"\",S=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);127>=d?b++:2047>=d?b+=2:55296<=d&&57343>=d?(b+=4,++c):b+=3}return b},T=(a,b,c,d)=>{c>>>=0;if(!(0<d))return 0;var g=c;d=c+d-1;for(var h=0;h<a.length;++h){var m=a.charCodeAt(h);if(55296<=m&&57343>=m){var r=a.charCodeAt(++h);m=65536+((m&1023)<<10)|r&1023}if(127>=m){if(c>=d)break;b[c++>>>0]=m}else{if(2047>=m){if(c+1>=d)break;b[c++>>>0]=192|m>>6}else{if(65535>=m){if(c+2>=d)break;b[c++>>>0]=224|m>>12}else{if(c+3>=\nd)break;b[c++>>>0]=240|m>>18;b[c++>>>0]=128|m>>12&63}b[c++>>>0]=128|m>>6&63}b[c++>>>0]=128|m&63}}b[c>>>0]=0;return c-g},U=a=>0===a%4&&(0!==a%100||0===a%400),wa=[0,31,60,91,121,152,182,213,244,274,305,335],xa=[0,31,59,90,120,151,181,212,243,273,304,334],Ca=a=>{var b=S(a)+1,c=Ba(b);c&&T(a,H,c,b);return c},V=[],W={},Da=()=>{if(!X){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\n\"_\")+\".UTF-8\",_:ba||\"./this.program\"},b;for(b in W)void 0===W[b]?delete a[b]:a[b]=W[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);X=c}return X},X,Ea=[null,[],[]],Fa=[31,29,31,30,31,30,31,31,30,31,30,31],Ga=[31,28,31,30,31,30,31,31,30,31,30,31];function Ha(a){var b=Array(S(a)+1);T(a,b,0,b.length);return b}\nfunction Ia(a,b,c,d){function g(f,n,p){for(f=\"number\"==typeof f?f.toString():f||\"\";f.length<n;)f=p[0]+f;return f}function h(f,n){return g(f,n,\"0\")}function m(f,n){function p(ya){return 0>ya?-1:0<ya?1:0}var y;0===(y=p(f.getFullYear()-n.getFullYear()))&&0===(y=p(f.getMonth()-n.getMonth()))&&(y=p(f.getDate()-n.getDate()));return y}function r(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function w(f){var n=f.Ga;for(f=new Date((new Date(f.Ha+1900,0,1)).getTime());0<n;){var p=f.getMonth(),y=(U(f.getFullYear())?Fa:Ga)[p];if(n>y-f.getDate())n-=y-f.getDate()+1,f.setDate(1),11>p?f.setMonth(p+1):(f.setMonth(0),f.setFullYear(f.getFullYear()+1));else{f.setDate(f.getDate()+n);break}}p=new Date(f.getFullYear()+1,0,4);n=r(new Date(f.getFullYear(),\n0,4));p=r(p);return 0>=m(n,f)?0>=m(p,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;d>>>=0;var t=J[d+40>>>2>>>0];d={Ta:I[d>>>2>>>0],Sa:I[d+4>>>2>>>0],Ia:I[d+8>>>2>>>0],La:I[d+12>>>2>>>0],Ja:I[d+16>>>2>>>0],Ha:I[d+20>>>2>>>0],Ba:I[d+24>>>2>>>0],Ga:I[d+28>>>2>>>0],Va:I[d+32>>>2>>>0],Ra:I[d+36>>>2>>>0],Ua:t?R(t):\"\"};c=R(c);t={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\n\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var u in t)c=c.replace(new RegExp(u,\"g\"),t[u]);var za=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),Aa=\"January February March April May June July August September October November December\".split(\" \");t={\"%a\":f=>za[f.Ba].substring(0,3),\"%A\":f=>za[f.Ba],\n\"%b\":f=>Aa[f.Ja].substring(0,3),\"%B\":f=>Aa[f.Ja],\"%C\":f=>h((f.Ha+1900)/100|0,2),\"%d\":f=>h(f.La,2),\"%e\":f=>g(f.La,2,\" \"),\"%g\":f=>w(f).toString().substring(2),\"%G\":f=>w(f),\"%H\":f=>h(f.Ia,2),\"%I\":f=>{f=f.Ia;0==f?f=12:12<f&&(f-=12);return h(f,2)},\"%j\":f=>{for(var n=0,p=0;p<=f.Ja-1;n+=(U(f.Ha+1900)?Fa:Ga)[p++]);return h(f.La+n,3)},\"%m\":f=>h(f.Ja+1,2),\"%M\":f=>h(f.Sa,2),\"%n\":()=>\"\\n\",\"%p\":f=>0<=f.Ia&&12>f.Ia?\"AM\":\"PM\",\"%S\":f=>h(f.Ta,2),\"%t\":()=>\"\\t\",\"%u\":f=>f.Ba||7,\"%U\":f=>h(Math.floor((f.Ga+7-f.Ba)/7),\n2),\"%V\":f=>{var n=Math.floor((f.Ga+7-(f.Ba+6)%7)/7);2>=(f.Ba+371-f.Ga-2)%7&&n++;if(n)53==n&&(p=(f.Ba+371-f.Ga)%7,4==p||3==p&&U(f.Ha)||(n=1));else{n=52;var p=(f.Ba+7-f.Ga-1)%7;(4==p||5==p&&U(f.Ha%400-1))&&n++}return h(n,2)},\"%w\":f=>f.Ba,\"%W\":f=>h(Math.floor((f.Ga+7-(f.Ba+6)%7)/7),2),\"%y\":f=>(f.Ha+1900).toString().substring(2),\"%Y\":f=>f.Ha+1900,\"%z\":f=>{f=f.Ra;var n=0<=f;f=Math.abs(f)/60;return(n?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":f=>f.Ua,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");\nfor(u in t)c.includes(u)&&(c=c.replace(new RegExp(u,\"g\"),t[u](d)));c=c.replace(/\\0\\0/g,\"%\");u=Ha(c);if(u.length>b)return 0;G.set(u,a>>>0);return u.length-1}\nvar La={a:function(a,b,c){a>>>=0;(new ra(a)).Ma(b>>>0,c>>>0);sa=a;ta++;throw sa;},e:function(){return 0},H:function(){},x:function(){},z:function(){},J:function(){return 0},F:function(){},A:function(){},E:function(){},g:function(){},y:function(){},v:function(){},G:function(){},w:function(){},k:()=>1,n:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);I[c>>>2>>>0]=a.getUTCSeconds();I[c+4>>>2>>>0]=a.getUTCMinutes();I[c+8>>>2>>>0]=a.getUTCHours();I[c+12>>>\n2>>>0]=a.getUTCDate();I[c+16>>>2>>>0]=a.getUTCMonth();I[c+20>>>2>>>0]=a.getUTCFullYear()-1900;I[c+24>>>2>>>0]=a.getUTCDay();I[c+28>>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},o:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);I[c>>>2>>>0]=a.getSeconds();I[c+4>>>2>>>0]=a.getMinutes();I[c+8>>>2>>>0]=a.getHours();I[c+12>>>2>>>0]=a.getDate();I[c+16>>>2>>>0]=a.getMonth();I[c+20>>>2>>>0]=a.getFullYear()-1900;I[c+24>>>2>>>0]=a.getDay();\nI[c+28>>>2>>>0]=(U(a.getFullYear())?wa:xa)[a.getMonth()]+a.getDate()-1|0;I[c+36>>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();var d=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();I[c+32>>>2>>>0]=(b!=d&&a.getTimezoneOffset()==Math.min(d,b))|0},p:function(a){a>>>=0;var b=new Date(I[a+20>>>2>>>0]+1900,I[a+16>>>2>>>0],I[a+12>>>2>>>0],I[a+8>>>2>>>0],I[a+4>>>2>>>0],I[a>>>2>>>0],0),c=I[a+32>>>2>>>0],d=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),\nh=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),m=Math.min(h,g);0>c?I[a+32>>>2>>>0]=Number(g!=h&&m==d):0<c!=(m==d)&&(g=Math.max(h,g),b.setTime(b.getTime()+6E4*((0<c?m:g)-d)));I[a+24>>>2>>>0]=b.getDay();I[a+28>>>2>>>0]=(U(b.getFullYear())?wa:xa)[b.getMonth()]+b.getDate()-1|0;I[a>>>2>>>0]=b.getSeconds();I[a+4>>>2>>>0]=b.getMinutes();I[a+8>>>2>>>0]=b.getHours();I[a+12>>>2>>>0]=b.getDate();I[a+16>>>2>>>0]=b.getMonth();I[a+20>>>2>>>0]=b.getYear();a=b.getTime();isNaN(a)?(I[Ja()>>>2>>>0]=61,a=-1):\na/=1E3;return Ka((Q=a,1<=+Math.abs(Q)?0<Q?+Math.floor(Q/4294967296)>>>0:~~+Math.ceil((Q-+(~~Q>>>0))/4294967296)>>>0:0)),a>>>0},l:function(){return-52},m:function(){},t:function(a,b,c){function d(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:\"GMT\"}c>>>=0;var g=(new Date).getFullYear(),h=new Date(g,0,1),m=new Date(g,6,1);g=h.getTimezoneOffset();var r=m.getTimezoneOffset();J[a>>>0>>>2>>>0]=60*Math.max(g,r);I[b>>>0>>>2>>>0]=Number(g!=r);a=d(h);b=d(m);a=Ca(a);b=Ca(b);r<g?(J[c>>>2>>>0]=\na,J[c+4>>>2>>>0]=b):(J[c>>>2>>>0]=b,J[c+4>>>2>>>0]=a)},d:()=>{E(\"\")},B:function(a,b,c){a>>>=0;b>>>=0;c>>>=0;V.length=0;for(var d;d=H[b++>>>0];){var g=105!=d;g&=112!=d;c+=g&&c%8?4:0;V.push(112==d?J[c>>>2>>>0]:105==d?I[c>>>2>>>0]:ha[c>>>3>>>0]);c+=g?8:4}return qa[a].apply(null,V)},h:()=>Date.now(),u:function(){return 4294901760},b:()=>performance.now(),I:function(a,b,c){b>>>=0;return H.copyWithin(a>>>0>>>0,b>>>0,b+(c>>>0)>>>0)},s:function(a){a>>>=0;var b=H.length;if(4294901760<a)return!1;for(var c=\n1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var g=Math;d=Math.max(a,d);a:{g=(g.min.call(g,4294901760,d+(65536-d%65536)%65536)-F.buffer.byteLength+65535)/65536;try{F.grow(g);ia();var h=1;break a}catch(m){}h=void 0}if(h)return!0}return!1},C:function(a,b){a>>>=0;b>>>=0;var c=0;Da().forEach((d,g)=>{var h=b+c;g=J[a+4*g>>>2>>>0]=h;for(h=0;h<d.length;++h)G[g++>>>0>>>0]=d.charCodeAt(h);G[g>>>0>>>0]=0;c+=d.length+1});return 0},D:function(a,b){a>>>=0;b>>>=0;var c=Da();J[a>>>2>>>0]=c.length;var d=\n0;c.forEach(g=>d+=g.length+1);J[b>>>2>>>0]=d;return 0},f:()=>52,j:function(){return 52},q:function(){return 70},i:function(a,b,c,d){b>>>=0;c>>>=0;d>>>=0;for(var g=0,h=0;h<c;h++){var m=J[b>>>2>>>0],r=J[b+4>>>2>>>0];b+=8;for(var w=0;w<r;w++){var t=H[m+w>>>0],u=Ea[a];0===t||10===t?((1===a?ea:D)(va(u,0)),u.length=0):u.push(t)}g+=r}J[d>>>2>>>0]=g;return 0},r:Ia,c:function(a,b,c,d){return Ia(a>>>0,b>>>0,c>>>0,d>>>0)}},Y=function(){function a(c){Y=c.exports;Y=Ma();F=Y.K;ia();L.unshift(Y.L);M--;0==M&&(null!==\nN&&(clearInterval(N),N=null),O&&(c=O,O=null,c()));return Y}var b={a:La};M++;if(e.instantiateWasm)try{return e.instantiateWasm(b,a)}catch(c){D(`Module.instantiateWasm callback failed with error: ${c}`),l(c)}pa(b,function(c){a(c.instance)}).catch(l);return{}}();e._OrtInit=(a,b)=>(e._OrtInit=Y.M)(a,b);e._OrtGetLastError=(a,b)=>(e._OrtGetLastError=Y.N)(a,b);e._OrtCreateSessionOptions=(a,b,c,d,g,h,m,r,w,t)=>(e._OrtCreateSessionOptions=Y.O)(a,b,c,d,g,h,m,r,w,t);\ne._OrtAppendExecutionProvider=(a,b)=>(e._OrtAppendExecutionProvider=Y.P)(a,b);e._OrtAddFreeDimensionOverride=(a,b,c)=>(e._OrtAddFreeDimensionOverride=Y.Q)(a,b,c);e._OrtAddSessionConfigEntry=(a,b,c)=>(e._OrtAddSessionConfigEntry=Y.R)(a,b,c);e._OrtReleaseSessionOptions=a=>(e._OrtReleaseSessionOptions=Y.S)(a);e._OrtCreateSession=(a,b,c)=>(e._OrtCreateSession=Y.T)(a,b,c);e._OrtReleaseSession=a=>(e._OrtReleaseSession=Y.U)(a);e._OrtGetInputOutputCount=(a,b,c)=>(e._OrtGetInputOutputCount=Y.V)(a,b,c);\ne._OrtGetInputName=(a,b)=>(e._OrtGetInputName=Y.W)(a,b);e._OrtGetOutputName=(a,b)=>(e._OrtGetOutputName=Y.X)(a,b);e._OrtFree=a=>(e._OrtFree=Y.Y)(a);e._OrtCreateTensor=(a,b,c,d,g,h)=>(e._OrtCreateTensor=Y.Z)(a,b,c,d,g,h);e._OrtGetTensorData=(a,b,c,d,g)=>(e._OrtGetTensorData=Y._)(a,b,c,d,g);e._OrtReleaseTensor=a=>(e._OrtReleaseTensor=Y.$)(a);e._OrtCreateRunOptions=(a,b,c,d)=>(e._OrtCreateRunOptions=Y.aa)(a,b,c,d);e._OrtAddRunConfigEntry=(a,b,c)=>(e._OrtAddRunConfigEntry=Y.ba)(a,b,c);\ne._OrtReleaseRunOptions=a=>(e._OrtReleaseRunOptions=Y.ca)(a);e._OrtCreateBinding=a=>(e._OrtCreateBinding=Y.da)(a);e._OrtBindInput=(a,b,c)=>(e._OrtBindInput=Y.ea)(a,b,c);e._OrtBindOutput=(a,b,c,d)=>(e._OrtBindOutput=Y.fa)(a,b,c,d);e._OrtClearBoundOutputs=a=>(e._OrtClearBoundOutputs=Y.ga)(a);e._OrtReleaseBinding=a=>(e._OrtReleaseBinding=Y.ha)(a);e._OrtRunWithBinding=(a,b,c,d,g)=>(e._OrtRunWithBinding=Y.ia)(a,b,c,d,g);e._OrtRun=(a,b,c,d,g,h,m,r)=>(e._OrtRun=Y.ja)(a,b,c,d,g,h,m,r);\ne._OrtEndProfiling=a=>(e._OrtEndProfiling=Y.ka)(a);e._OrtTrainingLoadCheckpoint=(a,b)=>(e._OrtTrainingLoadCheckpoint=Y.la)(a,b);e._OrtTrainingReleaseCheckpoint=a=>(e._OrtTrainingReleaseCheckpoint=Y.ma)(a);e._OrtTrainingCreateSession=(a,b,c,d,g,h,m,r)=>(e._OrtTrainingCreateSession=Y.na)(a,b,c,d,g,h,m,r);e._OrtTrainingLazyResetGrad=a=>(e._OrtTrainingLazyResetGrad=Y.oa)(a);e._OrtTrainingRunTrainStep=(a,b,c,d,g,h)=>(e._OrtTrainingRunTrainStep=Y.pa)(a,b,c,d,g,h);\ne._OrtTrainingOptimizerStep=(a,b)=>(e._OrtTrainingOptimizerStep=Y.qa)(a,b);e._OrtTrainingEvalStep=(a,b,c,d,g,h)=>(e._OrtTrainingEvalStep=Y.ra)(a,b,c,d,g,h);e._OrtTrainingGetParametersSize=(a,b,c)=>(e._OrtTrainingGetParametersSize=Y.sa)(a,b,c);e._OrtTrainingCopyParametersToBuffer=(a,b,c,d)=>(e._OrtTrainingCopyParametersToBuffer=Y.ta)(a,b,c,d);e._OrtTrainingCopyParametersFromBuffer=(a,b,c,d)=>(e._OrtTrainingCopyParametersFromBuffer=Y.ua)(a,b,c,d);\ne._OrtTrainingGetModelInputOutputCount=(a,b,c,d)=>(e._OrtTrainingGetModelInputOutputCount=Y.va)(a,b,c,d);e._OrtTrainingGetModelInputOutputName=(a,b,c,d)=>(e._OrtTrainingGetModelInputOutputName=Y.wa)(a,b,c,d);e._OrtTrainingReleaseSession=a=>(e._OrtTrainingReleaseSession=Y.xa)(a);var Ja=()=>(Ja=Y.ya)(),Ba=e._malloc=a=>(Ba=e._malloc=Y.za)(a);e._free=a=>(e._free=Y.Aa)(a);var Ka=a=>(Ka=Y.Ca)(a),Na=()=>(Na=Y.Da)(),Oa=a=>(Oa=Y.Ea)(a),Pa=a=>(Pa=Y.Fa)(a);\nfunction Ma(){var a=Y;a=Object.assign({},a);var b=d=>()=>d()>>>0,c=d=>g=>d(g)>>>0;a.ya=b(a.ya);a.za=c(a.za);a.Da=b(a.Da);a.Fa=c(a.Fa);return a}e.stackAlloc=Pa;e.stackSave=Na;e.stackRestore=Oa;e.UTF8ToString=R;e.stringToUTF8=(a,b,c)=>T(a,H,b,c);e.lengthBytesUTF8=S;var Z;O=function Qa(){Z||Ra();Z||(O=Qa)};\nfunction Ra(){if(!(0<M)){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;){var a=e.preRun.shift();K.unshift(a)}for(;0<K.length;)K.shift()(e);if(!(0<M||Z||(Z=!0,e.calledRun=!0,fa))){for(;0<L.length;)L.shift()(e);for(k(e);0<ja.length;)ja.shift()(e)}}}Ra();\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasm);\n", "", "", "export const cpus = undefined;", "\nvar ortWasmThreaded = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nfunction aa(){e.buffer!=l.buffer&&m();return l}function n(){e.buffer!=l.buffer&&m();return ba}function p(){e.buffer!=l.buffer&&m();return ca}function r(){e.buffer!=l.buffer&&m();return da}function ea(){e.buffer!=l.buffer&&m();return fa}var v=moduleArg,ha,x;v.ready=new Promise((a,b)=>{ha=a;x=b});\nvar ia=Object.assign({},v),ja=\"./this.program\",z=(a,b)=>{throw b;},ka=\"object\"==typeof window,A=\"function\"==typeof importScripts,B=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,D=v.ENVIRONMENT_IS_PTHREAD||!1,E=\"\";function la(a){return v.locateFile?v.locateFile(a,E):E+a}var ma,G,H;\nif(B){var fs=require(\"fs\"),na=require(\"path\");E=A?na.dirname(E)+\"/\":__dirname+\"/\";ma=(b,c)=>{b=I(b)?new URL(b):na.normalize(b);return fs.readFileSync(b,c?void 0:\"utf8\")};H=b=>{b=ma(b,!0);b.buffer||(b=new Uint8Array(b));return b};G=(b,c,d,g=!0)=>{b=I(b)?new URL(b):na.normalize(b);fs.readFile(b,g?void 0:\"utf8\",(h,k)=>{h?d(h):c(g?k.buffer:k)})};!v.thisProgram&&1<process.argv.length&&(ja=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);z=(b,c)=>{process.exitCode=b;throw c;};v.inspect=()=>\"[Emscripten Module object]\";\nlet a;try{a=require(\"worker_threads\")}catch(b){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),b;}global.Worker=a.Worker}else if(ka||A)A?E=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),(typeof _scriptDir !== \"undefined\" && _scriptDir)&&(E=_scriptDir),0!==E.indexOf(\"blob:\")?E=E.substr(0,E.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):E=\"\",B||(ma=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);\nreturn b.responseText},A&&(H=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),G=(a,b,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)});B&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var oa=console.log.bind(console),pa=console.error.bind(console);\nB&&(oa=(...a)=>fs.writeSync(1,a.join(\" \")+\"\\n\"),pa=(...a)=>fs.writeSync(2,a.join(\" \")+\"\\n\"));var qa=oa,J=pa;Object.assign(v,ia);ia=null;\"object\"!=typeof WebAssembly&&ra(\"no native wasm support detected\");var e,sa,K=!1,L,l,ba,ca,da,fa;function m(){var a=e.buffer;v.HEAP8=l=new Int8Array(a);v.HEAP16=new Int16Array(a);v.HEAPU8=ba=new Uint8Array(a);v.HEAPU16=new Uint16Array(a);v.HEAP32=ca=new Int32Array(a);v.HEAPU32=da=new Uint32Array(a);v.HEAPF32=new Float32Array(a);v.HEAPF64=fa=new Float64Array(a)}\nvar ta=16777216;\nif(D)e=v.wasmMemory;else if(v.wasmMemory)e=v.wasmMemory;else if(e=new WebAssembly.Memory({initial:ta/65536,maximum:65536,shared:!0}),!(e.buffer instanceof SharedArrayBuffer))throw J(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),B&&J(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");\nm();ta=e.buffer.byteLength;var ua=[],va=[],wa=[],M=0,xa=null,N=null;function ya(){M--;if(0==M&&(null!==xa&&(clearInterval(xa),xa=null),N)){var a=N;N=null;a()}}function ra(a){a=\"Aborted(\"+a+\")\";J(a);K=!0;L=1;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");x(a);throw a;}var za=a=>a.startsWith(\"data:application/octet-stream;base64,\"),I=a=>a.startsWith(\"file://\"),O;O=\"ort-wasm-threaded.wasm\";za(O)||(O=la(O));\nfunction Aa(a){if(H)return H(a);throw\"both async and sync fetching of the wasm failed\";}function Ba(a){if(ka||A){if(\"function\"==typeof fetch&&!I(a))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>Aa(a));if(G)return new Promise((b,c)=>{G(a,d=>b(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>Aa(a))}\nfunction Ca(a,b,c){return Ba(a).then(d=>WebAssembly.instantiate(d,b)).then(d=>d).then(c,d=>{J(`failed to asynchronously prepare wasm: ${d}`);ra(d)})}function Da(a,b){var c=O;return\"function\"!=typeof WebAssembly.instantiateStreaming||za(c)||I(c)||B||\"function\"!=typeof fetch?Ca(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,a).then(b,function(g){J(`wasm streaming compile failed: ${g}`);J(\"falling back to ArrayBuffer instantiation\");return Ca(c,a,b)}))}\nvar P,Ea={921276:(a,b,c,d)=>{if(\"undefined\"==typeof v||!v.cb)return 1;a=Q(a>>>0);a.startsWith(\"./\")&&(a=a.substring(2));a=v.cb.get(a);if(!a)return 2;b>>>=0;c>>>=0;d>>>=0;if(b+c>a.byteLength)return 3;try{return n().set(a.subarray(b,b+c),d>>>0),0}catch{return 4}}};function R(a){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${a})`;this.status=a}\nvar Fa=a=>{a.terminate();a.onmessage=()=>{}},Ha=a=>{0==S.Pa.length&&(Ga(),S.Ya(S.Pa[0]));var b=S.Pa.pop();if(!b)return 6;S.Qa.push(b);S.Ma[a.Oa]=b;b.Oa=a.Oa;var c={cmd:\"run\",start_routine:a.kb,arg:a.hb,pthread_ptr:a.Oa};B&&b.unref();b.postMessage(c,a.qb);return 0},T=0,Ia=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,Ja=(a,b,c)=>{b>>>=0;var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.buffer&&Ia)return Ia.decode(a.buffer instanceof SharedArrayBuffer?a.slice(b,c):a.subarray(b,c));\nfor(d=\"\";b<c;){var g=a[b++];if(g&128){var h=a[b++]&63;if(192==(g&224))d+=String.fromCharCode((g&31)<<6|h);else{var k=a[b++]&63;g=224==(g&240)?(g&15)<<12|h<<6|k:(g&7)<<18|h<<12|k<<6|a[b++]&63;65536>g?d+=String.fromCharCode(g):(g-=65536,d+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else d+=String.fromCharCode(g)}return d},Q=(a,b)=>(a>>>=0)?Ja(n(),a,b):\"\",La=a=>{var b=Ka();a=a();U(b);return a};\nfunction V(a,b){var c=arguments.length-2,d=arguments;return La(()=>{for(var g=Ma(8*c),h=g>>>3,k=0;k<c;k++){var t=d[2+k];ea()[h+k>>>0]=t}return Na(a,c,g,b)})}function Oa(a){if(D)return V(0,1,a);L=a;0<T||(S.lb(),v.onExit?.(a),K=!0);z(a,new R(a))}var Qa=a=>{L=a;if(D)throw Pa(a),\"unwind\";Oa(a)};function Ra(){for(var a=v.numThreads;a--;)Ga();ua.unshift(()=>{M++;Sa(()=>ya())})}function Ga(){var a=la(\"ort-wasm-threaded.worker.js\");a=new Worker(a);S.Pa.push(a)}\nfunction Sa(a){D?a():Promise.all(S.Pa.map(S.Ya)).then(a)}\nvar S={Pa:[],Qa:[],bb:[],Ma:{},Wa(){D?(S.receiveObjectTransfer=S.jb,S.threadInitTLS=S.ab,S.setExitStatus=S.$a):Ra()},$a:a=>L=a,tb:[\"$terminateWorker\"],lb:()=>{for(var a of S.Qa)Fa(a);for(a of S.Pa)Fa(a);S.Pa=[];S.Qa=[];S.Ma=[]},Za:a=>{var b=a.Oa;delete S.Ma[b];S.Pa.push(a);S.Qa.splice(S.Qa.indexOf(a),1);a.Oa=0;Ta(b)},jb(){},ab(){S.bb.forEach(a=>a())},Ya:a=>new Promise(b=>{a.onmessage=h=>{h=h.data;var k=h.cmd;if(h.targetThread&&h.targetThread!=W()){var t=S.Ma[h.targetThread];t?t.postMessage(h,h.transferList):\nJ(`Internal error! Worker sent a message \"${k}\" to target pthread ${h.targetThread}, but that thread no longer exists!`)}else if(\"checkMailbox\"===k)X();else if(\"spawnThread\"===k)Ha(h);else if(\"cleanupThread\"===k)S.Za(S.Ma[h.thread]);else if(\"killThread\"===k)h=h.thread,k=S.Ma[h],delete S.Ma[h],Fa(k),Ta(h),S.Qa.splice(S.Qa.indexOf(k),1),k.Oa=0;else if(\"cancelThread\"===k)S.Ma[h.thread].postMessage({cmd:\"cancel\"});else if(\"loaded\"===k)a.loaded=!0,B&&!a.Oa&&a.unref(),b(a);else if(\"alert\"===k)alert(`Thread ${h.threadId}: ${h.text}`);\nelse if(\"setimmediate\"===h.target)a.postMessage(h);else if(\"callHandler\"===k)v[h.handler](...h.args);else k&&J(`worker sent an unknown command ${k}`)};a.onerror=h=>{J(`${\"worker sent an error!\"} ${h.filename}:${h.lineno}: ${h.message}`);throw h;};B&&(a.on(\"message\",h=>a.onmessage({data:h})),a.on(\"error\",h=>a.onerror(h)));var c=[],d=[\"onExit\"],g;for(g of d)v.hasOwnProperty(g)&&c.push(g);a.postMessage({cmd:\"load\",handlers:c,urlOrBlob:v.mainScriptUrlOrBlob||_scriptDir,wasmMemory:e,wasmModule:sa})})};\nv.PThread=S;var Ua=a=>{for(;0<a.length;)a.shift()(v)};v.establishStackSpace=()=>{var a=W(),b=r()[a+52>>>2>>>0];a=r()[a+56>>>2>>>0];Va(b,b-a);U(b)};function Pa(a){if(D)return V(1,0,a);Qa(a)}var Wa=[],Xa;v.invokeEntryPoint=(a,b)=>{var c=Wa[a];c||(a>=Wa.length&&(Wa.length=a+1),Wa[a]=c=Xa.get(a));a=c(b);0<T?S.$a(a):Ya(a)};\nfunction Za(a){this.Va=a-24;this.gb=function(b){r()[this.Va+4>>>2>>>0]=b};this.fb=function(b){r()[this.Va+8>>>2>>>0]=b};this.Wa=function(b,c){this.eb();this.gb(b);this.fb(c)};this.eb=function(){r()[this.Va+16>>>2>>>0]=0}}var $a=0,ab=0;function bb(a,b,c,d){return D?V(2,1,a,b,c,d):cb(a,b,c,d)}\nfunction cb(a,b,c,d){a>>>=0;b>>>=0;c>>>=0;d>>>=0;if(\"undefined\"==typeof SharedArrayBuffer)return J(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var g=[];if(D&&0===g.length)return bb(a,b,c,d);a={kb:c,Oa:a,hb:d,qb:g};return D?(a.sb=\"spawnThread\",postMessage(a,g),0):Ha(a)}function db(a,b,c){return D?V(3,1,a,b,c):0}function eb(a,b){if(D)return V(4,1,a,b)}\nvar fb=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);127>=d?b++:2047>=d?b+=2:55296<=d&&57343>=d?(b+=4,++c):b+=3}return b},gb=(a,b,c,d)=>{c>>>=0;if(!(0<d))return 0;var g=c;d=c+d-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var t=a.charCodeAt(++h);k=65536+((k&1023)<<10)|t&1023}if(127>=k){if(c>=d)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=d)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=d)break;b[c++>>>0]=224|k>>12}else{if(c+3>=d)break;b[c++>>>0]=240|k>>\n18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-g},hb=(a,b,c)=>gb(a,n(),b,c);function ib(a,b){if(D)return V(5,1,a,b)}function jb(a,b,c){if(D)return V(6,1,a,b,c)}function kb(a,b,c){return D?V(7,1,a,b,c):0}function lb(a,b){if(D)return V(8,1,a,b)}function mb(a,b,c){if(D)return V(9,1,a,b,c)}function nb(a,b,c,d){if(D)return V(10,1,a,b,c,d)}function ob(a,b,c,d){if(D)return V(11,1,a,b,c,d)}function pb(a,b,c,d){if(D)return V(12,1,a,b,c,d)}\nfunction qb(a){if(D)return V(13,1,a)}function rb(a,b){if(D)return V(14,1,a,b)}function sb(a,b,c){if(D)return V(15,1,a,b,c)}function tb(a){a>>>=0;\"function\"===typeof Atomics.rb&&(Atomics.rb(p(),a>>>2,a).value.then(X),a+=128,Atomics.store(p(),a>>>2,1))}v.__emscripten_thread_mailbox_await=tb;var X=()=>{var a=W();if(a&&(tb(a),a=ub,!K))try{if(a(),!(0<T))try{D?Ya(L):Qa(L)}catch(b){b instanceof R||\"unwind\"==b||z(1,b)}}catch(b){b instanceof R||\"unwind\"==b||z(1,b)}};v.checkMailbox=X;\nvar vb=[],Y=a=>0===a%4&&(0!==a%100||0===a%400),wb=[0,31,60,91,121,152,182,213,244,274,305,335],xb=[0,31,59,90,120,151,181,212,243,273,304,334];function yb(a,b,c,d,g,h,k,t){return D?V(16,1,a,b,c,d,g,h,k,t):-52}function zb(a,b,c,d,g,h,k){if(D)return V(17,1,a,b,c,d,g,h,k)}\nvar Bb=a=>{var b=fb(a)+1,c=Ab(b);c&&hb(a,c,b);return c},Cb=[],Db={},Fb=()=>{if(!Eb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ja||\"./this.program\"},b;for(b in Db)void 0===Db[b]?delete a[b]:a[b]=Db[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);Eb=c}return Eb},Eb;\nfunction Gb(a,b){if(D)return V(18,1,a,b);a>>>=0;b>>>=0;var c=0;Fb().forEach((d,g)=>{var h=b+c;g=r()[a+4*g>>>2>>>0]=h;for(h=0;h<d.length;++h)aa()[g++>>>0>>>0]=d.charCodeAt(h);aa()[g>>>0>>>0]=0;c+=d.length+1});return 0}function Kb(a,b){if(D)return V(19,1,a,b);a>>>=0;b>>>=0;var c=Fb();r()[a>>>2>>>0]=c.length;var d=0;c.forEach(g=>d+=g.length+1);r()[b>>>2>>>0]=d;return 0}function Lb(a){return D?V(20,1,a):52}function Mb(a,b,c,d){return D?V(21,1,a,b,c,d):52}\nfunction Nb(a,b,c,d,g){return D?V(22,1,a,b,c,d,g):70}var Ob=[null,[],[]];function Pb(a,b,c,d){if(D)return V(23,1,a,b,c,d);b>>>=0;c>>>=0;d>>>=0;for(var g=0,h=0;h<c;h++){var k=r()[b>>>2>>>0],t=r()[b+4>>>2>>>0];b+=8;for(var C=0;C<t;C++){var w=n()[k+C>>>0],y=Ob[a];0===w||10===w?((1===a?qa:J)(Ja(y,0)),y.length=0):y.push(w)}g+=t}r()[d>>>2>>>0]=g;return 0}var Qb=[31,29,31,30,31,30,31,31,30,31,30,31],Rb=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction Sb(a){var b=Array(fb(a)+1);gb(a,b,0,b.length);return b}var Tb=(a,b)=>{aa().set(a,b>>>0)};\nfunction Ub(a,b,c,d){function g(f,q,u){for(f=\"number\"==typeof f?f.toString():f||\"\";f.length<q;)f=u[0]+f;return f}function h(f,q){return g(f,q,\"0\")}function k(f,q){function u(Hb){return 0>Hb?-1:0<Hb?1:0}var F;0===(F=u(f.getFullYear()-q.getFullYear()))&&0===(F=u(f.getMonth()-q.getMonth()))&&(F=u(f.getDate()-q.getDate()));return F}function t(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function C(f){var q=f.Ra;for(f=new Date((new Date(f.Sa+1900,0,1)).getTime());0<q;){var u=f.getMonth(),F=(Y(f.getFullYear())?Qb:Rb)[u];if(q>F-f.getDate())q-=F-f.getDate()+1,f.setDate(1),11>u?f.setMonth(u+1):(f.setMonth(0),f.setFullYear(f.getFullYear()+1));else{f.setDate(f.getDate()+q);break}}u=new Date(f.getFullYear()+1,0,4);q=t(new Date(f.getFullYear(),\n0,4));u=t(u);return 0>=k(q,f)?0>=k(u,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;d>>>=0;var w=r()[d+40>>>2>>>0];d={ob:p()[d>>>2>>>0],nb:p()[d+4>>>2>>>0],Ta:p()[d+8>>>2>>>0],Xa:p()[d+12>>>2>>>0],Ua:p()[d+16>>>2>>>0],Sa:p()[d+20>>>2>>>0],Na:p()[d+24>>>2>>>0],Ra:p()[d+28>>>2>>>0],ub:p()[d+32>>>2>>>0],mb:p()[d+36>>>2>>>0],pb:w?Q(w):\"\"};c=Q(c);w={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\n\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var y in w)c=c.replace(new RegExp(y,\"g\"),w[y]);var Ib=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),Jb=\"January February March April May June July August September October November December\".split(\" \");w={\"%a\":f=>Ib[f.Na].substring(0,3),\n\"%A\":f=>Ib[f.Na],\"%b\":f=>Jb[f.Ua].substring(0,3),\"%B\":f=>Jb[f.Ua],\"%C\":f=>h((f.Sa+1900)/100|0,2),\"%d\":f=>h(f.Xa,2),\"%e\":f=>g(f.Xa,2,\" \"),\"%g\":f=>C(f).toString().substring(2),\"%G\":f=>C(f),\"%H\":f=>h(f.Ta,2),\"%I\":f=>{f=f.Ta;0==f?f=12:12<f&&(f-=12);return h(f,2)},\"%j\":f=>{for(var q=0,u=0;u<=f.Ua-1;q+=(Y(f.Sa+1900)?Qb:Rb)[u++]);return h(f.Xa+q,3)},\"%m\":f=>h(f.Ua+1,2),\"%M\":f=>h(f.nb,2),\"%n\":()=>\"\\n\",\"%p\":f=>0<=f.Ta&&12>f.Ta?\"AM\":\"PM\",\"%S\":f=>h(f.ob,2),\"%t\":()=>\"\\t\",\"%u\":f=>f.Na||7,\"%U\":f=>h(Math.floor((f.Ra+\n7-f.Na)/7),2),\"%V\":f=>{var q=Math.floor((f.Ra+7-(f.Na+6)%7)/7);2>=(f.Na+371-f.Ra-2)%7&&q++;if(q)53==q&&(u=(f.Na+371-f.Ra)%7,4==u||3==u&&Y(f.Sa)||(q=1));else{q=52;var u=(f.Na+7-f.Ra-1)%7;(4==u||5==u&&Y(f.Sa%400-1))&&q++}return h(q,2)},\"%w\":f=>f.Na,\"%W\":f=>h(Math.floor((f.Ra+7-(f.Na+6)%7)/7),2),\"%y\":f=>(f.Sa+1900).toString().substring(2),\"%Y\":f=>f.Sa+1900,\"%z\":f=>{f=f.mb;var q=0<=f;f=Math.abs(f)/60;return(q?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":f=>f.pb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\n\"\\x00\\x00\");for(y in w)c.includes(y)&&(c=c.replace(new RegExp(y,\"g\"),w[y](d)));c=c.replace(/\\0\\0/g,\"%\");y=Sb(c);if(y.length>b)return 0;Tb(y,a);return y.length-1}S.Wa();\nvar Vb=[Oa,Pa,bb,db,eb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb,yb,zb,Gb,Kb,Lb,Mb,Nb,Pb],Zb={b:function(a,b,c){a>>>=0;(new Za(a)).Wa(b>>>0,c>>>0);$a=a;ab++;throw $a;},L:function(a){Wb(a>>>0,!A,1,!ka,131072,!1);S.ab()},j:function(a){a>>>=0;D?postMessage({cmd:\"cleanupThread\",thread:a}):S.Za(S.Ma[a])},H:cb,h:db,S:eb,D:ib,F:jb,T:kb,Q:lb,J:mb,P:nb,n:ob,E:pb,B:qb,R:rb,C:sb,p:()=>1,z:function(a,b){a>>>=0;a==b>>>0?setTimeout(()=>X()):D?postMessage({targetThread:a,cmd:\"checkMailbox\"}):(a=S.Ma[a])&&a.postMessage({cmd:\"checkMailbox\"})},\nI:function(a,b,c,d){b>>>=0;vb.length=c;d=d>>>0>>>3;for(var g=0;g<c;g++)vb[g]=ea()[d+g>>>0];a=0>a?Ea[-a-1]:Vb[a];S.ib=b;b=a.apply(null,vb);S.ib=0;return b},K:tb,o:function(a){B&&S.Ma[a>>>0].ref()},s:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);p()[c>>>2>>>0]=a.getUTCSeconds();p()[c+4>>>2>>>0]=a.getUTCMinutes();p()[c+8>>>2>>>0]=a.getUTCHours();p()[c+12>>>2>>>0]=a.getUTCDate();p()[c+16>>>2>>>0]=a.getUTCMonth();p()[c+20>>>2>>>0]=a.getUTCFullYear()-1900;\np()[c+24>>>2>>>0]=a.getUTCDay();a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;p()[c+28>>>2>>>0]=a},t:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);p()[c>>>2>>>0]=a.getSeconds();p()[c+4>>>2>>>0]=a.getMinutes();p()[c+8>>>2>>>0]=a.getHours();p()[c+12>>>2>>>0]=a.getDate();p()[c+16>>>2>>>0]=a.getMonth();p()[c+20>>>2>>>0]=a.getFullYear()-1900;p()[c+24>>>2>>>0]=a.getDay();b=(Y(a.getFullYear())?wb:xb)[a.getMonth()]+a.getDate()-1|0;p()[c+28>>>\n2>>>0]=b;p()[c+36>>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();var d=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();a=(b!=d&&a.getTimezoneOffset()==Math.min(d,b))|0;p()[c+32>>>2>>>0]=a},u:function(a){a>>>=0;var b=new Date(p()[a+20>>>2>>>0]+1900,p()[a+16>>>2>>>0],p()[a+12>>>2>>>0],p()[a+8>>>2>>>0],p()[a+4>>>2>>>0],p()[a>>>2>>>0],0),c=p()[a+32>>>2>>>0],d=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),h=(new Date(b.getFullYear(),\n0,1)).getTimezoneOffset(),k=Math.min(h,g);0>c?p()[a+32>>>2>>>0]=Number(g!=h&&k==d):0<c!=(k==d)&&(g=Math.max(h,g),b.setTime(b.getTime()+6E4*((0<c?k:g)-d)));p()[a+24>>>2>>>0]=b.getDay();c=(Y(b.getFullYear())?wb:xb)[b.getMonth()]+b.getDate()-1|0;p()[a+28>>>2>>>0]=c;p()[a>>>2>>>0]=b.getSeconds();p()[a+4>>>2>>>0]=b.getMinutes();p()[a+8>>>2>>>0]=b.getHours();p()[a+12>>>2>>>0]=b.getDate();p()[a+16>>>2>>>0]=b.getMonth();p()[a+20>>>2>>>0]=b.getYear();a=b.getTime();isNaN(a)?(p()[Xb()>>>2>>>0]=61,a=-1):a/=1E3;\nreturn Yb((P=a,1<=+Math.abs(P)?0<P?+Math.floor(P/4294967296)>>>0:~~+Math.ceil((P-+(~~P>>>0))/4294967296)>>>0:0)),a>>>0},q:yb,r:zb,y:function(a,b,c){function d(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:\"GMT\"}a>>>=0;b>>>=0;c>>>=0;var g=(new Date).getFullYear(),h=new Date(g,0,1),k=new Date(g,6,1);g=h.getTimezoneOffset();var t=k.getTimezoneOffset(),C=Math.max(g,t);r()[a>>>2>>>0]=60*C;p()[b>>>2>>>0]=Number(g!=t);a=d(h);b=d(k);a=Bb(a);b=Bb(b);t<g?(r()[c>>>2>>>0]=a,r()[c+4>>>2>>>0]=b):\n(r()[c>>>2>>>0]=b,r()[c+4>>>2>>>0]=a)},c:()=>{ra(\"\")},O:function(a,b,c){a>>>=0;b>>>=0;c>>>=0;Cb.length=0;for(var d;d=n()[b++>>>0];){var g=105!=d;g&=112!=d;c+=g&&c%8?4:0;Cb.push(112==d?r()[c>>>2>>>0]:105==d?p()[c>>>2>>>0]:ea()[c>>>3>>>0]);c+=g?8:4}return Ea[a].apply(null,Cb)},k:()=>{},i:()=>Date.now(),U:()=>{T+=1;throw\"unwind\";},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:()=>B?require(\"os\").cpus().length:navigator.hardwareConcurrency,x:function(a){a>>>=0;var b=\nn().length;if(a<=b||4294901760<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var g=Math;d=Math.max(a,d);a:{g=(g.min.call(g,4294901760,d+(65536-d%65536)%65536)-e.buffer.byteLength+65535)/65536;try{e.grow(g);m();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},M:Gb,N:Kb,G:Qa,g:Lb,m:Mb,v:Nb,l:Pb,a:e||v.wasmMemory,w:Ub,d:function(a,b,c,d){return Ub(a>>>0,b>>>0,c>>>0,d>>>0)}},Z=function(){function a(c,d){Z=c.exports;Z=$b();S.bb.push(Z.za);Xa=Z.Aa;va.unshift(Z.V);\nsa=d;ya();return Z}var b={a:Zb};M++;if(v.instantiateWasm)try{return v.instantiateWasm(b,a)}catch(c){J(`Module.instantiateWasm callback failed with error: ${c}`),x(c)}Da(b,function(c){a(c.instance,c.module)}).catch(x);return{}}();v._OrtInit=(a,b)=>(v._OrtInit=Z.W)(a,b);v._OrtGetLastError=(a,b)=>(v._OrtGetLastError=Z.X)(a,b);v._OrtCreateSessionOptions=(a,b,c,d,g,h,k,t,C,w)=>(v._OrtCreateSessionOptions=Z.Y)(a,b,c,d,g,h,k,t,C,w);\nv._OrtAppendExecutionProvider=(a,b)=>(v._OrtAppendExecutionProvider=Z.Z)(a,b);v._OrtAddFreeDimensionOverride=(a,b,c)=>(v._OrtAddFreeDimensionOverride=Z._)(a,b,c);v._OrtAddSessionConfigEntry=(a,b,c)=>(v._OrtAddSessionConfigEntry=Z.$)(a,b,c);v._OrtReleaseSessionOptions=a=>(v._OrtReleaseSessionOptions=Z.aa)(a);v._OrtCreateSession=(a,b,c)=>(v._OrtCreateSession=Z.ba)(a,b,c);v._OrtReleaseSession=a=>(v._OrtReleaseSession=Z.ca)(a);v._OrtGetInputOutputCount=(a,b,c)=>(v._OrtGetInputOutputCount=Z.da)(a,b,c);\nv._OrtGetInputName=(a,b)=>(v._OrtGetInputName=Z.ea)(a,b);v._OrtGetOutputName=(a,b)=>(v._OrtGetOutputName=Z.fa)(a,b);v._OrtFree=a=>(v._OrtFree=Z.ga)(a);v._OrtCreateTensor=(a,b,c,d,g,h)=>(v._OrtCreateTensor=Z.ha)(a,b,c,d,g,h);v._OrtGetTensorData=(a,b,c,d,g)=>(v._OrtGetTensorData=Z.ia)(a,b,c,d,g);v._OrtReleaseTensor=a=>(v._OrtReleaseTensor=Z.ja)(a);v._OrtCreateRunOptions=(a,b,c,d)=>(v._OrtCreateRunOptions=Z.ka)(a,b,c,d);v._OrtAddRunConfigEntry=(a,b,c)=>(v._OrtAddRunConfigEntry=Z.la)(a,b,c);\nv._OrtReleaseRunOptions=a=>(v._OrtReleaseRunOptions=Z.ma)(a);v._OrtCreateBinding=a=>(v._OrtCreateBinding=Z.na)(a);v._OrtBindInput=(a,b,c)=>(v._OrtBindInput=Z.oa)(a,b,c);v._OrtBindOutput=(a,b,c,d)=>(v._OrtBindOutput=Z.pa)(a,b,c,d);v._OrtClearBoundOutputs=a=>(v._OrtClearBoundOutputs=Z.qa)(a);v._OrtReleaseBinding=a=>(v._OrtReleaseBinding=Z.ra)(a);v._OrtRunWithBinding=(a,b,c,d,g)=>(v._OrtRunWithBinding=Z.sa)(a,b,c,d,g);v._OrtRun=(a,b,c,d,g,h,k,t)=>(v._OrtRun=Z.ta)(a,b,c,d,g,h,k,t);\nv._OrtEndProfiling=a=>(v._OrtEndProfiling=Z.ua)(a);var Xb=()=>(Xb=Z.va)(),W=v._pthread_self=()=>(W=v._pthread_self=Z.wa)(),Ab=v._malloc=a=>(Ab=v._malloc=Z.xa)(a);v._free=a=>(v._free=Z.ya)(a);v.__emscripten_tls_init=()=>(v.__emscripten_tls_init=Z.za)();var Wb=v.__emscripten_thread_init=(a,b,c,d,g,h)=>(Wb=v.__emscripten_thread_init=Z.Ba)(a,b,c,d,g,h);v.__emscripten_thread_crashed=()=>(v.__emscripten_thread_crashed=Z.Ca)();\nvar Na=(a,b,c,d)=>(Na=Z.Da)(a,b,c,d),Ta=a=>(Ta=Z.Ea)(a),Ya=v.__emscripten_thread_exit=a=>(Ya=v.__emscripten_thread_exit=Z.Fa)(a),ub=()=>(ub=Z.Ga)(),Yb=a=>(Yb=Z.Ha)(a),Va=(a,b)=>(Va=Z.Ia)(a,b),Ka=()=>(Ka=Z.Ja)(),U=a=>(U=Z.Ka)(a),Ma=a=>(Ma=Z.La)(a);function $b(){var a=Z;a=Object.assign({},a);var b=d=>()=>d()>>>0,c=d=>g=>d(g)>>>0;a.va=b(a.va);a.wa=b(a.wa);a.xa=c(a.xa);a.emscripten_main_runtime_thread_id=b(a.emscripten_main_runtime_thread_id);a.Ja=b(a.Ja);a.La=c(a.La);return a}v.wasmMemory=e;\nv.stackAlloc=Ma;v.stackSave=Ka;v.stackRestore=U;v.keepRuntimeAlive=()=>0<T;v.UTF8ToString=Q;v.stringToUTF8=hb;v.lengthBytesUTF8=fb;v.ExitStatus=R;v.PThread=S;var ac;N=function bc(){ac||cc();ac||(N=bc)};function cc(){if(!(0<M))if(D)ha(v),D||Ua(va),startWorker(v);else{if(v.preRun)for(\"function\"==typeof v.preRun&&(v.preRun=[v.preRun]);v.preRun.length;)ua.unshift(v.preRun.shift());Ua(ua);0<M||ac||(ac=!0,v.calledRun=!0,K||(D||Ua(va),ha(v),D||Ua(wa)))}}cc();\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasmThreaded;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasmThreaded);\n", "\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\"),vm=require(\"vm\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,\"utf8\"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as path from 'node:path';\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nlet ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule>;\n\nif (!BUILD_DEFS.DISABLE_TRAINING) {\n  ortWasmFactory = require('./binding/ort-training-wasm-simd.js');\n} else {\n  ortWasmFactory =\n      BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n}\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (numThreads: number): boolean => {\n  // WebAssembly threads are set to 1 (single thread).\n  if (numThreads === 1) {\n    return false;\n  }\n\n  // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n  if (typeof SharedArrayBuffer === 'undefined') {\n    if (typeof self !== 'undefined' && !self.crossOriginIsolated) {\n      // eslint-disable-next-line no-console\n      console.warn(\n          'env.wasm.numThreads is set to ' + numThreads +\n          ', but this will not work unless you enable crossOriginIsolated mode. ' +\n          'See https://web.dev/cross-origin-isolation-guide/ for more info.');\n    }\n    return false;\n  }\n\n  // onnxruntime-web does not support multi-threads in Node.js.\n  if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n    // eslint-disable-next-line no-console\n    console.warn(\n        'env.wasm.numThreads is set to ' + numThreads +\n        ', however, currently onnxruntime-web does not support multi-threads in Node.js. ' +\n        'Please consider using onnxruntime-node for performance critical scenarios.');\n  }\n\n  try {\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useSimd) {\n    if (!BUILD_DEFS.DISABLE_TRAINING) {\n      return 'ort-training-wasm-simd.wasm';\n    }\n    return useThreads ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-simd.wasm';\n  } else {\n    return useThreads ? 'ort-wasm-threaded.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = isMultiThreadSupported(numThreads);\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by esbuild plugin to load file content as string.\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      config.numThreads = numThreads;\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=${factory.toString()};`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.numThreads) {\n                let numThreads = webnnOptions.numThreads;\n                // Just ignore invalid webnnOptions.numThreads.\n                if (typeof numThreads != 'number' || !Number.isInteger(numThreads) || numThreads < 0) {\n                  numThreads = 0;\n                }\n                const keyDataOffset = allocWasmString('numThreads', allocs);\n                const valueDataOffset = allocWasmString(numThreads.toString(), allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'numThreads' - ${webnnOptions.numThreads}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            if (typeof ep !== 'string') {\n              const webgpuOptions = ep as InferenceSession.WebGpuExecutionProviderOption;\n              if (webgpuOptions?.preferredLayout) {\n                if (webgpuOptions.preferredLayout !== 'NCHW' && webgpuOptions.preferredLayout !== 'NHWC') {\n                  throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${webgpuOptions.preferredLayout}`);\n                }\n                const keyDataOffset = allocWasmString('preferredLayout', allocs);\n                const valueDataOffset = allocWasmString(webgpuOptions.preferredLayout, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'preferredLayout' - ${webgpuOptions.preferredLayout}.`);\n                }\n              }\n            }\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.freeDimensionOverrides) {\n      for (const [name, value] of Object.entries(sessionOptions.freeDimensionOverrides)) {\n        if (typeof name !== 'string') {\n          throw new Error(`free dimension override name must be a string: ${name}`);\n        }\n        if (typeof value !== 'number' || !Number.isInteger(value) || value < 0) {\n          throw new Error(`free dimension override value must be a non-negative integer: ${value}`);\n        }\n        const nameOffset = allocWasmString(name, allocs);\n        if (wasm._OrtAddFreeDimensionOverride(sessionOptionsHandle, nameOffset, value) !== 0) {\n          checkLastError(`Can't set a free dimension override: ${name} - ${value}.`);\n        }\n      }\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n/**\n * Check whether the given tensor type is supported by GPU buffer\n */\nexport const isGpuBufferSupportedType = (type: Tensor.Type): type is Tensor.GpuBufferDataTypes => type === 'float32' ||\n    type === 'int32' || type === 'int64' || type === 'bool' || type === 'float16' || type === 'uint32';\n\n/**\n * Map string data location to integer value\n */\nexport const dataLocationStringToEnum = (location: Tensor.DataLocation): number => {\n  switch (location) {\n    case 'none':\n      return 0;\n    case 'cpu':\n      return 1;\n    case 'cpu-pinned':\n      return 2;\n    case 'texture':\n      return 3;\n    case 'gpu-buffer':\n      return 4;\n    default:\n      throw new Error(`unsupported data location: ${location}`);\n  }\n};\n\n/**\n * Map integer data location to string value\n */\nexport const dataLocationEnumToString = (location: number): Tensor.DataLocation|undefined =>\n    (['none', 'cpu', 'cpu-pinned', 'texture', 'gpu-buffer'] as const)[location];\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as fs from 'fs';\nimport {readFile} from 'node:fs/promises';\n\n/**\n * Load a file into a Uint8Array.\n *\n * @param file - the file to load. Can be a URL/path, a Blob, an ArrayBuffer, or a Uint8Array.\n * @returns a Uint8Array containing the file data.\n */\nexport const loadFile = async(file: string|Blob|ArrayBufferLike|Uint8Array): Promise<Uint8Array> => {\n  if (typeof file === 'string') {\n    if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n      // load file into ArrayBuffer in Node.js\n      try {\n        return new Uint8Array(await readFile(file));\n      } catch (e) {\n        if (e.code === 'ERR_FS_FILE_TOO_LARGE') {\n          // file is too large, use fs.createReadStream instead\n          const stream = fs.createReadStream(file);\n          const chunks: Uint8Array[] = [];\n          for await (const chunk of stream) {\n            chunks.push(chunk);\n          }\n          return new Uint8Array(Buffer.concat(chunks));\n        }\n        throw e;\n      }\n    } else {\n      // load file into ArrayBuffer in browsers\n      const response = await fetch(file);\n      if (!response.ok) {\n        throw new Error(`failed to load external data file: ${file}`);\n      }\n      const contentLengthHeader = response.headers.get('Content-Length');\n      const fileSize = contentLengthHeader ? parseInt(contentLengthHeader, 10) : 0;\n      if (fileSize < 1073741824 /* 1GB */) {\n        // when Content-Length header is not set, we cannot determine the file size. We assume it is small enough to\n        // load into memory.\n        return new Uint8Array(await response.arrayBuffer());\n      } else {\n        // file is too large, use stream instead\n        if (!response.body) {\n          throw new Error(`failed to load external data file: ${file}, no response body.`);\n        }\n        const reader = response.body.getReader();\n\n        let buffer;\n        try {\n          // try to create ArrayBuffer directly\n          buffer = new ArrayBuffer(fileSize);\n        } catch (e) {\n          if (e instanceof RangeError) {\n            // use WebAssembly Memory to allocate larger ArrayBuffer\n            const pages = Math.ceil(fileSize / 65536);\n            buffer = new WebAssembly.Memory({initial: pages, maximum: pages}).buffer;\n          } else {\n            throw e;\n          }\n        }\n\n        let offset = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          const {done, value} = await reader.read();\n          if (done) {\n            break;\n          }\n          const chunkSize = value.byteLength;\n          const chunk = new Uint8Array(buffer, offset, chunkSize);\n          chunk.set(value);\n          offset += chunkSize;\n        }\n        return new Uint8Array(buffer, 0, fileSize);\n      }\n    }\n\n  } else if (file instanceof Blob) {\n    return new Uint8Array(await file.arrayBuffer());\n  } else if (file instanceof Uint8Array) {\n    return file;\n  } else {\n    return new Uint8Array(file);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {dataLocationStringToEnum, getTensorElementSize, isGpuBufferSupportedType, logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\nimport {loadFile} from './wasm-utils-load-file';\n\n// #region Initializations\n\n/**\n * There are 4 different \"initialization\" steps for ORT. They happen in different places and different time.\n *\n * 1. JavaScript initialization for onnxruntime-common and onnxruntime-web.\n *    This is the first initialization step. In this step, onnxruntime-web calls onnxruntime-common's registerBackend()\n * function multiple times to register all the available backends. The backend registration is very fast. It only\n * registers the backend name with the uninitialized backend object. No heavy initialization is done in this step.\n *    Refer to web/lib/index.ts for the backend registration.\n *\n * 2. WebAssembly artifact initialization.\n *    This happens when any registered wasm backend is used for the first time (ie. `ort.InferenceSession.create()` or\n * `ort.TrainingSession.create()` is called). In this step, onnxruntime-web does the followings:\n *     - create a proxy worker and make sure the proxy worker is ready to receive messages, if proxy is enabled.\n *     - perform feature detection, locate correct WebAssembly artifact path and call the Emscripten generated\n * JavaScript code to initialize the WebAssembly runtime.\n *         - if proxy is enabled, this step happens in the proxy worker using message 'init-wasm'.\n *         - downloading the 'ort-wasm{...}.wasm' file is done in this step.\n *         - if multi-thread is enabled, one or more webworker will be created to initialize the PThread threadpool.\n *\n * 3. ORT environment initialization.\n *    This happens after step 2. In this step, onnxruntime-web performs ONNX Runtime environment initialization.\n * Function `_OrtInit()` is called in this step.\n *     - if proxy is enabled, this step happens in the proxy worker using message 'init-ort'.\n *     - logging level (ort.env.logLevel) and thread number (ort.env.wasm.numThreads) are set in this step.\n *\n * 4. Session initialization.\n *    This happens when `ort.InferenceSession.create()` or `ort.TrainingSession.create()` is called. Unlike the first 3\n * steps (they only called once), this step will be done for each session. In this step, onnxruntime-web does the\n * followings:\n *    If the parameter is a URL:\n *    - download the model data from the URL.\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - dereference the model buffer. This step allows the original ArrayBuffer to be garbage collected.\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *    If the parameter is a Uint8Array object:\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *\n */\n\n/**\n * initialize ORT environment.\n *\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n};\n\n/**\n * perform EP specific initialization.\n *\n * @param env\n * @param epName\n */\nexport const initEp = async(env: Env, epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WEBGPU && epName === 'webgpu') {\n    // perform WebGPU availability check\n    if (typeof navigator === 'undefined' || !navigator.gpu) {\n      throw new Error('WebGPU is not supported in current environment');\n    }\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error(\n          'Failed to get GPU adapter. You may need to enable flag \"--enable-unsafe-webgpu\" if you are using Chrome.');\n    }\n\n    if (!env.wasm.simd) {\n      throw new Error(\n          'Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP');\n    }\n\n    // init JSEP if available\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n    await initJsep(getInstance(), env, adapter);\n  }\n};\n\n// #endregion Initializations\n\n/**\n * valid data locations for input/output tensors.\n */\ntype SupportedTensorDataLocationForInputOutput = 'cpu'|'cpu-pinned'|'gpu-buffer';\n\ntype IOBindingState = {\n  /**\n   * the handle of IO binding.\n   */\n  readonly handle: number;\n\n  /**\n   * the preferred location for each output tensor.\n   *\n   * value is one of 'cpu', 'cpu-pinned', 'gpu-buffer'.\n   */\n  readonly outputPreferredLocations: readonly SupportedTensorDataLocationForInputOutput[];\n\n  /**\n   * enum value of the preferred location for each output tensor.\n   */\n  readonly outputPreferredLocationsEncoded: readonly number[];\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded; bindingState\n */\ntype SessionMetadata = [\n  inferenceSessionId: number, inputNamesUTF8Encoded: number[], outputNamesUTF8Encoded: number[],\n  bindingState: IOBindingState|null\n];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * allocate the memory and memcpy the external buffer.\n *\n * @param model - the external buffer containing the model data. Must not be the same buffer as the WASM heap.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const copyFromExternalBuffer = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session from a model data buffer.\n *\n * @param modelData - either a Uint8Array object representing the model data, or a 2-elements tuple containing the\n *     pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSession = async(\n    modelData: Uint8Array|SerializableInternalBuffer,\n    options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  let modelDataOffset: number, modelDataLength: number;\n  const wasm = getInstance();\n\n  if (Array.isArray(modelData)) {\n    // if model data is an array, it must be a 2-elements tuple containing the pointer and size of the model data\n    [modelDataOffset, modelDataLength] = modelData;\n  } else if (modelData.buffer === wasm.HEAPU8.buffer) {\n    // if model data uses the same buffer as the WASM heap, we don't need to copy it.\n    [modelDataOffset, modelDataLength] = [modelData.byteOffset, modelData.byteLength];\n  } else {\n    // otherwise, copy the model data to the WASM heap.\n    [modelDataOffset, modelDataLength] = copyFromExternalBuffer(modelData);\n  }\n\n  let sessionHandle = 0;\n  let sessionOptionsHandle = 0;\n  let ioBindingHandle = 0;\n  let allocs: number[] = [];\n  const inputNamesUTF8Encoded = [];\n  const outputNamesUTF8Encoded = [];\n\n  try {\n    [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n    if (options?.externalData && wasm.mountExternalData) {\n      const loadingPromises = [];\n      for (const file of options.externalData) {\n        const path = typeof file === 'string' ? file : file.path;\n        loadingPromises.push(loadFile(typeof file === 'string' ? file : file.data).then(data => {\n          wasm.mountExternalData!(path, data);\n        }));\n      }\n\n      // wait for all external data files to be loaded\n      await Promise.all(loadingPromises);\n    }\n\n    sessionHandle = wasm._OrtCreateSession(modelDataOffset, modelDataLength, sessionOptionsHandle);\n    if (sessionHandle === 0) {\n      checkLastError('Can\\'t create a session.');\n    }\n\n    const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n    const inputNames = [];\n    const outputNames = [];\n    const outputPreferredLocations: SupportedTensorDataLocationForInputOutput[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const name = wasm._OrtGetInputName(sessionHandle, i);\n      if (name === 0) {\n        checkLastError('Can\\'t get an input name.');\n      }\n      inputNamesUTF8Encoded.push(name);\n      inputNames.push(wasm.UTF8ToString(name));\n    }\n    for (let i = 0; i < outputCount; i++) {\n      const name = wasm._OrtGetOutputName(sessionHandle, i);\n      if (name === 0) {\n        checkLastError('Can\\'t get an output name.');\n      }\n      outputNamesUTF8Encoded.push(name);\n      const nameString = wasm.UTF8ToString(name);\n      outputNames.push(nameString);\n\n      if (!BUILD_DEFS.DISABLE_WEBGPU) {\n        const location = typeof options?.preferredOutputLocation === 'string' ?\n            options.preferredOutputLocation :\n            options?.preferredOutputLocation?.[nameString] ?? 'cpu';\n        if (location !== 'cpu' && location !== 'cpu-pinned' && location !== 'gpu-buffer') {\n          throw new Error(`Not supported preferred output location: ${location}.`);\n        }\n        outputPreferredLocations.push(location);\n      }\n    }\n\n    // use IO binding only when at least one output is preffered to be on GPU.\n    let bindingState: IOBindingState|null = null;\n    if (!BUILD_DEFS.DISABLE_WEBGPU && outputPreferredLocations.some(l => l === 'gpu-buffer')) {\n      ioBindingHandle = wasm._OrtCreateBinding(sessionHandle);\n      if (ioBindingHandle === 0) {\n        checkLastError('Can\\'t create IO binding.');\n      }\n\n      bindingState = {\n        handle: ioBindingHandle,\n        outputPreferredLocations,\n        outputPreferredLocationsEncoded: outputPreferredLocations.map(l => dataLocationStringToEnum(l)),\n      };\n    }\n\n    activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, bindingState]);\n    return [sessionHandle, inputNames, outputNames];\n  } catch (e) {\n    inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n    outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n    if (ioBindingHandle !== 0) {\n      wasm._OrtReleaseBinding(ioBindingHandle);\n    }\n\n    if (sessionHandle !== 0) {\n      wasm._OrtReleaseSession(sessionHandle);\n    }\n    throw e;\n  } finally {\n    wasm._free(modelDataOffset);\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n\n    // unmount external data if necessary\n    wasm.unmountExternalData?.();\n  }\n};\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  if (ioBindingState) {\n    wasm._OrtReleaseBinding(ioBindingState.handle);\n  }\n\n  wasm.jsepUnregisterBuffers?.(sessionId);\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\nexport const prepareInputOutputTensor =\n    (tensor: TensorMetadata|null, tensorHandles: number[], allocs: number[], sessionId: number, index: number):\n        void => {\n          if (!tensor) {\n            tensorHandles.push(0);\n            return;\n          }\n\n          const wasm = getInstance();\n\n          const dataType = tensor[0];\n          const dims = tensor[1];\n          const location = tensor[3];\n\n          let rawData: number;\n          let dataByteLength: number;\n\n          if (dataType === 'string' && location === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n\n          if (location === 'gpu-buffer') {\n            const gpuBuffer = tensor[2].gpuBuffer as GPUBuffer;\n            const elementSizeInBytes = getTensorElementSize(tensorDataTypeStringToEnum(dataType))!;\n            dataByteLength = dims.reduce((a, b) => a * b, 1) * elementSizeInBytes;\n            rawData = wasm.jsepRegisterBuffer(sessionId, index, gpuBuffer, dataByteLength);\n          } else {\n            const data = tensor[2];\n\n            if (Array.isArray(data)) {\n              // string tensor\n              dataByteLength = 4 * data.length;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              let dataIndex = rawData / 4;\n              for (let i = 0; i < data.length; i++) {\n                if (typeof data[i] !== 'string') {\n                  throw new TypeError(`tensor data at index ${i} is not a string`);\n                }\n                wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], allocs);\n              }\n            } else {\n              dataByteLength = data.byteLength;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n            }\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), rawData, dataByteLength, dimsOffset, dims.length,\n                dataLocationStringToEnum(location));\n            if (tensor === 0) {\n              checkLastError(`Can't create tensor for input/output. session=${sessionId}, index=${index}.`);\n            }\n            tensorHandles.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        };\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n  const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n  const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n  const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n  const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      prepareInputOutputTensor(inputTensors[i], inputTensorHandles, inputOutputAllocs, sessionId, inputIndices[i]);\n    }\n\n    // create output tensors\n    for (let i = 0; i < outputCount; i++) {\n      prepareInputOutputTensor(\n          outputTensors[i], outputTensorHandles, inputOutputAllocs, sessionId, inputCount + outputIndices[i]);\n    }\n\n    let inputValuesIndex = inputValuesOffset / 4;\n    let inputNamesIndex = inputNamesOffset / 4;\n    let outputValuesIndex = outputValuesOffset / 4;\n    let outputNamesIndex = outputNamesOffset / 4;\n    for (let i = 0; i < inputCount; i++) {\n      wasm.HEAPU32[inputValuesIndex++] = inputTensorHandles[i];\n      wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n    }\n    for (let i = 0; i < outputCount; i++) {\n      wasm.HEAPU32[outputValuesIndex++] = outputTensorHandles[i];\n      wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n    }\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      const {handle, outputPreferredLocations, outputPreferredLocationsEncoded} = ioBindingState;\n\n      if (inputNamesUTF8Encoded.length !== inputCount) {\n        throw new Error(`input count from feeds (${\n            inputCount}) is expected to be always equal to model's input count (${inputNamesUTF8Encoded.length}).`);\n      }\n\n      // process inputs\n      for (let i = 0; i < inputCount; i++) {\n        const index = inputIndices[i];\n        const errorCode = await wasm._OrtBindInput(handle, inputNamesUTF8Encoded[index], inputTensorHandles[i]);\n        if (errorCode !== 0) {\n          checkLastError(`Can't bind input[${i}] for session=${sessionId}.`);\n        }\n      }\n\n      // process pre-allocated outputs\n      for (let i = 0; i < outputCount; i++) {\n        const index = outputIndices[i];\n        const location = outputTensors[i]?.[3];  // undefined means output is not pre-allocated.\n\n        if (location) {\n          // output is pre-allocated. bind the tensor.\n          const errorCode = wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], outputTensorHandles[i], 0);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind pre-allocated output[${i}] for session=${sessionId}.`);\n          }\n        } else {\n          // output is not pre-allocated. reset preferred location.\n          const errorCode =\n              wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], 0, outputPreferredLocationsEncoded[index]);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind output[${i}] to ${outputPreferredLocations[i]} for session=${sessionId}.`);\n          }\n        }\n      }\n    }\n\n    let errorCode: number;\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      errorCode = await wasm._OrtRunWithBinding(\n          sessionHandle, ioBindingState.handle, outputCount, outputValuesOffset, runOptionsHandle);\n    } else {\n      errorCode = await wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n    }\n\n    if (errorCode !== 0) {\n      checkLastError('failed to call OrtRun().');\n    }\n\n    const output: TensorMetadata[] = [];\n\n    for (let i = 0; i < outputCount; i++) {\n      const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n      if (tensor === outputTensorHandles[i]) {\n        // output tensor is pre-allocated. no need to copy data.\n        output.push(outputTensors[i]!);\n        continue;\n      }\n\n      const beforeGetTensorDataStack = wasm.stackSave();\n      // stack allocate 4 pointer value\n      const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n      let keepOutputTensor = false;\n      let type: Tensor.Type|undefined, dataOffset = 0;\n      try {\n        const errorCode = wasm._OrtGetTensorData(\n            tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n        if (errorCode !== 0) {\n          checkLastError(`Can't access output tensor data on index ${i}.`);\n        }\n        let tensorDataIndex = tensorDataOffset / 4;\n        const dataType = wasm.HEAPU32[tensorDataIndex++];\n        dataOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n        const dims = [];\n        for (let i = 0; i < dimsLength; i++) {\n          dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n        }\n        wasm._OrtFree(dimsOffset);\n\n        const size = dims.reduce((a, b) => a * b, 1);\n        type = tensorDataTypeEnumToString(dataType);\n\n        const preferredLocation = ioBindingState?.outputPreferredLocations[outputIndices[i]];\n\n        if (type === 'string') {\n          if (preferredLocation === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n          const stringData: string[] = [];\n          let dataIndex = dataOffset / 4;\n          for (let i = 0; i < size; i++) {\n            const offset = wasm.HEAPU32[dataIndex++];\n            const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n            stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n          }\n          output.push([type, dims, stringData, 'cpu']);\n        } else {\n          // If a certain output's preferred location is GPU but the tensor is empty, we still need to create a CPU\n          // tensor for it. There is no mapping GPU buffer for an empty tensor.\n          if (preferredLocation === 'gpu-buffer' && size > 0) {\n            const gpuBuffer = wasm.jsepGetBuffer(dataOffset);\n            const elementSize = getTensorElementSize(dataType);\n            if (elementSize === undefined || !isGpuBufferSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            output.push([\n              type, dims, {\n                gpuBuffer,\n                download: wasm.jsepCreateDownloader(gpuBuffer, size * elementSize, type),\n                dispose: () => {\n                  wasm._OrtReleaseTensor(tensor);\n                }\n              },\n              'gpu-buffer'\n            ]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data, 'cpu']);\n          }\n        }\n      } finally {\n        wasm.stackRestore(beforeGetTensorDataStack);\n        if (type === 'string' && dataOffset) {\n          wasm._free(dataOffset);\n        }\n        if (!keepOutputTensor) {\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n    }\n\n    if (ioBindingState) {\n      wasm._OrtClearBoundOutputs(ioBindingState.handle);\n    }\n\n    return output;\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensorMetadata[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && 'buffer' in data) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n", "/*!\n * ONNX Runtime Web v1.17.1\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\"use strict\";(()=>{var St=Object.defineProperty;var Jr=Object.getOwnPropertyDescriptor;var Xr=Object.getOwnPropertyNames;var Qr=Object.prototype.hasOwnProperty;var Et=(u,p)=>()=>(u&&(p=u(u=0)),p);var et=(u,p)=>()=>(p||u((p={exports:{}}).exports,p),p.exports),Tt=(u,p)=>{for(var a in p)St(u,a,{get:p[a],enumerable:!0})},Zr=(u,p,a,h)=>{if(p&&typeof p==\"object\"||typeof p==\"function\")for(let l of Xr(p))!Qr.call(u,l)&&l!==a&&St(u,l,{get:()=>p[l],enumerable:!(h=Jr(p,l))||h.enumerable});return u};var tt=u=>Zr(St({},\"__esModule\",{value:!0}),u);var Mt={};Tt(Mt,{createReadStream:()=>dr,readFile:()=>Kr,readFileSync:()=>en});var Kr,en,dr,At=Et(()=>{Kr=void 0,en=void 0,dr=void 0});var Ct={};Tt(Ct,{join:()=>tn});var tn,Dt=Et(()=>{tn=void 0});var gr=et((mr,xt)=>{\"use strict\";var pr=(()=>{var u=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(u=u||__filename),function(p={}){var a=p,h,l;a.ready=new Promise((t,o)=>{h=t,l=o});var b=Object.assign({},a),g=\"./this.program\",s=typeof window==\"object\",A=typeof importScripts==\"function\",D=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",I=\"\",L,F,R;if(D){var W=(At(),tt(Mt)),B=(Dt(),tt(Ct));I=A?B.dirname(I)+\"/\":__dirname+\"/\",L=(t,o)=>(t=ye(t)?new URL(t):B.normalize(t),W.readFileSync(t,o?void 0:\"utf8\")),R=t=>(t=L(t,!0),t.buffer||(t=new Uint8Array(t)),t),F=(t,o,i,c=!0)=>{t=ye(t)?new URL(t):B.normalize(t),W.readFile(t,c?void 0:\"utf8\",(w,E)=>{w?i(w):o(c?E.buffer:E)})},!a.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),a.inspect=()=>\"[Emscripten Module object]\"}else(s||A)&&(A?I=self.location.href:typeof document<\"u\"&&document.currentScript&&(I=document.currentScript.src),u&&(I=u),I.indexOf(\"blob:\")!==0?I=I.substr(0,I.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):I=\"\",L=t=>{var o=new XMLHttpRequest;return o.open(\"GET\",t,!1),o.send(null),o.responseText},A&&(R=t=>{var o=new XMLHttpRequest;return o.open(\"GET\",t,!1),o.responseType=\"arraybuffer\",o.send(null),new Uint8Array(o.response)}),F=(t,o,i)=>{var c=new XMLHttpRequest;c.open(\"GET\",t,!0),c.responseType=\"arraybuffer\",c.onload=()=>{c.status==200||c.status==0&&c.response?o(c.response):i()},c.onerror=i,c.send(null)});var _=console.log.bind(console),x=console.error.bind(console);Object.assign(a,b),b=null,typeof WebAssembly!=\"object\"&&de(\"no native wasm support detected\");var N,he=!1,se,ae,S,z,ue;function Ue(){var t=N.buffer;a.HEAP8=se=new Int8Array(t),a.HEAP16=new Int16Array(t),a.HEAPU8=ae=new Uint8Array(t),a.HEAPU16=new Uint16Array(t),a.HEAP32=S=new Int32Array(t),a.HEAPU32=z=new Uint32Array(t),a.HEAPF32=new Float32Array(t),a.HEAPF64=ue=new Float64Array(t)}var Ie=[],ee=[],Y=[],ce=0,U=null,te=null;function de(t){throw t=\"Aborted(\"+t+\")\",x(t),he=!0,t=new WebAssembly.RuntimeError(t+\". Build with -sASSERTIONS for more info.\"),l(t),t}var ge=t=>t.startsWith(\"data:application/octet-stream;base64,\"),ye=t=>t.startsWith(\"file://\"),J;if(J=\"ort-training-wasm-simd.wasm\",!ge(J)){var fe=J;J=a.locateFile?a.locateFile(fe,I):I+fe}function be(t){if(R)return R(t);throw\"both async and sync fetching of the wasm failed\"}function Me(t){if(s||A){if(typeof fetch==\"function\"&&!ye(t))return fetch(t,{credentials:\"same-origin\"}).then(o=>{if(!o.ok)throw\"failed to load wasm binary file at '\"+t+\"'\";return o.arrayBuffer()}).catch(()=>be(t));if(F)return new Promise((o,i)=>{F(t,c=>o(new Uint8Array(c)),i)})}return Promise.resolve().then(()=>be(t))}function Ae(t,o,i){return Me(t).then(c=>WebAssembly.instantiate(c,o)).then(c=>c).then(i,c=>{x(`failed to asynchronously prepare wasm: ${c}`),de(c)})}function Fe(t,o){var i=J;return typeof WebAssembly.instantiateStreaming!=\"function\"||ge(i)||ye(i)||D||typeof fetch!=\"function\"?Ae(i,t,o):fetch(i,{credentials:\"same-origin\"}).then(c=>WebAssembly.instantiateStreaming(c,t).then(o,function(w){return x(`wasm streaming compile failed: ${w}`),x(\"falling back to ArrayBuffer instantiation\"),Ae(i,t,o)}))}var Se,pe={990416:(t,o,i,c)=>{if(typeof a>\"u\"||!a.Qa)return 1;if(t=Oe(t>>>0),t.startsWith(\"./\")&&(t=t.substring(2)),t=a.Qa.get(t),!t)return 2;if(o>>>=0,i>>>=0,o+i>t.byteLength)return 3;try{return ae.set(t.subarray(o,o+i),c>>>0>>>0),0}catch{return 4}}};function we(t){this.Ka=t-24,this.Pa=function(o){z[this.Ka+4>>>2>>>0]=o},this.Oa=function(o){z[this.Ka+8>>>2>>>0]=o},this.Ma=function(o,i){this.Na(),this.Pa(o),this.Oa(i)},this.Na=function(){z[this.Ka+16>>>2>>>0]=0}}var ve=0,re=0,K=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,Ce=(t,o,i)=>{o>>>=0;var c=o+i;for(i=o;t[i]&&!(i>=c);)++i;if(16<i-o&&t.buffer&&K)return K.decode(t.subarray(o,i));for(c=\"\";o<i;){var w=t[o++];if(w&128){var E=t[o++]&63;if((w&224)==192)c+=String.fromCharCode((w&31)<<6|E);else{var P=t[o++]&63;w=(w&240)==224?(w&15)<<12|E<<6|P:(w&7)<<18|E<<12|P<<6|t[o++]&63,65536>w?c+=String.fromCharCode(w):(w-=65536,c+=String.fromCharCode(55296|w>>10,56320|w&1023))}}else c+=String.fromCharCode(w)}return c},Oe=(t,o)=>(t>>>=0)?Ce(ae,t,o):\"\",_e=t=>{for(var o=0,i=0;i<t.length;++i){var c=t.charCodeAt(i);127>=c?o++:2047>=c?o+=2:55296<=c&&57343>=c?(o+=4,++i):o+=3}return o},We=(t,o,i,c)=>{if(i>>>=0,!(0<c))return 0;var w=i;c=i+c-1;for(var E=0;E<t.length;++E){var P=t.charCodeAt(E);if(55296<=P&&57343>=P){var X=t.charCodeAt(++E);P=65536+((P&1023)<<10)|X&1023}if(127>=P){if(i>=c)break;o[i++>>>0]=P}else{if(2047>=P){if(i+1>=c)break;o[i++>>>0]=192|P>>6}else{if(65535>=P){if(i+2>=c)break;o[i++>>>0]=224|P>>12}else{if(i+3>=c)break;o[i++>>>0]=240|P>>18,o[i++>>>0]=128|P>>12&63}o[i++>>>0]=128|P>>6&63}o[i++>>>0]=128|P&63}}return o[i>>>0]=0,i-w},Pe=t=>t%4===0&&(t%100!==0||t%400===0),je=[0,31,60,91,121,152,182,213,244,274,305,335],at=[0,31,59,90,120,151,181,212,243,273,304,334],De=t=>{var o=_e(t)+1,i=it(o);return i&&We(t,ae,i,o),i},Ne=[],Re={},He=()=>{if(!Ge){var t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:g||\"./this.program\"},o;for(o in Re)Re[o]===void 0?delete t[o]:t[o]=Re[o];var i=[];for(o in t)i.push(`${o}=${t[o]}`);Ge=i}return Ge},Ge,Be=[null,[],[]],qe=[31,29,31,30,31,30,31,31,30,31,30,31],Ve=[31,28,31,30,31,30,31,31,30,31,30,31];function $e(t){var o=Array(_e(t)+1);return We(t,o,0,o.length),o}function ot(t,o,i,c){function w(d,k,$){for(d=typeof d==\"number\"?d.toString():d||\"\";d.length<k;)d=$[0]+d;return d}function E(d,k){return w(d,k,\"0\")}function P(d,k){function $(Ke){return 0>Ke?-1:0<Ke?1:0}var Ee;return(Ee=$(d.getFullYear()-k.getFullYear()))===0&&(Ee=$(d.getMonth()-k.getMonth()))===0&&(Ee=$(d.getDate()-k.getDate())),Ee}function X(d){switch(d.getDay()){case 0:return new Date(d.getFullYear()-1,11,29);case 1:return d;case 2:return new Date(d.getFullYear(),0,3);case 3:return new Date(d.getFullYear(),0,2);case 4:return new Date(d.getFullYear(),0,1);case 5:return new Date(d.getFullYear()-1,11,31);case 6:return new Date(d.getFullYear()-1,11,30)}}function le(d){var k=d.Ga;for(d=new Date(new Date(d.Ha+1900,0,1).getTime());0<k;){var $=d.getMonth(),Ee=(Pe(d.getFullYear())?qe:Ve)[$];if(k>Ee-d.getDate())k-=Ee-d.getDate()+1,d.setDate(1),11>$?d.setMonth($+1):(d.setMonth(0),d.setFullYear(d.getFullYear()+1));else{d.setDate(d.getDate()+k);break}}return $=new Date(d.getFullYear()+1,0,4),k=X(new Date(d.getFullYear(),0,4)),$=X($),0>=P(k,d)?0>=P($,d)?d.getFullYear()+1:d.getFullYear():d.getFullYear()-1}t>>>=0,o>>>=0,i>>>=0,c>>>=0;var oe=z[c+40>>>2>>>0];c={Ta:S[c>>>2>>>0],Sa:S[c+4>>>2>>>0],Ia:S[c+8>>>2>>>0],La:S[c+12>>>2>>>0],Ja:S[c+16>>>2>>>0],Ha:S[c+20>>>2>>>0],Ba:S[c+24>>>2>>>0],Ga:S[c+28>>>2>>>0],Va:S[c+32>>>2>>>0],Ra:S[c+36>>>2>>>0],Ua:oe?Oe(oe):\"\"},i=Oe(i),oe={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var ie in oe)i=i.replace(new RegExp(ie,\"g\"),oe[ie]);var Qe=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),Ze=\"January February March April May June July August September October November December\".split(\" \");oe={\"%a\":d=>Qe[d.Ba].substring(0,3),\"%A\":d=>Qe[d.Ba],\"%b\":d=>Ze[d.Ja].substring(0,3),\"%B\":d=>Ze[d.Ja],\"%C\":d=>E((d.Ha+1900)/100|0,2),\"%d\":d=>E(d.La,2),\"%e\":d=>w(d.La,2,\" \"),\"%g\":d=>le(d).toString().substring(2),\"%G\":d=>le(d),\"%H\":d=>E(d.Ia,2),\"%I\":d=>(d=d.Ia,d==0?d=12:12<d&&(d-=12),E(d,2)),\"%j\":d=>{for(var k=0,$=0;$<=d.Ja-1;k+=(Pe(d.Ha+1900)?qe:Ve)[$++]);return E(d.La+k,3)},\"%m\":d=>E(d.Ja+1,2),\"%M\":d=>E(d.Sa,2),\"%n\":()=>`\n`,\"%p\":d=>0<=d.Ia&&12>d.Ia?\"AM\":\"PM\",\"%S\":d=>E(d.Ta,2),\"%t\":()=>\"\t\",\"%u\":d=>d.Ba||7,\"%U\":d=>E(Math.floor((d.Ga+7-d.Ba)/7),2),\"%V\":d=>{var k=Math.floor((d.Ga+7-(d.Ba+6)%7)/7);if(2>=(d.Ba+371-d.Ga-2)%7&&k++,k)k==53&&($=(d.Ba+371-d.Ga)%7,$==4||$==3&&Pe(d.Ha)||(k=1));else{k=52;var $=(d.Ba+7-d.Ga-1)%7;($==4||$==5&&Pe(d.Ha%400-1))&&k++}return E(k,2)},\"%w\":d=>d.Ba,\"%W\":d=>E(Math.floor((d.Ga+7-(d.Ba+6)%7)/7),2),\"%y\":d=>(d.Ha+1900).toString().substring(2),\"%Y\":d=>d.Ha+1900,\"%z\":d=>{d=d.Ra;var k=0<=d;return d=Math.abs(d)/60,(k?\"+\":\"-\")+(\"0000\"+(d/60*100+d%60)).slice(-4)},\"%Z\":d=>d.Ua,\"%%\":()=>\"%\"},i=i.replace(/%%/g,\"\\0\\0\");for(ie in oe)i.includes(ie)&&(i=i.replace(new RegExp(ie,\"g\"),oe[ie](c)));return i=i.replace(/\\0\\0/g,\"%\"),ie=$e(i),ie.length>o?0:(se.set(ie,t>>>0),ie.length-1)}var G={a:function(t,o,i){throw t>>>=0,new we(t).Ma(o>>>0,i>>>0),ve=t,re++,ve},e:function(){return 0},H:function(){},x:function(){},z:function(){},J:function(){return 0},F:function(){},A:function(){},E:function(){},g:function(){},y:function(){},v:function(){},G:function(){},w:function(){},k:()=>1,n:function(t,o,i){t=o+2097152>>>0<4194305-!!t?(t>>>0)+4294967296*o:NaN,i>>>=0,t=new Date(1e3*t),S[i>>>2>>>0]=t.getUTCSeconds(),S[i+4>>>2>>>0]=t.getUTCMinutes(),S[i+8>>>2>>>0]=t.getUTCHours(),S[i+12>>>2>>>0]=t.getUTCDate(),S[i+16>>>2>>>0]=t.getUTCMonth(),S[i+20>>>2>>>0]=t.getUTCFullYear()-1900,S[i+24>>>2>>>0]=t.getUTCDay(),S[i+28>>>2>>>0]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},o:function(t,o,i){t=o+2097152>>>0<4194305-!!t?(t>>>0)+4294967296*o:NaN,i>>>=0,t=new Date(1e3*t),S[i>>>2>>>0]=t.getSeconds(),S[i+4>>>2>>>0]=t.getMinutes(),S[i+8>>>2>>>0]=t.getHours(),S[i+12>>>2>>>0]=t.getDate(),S[i+16>>>2>>>0]=t.getMonth(),S[i+20>>>2>>>0]=t.getFullYear()-1900,S[i+24>>>2>>>0]=t.getDay(),S[i+28>>>2>>>0]=(Pe(t.getFullYear())?je:at)[t.getMonth()]+t.getDate()-1|0,S[i+36>>>2>>>0]=-(60*t.getTimezoneOffset()),o=new Date(t.getFullYear(),6,1).getTimezoneOffset();var c=new Date(t.getFullYear(),0,1).getTimezoneOffset();S[i+32>>>2>>>0]=(o!=c&&t.getTimezoneOffset()==Math.min(c,o))|0},p:function(t){t>>>=0;var o=new Date(S[t+20>>>2>>>0]+1900,S[t+16>>>2>>>0],S[t+12>>>2>>>0],S[t+8>>>2>>>0],S[t+4>>>2>>>0],S[t>>>2>>>0],0),i=S[t+32>>>2>>>0],c=o.getTimezoneOffset(),w=new Date(o.getFullYear(),6,1).getTimezoneOffset(),E=new Date(o.getFullYear(),0,1).getTimezoneOffset(),P=Math.min(E,w);return 0>i?S[t+32>>>2>>>0]=+(w!=E&&P==c):0<i!=(P==c)&&(w=Math.max(E,w),o.setTime(o.getTime()+6e4*((0<i?P:w)-c))),S[t+24>>>2>>>0]=o.getDay(),S[t+28>>>2>>>0]=(Pe(o.getFullYear())?je:at)[o.getMonth()]+o.getDate()-1|0,S[t>>>2>>>0]=o.getSeconds(),S[t+4>>>2>>>0]=o.getMinutes(),S[t+8>>>2>>>0]=o.getHours(),S[t+12>>>2>>>0]=o.getDate(),S[t+16>>>2>>>0]=o.getMonth(),S[t+20>>>2>>>0]=o.getYear(),t=o.getTime(),isNaN(t)?(S[ze()>>>2>>>0]=61,t=-1):t/=1e3,Je((Se=t,1<=+Math.abs(Se)?0<Se?+Math.floor(Se/4294967296)>>>0:~~+Math.ceil((Se-+(~~Se>>>0))/4294967296)>>>0:0)),t>>>0},l:function(){return-52},m:function(){},t:function(t,o,i){function c(le){return(le=le.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?le[1]:\"GMT\"}i>>>=0;var w=new Date().getFullYear(),E=new Date(w,0,1),P=new Date(w,6,1);w=E.getTimezoneOffset();var X=P.getTimezoneOffset();z[t>>>0>>>2>>>0]=60*Math.max(w,X),S[o>>>0>>>2>>>0]=+(w!=X),t=c(E),o=c(P),t=De(t),o=De(o),X<w?(z[i>>>2>>>0]=t,z[i+4>>>2>>>0]=o):(z[i>>>2>>>0]=o,z[i+4>>>2>>>0]=t)},d:()=>{de(\"\")},B:function(t,o,i){t>>>=0,o>>>=0,i>>>=0,Ne.length=0;for(var c;c=ae[o++>>>0];){var w=c!=105;w&=c!=112,i+=w&&i%8?4:0,Ne.push(c==112?z[i>>>2>>>0]:c==105?S[i>>>2>>>0]:ue[i>>>3>>>0]),i+=w?8:4}return pe[t].apply(null,Ne)},h:()=>Date.now(),u:function(){return 4294901760},b:()=>performance.now(),I:function(t,o,i){return o>>>=0,ae.copyWithin(t>>>0>>>0,o>>>0,o+(i>>>0)>>>0)},s:function(t){t>>>=0;var o=ae.length;if(4294901760<t)return!1;for(var i=1;4>=i;i*=2){var c=o*(1+.2/i);c=Math.min(c,t+100663296);var w=Math;c=Math.max(t,c);e:{w=(w.min.call(w,4294901760,c+(65536-c%65536)%65536)-N.buffer.byteLength+65535)/65536;try{N.grow(w),Ue();var E=1;break e}catch{}E=void 0}if(E)return!0}return!1},C:function(t,o){t>>>=0,o>>>=0;var i=0;return He().forEach((c,w)=>{var E=o+i;for(w=z[t+4*w>>>2>>>0]=E,E=0;E<c.length;++E)se[w++>>>0>>>0]=c.charCodeAt(E);se[w>>>0>>>0]=0,i+=c.length+1}),0},D:function(t,o){t>>>=0,o>>>=0;var i=He();z[t>>>2>>>0]=i.length;var c=0;return i.forEach(w=>c+=w.length+1),z[o>>>2>>>0]=c,0},f:()=>52,j:function(){return 52},q:function(){return 70},i:function(t,o,i,c){o>>>=0,i>>>=0,c>>>=0;for(var w=0,E=0;E<i;E++){var P=z[o>>>2>>>0],X=z[o+4>>>2>>>0];o+=8;for(var le=0;le<X;le++){var oe=ae[P+le>>>0],ie=Be[t];oe===0||oe===10?((t===1?_:x)(Ce(ie,0)),ie.length=0):ie.push(oe)}w+=X}return z[c>>>2>>>0]=w,0},r:ot,c:function(t,o,i,c){return ot(t>>>0,o>>>0,i>>>0,c>>>0)}},T=function(){function t(i){return T=i.exports,T=ut(),N=T.K,Ue(),ee.unshift(T.L),ce--,ce==0&&(U!==null&&(clearInterval(U),U=null),te&&(i=te,te=null,i())),T}var o={a:G};if(ce++,a.instantiateWasm)try{return a.instantiateWasm(o,t)}catch(i){x(`Module.instantiateWasm callback failed with error: ${i}`),l(i)}return Fe(o,function(i){t(i.instance)}).catch(l),{}}();a._OrtInit=(t,o)=>(a._OrtInit=T.M)(t,o),a._OrtGetLastError=(t,o)=>(a._OrtGetLastError=T.N)(t,o),a._OrtCreateSessionOptions=(t,o,i,c,w,E,P,X,le,oe)=>(a._OrtCreateSessionOptions=T.O)(t,o,i,c,w,E,P,X,le,oe),a._OrtAppendExecutionProvider=(t,o)=>(a._OrtAppendExecutionProvider=T.P)(t,o),a._OrtAddFreeDimensionOverride=(t,o,i)=>(a._OrtAddFreeDimensionOverride=T.Q)(t,o,i),a._OrtAddSessionConfigEntry=(t,o,i)=>(a._OrtAddSessionConfigEntry=T.R)(t,o,i),a._OrtReleaseSessionOptions=t=>(a._OrtReleaseSessionOptions=T.S)(t),a._OrtCreateSession=(t,o,i)=>(a._OrtCreateSession=T.T)(t,o,i),a._OrtReleaseSession=t=>(a._OrtReleaseSession=T.U)(t),a._OrtGetInputOutputCount=(t,o,i)=>(a._OrtGetInputOutputCount=T.V)(t,o,i),a._OrtGetInputName=(t,o)=>(a._OrtGetInputName=T.W)(t,o),a._OrtGetOutputName=(t,o)=>(a._OrtGetOutputName=T.X)(t,o),a._OrtFree=t=>(a._OrtFree=T.Y)(t),a._OrtCreateTensor=(t,o,i,c,w,E)=>(a._OrtCreateTensor=T.Z)(t,o,i,c,w,E),a._OrtGetTensorData=(t,o,i,c,w)=>(a._OrtGetTensorData=T._)(t,o,i,c,w),a._OrtReleaseTensor=t=>(a._OrtReleaseTensor=T.$)(t),a._OrtCreateRunOptions=(t,o,i,c)=>(a._OrtCreateRunOptions=T.aa)(t,o,i,c),a._OrtAddRunConfigEntry=(t,o,i)=>(a._OrtAddRunConfigEntry=T.ba)(t,o,i),a._OrtReleaseRunOptions=t=>(a._OrtReleaseRunOptions=T.ca)(t),a._OrtCreateBinding=t=>(a._OrtCreateBinding=T.da)(t),a._OrtBindInput=(t,o,i)=>(a._OrtBindInput=T.ea)(t,o,i),a._OrtBindOutput=(t,o,i,c)=>(a._OrtBindOutput=T.fa)(t,o,i,c),a._OrtClearBoundOutputs=t=>(a._OrtClearBoundOutputs=T.ga)(t),a._OrtReleaseBinding=t=>(a._OrtReleaseBinding=T.ha)(t),a._OrtRunWithBinding=(t,o,i,c,w)=>(a._OrtRunWithBinding=T.ia)(t,o,i,c,w),a._OrtRun=(t,o,i,c,w,E,P,X)=>(a._OrtRun=T.ja)(t,o,i,c,w,E,P,X),a._OrtEndProfiling=t=>(a._OrtEndProfiling=T.ka)(t),a._OrtTrainingLoadCheckpoint=(t,o)=>(a._OrtTrainingLoadCheckpoint=T.la)(t,o),a._OrtTrainingReleaseCheckpoint=t=>(a._OrtTrainingReleaseCheckpoint=T.ma)(t),a._OrtTrainingCreateSession=(t,o,i,c,w,E,P,X)=>(a._OrtTrainingCreateSession=T.na)(t,o,i,c,w,E,P,X),a._OrtTrainingLazyResetGrad=t=>(a._OrtTrainingLazyResetGrad=T.oa)(t),a._OrtTrainingRunTrainStep=(t,o,i,c,w,E)=>(a._OrtTrainingRunTrainStep=T.pa)(t,o,i,c,w,E),a._OrtTrainingOptimizerStep=(t,o)=>(a._OrtTrainingOptimizerStep=T.qa)(t,o),a._OrtTrainingEvalStep=(t,o,i,c,w,E)=>(a._OrtTrainingEvalStep=T.ra)(t,o,i,c,w,E),a._OrtTrainingGetParametersSize=(t,o,i)=>(a._OrtTrainingGetParametersSize=T.sa)(t,o,i),a._OrtTrainingCopyParametersToBuffer=(t,o,i,c)=>(a._OrtTrainingCopyParametersToBuffer=T.ta)(t,o,i,c),a._OrtTrainingCopyParametersFromBuffer=(t,o,i,c)=>(a._OrtTrainingCopyParametersFromBuffer=T.ua)(t,o,i,c),a._OrtTrainingGetModelInputOutputCount=(t,o,i,c)=>(a._OrtTrainingGetModelInputOutputCount=T.va)(t,o,i,c),a._OrtTrainingGetModelInputOutputName=(t,o,i,c)=>(a._OrtTrainingGetModelInputOutputName=T.wa)(t,o,i,c),a._OrtTrainingReleaseSession=t=>(a._OrtTrainingReleaseSession=T.xa)(t);var ze=()=>(ze=T.ya)(),it=a._malloc=t=>(it=a._malloc=T.za)(t);a._free=t=>(a._free=T.Aa)(t);var Je=t=>(Je=T.Ca)(t),st=()=>(st=T.Da)(),C=t=>(C=T.Ea)(t),Le=t=>(Le=T.Fa)(t);function ut(){var t=T;t=Object.assign({},t);var o=c=>()=>c()>>>0,i=c=>w=>c(w)>>>0;return t.ya=o(t.ya),t.za=i(t.za),t.Da=o(t.Da),t.Fa=i(t.Fa),t}a.stackAlloc=Le,a.stackSave=st,a.stackRestore=C,a.UTF8ToString=Oe,a.stringToUTF8=(t,o,i)=>We(t,ae,o,i),a.lengthBytesUTF8=_e;var xe;te=function t(){xe||Xe(),xe||(te=t)};function Xe(){if(!(0<ce)){if(a.preRun)for(typeof a.preRun==\"function\"&&(a.preRun=[a.preRun]);a.preRun.length;){var t=a.preRun.shift();Ie.unshift(t)}for(;0<Ie.length;)Ie.shift()(a);if(!(0<ce||xe||(xe=!0,a.calledRun=!0,he))){for(;0<ee.length;)ee.shift()(a);for(h(a);0<Y.length;)Y.shift()(a)}}}return Xe(),p.ready}})();typeof mr==\"object\"&&typeof xt==\"object\"?xt.exports=pr:typeof define==\"function\"&&define.amd&&define([],()=>pr)});var hr=et(()=>{});var yr=et(()=>{});var Or={};Tt(Or,{cpus:()=>rn});var rn,br=Et(()=>{rn=void 0});var _r=et((vr,Ft)=>{\"use strict\";var wr=(()=>{var u=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(u=u||__filename),function(p={}){function a(){return Y.buffer!=de.buffer&&be(),de}function h(){return Y.buffer!=de.buffer&&be(),ge}function l(){return Y.buffer!=de.buffer&&be(),ye}function b(){return Y.buffer!=de.buffer&&be(),J}function g(){return Y.buffer!=de.buffer&&be(),fe}var s=p,A,D;s.ready=new Promise((e,r)=>{A=e,D=r});var I=Object.assign({},s),L=\"./this.program\",F=(e,r)=>{throw r},R=typeof window==\"object\",W=typeof importScripts==\"function\",B=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",_=s.ENVIRONMENT_IS_PTHREAD||!1,x=\"\";function N(e){return s.locateFile?s.locateFile(e,x):x+e}var he,se,ae;if(B){var S=(At(),tt(Mt)),z=(Dt(),tt(Ct));x=W?z.dirname(x)+\"/\":__dirname+\"/\",he=(r,n)=>(r=Oe(r)?new URL(r):z.normalize(r),S.readFileSync(r,n?void 0:\"utf8\")),ae=r=>(r=he(r,!0),r.buffer||(r=new Uint8Array(r)),r),se=(r,n,f,y=!0)=>{r=Oe(r)?new URL(r):z.normalize(r),S.readFile(r,y?void 0:\"utf8\",(O,v)=>{O?f(O):n(y?v.buffer:v)})},!s.thisProgram&&1<process.argv.length&&(L=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),F=(r,n)=>{throw process.exitCode=r,n},s.inspect=()=>\"[Emscripten Module object]\";let e;try{e=hr()}catch(r){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),r}global.Worker=e.Worker}else(R||W)&&(W?x=self.location.href:typeof document<\"u\"&&document.currentScript&&(x=document.currentScript.src),typeof u<\"u\"&&u&&(x=u),x.indexOf(\"blob:\")!==0?x=x.substr(0,x.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):x=\"\",B||(he=e=>{var r=new XMLHttpRequest;return r.open(\"GET\",e,!1),r.send(null),r.responseText},W&&(ae=e=>{var r=new XMLHttpRequest;return r.open(\"GET\",e,!1),r.responseType=\"arraybuffer\",r.send(null),new Uint8Array(r.response)}),se=(e,r,n)=>{var f=new XMLHttpRequest;f.open(\"GET\",e,!0),f.responseType=\"arraybuffer\",f.onload=()=>{f.status==200||f.status==0&&f.response?r(f.response):n()},f.onerror=n,f.send(null)}));B&&typeof performance>\"u\"&&(global.performance=yr().performance);var ue=console.log.bind(console),Ue=console.error.bind(console);B&&(ue=(...e)=>S.writeSync(1,e.join(\" \")+`\n`),Ue=(...e)=>S.writeSync(2,e.join(\" \")+`\n`));var Ie=ue,ee=Ue;Object.assign(s,I),I=null,typeof WebAssembly!=\"object\"&&K(\"no native wasm support detected\");var Y,ce,U=!1,te,de,ge,ye,J,fe;function be(){var e=Y.buffer;s.HEAP8=de=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAPU8=ge=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAP32=ye=new Int32Array(e),s.HEAPU32=J=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=fe=new Float64Array(e)}var Me=16777216;if(_)Y=s.wasmMemory;else if(s.wasmMemory)Y=s.wasmMemory;else if(Y=new WebAssembly.Memory({initial:Me/65536,maximum:65536,shared:!0}),!(Y.buffer instanceof SharedArrayBuffer))throw ee(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),B&&ee(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");be(),Me=Y.buffer.byteLength;var Ae=[],Fe=[],Se=[],pe=0,we=null,ve=null;function re(){if(pe--,pe==0&&(we!==null&&(clearInterval(we),we=null),ve)){var e=ve;ve=null,e()}}function K(e){throw e=\"Aborted(\"+e+\")\",ee(e),U=!0,te=1,e=new WebAssembly.RuntimeError(e+\". Build with -sASSERTIONS for more info.\"),D(e),e}var Ce=e=>e.startsWith(\"data:application/octet-stream;base64,\"),Oe=e=>e.startsWith(\"file://\"),_e;_e=\"ort-wasm-threaded.wasm\",Ce(_e)||(_e=N(_e));function We(e){if(ae)return ae(e);throw\"both async and sync fetching of the wasm failed\"}function Pe(e){if(R||W){if(typeof fetch==\"function\"&&!Oe(e))return fetch(e,{credentials:\"same-origin\"}).then(r=>{if(!r.ok)throw\"failed to load wasm binary file at '\"+e+\"'\";return r.arrayBuffer()}).catch(()=>We(e));if(se)return new Promise((r,n)=>{se(e,f=>r(new Uint8Array(f)),n)})}return Promise.resolve().then(()=>We(e))}function je(e,r,n){return Pe(e).then(f=>WebAssembly.instantiate(f,r)).then(f=>f).then(n,f=>{ee(`failed to asynchronously prepare wasm: ${f}`),K(f)})}function at(e,r){var n=_e;return typeof WebAssembly.instantiateStreaming!=\"function\"||Ce(n)||Oe(n)||B||typeof fetch!=\"function\"?je(n,e,r):fetch(n,{credentials:\"same-origin\"}).then(f=>WebAssembly.instantiateStreaming(f,e).then(r,function(y){return ee(`wasm streaming compile failed: ${y}`),ee(\"falling back to ArrayBuffer instantiation\"),je(n,e,r)}))}var De,Ne={921276:(e,r,n,f)=>{if(typeof s>\"u\"||!s.cb)return 1;if(e=$e(e>>>0),e.startsWith(\"./\")&&(e=e.substring(2)),e=s.cb.get(e),!e)return 2;if(r>>>=0,n>>>=0,f>>>=0,r+n>e.byteLength)return 3;try{return h().set(e.subarray(r,r+n),f>>>0),0}catch{return 4}}};function Re(e){this.name=\"ExitStatus\",this.message=`Program terminated with exit(${e})`,this.status=e}var He=e=>{e.terminate(),e.onmessage=()=>{}},Ge=e=>{C.Pa.length==0&&(Je(),C.Ya(C.Pa[0]));var r=C.Pa.pop();if(!r)return 6;C.Qa.push(r),C.Ma[e.Oa]=r,r.Oa=e.Oa;var n={cmd:\"run\",start_routine:e.kb,arg:e.hb,pthread_ptr:e.Oa};return B&&r.unref(),r.postMessage(n,e.qb),0},Be=0,qe=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,Ve=(e,r,n)=>{r>>>=0;var f=r+n;for(n=r;e[n]&&!(n>=f);)++n;if(16<n-r&&e.buffer&&qe)return qe.decode(e.buffer instanceof SharedArrayBuffer?e.slice(r,n):e.subarray(r,n));for(f=\"\";r<n;){var y=e[r++];if(y&128){var O=e[r++]&63;if((y&224)==192)f+=String.fromCharCode((y&31)<<6|O);else{var v=e[r++]&63;y=(y&240)==224?(y&15)<<12|O<<6|v:(y&7)<<18|O<<12|v<<6|e[r++]&63,65536>y?f+=String.fromCharCode(y):(y-=65536,f+=String.fromCharCode(55296|y>>10,56320|y&1023))}}else f+=String.fromCharCode(y)}return f},$e=(e,r)=>(e>>>=0)?Ve(h(),e,r):\"\",ot=e=>{var r=vt();return e=e(),ct(r),e};function G(e,r){var n=arguments.length-2,f=arguments;return ot(()=>{for(var y=_t(8*n),O=y>>>3,v=0;v<n;v++){var j=f[2+v];g()[O+v>>>0]=j}return ar(e,n,y,r)})}function T(e){if(_)return G(0,1,e);te=e,0<Be||(C.lb(),s.onExit?.(e),U=!0),F(e,new Re(e))}var ze=e=>{if(te=e,_)throw ut(e),\"unwind\";T(e)};function it(){for(var e=s.numThreads;e--;)Je();Ae.unshift(()=>{pe++,st(()=>re())})}function Je(){var e=N(\"ort-wasm-threaded.worker.js\");e=new Worker(e),C.Pa.push(e)}function st(e){_?e():Promise.all(C.Pa.map(C.Ya)).then(e)}var C={Pa:[],Qa:[],bb:[],Ma:{},Wa(){_?(C.receiveObjectTransfer=C.jb,C.threadInitTLS=C.ab,C.setExitStatus=C.$a):it()},$a:e=>te=e,tb:[\"$terminateWorker\"],lb:()=>{for(var e of C.Qa)He(e);for(e of C.Pa)He(e);C.Pa=[],C.Qa=[],C.Ma=[]},Za:e=>{var r=e.Oa;delete C.Ma[r],C.Pa.push(e),C.Qa.splice(C.Qa.indexOf(e),1),e.Oa=0,bt(r)},jb(){},ab(){C.bb.forEach(e=>e())},Ya:e=>new Promise(r=>{e.onmessage=O=>{O=O.data;var v=O.cmd;if(O.targetThread&&O.targetThread!=lt()){var j=C.Ma[O.targetThread];j?j.postMessage(O,O.transferList):ee(`Internal error! Worker sent a message \"${v}\" to target pthread ${O.targetThread}, but that thread no longer exists!`)}else v===\"checkMailbox\"?ft():v===\"spawnThread\"?Ge(O):v===\"cleanupThread\"?C.Za(C.Ma[O.thread]):v===\"killThread\"?(O=O.thread,v=C.Ma[O],delete C.Ma[O],He(v),bt(O),C.Qa.splice(C.Qa.indexOf(v),1),v.Oa=0):v===\"cancelThread\"?C.Ma[O.thread].postMessage({cmd:\"cancel\"}):v===\"loaded\"?(e.loaded=!0,B&&!e.Oa&&e.unref(),r(e)):v===\"alert\"?alert(`Thread ${O.threadId}: ${O.text}`):O.target===\"setimmediate\"?e.postMessage(O):v===\"callHandler\"?s[O.handler](...O.args):v&&ee(`worker sent an unknown command ${v}`)},e.onerror=O=>{throw ee(`worker sent an error! ${O.filename}:${O.lineno}: ${O.message}`),O},B&&(e.on(\"message\",O=>e.onmessage({data:O})),e.on(\"error\",O=>e.onerror(O)));var n=[],f=[\"onExit\"],y;for(y of f)s.hasOwnProperty(y)&&n.push(y);e.postMessage({cmd:\"load\",handlers:n,urlOrBlob:s.mainScriptUrlOrBlob||u,wasmMemory:Y,wasmModule:ce})})};s.PThread=C;var Le=e=>{for(;0<e.length;)e.shift()(s)};s.establishStackSpace=()=>{var e=lt(),r=b()[e+52>>>2>>>0];e=b()[e+56>>>2>>>0],sr(r,r-e),ct(r)};function ut(e){if(_)return G(1,0,e);ze(e)}var xe=[],Xe;s.invokeEntryPoint=(e,r)=>{var n=xe[e];n||(e>=xe.length&&(xe.length=e+1),xe[e]=n=Xe.get(e)),e=n(r),0<Be?C.$a(e):wt(e)};function t(e){this.Va=e-24,this.gb=function(r){b()[this.Va+4>>>2>>>0]=r},this.fb=function(r){b()[this.Va+8>>>2>>>0]=r},this.Wa=function(r,n){this.eb(),this.gb(r),this.fb(n)},this.eb=function(){b()[this.Va+16>>>2>>>0]=0}}var o=0,i=0;function c(e,r,n,f){return _?G(2,1,e,r,n,f):w(e,r,n,f)}function w(e,r,n,f){if(e>>>=0,r>>>=0,n>>>=0,f>>>=0,typeof SharedArrayBuffer>\"u\")return ee(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var y=[];return _&&y.length===0?c(e,r,n,f):(e={kb:n,Oa:e,hb:f,qb:y},_?(e.sb=\"spawnThread\",postMessage(e,y),0):Ge(e))}function E(e,r,n){return _?G(3,1,e,r,n):0}function P(e,r){if(_)return G(4,1,e,r)}var X=e=>{for(var r=0,n=0;n<e.length;++n){var f=e.charCodeAt(n);127>=f?r++:2047>=f?r+=2:55296<=f&&57343>=f?(r+=4,++n):r+=3}return r},le=(e,r,n,f)=>{if(n>>>=0,!(0<f))return 0;var y=n;f=n+f-1;for(var O=0;O<e.length;++O){var v=e.charCodeAt(O);if(55296<=v&&57343>=v){var j=e.charCodeAt(++O);v=65536+((v&1023)<<10)|j&1023}if(127>=v){if(n>=f)break;r[n++>>>0]=v}else{if(2047>=v){if(n+1>=f)break;r[n++>>>0]=192|v>>6}else{if(65535>=v){if(n+2>=f)break;r[n++>>>0]=224|v>>12}else{if(n+3>=f)break;r[n++>>>0]=240|v>>18,r[n++>>>0]=128|v>>12&63}r[n++>>>0]=128|v>>6&63}r[n++>>>0]=128|v&63}}return r[n>>>0]=0,n-y},oe=(e,r,n)=>le(e,h(),r,n);function ie(e,r){if(_)return G(5,1,e,r)}function Qe(e,r,n){if(_)return G(6,1,e,r,n)}function Ze(e,r,n){return _?G(7,1,e,r,n):0}function d(e,r){if(_)return G(8,1,e,r)}function k(e,r,n){if(_)return G(9,1,e,r,n)}function $(e,r,n,f){if(_)return G(10,1,e,r,n,f)}function Ee(e,r,n,f){if(_)return G(11,1,e,r,n,f)}function Ke(e,r,n,f){if(_)return G(12,1,e,r,n,f)}function Lt(e){if(_)return G(13,1,e)}function kt(e,r){if(_)return G(14,1,e,r)}function Wt(e,r,n){if(_)return G(15,1,e,r,n)}function mt(e){e>>>=0,typeof Atomics.rb==\"function\"&&(Atomics.rb(l(),e>>>2,e).value.then(ft),e+=128,Atomics.store(l(),e>>>2,1))}s.__emscripten_thread_mailbox_await=mt;var ft=()=>{var e=lt();if(e&&(mt(e),e=or,!U))try{if(e(),!(0<Be))try{_?wt(te):ze(te)}catch(r){r instanceof Re||r==\"unwind\"||F(1,r)}}catch(r){r instanceof Re||r==\"unwind\"||F(1,r)}};s.checkMailbox=ft;var gt=[],Ye=e=>e%4===0&&(e%100!==0||e%400===0),Nt=[0,31,60,91,121,152,182,213,244,274,305,335],Ht=[0,31,59,90,120,151,181,212,243,273,304,334];function Gt(e,r,n,f,y,O,v,j){return _?G(16,1,e,r,n,f,y,O,v,j):-52}function $t(e,r,n,f,y,O,v){if(_)return G(17,1,e,r,n,f,y,O,v)}var zt=e=>{var r=X(e)+1,n=rr(r);return n&&oe(e,n,r),n},ht=[],yt={},Yt=()=>{if(!Ot){var e={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:L||\"./this.program\"},r;for(r in yt)yt[r]===void 0?delete e[r]:e[r]=yt[r];var n=[];for(r in e)n.push(`${r}=${e[r]}`);Ot=n}return Ot},Ot;function jt(e,r){if(_)return G(18,1,e,r);e>>>=0,r>>>=0;var n=0;return Yt().forEach((f,y)=>{var O=r+n;for(y=b()[e+4*y>>>2>>>0]=O,O=0;O<f.length;++O)a()[y++>>>0>>>0]=f.charCodeAt(O);a()[y>>>0>>>0]=0,n+=f.length+1}),0}function qt(e,r){if(_)return G(19,1,e,r);e>>>=0,r>>>=0;var n=Yt();b()[e>>>2>>>0]=n.length;var f=0;return n.forEach(y=>f+=y.length+1),b()[r>>>2>>>0]=f,0}function Vt(e){return _?G(20,1,e):52}function Jt(e,r,n,f){return _?G(21,1,e,r,n,f):52}function Xt(e,r,n,f,y){return _?G(22,1,e,r,n,f,y):70}var $r=[null,[],[]];function Qt(e,r,n,f){if(_)return G(23,1,e,r,n,f);r>>>=0,n>>>=0,f>>>=0;for(var y=0,O=0;O<n;O++){var v=b()[r>>>2>>>0],j=b()[r+4>>>2>>>0];r+=8;for(var Te=0;Te<j;Te++){var ne=h()[v+Te>>>0],me=$r[e];ne===0||ne===10?((e===1?Ie:ee)(Ve(me,0)),me.length=0):me.push(ne)}y+=j}return b()[f>>>2>>>0]=y,0}var Zt=[31,29,31,30,31,30,31,31,30,31,30,31],Kt=[31,28,31,30,31,30,31,31,30,31,30,31];function zr(e){var r=Array(X(e)+1);return le(e,r,0,r.length),r}var Yr=(e,r)=>{a().set(e,r>>>0)};function er(e,r,n,f){function y(m,H,q){for(m=typeof m==\"number\"?m.toString():m||\"\";m.length<H;)m=q[0]+m;return m}function O(m,H){return y(m,H,\"0\")}function v(m,H){function q(cr){return 0>cr?-1:0<cr?1:0}var ke;return(ke=q(m.getFullYear()-H.getFullYear()))===0&&(ke=q(m.getMonth()-H.getMonth()))===0&&(ke=q(m.getDate()-H.getDate())),ke}function j(m){switch(m.getDay()){case 0:return new Date(m.getFullYear()-1,11,29);case 1:return m;case 2:return new Date(m.getFullYear(),0,3);case 3:return new Date(m.getFullYear(),0,2);case 4:return new Date(m.getFullYear(),0,1);case 5:return new Date(m.getFullYear()-1,11,31);case 6:return new Date(m.getFullYear()-1,11,30)}}function Te(m){var H=m.Ra;for(m=new Date(new Date(m.Sa+1900,0,1).getTime());0<H;){var q=m.getMonth(),ke=(Ye(m.getFullYear())?Zt:Kt)[q];if(H>ke-m.getDate())H-=ke-m.getDate()+1,m.setDate(1),11>q?m.setMonth(q+1):(m.setMonth(0),m.setFullYear(m.getFullYear()+1));else{m.setDate(m.getDate()+H);break}}return q=new Date(m.getFullYear()+1,0,4),H=j(new Date(m.getFullYear(),0,4)),q=j(q),0>=v(H,m)?0>=v(q,m)?m.getFullYear()+1:m.getFullYear():m.getFullYear()-1}e>>>=0,r>>>=0,n>>>=0,f>>>=0;var ne=b()[f+40>>>2>>>0];f={ob:l()[f>>>2>>>0],nb:l()[f+4>>>2>>>0],Ta:l()[f+8>>>2>>>0],Xa:l()[f+12>>>2>>>0],Ua:l()[f+16>>>2>>>0],Sa:l()[f+20>>>2>>>0],Na:l()[f+24>>>2>>>0],Ra:l()[f+28>>>2>>>0],ub:l()[f+32>>>2>>>0],mb:l()[f+36>>>2>>>0],pb:ne?$e(ne):\"\"},n=$e(n),ne={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var me in ne)n=n.replace(new RegExp(me,\"g\"),ne[me]);var fr=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),lr=\"January February March April May June July August September October November December\".split(\" \");ne={\"%a\":m=>fr[m.Na].substring(0,3),\"%A\":m=>fr[m.Na],\"%b\":m=>lr[m.Ua].substring(0,3),\"%B\":m=>lr[m.Ua],\"%C\":m=>O((m.Sa+1900)/100|0,2),\"%d\":m=>O(m.Xa,2),\"%e\":m=>y(m.Xa,2,\" \"),\"%g\":m=>Te(m).toString().substring(2),\"%G\":m=>Te(m),\"%H\":m=>O(m.Ta,2),\"%I\":m=>(m=m.Ta,m==0?m=12:12<m&&(m-=12),O(m,2)),\"%j\":m=>{for(var H=0,q=0;q<=m.Ua-1;H+=(Ye(m.Sa+1900)?Zt:Kt)[q++]);return O(m.Xa+H,3)},\"%m\":m=>O(m.Ua+1,2),\"%M\":m=>O(m.nb,2),\"%n\":()=>`\n`,\"%p\":m=>0<=m.Ta&&12>m.Ta?\"AM\":\"PM\",\"%S\":m=>O(m.ob,2),\"%t\":()=>\"\t\",\"%u\":m=>m.Na||7,\"%U\":m=>O(Math.floor((m.Ra+7-m.Na)/7),2),\"%V\":m=>{var H=Math.floor((m.Ra+7-(m.Na+6)%7)/7);if(2>=(m.Na+371-m.Ra-2)%7&&H++,H)H==53&&(q=(m.Na+371-m.Ra)%7,q==4||q==3&&Ye(m.Sa)||(H=1));else{H=52;var q=(m.Na+7-m.Ra-1)%7;(q==4||q==5&&Ye(m.Sa%400-1))&&H++}return O(H,2)},\"%w\":m=>m.Na,\"%W\":m=>O(Math.floor((m.Ra+7-(m.Na+6)%7)/7),2),\"%y\":m=>(m.Sa+1900).toString().substring(2),\"%Y\":m=>m.Sa+1900,\"%z\":m=>{m=m.mb;var H=0<=m;return m=Math.abs(m)/60,(H?\"+\":\"-\")+(\"0000\"+(m/60*100+m%60)).slice(-4)},\"%Z\":m=>m.pb,\"%%\":()=>\"%\"},n=n.replace(/%%/g,\"\\0\\0\");for(me in ne)n.includes(me)&&(n=n.replace(new RegExp(me,\"g\"),ne[me](f)));return n=n.replace(/\\0\\0/g,\"%\"),me=zr(n),me.length>r?0:(Yr(me,e),me.length-1)}C.Wa();var jr=[T,ut,c,E,P,ie,Qe,Ze,d,k,$,Ee,Ke,Lt,kt,Wt,Gt,$t,jt,qt,Vt,Jt,Xt,Qt],qr={b:function(e,r,n){throw e>>>=0,new t(e).Wa(r>>>0,n>>>0),o=e,i++,o},L:function(e){nr(e>>>0,!W,1,!R,131072,!1),C.ab()},j:function(e){e>>>=0,_?postMessage({cmd:\"cleanupThread\",thread:e}):C.Za(C.Ma[e])},H:w,h:E,S:P,D:ie,F:Qe,T:Ze,Q:d,J:k,P:$,n:Ee,E:Ke,B:Lt,R:kt,C:Wt,p:()=>1,z:function(e,r){e>>>=0,e==r>>>0?setTimeout(()=>ft()):_?postMessage({targetThread:e,cmd:\"checkMailbox\"}):(e=C.Ma[e])&&e.postMessage({cmd:\"checkMailbox\"})},I:function(e,r,n,f){r>>>=0,gt.length=n,f=f>>>0>>>3;for(var y=0;y<n;y++)gt[y]=g()[f+y>>>0];return e=0>e?Ne[-e-1]:jr[e],C.ib=r,r=e.apply(null,gt),C.ib=0,r},K:mt,o:function(e){B&&C.Ma[e>>>0].ref()},s:function(e,r,n){e=r+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*r:NaN,n>>>=0,e=new Date(1e3*e),l()[n>>>2>>>0]=e.getUTCSeconds(),l()[n+4>>>2>>>0]=e.getUTCMinutes(),l()[n+8>>>2>>>0]=e.getUTCHours(),l()[n+12>>>2>>>0]=e.getUTCDate(),l()[n+16>>>2>>>0]=e.getUTCMonth(),l()[n+20>>>2>>>0]=e.getUTCFullYear()-1900,l()[n+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,l()[n+28>>>2>>>0]=e},t:function(e,r,n){e=r+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*r:NaN,n>>>=0,e=new Date(1e3*e),l()[n>>>2>>>0]=e.getSeconds(),l()[n+4>>>2>>>0]=e.getMinutes(),l()[n+8>>>2>>>0]=e.getHours(),l()[n+12>>>2>>>0]=e.getDate(),l()[n+16>>>2>>>0]=e.getMonth(),l()[n+20>>>2>>>0]=e.getFullYear()-1900,l()[n+24>>>2>>>0]=e.getDay(),r=(Ye(e.getFullYear())?Nt:Ht)[e.getMonth()]+e.getDate()-1|0,l()[n+28>>>2>>>0]=r,l()[n+36>>>2>>>0]=-(60*e.getTimezoneOffset()),r=new Date(e.getFullYear(),6,1).getTimezoneOffset();var f=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=(r!=f&&e.getTimezoneOffset()==Math.min(f,r))|0,l()[n+32>>>2>>>0]=e},u:function(e){e>>>=0;var r=new Date(l()[e+20>>>2>>>0]+1900,l()[e+16>>>2>>>0],l()[e+12>>>2>>>0],l()[e+8>>>2>>>0],l()[e+4>>>2>>>0],l()[e>>>2>>>0],0),n=l()[e+32>>>2>>>0],f=r.getTimezoneOffset(),y=new Date(r.getFullYear(),6,1).getTimezoneOffset(),O=new Date(r.getFullYear(),0,1).getTimezoneOffset(),v=Math.min(O,y);return 0>n?l()[e+32>>>2>>>0]=+(y!=O&&v==f):0<n!=(v==f)&&(y=Math.max(O,y),r.setTime(r.getTime()+6e4*((0<n?v:y)-f))),l()[e+24>>>2>>>0]=r.getDay(),n=(Ye(r.getFullYear())?Nt:Ht)[r.getMonth()]+r.getDate()-1|0,l()[e+28>>>2>>>0]=n,l()[e>>>2>>>0]=r.getSeconds(),l()[e+4>>>2>>>0]=r.getMinutes(),l()[e+8>>>2>>>0]=r.getHours(),l()[e+12>>>2>>>0]=r.getDate(),l()[e+16>>>2>>>0]=r.getMonth(),l()[e+20>>>2>>>0]=r.getYear(),e=r.getTime(),isNaN(e)?(l()[tr()>>>2>>>0]=61,e=-1):e/=1e3,ir((De=e,1<=+Math.abs(De)?0<De?+Math.floor(De/4294967296)>>>0:~~+Math.ceil((De-+(~~De>>>0))/4294967296)>>>0:0)),e>>>0},q:Gt,r:$t,y:function(e,r,n){function f(ne){return(ne=ne.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ne[1]:\"GMT\"}e>>>=0,r>>>=0,n>>>=0;var y=new Date().getFullYear(),O=new Date(y,0,1),v=new Date(y,6,1);y=O.getTimezoneOffset();var j=v.getTimezoneOffset(),Te=Math.max(y,j);b()[e>>>2>>>0]=60*Te,l()[r>>>2>>>0]=+(y!=j),e=f(O),r=f(v),e=zt(e),r=zt(r),j<y?(b()[n>>>2>>>0]=e,b()[n+4>>>2>>>0]=r):(b()[n>>>2>>>0]=r,b()[n+4>>>2>>>0]=e)},c:()=>{K(\"\")},O:function(e,r,n){e>>>=0,r>>>=0,n>>>=0,ht.length=0;for(var f;f=h()[r++>>>0];){var y=f!=105;y&=f!=112,n+=y&&n%8?4:0,ht.push(f==112?b()[n>>>2>>>0]:f==105?l()[n>>>2>>>0]:g()[n>>>3>>>0]),n+=y?8:4}return Ne[e].apply(null,ht)},k:()=>{},i:()=>Date.now(),U:()=>{throw Be+=1,\"unwind\"},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:()=>B?(br(),tt(Or)).cpus().length:navigator.hardwareConcurrency,x:function(e){e>>>=0;var r=h().length;if(e<=r||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var f=r*(1+.2/n);f=Math.min(f,e+100663296);var y=Math;f=Math.max(e,f);e:{y=(y.min.call(y,4294901760,f+(65536-f%65536)%65536)-Y.buffer.byteLength+65535)/65536;try{Y.grow(y),be();var O=1;break e}catch{}O=void 0}if(O)return!0}return!1},M:jt,N:qt,G:ze,g:Vt,m:Jt,v:Xt,l:Qt,a:Y||s.wasmMemory,w:er,d:function(e,r,n,f){return er(e>>>0,r>>>0,n>>>0,f>>>0)}},M=function(){function e(n,f){return M=n.exports,M=Vr(),C.bb.push(M.za),Xe=M.Aa,Fe.unshift(M.V),ce=f,re(),M}var r={a:qr};if(pe++,s.instantiateWasm)try{return s.instantiateWasm(r,e)}catch(n){ee(`Module.instantiateWasm callback failed with error: ${n}`),D(n)}return at(r,function(n){e(n.instance,n.module)}).catch(D),{}}();s._OrtInit=(e,r)=>(s._OrtInit=M.W)(e,r),s._OrtGetLastError=(e,r)=>(s._OrtGetLastError=M.X)(e,r),s._OrtCreateSessionOptions=(e,r,n,f,y,O,v,j,Te,ne)=>(s._OrtCreateSessionOptions=M.Y)(e,r,n,f,y,O,v,j,Te,ne),s._OrtAppendExecutionProvider=(e,r)=>(s._OrtAppendExecutionProvider=M.Z)(e,r),s._OrtAddFreeDimensionOverride=(e,r,n)=>(s._OrtAddFreeDimensionOverride=M._)(e,r,n),s._OrtAddSessionConfigEntry=(e,r,n)=>(s._OrtAddSessionConfigEntry=M.$)(e,r,n),s._OrtReleaseSessionOptions=e=>(s._OrtReleaseSessionOptions=M.aa)(e),s._OrtCreateSession=(e,r,n)=>(s._OrtCreateSession=M.ba)(e,r,n),s._OrtReleaseSession=e=>(s._OrtReleaseSession=M.ca)(e),s._OrtGetInputOutputCount=(e,r,n)=>(s._OrtGetInputOutputCount=M.da)(e,r,n),s._OrtGetInputName=(e,r)=>(s._OrtGetInputName=M.ea)(e,r),s._OrtGetOutputName=(e,r)=>(s._OrtGetOutputName=M.fa)(e,r),s._OrtFree=e=>(s._OrtFree=M.ga)(e),s._OrtCreateTensor=(e,r,n,f,y,O)=>(s._OrtCreateTensor=M.ha)(e,r,n,f,y,O),s._OrtGetTensorData=(e,r,n,f,y)=>(s._OrtGetTensorData=M.ia)(e,r,n,f,y),s._OrtReleaseTensor=e=>(s._OrtReleaseTensor=M.ja)(e),s._OrtCreateRunOptions=(e,r,n,f)=>(s._OrtCreateRunOptions=M.ka)(e,r,n,f),s._OrtAddRunConfigEntry=(e,r,n)=>(s._OrtAddRunConfigEntry=M.la)(e,r,n),s._OrtReleaseRunOptions=e=>(s._OrtReleaseRunOptions=M.ma)(e),s._OrtCreateBinding=e=>(s._OrtCreateBinding=M.na)(e),s._OrtBindInput=(e,r,n)=>(s._OrtBindInput=M.oa)(e,r,n),s._OrtBindOutput=(e,r,n,f)=>(s._OrtBindOutput=M.pa)(e,r,n,f),s._OrtClearBoundOutputs=e=>(s._OrtClearBoundOutputs=M.qa)(e),s._OrtReleaseBinding=e=>(s._OrtReleaseBinding=M.ra)(e),s._OrtRunWithBinding=(e,r,n,f,y)=>(s._OrtRunWithBinding=M.sa)(e,r,n,f,y),s._OrtRun=(e,r,n,f,y,O,v,j)=>(s._OrtRun=M.ta)(e,r,n,f,y,O,v,j),s._OrtEndProfiling=e=>(s._OrtEndProfiling=M.ua)(e);var tr=()=>(tr=M.va)(),lt=s._pthread_self=()=>(lt=s._pthread_self=M.wa)(),rr=s._malloc=e=>(rr=s._malloc=M.xa)(e);s._free=e=>(s._free=M.ya)(e),s.__emscripten_tls_init=()=>(s.__emscripten_tls_init=M.za)();var nr=s.__emscripten_thread_init=(e,r,n,f,y,O)=>(nr=s.__emscripten_thread_init=M.Ba)(e,r,n,f,y,O);s.__emscripten_thread_crashed=()=>(s.__emscripten_thread_crashed=M.Ca)();var ar=(e,r,n,f)=>(ar=M.Da)(e,r,n,f),bt=e=>(bt=M.Ea)(e),wt=s.__emscripten_thread_exit=e=>(wt=s.__emscripten_thread_exit=M.Fa)(e),or=()=>(or=M.Ga)(),ir=e=>(ir=M.Ha)(e),sr=(e,r)=>(sr=M.Ia)(e,r),vt=()=>(vt=M.Ja)(),ct=e=>(ct=M.Ka)(e),_t=e=>(_t=M.La)(e);function Vr(){var e=M;e=Object.assign({},e);var r=f=>()=>f()>>>0,n=f=>y=>f(y)>>>0;return e.va=r(e.va),e.wa=r(e.wa),e.xa=n(e.xa),e.emscripten_main_runtime_thread_id=r(e.emscripten_main_runtime_thread_id),e.Ja=r(e.Ja),e.La=n(e.La),e}s.wasmMemory=Y,s.stackAlloc=_t,s.stackSave=vt,s.stackRestore=ct,s.keepRuntimeAlive=()=>0<Be,s.UTF8ToString=$e,s.stringToUTF8=oe,s.lengthBytesUTF8=X,s.ExitStatus=Re,s.PThread=C;var dt;ve=function e(){dt||ur(),dt||(ve=e)};function ur(){if(!(0<pe))if(_)A(s),_||Le(Fe),startWorker(s);else{if(s.preRun)for(typeof s.preRun==\"function\"&&(s.preRun=[s.preRun]);s.preRun.length;)Ae.unshift(s.preRun.shift());Le(Ae),0<pe||dt||(dt=!0,s.calledRun=!0,U||(_||Le(Fe),A(s),_||Le(Se)))}}return ur(),p.ready}})();typeof vr==\"object\"&&typeof Ft==\"object\"?Ft.exports=wr:typeof define==\"function\"&&define.amd&&define([],()=>wr)});var Sr=et((wn,nn)=>{nn.exports='\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\"),vm=require(\"vm\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,\"utf8\"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n'});var Tr;Tr=gr();var an=_r(),Pt,Rt=!1,pt=!1,Er=!1,on=u=>{if(u===1)return!1;if(typeof SharedArrayBuffer>\"u\")return typeof self<\"u\"&&!self.crossOriginIsolated&&console.warn(\"env.wasm.numThreads is set to \"+u+\", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info.\"),!1;typeof process<\"u\"&&process.versions&&process.versions.node&&console.warn(\"env.wasm.numThreads is set to \"+u+\", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.\");try{return typeof MessageChannel<\"u\"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},sn=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},un=(u,p)=>u?\"ort-training-wasm-simd.wasm\":p?\"ort-wasm-threaded.wasm\":\"ort-wasm.wasm\",Mr=async u=>{if(Rt)return Promise.resolve();if(pt)throw new Error(\"multiple calls to 'initializeWebAssembly()' detected.\");if(Er)throw new Error(\"previous call to 'initializeWebAssembly()' failed.\");pt=!0;let p=u.initTimeout,a=u.numThreads,h=u.simd,l=on(a),b=h&&sn(),g=u.wasmPaths,s=typeof g==\"string\"?g:void 0,A=un(b,l),D=typeof g==\"object\"?g[A]:void 0,I=!1,L=[];if(p>0&&L.push(new Promise(F=>{setTimeout(()=>{I=!0,F()},p)})),L.push(new Promise((F,R)=>{let W=l?an:Tr,B={locateFile:(_,x)=>l&&_.endsWith(\".worker.js\")&&typeof Blob<\"u\"?URL.createObjectURL(new Blob([Sr()],{type:\"text/javascript\"})):_.endsWith(\".wasm\")?D||(s??x)+A:x+_};if(l)if(B.numThreads=a,typeof Blob>\"u\")B.mainScriptUrlOrBlob=(void 0)(__dirname,\"ort-wasm-threaded.js\");else{let _=`var ortWasmThreaded=${W.toString()};`;B.mainScriptUrlOrBlob=new Blob([_],{type:\"text/javascript\"})}W(B).then(_=>{pt=!1,Rt=!0,Pt=_,F()},_=>{pt=!1,Er=!0,R(_)})})),await Promise.race(L),I)throw new Error(`WebAssembly backend initializing failed due to timeout: ${p}ms`)},Q=()=>{if(Rt&&Pt)return Pt;throw new Error(\"WebAssembly is not initialized yet.\")};var Z=(u,p)=>{let a=Q(),h=a.lengthBytesUTF8(u)+1,l=a._malloc(h);return a.stringToUTF8(u,l,h),p.push(l),l},rt=(u,p,a,h)=>{if(typeof u==\"object\"&&u!==null){if(a.has(u))throw new Error(\"Circular reference in options\");a.add(u)}Object.entries(u).forEach(([l,b])=>{let g=p?p+l:l;if(typeof b==\"object\")rt(b,g+\".\",a,h);else if(typeof b==\"string\"||typeof b==\"number\")h(g,b.toString());else if(typeof b==\"boolean\")h(g,b?\"1\":\"0\");else throw new Error(`Can't handle extra config type: ${typeof b}`)})},V=u=>{let p=Q(),a=p.stackSave();try{let h=p.stackAlloc(8);p._OrtGetLastError(h,h+4);let l=p.HEAP32[h/4],b=p.HEAPU32[h/4+1],g=b?p.UTF8ToString(b):\"\";throw new Error(`${u} ERROR_CODE: ${l}, ERROR_MESSAGE: ${g}`)}finally{p.stackRestore(a)}};var Ar=u=>{let p=Q(),a=0,h=[],l=u||{};try{if(u?.logSeverityLevel===void 0)l.logSeverityLevel=2;else if(typeof u.logSeverityLevel!=\"number\"||!Number.isInteger(u.logSeverityLevel)||u.logSeverityLevel<0||u.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${u.logSeverityLevel}`);if(u?.logVerbosityLevel===void 0)l.logVerbosityLevel=0;else if(typeof u.logVerbosityLevel!=\"number\"||!Number.isInteger(u.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${u.logVerbosityLevel}`);u?.terminate===void 0&&(l.terminate=!1);let b=0;return u?.tag!==void 0&&(b=Z(u.tag,h)),a=p._OrtCreateRunOptions(l.logSeverityLevel,l.logVerbosityLevel,!!l.terminate,b),a===0&&V(\"Can't create run options.\"),u?.extra!==void 0&&rt(u.extra,\"\",new WeakSet,(g,s)=>{let A=Z(g,h),D=Z(s,h);p._OrtAddRunConfigEntry(a,A,D)!==0&&V(`Can't set a run config entry: ${g} - ${s}.`)}),[a,h]}catch(b){throw a!==0&&p._OrtReleaseRunOptions(a),h.forEach(g=>p._free(g)),b}};var fn=u=>{switch(u){case\"disabled\":return 0;case\"basic\":return 1;case\"extended\":return 2;case\"all\":return 99;default:throw new Error(`unsupported graph optimization level: ${u}`)}},ln=u=>{switch(u){case\"sequential\":return 0;case\"parallel\":return 1;default:throw new Error(`unsupported execution mode: ${u}`)}},cn=u=>{u.extra||(u.extra={}),u.extra.session||(u.extra.session={});let p=u.extra.session;p.use_ort_model_bytes_directly||(p.use_ort_model_bytes_directly=\"1\"),u.executionProviders&&u.executionProviders.some(a=>(typeof a==\"string\"?a:a.name)===\"webgpu\")&&(u.enableMemPattern=!1)},dn=(u,p,a)=>{for(let h of p){let l=typeof h==\"string\"?h:h.name;switch(l){case\"webnn\":if(l=\"WEBNN\",typeof h!=\"string\"){let g=h;if(g?.deviceType){let s=Z(\"deviceType\",a),A=Z(g.deviceType,a);Q()._OrtAddSessionConfigEntry(u,s,A)!==0&&V(`Can't set a session config entry: 'deviceType' - ${g.deviceType}.`)}if(g?.numThreads){let s=g.numThreads;(typeof s!=\"number\"||!Number.isInteger(s)||s<0)&&(s=0);let A=Z(\"numThreads\",a),D=Z(s.toString(),a);Q()._OrtAddSessionConfigEntry(u,A,D)!==0&&V(`Can't set a session config entry: 'numThreads' - ${g.numThreads}.`)}if(g?.powerPreference){let s=Z(\"powerPreference\",a),A=Z(g.powerPreference,a);Q()._OrtAddSessionConfigEntry(u,s,A)!==0&&V(`Can't set a session config entry: 'powerPreference' - ${g.powerPreference}.`)}}break;case\"webgpu\":if(l=\"JS\",typeof h!=\"string\"){let g=h;if(g?.preferredLayout){if(g.preferredLayout!==\"NCHW\"&&g.preferredLayout!==\"NHWC\")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${g.preferredLayout}`);let s=Z(\"preferredLayout\",a),A=Z(g.preferredLayout,a);Q()._OrtAddSessionConfigEntry(u,s,A)!==0&&V(`Can't set a session config entry: 'preferredLayout' - ${g.preferredLayout}.`)}}break;case\"wasm\":case\"cpu\":continue;default:throw new Error(`not supported execution provider: ${l}`)}let b=Z(l,a);Q()._OrtAppendExecutionProvider(u,b)!==0&&V(`Can't append execution provider: ${l}.`)}},Cr=u=>{let p=Q(),a=0,h=[],l=u||{};cn(l);try{let b=fn(l.graphOptimizationLevel??\"all\"),g=ln(l.executionMode??\"sequential\"),s=typeof l.logId==\"string\"?Z(l.logId,h):0,A=l.logSeverityLevel??2;if(!Number.isInteger(A)||A<0||A>4)throw new Error(`log serverity level is not valid: ${A}`);let D=l.logVerbosityLevel??0;if(!Number.isInteger(D)||D<0||D>4)throw new Error(`log verbosity level is not valid: ${D}`);let I=typeof l.optimizedModelFilePath==\"string\"?Z(l.optimizedModelFilePath,h):0;if(a=p._OrtCreateSessionOptions(b,!!l.enableCpuMemArena,!!l.enableMemPattern,g,!!l.enableProfiling,0,s,A,D,I),a===0&&V(\"Can't create session options.\"),l.executionProviders&&dn(a,l.executionProviders,h),l.freeDimensionOverrides)for(let[L,F]of Object.entries(l.freeDimensionOverrides)){if(typeof L!=\"string\")throw new Error(`free dimension override name must be a string: ${L}`);if(typeof F!=\"number\"||!Number.isInteger(F)||F<0)throw new Error(`free dimension override value must be a non-negative integer: ${F}`);let R=Z(L,h);p._OrtAddFreeDimensionOverride(a,R,F)!==0&&V(`Can't set a free dimension override: ${L} - ${F}.`)}return l.extra!==void 0&&rt(l.extra,\"\",new WeakSet,(L,F)=>{let R=Z(L,h),W=Z(F,h);p._OrtAddSessionConfigEntry(a,R,W)!==0&&V(`Can't set a session config entry: ${L} - ${F}.`)}),[a,h]}catch(b){throw a!==0&&p._OrtReleaseSessionOptions(a),h.forEach(g=>p._free(g)),b}};var Ut=u=>{switch(u){case\"int8\":return 3;case\"uint8\":return 2;case\"bool\":return 9;case\"int16\":return 5;case\"uint16\":return 4;case\"int32\":return 6;case\"uint32\":return 12;case\"float16\":return 10;case\"float32\":return 1;case\"float64\":return 11;case\"string\":return 8;case\"int64\":return 7;case\"uint64\":return 13;default:throw new Error(`unsupported data type: ${u}`)}},Dr=u=>{switch(u){case 3:return\"int8\";case 2:return\"uint8\";case 9:return\"bool\";case 5:return\"int16\";case 4:return\"uint16\";case 6:return\"int32\";case 12:return\"uint32\";case 10:return\"float16\";case 1:return\"float32\";case 11:return\"float64\";case 8:return\"string\";case 7:return\"int64\";case 13:return\"uint64\";default:throw new Error(`unsupported data type: ${u}`)}},It=u=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][u],xr=u=>{switch(u){case\"float16\":return Uint16Array;case\"float32\":return Float32Array;case\"uint8\":return Uint8Array;case\"int8\":return Int8Array;case\"uint16\":return Uint16Array;case\"int16\":return Int16Array;case\"int32\":return Int32Array;case\"bool\":return Uint8Array;case\"float64\":return Float64Array;case\"uint32\":return Uint32Array;case\"int64\":return BigInt64Array;case\"uint64\":return BigUint64Array;default:throw new Error(`unsupported type: ${u}`)}},Fr=u=>{switch(u){case\"verbose\":return 0;case\"info\":return 1;case\"warning\":return 2;case\"error\":return 3;case\"fatal\":return 4;default:throw new Error(`unsupported logging level: ${u}`)}},Pr=u=>u===\"float32\"||u===\"int32\"||u===\"int64\"||u===\"bool\"||u===\"float16\"||u===\"uint32\",Rr=u=>{switch(u){case\"none\":return 0;case\"cpu\":return 1;case\"cpu-pinned\":return 2;case\"texture\":return 3;case\"gpu-buffer\":return 4;default:throw new Error(`unsupported data location: ${u}`)}};var Ur=async u=>{if(typeof u==\"string\")if(typeof process<\"u\"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(u))}catch(p){if(p.code===\"ERR_FS_FILE_TOO_LARGE\"){let a=(void 0)(u),h=[];for await(let l of a)h.push(l);return new Uint8Array(Buffer.concat(h))}throw p}else{let p=await fetch(u);if(!p.ok)throw new Error(`failed to load external data file: ${u}`);let a=p.headers.get(\"Content-Length\"),h=a?parseInt(a,10):0;if(h<1073741824)return new Uint8Array(await p.arrayBuffer());{if(!p.body)throw new Error(`failed to load external data file: ${u}, no response body.`);let l=p.body.getReader(),b;try{b=new ArrayBuffer(h)}catch(s){if(s instanceof RangeError){let A=Math.ceil(h/65536);b=new WebAssembly.Memory({initial:A,maximum:A}).buffer}else throw s}let g=0;for(;;){let{done:s,value:A}=await l.read();if(s)break;let D=A.byteLength;new Uint8Array(b,g,D).set(A),g+=D}return new Uint8Array(b,0,h)}}else return u instanceof Blob?new Uint8Array(await u.arrayBuffer()):u instanceof Uint8Array?u:new Uint8Array(u)};var pn=(u,p)=>{Q()._OrtInit(u,p)!==0&&V(\"Can't initialize onnxruntime.\")},Br=async u=>{pn(u.wasm.numThreads,Fr(u.logLevel))},Lr=async(u,p)=>{},nt=new Map,mn=u=>{let p=Q(),a=p.stackSave();try{let h=p.stackAlloc(8);return p._OrtGetInputOutputCount(u,h,h+4)!==0&&V(\"Can't get session input/output count.\"),[p.HEAP32[h/4],p.HEAP32[h/4+1]]}finally{p.stackRestore(a)}},Bt=u=>{let p=Q(),a=p._malloc(u.byteLength);if(a===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${u.byteLength}.`);return p.HEAPU8.set(u,a),[a,u.byteLength]},kr=async(u,p)=>{let a,h,l=Q();Array.isArray(u)?[a,h]=u:u.buffer===l.HEAPU8.buffer?[a,h]=[u.byteOffset,u.byteLength]:[a,h]=Bt(u);let b=0,g=0,s=0,A=[],D=[],I=[];try{if([g,A]=Cr(p),p?.externalData&&l.mountExternalData){let x=[];for(let N of p.externalData){let he=typeof N==\"string\"?N:N.path;x.push(Ur(typeof N==\"string\"?N:N.data).then(se=>{l.mountExternalData(he,se)}))}await Promise.all(x)}b=l._OrtCreateSession(a,h,g),b===0&&V(\"Can't create a session.\");let[L,F]=mn(b),R=[],W=[],B=[];for(let x=0;x<L;x++){let N=l._OrtGetInputName(b,x);N===0&&V(\"Can't get an input name.\"),D.push(N),R.push(l.UTF8ToString(N))}for(let x=0;x<F;x++){let N=l._OrtGetOutputName(b,x);N===0&&V(\"Can't get an output name.\"),I.push(N);let he=l.UTF8ToString(N);W.push(he)}let _=null;return nt.set(b,[b,D,I,_]),[b,R,W]}catch(L){throw D.forEach(F=>l._OrtFree(F)),I.forEach(F=>l._OrtFree(F)),s!==0&&l._OrtReleaseBinding(s),b!==0&&l._OrtReleaseSession(b),L}finally{l._free(a),g!==0&&l._OrtReleaseSessionOptions(g),A.forEach(L=>l._free(L)),l.unmountExternalData?.()}},Wr=u=>{let p=Q(),a=nt.get(u);if(!a)throw new Error(`cannot release session. invalid session id: ${u}`);let[h,l,b,g]=a;g&&p._OrtReleaseBinding(g.handle),p.jsepUnregisterBuffers?.(u),l.forEach(s=>p._OrtFree(s)),b.forEach(s=>p._OrtFree(s)),p._OrtReleaseSession(h),nt.delete(u)},Ir=(u,p,a,h,l)=>{if(!u){p.push(0);return}let b=Q(),g=u[0],s=u[1],A=u[3],D,I;if(g===\"string\"&&A===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");if(A===\"gpu-buffer\"){let R=u[2].gpuBuffer,W=It(Ut(g));I=s.reduce((B,_)=>B*_,1)*W,D=b.jsepRegisterBuffer(h,l,R,I)}else{let R=u[2];if(Array.isArray(R)){I=4*R.length,D=b._malloc(I),a.push(D);let W=D/4;for(let B=0;B<R.length;B++){if(typeof R[B]!=\"string\")throw new TypeError(`tensor data at index ${B} is not a string`);b.HEAPU32[W++]=Z(R[B],a)}}else I=R.byteLength,D=b._malloc(I),a.push(D),b.HEAPU8.set(new Uint8Array(R.buffer,R.byteOffset,I),D)}let L=b.stackSave(),F=b.stackAlloc(4*s.length);try{let R=F/4;s.forEach(B=>b.HEAP32[R++]=B);let W=b._OrtCreateTensor(Ut(g),D,I,F,s.length,Rr(A));W===0&&V(`Can't create tensor for input/output. session=${h}, index=${l}.`),p.push(W)}finally{b.stackRestore(L)}},Nr=async(u,p,a,h,l,b)=>{let g=Q(),s=nt.get(u);if(!s)throw new Error(`cannot run inference. invalid session id: ${u}`);let[A,D,I,L]=s,F=p.length,R=h.length,W=0,B=[],_=[],x=[],N=[],he=g.stackSave(),se=g.stackAlloc(F*4),ae=g.stackAlloc(F*4),S=g.stackAlloc(R*4),z=g.stackAlloc(R*4);try{[W,B]=Ar(b);for(let U=0;U<F;U++)Ir(a[U],_,N,u,p[U]);for(let U=0;U<R;U++)Ir(l[U],x,N,u,F+h[U]);let ue=se/4,Ue=ae/4,Ie=S/4,ee=z/4;for(let U=0;U<F;U++)g.HEAPU32[ue++]=_[U],g.HEAPU32[Ue++]=D[p[U]];for(let U=0;U<R;U++)g.HEAPU32[Ie++]=x[U],g.HEAPU32[ee++]=I[h[U]];let Y;Y=await g._OrtRun(A,ae,se,F,z,R,S,W),Y!==0&&V(\"failed to call OrtRun().\");let ce=[];for(let U=0;U<R;U++){let te=g.HEAPU32[S/4+U];if(te===x[U]){ce.push(l[U]);continue}let de=g.stackSave(),ge=g.stackAlloc(4*4),ye=!1,J,fe=0;try{g._OrtGetTensorData(te,ge,ge+4,ge+8,ge+12)!==0&&V(`Can't access output tensor data on index ${U}.`);let Me=ge/4,Ae=g.HEAPU32[Me++];fe=g.HEAPU32[Me++];let Fe=g.HEAPU32[Me++],Se=g.HEAPU32[Me++],pe=[];for(let re=0;re<Se;re++)pe.push(g.HEAPU32[Fe/4+re]);g._OrtFree(Fe);let we=pe.reduce((re,K)=>re*K,1);J=Dr(Ae);let ve=L?.outputPreferredLocations[h[U]];if(J===\"string\"){if(ve===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");let re=[],K=fe/4;for(let Ce=0;Ce<we;Ce++){let Oe=g.HEAPU32[K++],_e=Ce===we-1?void 0:g.HEAPU32[K]-Oe;re.push(g.UTF8ToString(Oe,_e))}ce.push([J,pe,re,\"cpu\"])}else if(ve===\"gpu-buffer\"&&we>0){let re=g.jsepGetBuffer(fe),K=It(Ae);if(K===void 0||!Pr(J))throw new Error(`Unsupported data type: ${J}`);ye=!0,ce.push([J,pe,{gpuBuffer:re,download:g.jsepCreateDownloader(re,we*K,J),dispose:()=>{g._OrtReleaseTensor(te)}},\"gpu-buffer\"])}else{let re=xr(J),K=new re(we);new Uint8Array(K.buffer,K.byteOffset,K.byteLength).set(g.HEAPU8.subarray(fe,fe+K.byteLength)),ce.push([J,pe,K,\"cpu\"])}}finally{g.stackRestore(de),J===\"string\"&&fe&&g._free(fe),ye||g._OrtReleaseTensor(te)}}return L&&g._OrtClearBoundOutputs(L.handle),ce}finally{g.stackRestore(he),_.forEach(ue=>g._OrtReleaseTensor(ue)),x.forEach(ue=>g._OrtReleaseTensor(ue)),N.forEach(ue=>g._free(ue)),W!==0&&g._OrtReleaseRunOptions(W),B.forEach(ue=>g._free(ue))}},Hr=u=>{let p=Q(),a=nt.get(u);if(!a)throw new Error(\"invalid session id\");let h=a[0],l=p._OrtEndProfiling(h);l===0&&V(\"Can't get an profile file name.\"),p._OrtFree(l)},Gr=u=>{let p=[];for(let a of u){let h=a[2];!Array.isArray(h)&&\"buffer\"in h&&p.push(h.buffer)}return p};self.onmessage=u=>{let{type:p,in:a}=u.data;try{switch(p){case\"init-wasm\":Mr(a.wasm).then(()=>{Br(a).then(()=>{postMessage({type:p})},h=>{postMessage({type:p,err:h})})},h=>{postMessage({type:p,err:h})});break;case\"init-ep\":{let{epName:h,env:l}=a;Lr(l,h).then(()=>{postMessage({type:p})},b=>{postMessage({type:p,err:b})});break}case\"copy-from\":{let{buffer:h}=a,l=Bt(h);postMessage({type:p,out:l});break}case\"create\":{let{model:h,options:l}=a;kr(h,l).then(b=>{postMessage({type:p,out:b})},b=>{postMessage({type:p,err:b})});break}case\"release\":Wr(a),postMessage({type:p});break;case\"run\":{let{sessionId:h,inputIndices:l,inputs:b,outputIndices:g,options:s}=a;Nr(h,l,b,g,new Array(g.length).fill(null),s).then(A=>{A.some(D=>D[3]!==\"cpu\")?postMessage({type:p,err:\"Proxy does not support non-cpu tensor location.\"}):postMessage({type:p,out:A},Gr(A))},A=>{postMessage({type:p,err:A})});break}case\"end-profiling\":Hr(a),postMessage({type:p});break;default:}}catch(h){postMessage({type:p,err:h})}};})();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableInternalBuffer, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\ntype PromiseCallbacks<T = void> = [resolve: (result: T) => void, reject: (reason: unknown) => void];\nlet initWasmCallbacks: PromiseCallbacks;\nconst queuedCallbacks: Map<OrtWasmMessage['type'], Array<PromiseCallbacks<unknown>>> = new Map();\n\nconst enqueueCallbacks = (type: OrtWasmMessage['type'], callbacks: PromiseCallbacks<unknown>): void => {\n  const queue = queuedCallbacks.get(type);\n  if (queue) {\n    queue.push(callbacks);\n  } else {\n    queuedCallbacks.set(type, [callbacks]);\n  }\n};\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ep':\n    case 'copy-from':\n    case 'create':\n    case 'release':\n    case 'run':\n    case 'end-profiling': {\n      const callbacks = queuedCallbacks.get(ev.data.type)!;\n      if (ev.data.err) {\n        callbacks.shift()![1](ev.data.err);\n      } else {\n        callbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    }\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyAndOrtRuntime = async(): Promise<void> => {\n  if (initialized) {\n    return;\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initWasm()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initWasm()\\' failed.');\n  }\n\n  initializing = true;\n\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n\n      const workerUrl = URL.createObjectURL(new Blob(\n          [\n            // This require() function is handled by esbuild plugin to load file content as string.\n            // eslint-disable-next-line @typescript-eslint/no-require-imports\n            require('./proxy-worker/main')\n          ],\n          {type: 'text/javascript'}));\n      proxyWorker = new Worker(workerUrl, {name: 'ort-wasm-proxy-worker'});\n      proxyWorker.onerror = (ev: ErrorEvent) => reject(ev);\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      URL.revokeObjectURL(workerUrl);\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    try {\n      await initializeWebAssembly(env.wasm);\n      await core.initRuntime(env);\n      initialized = true;\n    } catch (e) {\n      aborted = true;\n      throw e;\n    } finally {\n      initializing = false;\n    }\n  }\n};\n\nexport const initializeOrtEp = async(epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('init-ep', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'init-ep', in : {epName, env}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initEp(env, epName);\n  }\n};\n\nexport const copyFromExternalBuffer = async(buffer: Uint8Array): Promise<SerializableInternalBuffer> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableInternalBuffer>((resolve, reject) => {\n      enqueueCallbacks('copy-from', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'copy-from', in : {buffer}};\n      proxyWorker!.postMessage(message, [buffer.buffer]);\n    });\n  } else {\n    return core.copyFromExternalBuffer(buffer);\n  }\n};\n\nexport const createSession =\n    async(model: SerializableInternalBuffer|Uint8Array, options?: InferenceSession.SessionOptions):\n        Promise<SerializableSessionMetadata> => {\n          if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n            // check unsupported options\n            if (options?.preferredOutputLocation) {\n              throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');\n            }\n            ensureWorker();\n            return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n              enqueueCallbacks('create', [resolve, reject]);\n              const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n              const transferable: Transferable[] = [];\n              if (model instanceof Uint8Array) {\n                transferable.push(model.buffer);\n              }\n              proxyWorker!.postMessage(message, transferable);\n            });\n          } else {\n            return core.createSession(model, options);\n          }\n        };\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('release', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: TensorMetadata[], outputIndices: number[],\n    outputs: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check inputs location\n    if (inputs.some(t => t[3] !== 'cpu')) {\n      throw new Error('input tensor on GPU is not supported for proxy.');\n    }\n    // check outputs location\n    if (outputs.some(t => t)) {\n      throw new Error('pre-allocated output tensor is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableTensorMetadata[]>((resolve, reject) => {\n      enqueueCallbacks('run', [resolve, reject]);\n      const serializableInputs = inputs as SerializableTensorMetadata[];  // every input is on CPU.\n      const message: OrtWasmMessage =\n          {type: 'run', in : {sessionId, inputIndices, inputs: serializableInputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(serializableInputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, outputs, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('end-profiling', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, InferenceSessionHandler, SessionHandler, Tensor, TRACE_FUNC_BEGIN, TRACE_FUNC_END} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, TensorMetadata} from './proxy-messages';\nimport {copyFromExternalBuffer, createSession, endProfiling, releaseSession, run} from './proxy-wrapper';\nimport {isGpuBufferSupportedType} from './wasm-common';\nimport {loadFile} from './wasm-utils-load-file';\n\nexport const encodeTensorMetadata = (tensor: Tensor, getName: () => string): TensorMetadata => {\n  switch (tensor.location) {\n    case 'cpu':\n      return [tensor.type, tensor.dims, tensor.data, 'cpu'];\n    case 'gpu-buffer':\n      return [tensor.type, tensor.dims, {gpuBuffer: tensor.gpuBuffer}, 'gpu-buffer'];\n    default:\n      throw new Error(`invalid data location: ${tensor.location} for ${getName()}`);\n  }\n};\n\nexport const decodeTensorMetadata = (tensor: TensorMetadata): Tensor => {\n  switch (tensor[3]) {\n    case 'cpu':\n      return new Tensor(tensor[0], tensor[2], tensor[1]);\n    case 'gpu-buffer': {\n      const dataType = tensor[0];\n      if (!isGpuBufferSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing GPU tensor`);\n      }\n      const {gpuBuffer, download, dispose} = tensor[2];\n      return Tensor.fromGpuBuffer(gpuBuffer, {dataType, dims: tensor[1], download, dispose});\n    }\n    default:\n      throw new Error(`invalid data location: ${tensor[3]}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements InferenceSessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async fetchModelAndCopyToWasmMemory(path: string): Promise<SerializableInternalBuffer> {\n    // fetch model from url and move to wasm heap.\n    return copyFromExternalBuffer(await loadFile(path));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    TRACE_FUNC_BEGIN();\n    let model: Parameters<typeof createSession>[0];\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        model = await loadFile(pathOrBuffer);\n      } else {\n        // browser\n        // fetch model and copy to wasm heap.\n        model = await this.fetchModelAndCopyToWasmMemory(pathOrBuffer);\n      }\n    } else {\n      model = pathOrBuffer;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n    TRACE_FUNC_END();\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    TRACE_FUNC_BEGIN();\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputArray: Array<Tensor|null> = [];\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputArray.push(tensor);\n      outputIndices.push(index);\n    });\n\n    const inputs =\n        inputArray.map((t, i) => encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`));\n    const outputs = outputArray.map(\n        (t, i) => t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await run(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    TRACE_FUNC_END();\n    return resultMap;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {cpus} from 'node:os';\nimport {Backend, env, InferenceSession, InferenceSessionHandler} from 'onnxruntime-common';\n\nimport {initializeOrtEp, initializeWebAssemblyAndOrtRuntime} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler-inference';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.trace !== 'boolean') {\n    env.wasm.trace = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    // Web: when crossOriginIsolated is false, SharedArrayBuffer is not available so WebAssembly threads will not work.\n    // Node.js: onnxruntime-web does not support multi-threads in Node.js.\n    if ((typeof self !== 'undefined' && !self.crossOriginIsolated) ||\n        (typeof process !== 'undefined' && process.versions && process.versions.node)) {\n      env.wasm.numThreads = 1;\n    }\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nexport class OnnxruntimeWebAssemblyBackend implements Backend {\n  /**\n   * This function initializes the WebAssembly backend.\n   *\n   * This function will be called only once for each backend name. It will be called the first time when\n   * `ort.InferenceSession.create()` is called with a registered backend name.\n   *\n   * @param backendName - the registered backend name.\n   */\n  async init(backendName: string): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyAndOrtRuntime();\n\n    // performe EP specific initialization\n    await initializeOrtEp(backendName);\n  }\n  createInferenceSessionHandler(path: string, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  createInferenceSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  async createInferenceSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, TensorMetadata} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {dataLocationStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {prepareInputOutputTensor} from './wasm-core-impl';\nimport {getInstance} from './wasm-factory';\nimport {checkLastError} from './wasm-utils';\n\nconst NO_TRAIN_FUNCS_MSG =\n    'Built without training API\\'s enabled. Use the onnxruntime-web/training import for training ' +\n    'functionality, and make sure that all the correct artifacts are built & moved to the correct folder if ' +\n    'using a custom build. Check https://onnxruntime.ai/docs/build/web.html for more information.';\n\n/**\n * Runs the checkLastError function which will throw an error, if the provided error code matches the specified\n * pattern for an error code.\n * @param errCode number to evaluated for if it's an error\n * @param message message to pass into checkLastError\n * @param checkNeqZero when true, treats not equal to zero as an error.\n *                     When false, treats equal to zero as an error.\n */\nconst ifErrCodeCheckLastError = (errCode: number, message: string, checkNeqZero = true) => {\n  if (checkNeqZero && errCode !== 0) {\n    checkLastError(message);\n  } else if (!checkNeqZero && errCode === 0) {\n    checkLastError(message);\n  }\n};\n\nexport const createCheckpointHandle = (checkpointData: SerializableInternalBuffer): number => {\n  const wasm = getInstance();\n\n  const [checkpointDataOffset, checkpointDataLength] = checkpointData;\n  let checkpointHandle = 0;\n\n  try {\n    if (wasm._OrtTrainingLoadCheckpoint) {\n      checkpointHandle = wasm._OrtTrainingLoadCheckpoint(checkpointDataOffset, checkpointDataLength);\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n\n    ifErrCodeCheckLastError(checkpointHandle, 'Error occurred when trying to create a CheckpointState', false);\n    return checkpointHandle;\n  } catch (e) {\n    if (wasm._OrtTrainingReleaseCheckpoint && checkpointHandle !== 0) {\n      wasm._OrtTrainingReleaseCheckpoint(checkpointHandle);\n    }\n    throw e;\n  } finally {\n    // free buffer from wasm heap\n    wasm._OrtFree(checkpointData[0]);\n  }\n};\n\nconst getModelInputOutputCount = (trainingSessionId: number, isEvalModel: boolean): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    if (wasm._OrtTrainingGetModelInputOutputCount) {\n      const errorCode =\n          wasm._OrtTrainingGetModelInputOutputCount(trainingSessionId, dataOffset, dataOffset + 4, isEvalModel);\n      ifErrCodeCheckLastError(errorCode, 'Can\\'t get session input/output count.');\n      return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\nconst getModelInputOutputNamesLoop =\n    (trainingSessionId: number, count: number, isInput: boolean, isEvalModel: boolean): string[] => {\n      const names = [];\n      const wasm = getInstance();\n\n      for (let i = 0; i < count; i++) {\n        if (wasm._OrtTrainingGetModelInputOutputName) {\n          const name = wasm._OrtTrainingGetModelInputOutputName(trainingSessionId, i, isInput, isEvalModel);\n          ifErrCodeCheckLastError(name, `Can't get input or output name -- is input: ${isInput}, index ${i}`, false);\n\n          names.push(wasm.UTF8ToString(name));\n          wasm._free(name);\n        } else {\n          throw new Error(NO_TRAIN_FUNCS_MSG);\n        }\n      }\n      return names;\n    };\n\nexport const getModelInputOutputNames = (trainingSessionId: number, isEvalModel: boolean): [string[], string[]] => {\n  let inputNames: string[] = [];\n  let outputNames: string[] = [];\n\n  const [inputCount, outputCount] = getModelInputOutputCount(trainingSessionId, isEvalModel);\n\n  inputNames = getModelInputOutputNamesLoop(trainingSessionId, inputCount, true, isEvalModel);\n  outputNames = getModelInputOutputNamesLoop(trainingSessionId, outputCount, false, isEvalModel);\n\n  return [inputNames, outputNames];\n};\n\nexport const createTrainingSessionHandle =\n    (checkpointHandle: number, trainModelData: SerializableInternalBuffer, evalModelData: SerializableInternalBuffer,\n     optimizerModelData: SerializableInternalBuffer, options: InferenceSession.SessionOptions): number => {\n      const wasm = getInstance();\n\n      let trainingSessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n        if (wasm._OrtTrainingCreateSession) {\n          trainingSessionHandle = wasm._OrtTrainingCreateSession(\n              sessionOptionsHandle, checkpointHandle, trainModelData[0], trainModelData[1], evalModelData[0],\n              evalModelData[1], optimizerModelData[0], optimizerModelData[1]);\n        } else {\n          throw new Error(NO_TRAIN_FUNCS_MSG);\n        }\n\n        ifErrCodeCheckLastError(trainingSessionHandle, 'Error occurred when trying to create a TrainingSession', false);\n        return trainingSessionHandle;\n      } catch (e) {\n        if (wasm._OrtTrainingReleaseSession && trainingSessionHandle !== 0) {\n          wasm._OrtTrainingReleaseSession(trainingSessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(trainModelData[0]);\n        wasm._free(evalModelData[0]);\n        wasm._free(optimizerModelData[0]);\n\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n      }\n    };\n\n/**\n * Prepares input and output tensors by creating the tensors in the WASM side then creates a list of the handles of the\n * WASM tensors.\n *\n * @param trainingSessionId\n * @param indices for each tensor, the index of the input or output name that the tensor corresponds with\n * @param tensors list of TensorMetaData\n * @param tensorHandles should pass in an empty list of numbers; modified in-place by this method & stores the resulting\n *                      handles of the allocated tensors on the heap\n * @param inputOutputAllocs modified in-place by this method\n * @param indexAdd constant to add to the index that is passed to prepareInputOutputTensor\n */\nconst createAndAllocateTensors =\n    (trainingSessionId: number, indices: number[], tensors: Array<TensorMetadata|null>, tensorHandles: number[],\n     inputOutputAllocs: number[], indexAdd: number) => {\n      const count = indices.length;\n\n      // creates the tensors\n      for (let i = 0; i < count; i++) {\n        prepareInputOutputTensor(\n            tensors[i], tensorHandles, inputOutputAllocs, trainingSessionId, indexAdd + indices[i]);\n      }\n\n      // moves to heap\n      const wasm = getInstance();\n      const valuesOffset = wasm.stackAlloc(count * 4);\n      let valuesIndex = valuesOffset / 4;\n      for (let i = 0; i < count; i++) {\n        wasm.HEAPU32[valuesIndex++] = tensorHandles[i];\n      }\n\n      return valuesOffset;\n    };\n\n/**\n * Retrieves the information from the output tensor handles, copies to an array, and frees the WASM information\n * associated with the tensor handle.\n *\n * @param outputValuesOffset\n * @param outputCount\n * @returns list of TensorMetadata retrieved from the output handles.\n */\nconst moveOutputToTensorMetadataArr =\n    (outputValuesOffset: number, outputCount: number, outputTensorHandles: number[],\n     outputTensors: Array<TensorMetadata|null>) => {\n      const wasm = getInstance();\n      const output: TensorMetadata[] = [];\n\n      for (let i = 0; i < outputCount; i++) {\n        const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n        if (tensor === outputTensorHandles[i]) {\n          // output tensor is pre-allocated. no need to copy data.\n          output.push(outputTensors[i]!);\n          continue;\n        }\n\n        const beforeGetTensorDataStack = wasm.stackSave();\n        // stack allocate 4 pointer value\n        const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n        let type: Tensor.Type|undefined, dataOffset = 0;\n        try {\n          const errorCode = wasm._OrtGetTensorData(\n              tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n          ifErrCodeCheckLastError(errorCode, `Can't access output tensor data on index ${i}.`);\n\n          let tensorDataIndex = tensorDataOffset / 4;\n          const dataType = wasm.HEAPU32[tensorDataIndex++];\n          dataOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n          const dims = [];\n          for (let i = 0; i < dimsLength; i++) {\n            dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n          }\n          wasm._OrtFree(dimsOffset);\n\n          const size = dims.reduce((a, b) => a * b, 1);\n          type = tensorDataTypeEnumToString(dataType);\n\n          if (type === 'string') {\n            const stringData: string[] = [];\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < size; i++) {\n              const offset = wasm.HEAPU32[dataIndex++];\n              const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n              stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n            }\n            output.push([type, dims, stringData, 'cpu']);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data, 'cpu']);\n          }\n        } finally {\n          wasm.stackRestore(beforeGetTensorDataStack);\n          if (type === 'string' && dataOffset) {\n            wasm._free(dataOffset);\n          }\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n\n      return output;\n    };\n\nexport const lazyResetGrad = async(trainingSessionId: number): Promise<void> => {\n  const wasm = getInstance();\n\n  if (wasm._OrtTrainingLazyResetGrad) {\n    const errorCode = wasm._OrtTrainingLazyResetGrad(trainingSessionId);\n    ifErrCodeCheckLastError(errorCode, 'Can\\'t call lazyResetGrad.');\n  } else {\n    throw new Error(NO_TRAIN_FUNCS_MSG);\n  }\n};\n\nexport const runTrainStep = async(\n    trainingSessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n\n  try {\n    // prepare parameters by moving them to heap\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // handle inputs -- you don't want anything added to the index\n    const inputValuesOffset = createAndAllocateTensors(\n        trainingSessionId, inputIndices, inputTensors, inputTensorHandles, inputOutputAllocs, 0);\n    // handle outputs\n    // you want inputCount to be added to the index of every output tensor passed to prepareInputOutputTensor\n    const outputValuesOffset = createAndAllocateTensors(\n        trainingSessionId, outputIndices, outputTensors, outputTensorHandles, inputOutputAllocs, inputCount);\n\n    if (wasm._OrtTrainingRunTrainStep) {\n      const errorCode = wasm._OrtTrainingRunTrainStep(\n          trainingSessionId, inputValuesOffset, inputCount, outputValuesOffset, outputCount, runOptionsHandle);\n      ifErrCodeCheckLastError(errorCode, 'failed to call OrtTrainingRunTrainStep in the WebAssembly layer');\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n\n    return moveOutputToTensorMetadataArr(outputValuesOffset, outputCount, outputTensorHandles, outputTensors);\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\nexport const runOptimizerStep =\n    async(trainingSessionId: number, options: InferenceSession.RunOptions): Promise<void> => {\n  const wasm = getInstance();\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    if (wasm._OrtTrainingOptimizerStep) {\n      const errCode = wasm._OrtTrainingOptimizerStep(trainingSessionId, runOptionsHandle);\n      ifErrCodeCheckLastError(errCode, 'Failed to call OrtTrainingOptimizerStep in the WebAssembly layer');\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n  } finally {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\nexport const runEvalStep = async(\n    trainingSessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n\n  try {\n    // prepare parameters by moving them to heap\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // handle inputs -- you don't want anything added to the index\n    const inputValuesOffset = createAndAllocateTensors(\n        trainingSessionId, inputIndices, inputTensors, inputTensorHandles, inputOutputAllocs, 0);\n    // handle outputs\n    // you want inputCount to be added to the index of every output tensor passed to prepareInputOutputTensor\n    const outputValuesOffset = createAndAllocateTensors(\n        trainingSessionId, outputIndices, outputTensors, outputTensorHandles, inputOutputAllocs, inputCount);\n\n    if (wasm._OrtTrainingEvalStep) {\n      const errorCode = wasm._OrtTrainingEvalStep(\n          trainingSessionId, inputValuesOffset, inputCount, outputValuesOffset, outputCount, runOptionsHandle);\n\n      ifErrCodeCheckLastError(errorCode, 'failed to call OrtTrainingEvalStep in the WebAssembly layer');\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n\n    return moveOutputToTensorMetadataArr(outputValuesOffset, outputCount, outputTensorHandles, outputTensors);\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\nexport const getParametersSize = (trainingSessionId: number, trainableOnly: boolean): number => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n\n  try {\n    const sizeOffset = wasm.stackAlloc(4);\n    if (wasm._OrtTrainingGetParametersSize) {\n      const errorCode = wasm._OrtTrainingGetParametersSize(trainingSessionId, sizeOffset, trainableOnly);\n      ifErrCodeCheckLastError(errorCode, 'Can\\'t get parameters size');\n\n      return wasm.HEAP32[sizeOffset / 4];\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\nexport const getContiguousParameters =\n    async(trainingSessionId: number, trainableOnly: boolean): Promise<TensorMetadata> => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n\n  const tensorTypeAsString = 'float32';\n  const locationAsString = 'cpu';\n\n  const parametersSize = getParametersSize(trainingSessionId, trainableOnly);\n  let tensor = 0;\n\n  // allocates a buffer of the correct size on the WASM heap\n  const paramsByteLength = 4 * parametersSize;\n  const paramsOffset = wasm._malloc(paramsByteLength);\n\n  // handles the dimensions-related createTensor parameters\n  const dims = [parametersSize];\n\n  const dimsOffset = wasm.stackAlloc(4);\n  const dimsIndex = dimsOffset / 4;\n  wasm.HEAP32[dimsIndex] = parametersSize;\n\n  try {\n    // wraps allocated array in a tensor\n    tensor = wasm._OrtCreateTensor(\n        tensorDataTypeStringToEnum(tensorTypeAsString), paramsOffset, paramsByteLength, dimsOffset, dims.length,\n        dataLocationStringToEnum(locationAsString));\n    ifErrCodeCheckLastError(\n        tensor, `Can't create tensor for getContiguousParameters. session=${trainingSessionId}.`, false);\n\n    if (wasm._OrtTrainingCopyParametersToBuffer) {\n      const errCode = wasm._OrtTrainingCopyParametersToBuffer(trainingSessionId, tensor, parametersSize, trainableOnly);\n      ifErrCodeCheckLastError(errCode, 'Can\\'t get contiguous parameters.');\n\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n\n    // copies from WASM memory to a JavaScript typed array, which is then put into a TensorMetadata object\n    const typedArrayConstructor = tensorTypeToTypedArrayConstructor(tensorTypeAsString);\n    const data = new typedArrayConstructor(parametersSize);\n    const output: TensorMetadata[] = [];\n    new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n        .set(wasm.HEAPU8.subarray(paramsOffset, paramsOffset + paramsByteLength));\n    output.push([tensorTypeAsString, dims, data, locationAsString]);\n    if (output.length !== 1) {\n      throw new Error(`something unexpected happened in the getContiguousParameters function. Expected output length of\n     one, got ${output.length}`);\n    } else {\n      return output[0];\n    }\n  } finally {\n    if (tensor !== 0) {\n      wasm._OrtReleaseTensor(tensor);\n    }\n    wasm._free(paramsOffset);\n    wasm._free(dimsOffset);\n    wasm.stackRestore(stack);\n  }\n};\n\nexport const loadParametersBuffer =\n    async(trainingSessionId: number, buffer: Uint8Array, trainableOnly: boolean): Promise<void> => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n\n  const tensorTypeAsString = 'float32';\n  const locationAsString = 'cpu';\n\n  // allocates & copies JavaScript buffer to WASM heap\n  const bufferByteLength = buffer.length;\n  const bufferCount = bufferByteLength / 4;\n  const bufferOffset = wasm._malloc(bufferByteLength);\n  wasm.HEAPU8.set(buffer, bufferOffset);\n\n  // allocates and handles moving dimensions information to WASM memory\n  const dimsOffset = wasm.stackAlloc(4);\n  wasm.HEAP32[dimsOffset / 4] = bufferCount;\n  const dimsLength = 1;\n  let tensor = 0;\n\n  try {\n    tensor = wasm._OrtCreateTensor(\n        tensorDataTypeStringToEnum(tensorTypeAsString), bufferOffset, bufferByteLength, dimsOffset, dimsLength,\n        dataLocationStringToEnum(locationAsString));\n    ifErrCodeCheckLastError(tensor, `Can't create tensor for input/output. session=${trainingSessionId}`, false);\n\n    if (wasm._OrtTrainingCopyParametersFromBuffer) {\n      const errCode = wasm._OrtTrainingCopyParametersFromBuffer(trainingSessionId, tensor, bufferCount, trainableOnly);\n      ifErrCodeCheckLastError(errCode, 'Can\\'t copy buffer to parameters.');\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n  } finally {\n    if (tensor !== 0) {\n      wasm._OrtReleaseTensor(tensor);\n    }\n    wasm.stackRestore(stack);\n    wasm._free(bufferOffset);\n    wasm._free(dimsOffset);\n  }\n};\n\nexport const releaseTrainingSessionAndCheckpoint = (checkpointId: number, sessionId: number): void => {\n  const wasm = getInstance();\n\n  if (wasm._OrtTrainingReleaseSession) {\n    wasm._OrtTrainingReleaseSession(sessionId);\n  }\n  if (wasm._OrtTrainingReleaseCheckpoint) {\n    wasm._OrtTrainingReleaseCheckpoint(checkpointId);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, OnnxValue, SessionHandler, Tensor, TrainingSessionHandler} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, TensorMetadata} from './proxy-messages';\nimport {decodeTensorMetadata, encodeTensorMetadata} from './session-handler-inference';\nimport {copyFromExternalBuffer} from './wasm-core-impl';\nimport {createCheckpointHandle, createTrainingSessionHandle, getContiguousParameters, getModelInputOutputNames, getParametersSize, lazyResetGrad, loadParametersBuffer, releaseTrainingSessionAndCheckpoint, runEvalStep, runOptimizerStep, runTrainStep} from './wasm-training-core-impl';\n\nexport class OnnxruntimeWebAssemblyTrainingSessionHandler implements TrainingSessionHandler {\n  private sessionId: number;\n  private checkpointId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  evalInputNames: string[] = [];\n  evalOutputNames: string[] = [];\n\n  async uriOrBufferToHeap(uriOrBuffer: string|Uint8Array): Promise<SerializableInternalBuffer> {\n    let buffer: Uint8Array;\n    if (typeof uriOrBuffer === 'string') {\n      const response = await fetch(uriOrBuffer);\n      const arrayBuffer = await response.arrayBuffer();\n      buffer = new Uint8Array(arrayBuffer);\n    } else {\n      buffer = uriOrBuffer;\n    }\n    return copyFromExternalBuffer(buffer);\n  }\n\n  async createTrainingSession(\n      checkpointStateUriOrBuffer: string|Uint8Array, trainModelUriOrBuffer: string|Uint8Array,\n      evalModelUriOrBuffer: string|Uint8Array, optimizerModelUriOrBuffer: string|Uint8Array,\n      options: InferenceSession.SessionOptions) {\n    const checkpointData: SerializableInternalBuffer = await this.uriOrBufferToHeap(checkpointStateUriOrBuffer);\n    const trainModelData: SerializableInternalBuffer = await this.uriOrBufferToHeap(trainModelUriOrBuffer);\n    // 0 is supposed to be the nullptr\n    let evalModelData: SerializableInternalBuffer = [0, 0];\n    let optimizerModelData: SerializableInternalBuffer = [0, 0];\n\n    if (evalModelUriOrBuffer !== '') {\n      evalModelData = await this.uriOrBufferToHeap(evalModelUriOrBuffer);\n    }\n    if (optimizerModelUriOrBuffer !== '') {\n      optimizerModelData = await this.uriOrBufferToHeap(optimizerModelUriOrBuffer);\n    }\n\n    this.checkpointId = createCheckpointHandle(checkpointData);\n    this.sessionId =\n        createTrainingSessionHandle(this.checkpointId, trainModelData, evalModelData, optimizerModelData, options);\n    [this.inputNames, this.outputNames] = getModelInputOutputNames(this.sessionId, false);\n    if (evalModelUriOrBuffer !== '') {\n      [this.evalInputNames, this.evalOutputNames] = getModelInputOutputNames(this.sessionId, true);\n    }\n  }\n\n  /**\n   * Helper method that converts a feeds or fetches datatype to two arrays, one of values and one that stores the\n   * corresponding name as a number referring to the index in the list of names provided.\n   *\n   * @param feeds meant to match either SessionHandler.FeedsType or SessionHandler.FetchesType\n   * @param names either inputNames or outputNames\n   * @returns a tuple of a list of values and a list of indices.\n   */\n  convertMapIntoValuesArrayAndIndicesArray<T, U>(\n      feeds: {[name: string]: T}, names: string[], mapFunc: (val: T, index: number) => U): [T[], number[], U[]] {\n    const values: T[] = [];\n    const indices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = names.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}`);\n      }\n      values.push(tensor);\n      indices.push(index);\n    });\n\n    const uList = values.map(mapFunc);\n    return [values, indices, uList];\n  }\n\n  /**\n   * Helper method that converts the TensorMetadata that the wasm-core functions return to the\n   * SessionHandler.ReturnType. Any outputs in the provided outputArray that are falsy will be populated with the\n   * corresponding result.\n   *\n   * @param results used to populate the resultMap if there is no value for that outputName already\n   * @param outputArray used to populate the resultMap. If null or undefined, use the corresponding result from results\n   * @param outputIndices specifies which outputName the corresponding value for outputArray refers to.\n   * @returns a map of output names and OnnxValues.\n   */\n  convertTensorMetadataToReturnType(\n      results: TensorMetadata[], outputArray: Array<Tensor|null>, outputIndices: number[]): SessionHandler.ReturnType {\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    return resultMap;\n  }\n\n  async lazyResetGrad(): Promise<void> {\n    await lazyResetGrad(this.sessionId);\n  }\n\n  async runTrainStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const [, inputIndices, inputs] = this.convertMapIntoValuesArrayAndIndicesArray<Tensor, TensorMetadata>(\n        feeds, this.inputNames,\n        (t, i): TensorMetadata => encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`));\n\n    const [outputArray, outputIndices, outputs] =\n        this.convertMapIntoValuesArrayAndIndicesArray<Tensor|null, TensorMetadata|null>(\n            fetches, this.outputNames,\n            (t, i): TensorMetadata|null =>\n                t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await runTrainStep(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n    return this.convertTensorMetadataToReturnType(results, outputArray, outputIndices);\n  }\n\n  async runOptimizerStep(options: InferenceSession.RunOptions): Promise<void> {\n    await runOptimizerStep(this.sessionId, options);\n  }\n\n  async runEvalStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const [, inputIndices, inputs] = this.convertMapIntoValuesArrayAndIndicesArray<Tensor, TensorMetadata>(\n        feeds, this.evalInputNames,\n        (t, i): TensorMetadata => encodeTensorMetadata(t, () => `input \"${this.evalInputNames[inputIndices[i]]}\"`));\n\n    const [outputArray, outputIndices, outputs] =\n        this.convertMapIntoValuesArrayAndIndicesArray<Tensor|null, TensorMetadata|null>(\n            fetches, this.evalOutputNames,\n            (t, i): TensorMetadata|null =>\n                t ? encodeTensorMetadata(t, () => `output \"${this.evalOutputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await runEvalStep(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n    return this.convertTensorMetadataToReturnType(results, outputArray, outputIndices);\n  }\n\n  async getParametersSize(trainableOnly: boolean): Promise<number> {\n    return getParametersSize(this.sessionId, trainableOnly);\n  }\n\n  async loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void> {\n    await loadParametersBuffer(this.sessionId, array, trainableOnly);\n  }\n  async getContiguousParameters(trainableOnly: boolean): Promise<OnnxValue> {\n    const tensorResult = await getContiguousParameters(this.sessionId, trainableOnly);\n    return decodeTensorMetadata(tensorResult);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseTrainingSessionAndCheckpoint(this.checkpointId, this.sessionId);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, TrainingSessionHandler} from 'onnxruntime-common';\n\nimport {OnnxruntimeWebAssemblyBackend} from './backend-wasm';\nimport {OnnxruntimeWebAssemblyTrainingSessionHandler} from './wasm/session-handler-training';\n\nclass OnnxruntimeTrainingWebAssemblyBackend extends OnnxruntimeWebAssemblyBackend {\n  async createTrainingSessionHandler(\n      checkpointStateUriOrBuffer: string|Uint8Array, trainModelUriOrBuffer: string|Uint8Array,\n      evalModelUriOrBuffer: string|Uint8Array, optimizerModelUriOrBuffer: string|Uint8Array,\n      options: InferenceSession.SessionOptions): Promise<TrainingSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblyTrainingSessionHandler();\n    await handler.createTrainingSession(\n        checkpointStateUriOrBuffer, trainModelUriOrBuffer, evalModelUriOrBuffer, optimizerModelUriOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeTrainingWebAssemblyBackend();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow bundler to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow bundler remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport * as ort from 'onnxruntime-common';\nexport default ort;\n\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = BUILD_DEFS.DISABLE_TRAINING ? require('./backend-wasm-inference').wasmBackend :\n                                                    require('./backend-wasm-training').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  if (!BUILD_DEFS.DISABLE_WEBNN) {\n    registerBackend('webnn', wasmBackend, 9);\n  }\n}\n\nObject.defineProperty(env.versions, 'web', {value: version, enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.1';\n"],
  "mappings": "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",
  "names": ["backends", "backendsSortedByPriority", "registerBackend", "resolveBackend", "init_backend_impl", "__esmMin", "name", "backend", "priority", "currentBackend", "i", "backendHints", "backendNames", "errors", "backendName", "backendInfo", "isInitializing", "e", "init_backend", "__esmMin", "init_backend_impl", "version", "init_version", "__esmMin", "logLevelValue", "env", "init_env_impl", "__esmMin", "init_version", "version", "value", "env", "init_env", "__esmMin", "init_env_impl", "tensorToDataURL", "tensorToImageData", "init_tensor_conversion_impl", "__esmMin", "tensor", "options", "canvas", "pixels2DContext", "width", "height", "inputformat", "norm", "normMean", "normBias", "stride", "rTensorPointer", "gTensorPointer", "bTensorPointer", "aTensorPointer", "i", "j", "R", "G", "B", "A", "image", "channels", "step", "rImagePointer", "gImagePointer", "bImagePointer", "aImagePointer", "bufferToTensor", "tensorFromImage", "tensorFromTexture", "tensorFromGpuBuffer", "tensorFromPinnedBuffer", "init_tensor_factory_impl", "__esmMin", "init_tensor_impl", "buffer", "options", "height", "width", "norm", "normMean", "normBias", "inputformat", "outputformat", "stride", "float32Data", "step", "rImagePointer", "gImagePointer", "bImagePointer", "aImagePointer", "rTensorPointer", "gTensorPointer", "bTensorPointer", "aTensorPointer", "i", "Tensor", "image", "isHTMLImageEle", "isImageDataEle", "isImageBitmap", "isString", "data", "bufferToTensorOptions", "createCanvas", "createCanvasContext", "canvas", "pixels2DContext", "tempCanvas", "resolve", "reject", "context", "newImage", "img", "texture", "download", "dispose", "dims", "gpuBuffer", "dataType", "type", "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP", "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP", "isBigIntChecked", "checkBigInt", "init_tensor_impl_type_mapping", "__esmMin", "isBigInt64ArrayAvailable", "isBigUint64ArrayAvailable", "calculateSize", "tensorReshape", "init_tensor_utils_impl", "__esmMin", "init_tensor_impl", "dims", "size", "i", "dim", "tensor", "Tensor", "Tensor", "init_tensor_impl", "__esmMin", "init_tensor_conversion_impl", "init_tensor_factory_impl", "init_tensor_impl_type_mapping", "init_tensor_utils_impl", "arg0", "arg1", "arg2", "checkBigInt", "type", "dims", "expectedTypedArrayConstructor", "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP", "data", "maybeDims", "typedArrayConstructor", "firstElementType", "mappedType", "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP", "size", "calculateSize", "image", "options", "tensorFromImage", "texture", "tensorFromTexture", "gpuBuffer", "tensorFromGpuBuffer", "buffer", "tensorFromPinnedBuffer", "tensorToDataURL", "tensorToImageData", "releaseData", "tensorReshape", "Tensor", "init_tensor", "__esmMin", "init_tensor_impl", "TRACE", "TRACE_FUNC", "TRACE_FUNC_BEGIN", "TRACE_FUNC_END", "init_trace", "__esmMin", "init_env_impl", "deviceType", "label", "env", "msg", "extraMsg", "stack", "hasTraceFunc", "i", "InferenceSession", "init_inference_session_impl", "__esmMin", "init_backend_impl", "init_tensor", "init_trace", "_InferenceSession", "handler", "feeds", "arg1", "arg2", "TRACE_FUNC_BEGIN", "fetches", "options", "Tensor", "isFetchesEmpty", "name", "isFetches", "arg1Keys", "v", "results", "returnValue", "key", "result", "TRACE_FUNC_END", "arg0", "arg3", "filePathOrUint8Array", "buffer", "byteOffset", "byteLength", "backendHints", "i", "resolveBackend", "InferenceSession", "init_inference_session", "__esmMin", "init_inference_session_impl", "init_onnx_value", "__esmMin", "noBackendErrMsg", "TrainingSession", "init_training_session_impl", "__esmMin", "init_backend_impl", "init_tensor", "_TrainingSession", "handler", "hasOptimizerModel", "hasEvalModel", "trainingOptions", "sessionOptions", "evalModel", "optimizerModel", "options", "backendHints", "i", "backend", "resolveBackend", "inputNames", "outputNames", "feeds", "arg1", "arg2", "fetches", "Tensor", "isFetchesEmpty", "name", "isFetches", "arg1Keys", "v", "results", "returnValue", "key", "result", "trainableOnly", "array", "paramsSize", "TrainingSession", "init_training_session", "__esmMin", "init_training_session_impl", "esm_exports", "__export", "InferenceSession", "TRACE", "TRACE_FUNC_BEGIN", "TRACE_FUNC_END", "Tensor", "TrainingSession", "env", "registerBackend", "init_esm", "__esmMin", "init_backend", "init_env", "init_inference_session", "init_tensor", "init_trace", "init_onnx_value", "init_training_session", "fs_exports", "__export", "createReadStream", "readFile", "readFileSync", "init_fs", "__esmMin", "path_exports", "__export", "join", "init_path", "__esmMin", "require_ort_training_wasm_simd", "__commonJSMin", "exports", "module", "ortWasm", "_scriptDir", "moduleArg", "e", "k", "l", "a", "b", "aa", "ba", "ca", "q", "da", "v", "x", "z", "A", "fs", "B", "C", "c", "d", "g", "h", "ea", "D", "E", "F", "fa", "G", "H", "I", "J", "ha", "ia", "K", "L", "ja", "M", "O", "ka", "P", "la", "ma", "na", "oa", "pa", "Q", "qa", "R", "ra", "sa", "ta", "ua", "va", "m", "S", "T", "r", "U", "wa", "xa", "Ca", "Ba", "V", "W", "Da", "X", "Ea", "Fa", "Ga", "Ha", "Ia", "f", "n", "p", "ya", "y", "w", "t", "u", "za", "Aa", "La", "Ja", "Ka", "Y", "Ma", "Na", "Oa", "Pa", "Z", "Qa", "Ra", "require_worker_threads", "__commonJSMin", "require_perf_hooks", "__commonJSMin", "os_exports", "__export", "cpus", "init_os", "__esmMin", "require_ort_wasm_threaded", "__commonJSMin", "exports", "module", "ortWasmThreaded", "_scriptDir", "moduleArg", "aa", "e", "l", "m", "n", "ba", "p", "ca", "r", "da", "ea", "fa", "v", "ha", "x", "a", "b", "ia", "ja", "z", "ka", "A", "B", "D", "E", "la", "ma", "G", "H", "fs", "na", "c", "I", "d", "g", "h", "k", "oa", "pa", "qa", "J", "ra", "sa", "K", "L", "ta", "ua", "va", "wa", "M", "xa", "N", "ya", "za", "O", "Aa", "Ba", "Ca", "Da", "P", "Ea", "Q", "R", "Fa", "Ha", "S", "Ga", "T", "Ia", "Ja", "La", "Ka", "U", "V", "Ma", "t", "Na", "Oa", "Qa", "Pa", "Ra", "Sa", "Ta", "W", "X", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "$a", "ab", "bb", "cb", "db", "eb", "fb", "gb", "hb", "ib", "jb", "kb", "lb", "mb", "nb", "ob", "pb", "qb", "rb", "sb", "tb", "ub", "vb", "Y", "wb", "xb", "yb", "zb", "Bb", "Ab", "Cb", "Db", "Fb", "Eb", "Gb", "Kb", "Lb", "Mb", "Nb", "Ob", "Pb", "C", "w", "y", "Qb", "Rb", "Sb", "Tb", "Ub", "f", "q", "u", "Hb", "F", "Ib", "Jb", "Vb", "Zb", "Wb", "Xb", "Yb", "Z", "$b", "ac", "bc", "cc", "require_ort_wasm_threaded_worker", "__commonJSMin", "exports", "module", "ortWasmFactory", "ortWasmFactoryThreaded", "wasm", "initialized", "initializing", "aborted", "isMultiThreadSupported", "isSimdSupported", "getWasmFileName", "initializeWebAssembly", "getInstance", "init_wasm_factory", "__esmMin", "numThreads", "useSimd", "useThreads", "flags", "timeout", "simd", "wasmPaths", "wasmPrefixOverride", "wasmFileName", "wasmPathOverride", "isTimeout", "tasks", "resolve", "reject", "factory", "config", "fileName", "scriptDirectory", "scriptSourceCode", "module", "what", "allocWasmString", "iterateExtraOptions", "checkLastError", "init_wasm_utils", "__esmMin", "init_wasm_factory", "data", "allocs", "wasm", "getInstance", "dataLength", "dataOffset", "options", "prefix", "seen", "handler", "key", "value", "name", "message", "stack", "paramsOffset", "errorCode", "errorMessagePointer", "errorMessage", "setRunOptions", "init_run_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "options", "wasm", "getInstance", "runOptionsHandle", "allocs", "runOptions", "tagDataOffset", "allocWasmString", "checkLastError", "iterateExtraOptions", "key", "value", "keyDataOffset", "valueDataOffset", "e", "alloc", "getGraphOptimzationLevel", "getExecutionMode", "appendDefaultOptions", "setExecutionProviders", "setSessionOptions", "init_session_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "graphOptimizationLevel", "executionMode", "options", "session", "ep", "sessionOptionsHandle", "executionProviders", "allocs", "epName", "webnnOptions", "keyDataOffset", "allocWasmString", "valueDataOffset", "getInstance", "checkLastError", "numThreads", "webgpuOptions", "epNameDataOffset", "wasm", "sessionOptions", "logIdDataOffset", "logSeverityLevel", "logVerbosityLevel", "optimizedModelFilePathOffset", "name", "value", "nameOffset", "iterateExtraOptions", "key", "e", "alloc", "tensorDataTypeStringToEnum", "tensorDataTypeEnumToString", "getTensorElementSize", "tensorTypeToTypedArrayConstructor", "logLevelStringToEnum", "isGpuBufferSupportedType", "dataLocationStringToEnum", "init_wasm_common", "__esmMin", "type", "typeProto", "dateType", "logLevel", "location", "loadFile", "init_wasm_utils_load_file", "__esmMin", "file", "e", "stream", "chunks", "chunk", "response", "contentLengthHeader", "fileSize", "reader", "buffer", "pages", "offset", "done", "value", "chunkSize", "initOrt", "initRuntime", "initEp", "activeSessions", "getSessionInputOutputCount", "copyFromExternalBuffer", "createSession", "releaseSession", "prepareInputOutputTensor", "run", "endProfiling", "extractTransferableBuffers", "init_wasm_core_impl", "__esmMin", "init_run_options", "init_session_options", "init_wasm_common", "init_wasm_factory", "init_wasm_utils", "init_wasm_utils_load_file", "numThreads", "loggingLevel", "getInstance", "checkLastError", "env", "logLevelStringToEnum", "epName", "sessionHandle", "wasm", "stack", "dataOffset", "model", "modelDataOffset", "modelData", "options", "modelDataLength", "sessionOptionsHandle", "ioBindingHandle", "allocs", "inputNamesUTF8Encoded", "outputNamesUTF8Encoded", "setSessionOptions", "loadingPromises", "file", "path", "loadFile", "data", "inputCount", "outputCount", "inputNames", "outputNames", "outputPreferredLocations", "i", "name", "nameString", "bindingState", "e", "buf", "alloc", "sessionId", "session", "ioBindingState", "tensor", "tensorHandles", "index", "dataType", "dims", "location", "rawData", "dataByteLength", "gpuBuffer", "elementSizeInBytes", "getTensorElementSize", "tensorDataTypeStringToEnum", "a", "b", "dataIndex", "allocWasmString", "dimsOffset", "dimIndex", "d", "dataLocationStringToEnum", "inputIndices", "inputTensors", "outputIndices", "outputTensors", "runOptionsHandle", "runOptionsAllocs", "inputTensorHandles", "outputTensorHandles", "inputOutputAllocs", "beforeRunStack", "inputValuesOffset", "inputNamesOffset", "outputValuesOffset", "outputNamesOffset", "setRunOptions", "inputValuesIndex", "inputNamesIndex", "outputValuesIndex", "outputNamesIndex", "errorCode", "output", "beforeGetTensorDataStack", "tensorDataOffset", "keepOutputTensor", "type", "tensorDataIndex", "dimsLength", "size", "tensorDataTypeEnumToString", "preferredLocation", "stringData", "offset", "maxBytesToRead", "elementSize", "isGpuBufferSupportedType", "typedArrayConstructor", "tensorTypeToTypedArrayConstructor", "v", "p", "profileFileName", "tensors", "buffers", "require_main", "__commonJSMin", "exports", "module", "isProxy", "proxyWorker", "initializing", "initialized", "aborted", "initWasmCallbacks", "queuedCallbacks", "enqueueCallbacks", "ensureWorker", "onProxyWorkerMessage", "scriptSrc", "initializeWebAssemblyAndOrtRuntime", "initializeOrtEp", "copyFromExternalBuffer", "createSession", "releaseSession", "run", "endProfiling", "init_proxy_wrapper", "__esmMin", "init_esm", "init_wasm_core_impl", "init_wasm_factory", "env", "type", "callbacks", "queue", "ev", "resolve", "reject", "workerUrl", "message", "initializeWebAssembly", "initRuntime", "e", "epName", "initEp", "buffer", "model", "options", "transferable", "sessionId", "inputIndices", "inputs", "outputIndices", "outputs", "t", "serializableInputs", "extractTransferableBuffers", "encodeTensorMetadata", "decodeTensorMetadata", "OnnxruntimeWebAssemblySessionHandler", "init_session_handler_inference", "__esmMin", "init_esm", "init_proxy_wrapper", "init_wasm_common", "init_wasm_utils_load_file", "tensor", "getName", "Tensor", "dataType", "isGpuBufferSupportedType", "gpuBuffer", "download", "dispose", "path", "copyFromExternalBuffer", "loadFile", "pathOrBuffer", "options", "TRACE_FUNC_BEGIN", "model", "createSession", "TRACE_FUNC_END", "releaseSession", "feeds", "fetches", "inputArray", "inputIndices", "kvp", "name", "index", "outputArray", "outputIndices", "inputs", "t", "i", "outputs", "results", "run", "resultMap", "endProfiling", "initializeFlags", "OnnxruntimeWebAssemblyBackend", "init_backend_wasm", "__esmMin", "init_esm", "init_proxy_wrapper", "init_session_handler_inference", "env", "numCpuLogicalCores", "backendName", "initializeWebAssemblyAndOrtRuntime", "initializeOrtEp", "pathOrBuffer", "options", "handler", "OnnxruntimeWebAssemblySessionHandler", "NO_TRAIN_FUNCS_MSG", "ifErrCodeCheckLastError", "createCheckpointHandle", "getModelInputOutputCount", "getModelInputOutputNamesLoop", "getModelInputOutputNames", "createTrainingSessionHandle", "createAndAllocateTensors", "moveOutputToTensorMetadataArr", "lazyResetGrad", "runTrainStep", "runOptimizerStep", "runEvalStep", "getParametersSize", "getContiguousParameters", "loadParametersBuffer", "releaseTrainingSessionAndCheckpoint", "init_wasm_training_core_impl", "__esmMin", "init_run_options", "init_session_options", "init_wasm_common", "init_wasm_core_impl", "init_wasm_factory", "init_wasm_utils", "errCode", "message", "checkNeqZero", "checkLastError", "checkpointData", "wasm", "getInstance", "checkpointDataOffset", "checkpointDataLength", "checkpointHandle", "e", "trainingSessionId", "isEvalModel", "stack", "dataOffset", "errorCode", "count", "isInput", "names", "i", "name", "inputNames", "outputNames", "inputCount", "outputCount", "trainModelData", "evalModelData", "optimizerModelData", "options", "trainingSessionHandle", "sessionOptionsHandle", "allocs", "setSessionOptions", "alloc", "indices", "tensors", "tensorHandles", "inputOutputAllocs", "indexAdd", "prepareInputOutputTensor", "valuesOffset", "valuesIndex", "outputValuesOffset", "outputTensorHandles", "outputTensors", "output", "tensor", "beforeGetTensorDataStack", "tensorDataOffset", "type", "tensorDataIndex", "dataType", "dimsOffset", "dimsLength", "dims", "size", "a", "b", "tensorDataTypeEnumToString", "stringData", "dataIndex", "offset", "maxBytesToRead", "typedArrayConstructor", "tensorTypeToTypedArrayConstructor", "data", "inputIndices", "inputTensors", "outputIndices", "runOptionsHandle", "runOptionsAllocs", "inputTensorHandles", "beforeRunStack", "setRunOptions", "inputValuesOffset", "v", "p", "trainableOnly", "sizeOffset", "tensorTypeAsString", "locationAsString", "parametersSize", "paramsByteLength", "paramsOffset", "dimsIndex", "tensorDataTypeStringToEnum", "dataLocationStringToEnum", "buffer", "bufferByteLength", "bufferCount", "bufferOffset", "checkpointId", "sessionId", "OnnxruntimeWebAssemblyTrainingSessionHandler", "init_session_handler_training", "__esmMin", "init_session_handler_inference", "init_wasm_core_impl", "init_wasm_training_core_impl", "uriOrBuffer", "buffer", "arrayBuffer", "copyFromExternalBuffer", "checkpointStateUriOrBuffer", "trainModelUriOrBuffer", "evalModelUriOrBuffer", "optimizerModelUriOrBuffer", "options", "checkpointData", "trainModelData", "evalModelData", "optimizerModelData", "createCheckpointHandle", "createTrainingSessionHandle", "getModelInputOutputNames", "feeds", "names", "mapFunc", "values", "indices", "kvp", "name", "tensor", "index", "uList", "results", "outputArray", "outputIndices", "resultMap", "i", "decodeTensorMetadata", "lazyResetGrad", "fetches", "inputIndices", "inputs", "t", "encodeTensorMetadata", "outputs", "runTrainStep", "runOptimizerStep", "runEvalStep", "trainableOnly", "getParametersSize", "array", "loadParametersBuffer", "tensorResult", "getContiguousParameters", "releaseTrainingSessionAndCheckpoint", "backend_wasm_training_exports", "__export", "wasmBackend", "OnnxruntimeTrainingWebAssemblyBackend", "init_backend_wasm_training", "__esmMin", "init_backend_wasm", "init_session_handler_training", "OnnxruntimeWebAssemblyBackend", "checkpointStateUriOrBuffer", "trainModelUriOrBuffer", "evalModelUriOrBuffer", "optimizerModelUriOrBuffer", "options", "handler", "OnnxruntimeWebAssemblyTrainingSessionHandler", "lib_exports", "__export", "InferenceSession", "TRACE", "TRACE_FUNC_BEGIN", "TRACE_FUNC_END", "Tensor", "TrainingSession", "lib_default", "env", "registerBackend", "init_esm", "version", "lib_default", "esm_exports", "wasmBackend", "registerBackend", "env", "version"]
}
