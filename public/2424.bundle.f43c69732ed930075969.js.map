{"version":3,"file":"2424.bundle.f43c69732ed930075969.js","mappings":"wIAEMA,E,iDAAKC,GACLC,EAAoB,GAAGF,oC,eCA7B,MAAM,SAAEG,GAAaC,EAAAA,GAMfC,EAAeC,OAAOC,OAJL,CACrBC,iBAAkB,kC,wNCFpB,MAAMC,EAAYC,EAAAA,MAAW,IACpB,kCAGHC,EAA6BC,GAE/BF,EAAAA,cAACA,EAAAA,SAAc,CAACG,SAAUH,EAAAA,cAAA,WAAK,eAC7BA,EAAAA,cAACD,EAAcG,IAmCrB,EA3B0B,CAIxBZ,GAAE,EAOFc,kBAAiBA,EAAC,gBAAEC,EAAe,iBAAEC,KAW5B,CAAC,CAAEC,KAAM,YAAaC,UAVcN,GAEvCF,EAAAA,cAACC,EAA0BQ,EAAA,CACzBJ,gBAAiBA,EACjBC,iBAAkBA,GACdJ,MAOZQ,yBDca,UAAkC,gBAAEL,EAAe,iBAAEC,IAKlE,MAAO,CACL,CACEC,KAAM,YACNZ,eACAgB,yBAR6BC,GA/CDC,EAACD,EAAWP,EAAiBC,KAC7D,MAAMQ,EAAaR,EAAiBS,sBAAsB,GAC1D,OAAOH,EAAUI,KAAIC,IACnB,MAAM,SAAEC,EAAQ,eAAEC,GAAmBF,GAC/B,kBAAEG,EAAoB,MAAK,+BAAEC,GAAmCJ,GAChE,aAAEK,EAAY,WAAEC,EAAU,kBAAEC,EAAiB,iBAAEC,EAAgB,YAAEC,GAAgBT,EACjFU,EAASb,EAAWc,SAASC,UAAU,CAC3CZ,WACAa,IAAK,uBACLC,YAAaV,GAAkC,kBAC/CW,WAAY,QAgCd,MA7BmB,CAEjBd,WACAe,sBAAuBC,EAAAA,GAAMC,OAC7Bf,oBACAE,eACAC,aACAJ,iBACAK,oBACAC,mBACAjC,kBAAiB,EACjBkC,cACAU,iBAAkB,KAClBC,aAAc,KACdV,SACAf,UAAW,CAACK,GACZqB,aAAcxB,EAAWc,SAASC,UAAU,CAC1CZ,WACAsB,YAAa,aACbR,YAAa,aACbD,IAAK,WAEPU,qBAAqB,EACrBC,UAAU,EACV9C,eACA+C,eAAgB,EAChBC,aAAc,EACd1B,WAEe,GACjB,EAKOJ,CAA0BD,EAAWP,EAAiBC,IAUjE,E","sources":["webpack:///../../../extensions/dicom-pdf/src/id.js","webpack:///../../../extensions/dicom-pdf/src/getSopClassHandlerModule.js","webpack:///../../../extensions/dicom-pdf/src/index.tsx"],"sourcesContent":["import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\nconst SOPClassHandlerId = `${id}.sopClassHandlerModule.dicom-pdf`;\r\n\r\nexport { id, SOPClassHandlerId };\r\n","import { SOPClassHandlerId } from './id';\r\nimport { utils, classes } from '@ohif/core';\r\n\r\nconst { ImageSet } = classes;\r\n\r\nconst SOP_CLASS_UIDS = {\r\n  ENCAPSULATED_PDF: '1.2.840.10008.5.1.4.1.1.104.1',\r\n};\r\n\r\nconst sopClassUids = Object.values(SOP_CLASS_UIDS);\r\n\r\nconst _getDisplaySetsFromSeries = (instances, servicesManager, extensionManager) => {\r\n  const dataSource = extensionManager.getActiveDataSource()[0];\r\n  return instances.map(instance => {\r\n    const { Modality, SOPInstanceUID } = instance;\r\n    const { SeriesDescription = 'PDF', MIMETypeOfEncapsulatedDocument } = instance;\r\n    const { SeriesNumber, SeriesDate, SeriesInstanceUID, StudyInstanceUID, SOPClassUID } = instance;\r\n    const pdfUrl = dataSource.retrieve.directURL({\r\n      instance,\r\n      tag: 'EncapsulatedDocument',\r\n      defaultType: MIMETypeOfEncapsulatedDocument || 'application/pdf',\r\n      singlepart: 'pdf',\r\n    });\r\n\r\n    const displaySet = {\r\n      //plugin: id,\r\n      Modality,\r\n      displaySetInstanceUID: utils.guid(),\r\n      SeriesDescription,\r\n      SeriesNumber,\r\n      SeriesDate,\r\n      SOPInstanceUID,\r\n      SeriesInstanceUID,\r\n      StudyInstanceUID,\r\n      SOPClassHandlerId,\r\n      SOPClassUID,\r\n      referencedImages: null,\r\n      measurements: null,\r\n      pdfUrl,\r\n      instances: [instance],\r\n      thumbnailSrc: dataSource.retrieve.directURL({\r\n        instance,\r\n        defaultPath: '/thumbnail',\r\n        defaultType: 'image/jpeg',\r\n        tag: 'Absent',\r\n      }),\r\n      isDerivedDisplaySet: true,\r\n      isLoaded: false,\r\n      sopClassUids,\r\n      numImageFrames: 0,\r\n      numInstances: 1,\r\n      instance,\r\n    };\r\n    return displaySet;\r\n  });\r\n};\r\n\r\nexport default function getSopClassHandlerModule({ servicesManager, extensionManager }) {\r\n  const getDisplaySetsFromSeries = instances => {\r\n    return _getDisplaySetsFromSeries(instances, servicesManager, extensionManager);\r\n  };\r\n\r\n  return [\r\n    {\r\n      name: 'dicom-pdf',\r\n      sopClassUids,\r\n      getDisplaySetsFromSeries,\r\n    },\r\n  ];\r\n}\r\n","import React from 'react';\r\nimport getSopClassHandlerModule from './getSopClassHandlerModule';\r\nimport { id } from './id.js';\r\n\r\nconst Component = React.lazy(() => {\r\n  return import(/* webpackPrefetch: true */ './viewports/OHIFCornerstonePdfViewport');\r\n});\r\n\r\nconst OHIFCornerstonePdfViewport = props => {\r\n  return (\r\n    <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n */\r\nconst dicomPDFExtension = {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id,\r\n  /**\r\n   *\r\n   *\r\n   * @param {object} [configuration={}]\r\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\r\n   */\r\n  getViewportModule({ servicesManager, extensionManager }) {\r\n    const ExtendedOHIFCornerstonePdfViewport = props => {\r\n      return (\r\n        <OHIFCornerstonePdfViewport\r\n          servicesManager={servicesManager}\r\n          extensionManager={extensionManager}\r\n          {...props}\r\n        />\r\n      );\r\n    };\r\n\r\n    return [{ name: 'dicom-pdf', component: ExtendedOHIFCornerstonePdfViewport }];\r\n  },\r\n  getSopClassHandlerModule,\r\n};\r\n\r\nexport default dicomPDFExtension;\r\n"],"names":["id","packageJson","SOPClassHandlerId","ImageSet","classes","sopClassUids","Object","values","ENCAPSULATED_PDF","Component","React","OHIFCornerstonePdfViewport","props","fallback","getViewportModule","servicesManager","extensionManager","name","component","_extends","getSopClassHandlerModule","getDisplaySetsFromSeries","instances","_getDisplaySetsFromSeries","dataSource","getActiveDataSource","map","instance","Modality","SOPInstanceUID","SeriesDescription","MIMETypeOfEncapsulatedDocument","SeriesNumber","SeriesDate","SeriesInstanceUID","StudyInstanceUID","SOPClassUID","pdfUrl","retrieve","directURL","tag","defaultType","singlepart","displaySetInstanceUID","utils","guid","referencedImages","measurements","thumbnailSrc","defaultPath","isDerivedDisplaySet","isLoaded","numImageFrames","numInstances"],"sourceRoot":""}