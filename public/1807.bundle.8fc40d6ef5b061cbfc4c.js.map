{"version":3,"file":"1807.bundle.8fc40d6ef5b061cbfc4c.js","mappings":"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","sources":["webpack:///../../../modes/tmtv/src/initToolGroups.js","webpack:///../../../modes/tmtv/src/toolbarButtons.ts","webpack:///../../../modes/tmtv/src/id.js","webpack:///../../../modes/tmtv/src/index.ts","webpack:///../../../modes/tmtv/src/utils/setCrosshairsConfiguration.js","webpack:///../../../modes/tmtv/src/utils/setFusionActiveVolume.js"],"sourcesContent":["export const toolGroupIds = {\r\n  CT: 'ctToolGroup',\r\n  PT: 'ptToolGroup',\r\n  Fusion: 'fusionToolGroup',\r\n  MIP: 'mipToolGroup',\r\n  default: 'default',\r\n};\r\n\r\nfunction _initToolGroups(toolNames, Enums, toolGroupService, commandsManager) {\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.WindowLevel,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\r\n      },\r\n      {\r\n        toolName: toolNames.StackScroll,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }],\r\n      },\r\n    ],\r\n    passive: [\r\n      { toolName: toolNames.Length },\r\n      { toolName: toolNames.SegmentBidirectional },\r\n      {\r\n        toolName: toolNames.ArrowAnnotate,\r\n        configuration: {\r\n          getTextCallback: (callback, eventDetails) => {\r\n            commandsManager.runCommand('arrowTextCallback', {\r\n              callback,\r\n              eventDetails,\r\n            });\r\n          },\r\n          changeTextCallback: (data, eventDetails, callback) => {\r\n            commandsManager.runCommand('arrowTextCallback', {\r\n              callback,\r\n              data,\r\n              eventDetails,\r\n            });\r\n          },\r\n        },\r\n      },\r\n      { toolName: toolNames.Bidirectional },\r\n      { toolName: toolNames.DragProbe },\r\n      { toolName: toolNames.Probe },\r\n      { toolName: toolNames.EllipticalROI },\r\n      { toolName: toolNames.RectangleROI },\r\n      { toolName: toolNames.StackScroll },\r\n      { toolName: toolNames.Angle },\r\n      { toolName: toolNames.CobbAngle },\r\n      { toolName: toolNames.Magnify },\r\n      {\r\n        toolName: 'CircularBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'FILL_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'CircularEraser',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'ERASE_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'SphereBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'FILL_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'SphereEraser',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'ERASE_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdCircularBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdSphereBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdCircularBrushDynamic',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\r\n          // preview: {\r\n          //   enabled: true,\r\n          // },\r\n          threshold: {\r\n            isDynamic: true,\r\n            dynamicRadius: 3,\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    enabled: [],\r\n    disabled: [\r\n      {\r\n        toolName: toolNames.Crosshairs,\r\n        configuration: {\r\n          disableOnPassive: true,\r\n          autoPan: {\r\n            enabled: false,\r\n            panSize: 10,\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.CT, tools);\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.PT, {\r\n    active: tools.active,\r\n    passive: [...tools.passive, { toolName: 'RectangleROIStartEndThreshold' }],\r\n    enabled: tools.enabled,\r\n    disabled: tools.disabled,\r\n  });\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.Fusion, tools);\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.default, tools);\r\n\r\n  const mipTools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.VolumeRotate,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }],\r\n        configuration: {\r\n          rotateIncrementDegrees: 5,\r\n        },\r\n      },\r\n      {\r\n        toolName: toolNames.MipJumpToClick,\r\n        configuration: {\r\n          toolGroupId: toolGroupIds.PT,\r\n        },\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n    ],\r\n    enabled: [\r\n      {\r\n        toolName: toolNames.OrientationMarker,\r\n        configuration: {\r\n          orientationWidget: {\r\n            viewportCorner: 'BOTTOM_LEFT',\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.MIP, mipTools);\r\n}\r\n\r\nfunction initToolGroups(toolNames, Enums, toolGroupService, commandsManager) {\r\n  _initToolGroups(toolNames, Enums, toolGroupService, commandsManager);\r\n}\r\n\r\nexport default initToolGroups;\r\n","import { toolGroupIds } from './initToolGroups';\r\n\r\nconst setToolActiveToolbar = {\r\n  commandName: 'setToolActiveToolbar',\r\n  commandOptions: {\r\n    toolGroupIds: [toolGroupIds.CT, toolGroupIds.PT, toolGroupIds.Fusion],\r\n  },\r\n};\r\n\r\nconst toolbarButtons = [\r\n  {\r\n    id: 'MeasurementTools',\r\n    uiType: 'ohif.toolButtonList',\r\n    props: {\r\n      buttonSection: 'measurementSection',\r\n      groupId: 'MeasurementTools',\r\n    },\r\n  },\r\n  {\r\n    id: 'SegmentationTools',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      groupId: 'SegmentationTools',\r\n      buttonSection: 'segmentationToolboxToolsSection',\r\n    },\r\n  },\r\n  {\r\n    id: 'BrushTools',\r\n    uiType: 'ohif.toolBoxButtonGroup',\r\n    props: {\r\n      buttonSection: 'brushToolsSection',\r\n      groupId: 'BrushTools',\r\n    },\r\n  },\r\n  {\r\n    id: 'Length',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-length',\r\n      label: 'Length',\r\n      tooltip: 'Length Tool',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Bidirectional',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-bidirectional',\r\n      label: 'Bidirectional',\r\n      tooltip: 'Bidirectional Tool',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'ArrowAnnotate',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-annotate',\r\n      label: 'Arrow Annotate',\r\n      tooltip: 'Arrow Annotate Tool',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'EllipticalROI',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-ellipse',\r\n      label: 'Ellipse',\r\n      tooltip: 'Ellipse Tool',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Zoom',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-zoom',\r\n      label: 'Zoom',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'WindowLevel',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-window-level',\r\n      label: 'Window Level',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Crosshairs',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-crosshair',\r\n      label: 'Crosshairs',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Pan',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-move',\r\n      label: 'Pan',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'RectangleROIStartEndThreshold',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'tool-create-threshold',\r\n      label: 'Rectangle ROI Threshold',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: [\r\n        'evaluate.cornerstone.segmentation',\r\n        {\r\n          name: 'evaluate.cornerstoneTool',\r\n          disabledText: 'Select the PT Axial to enable this tool',\r\n        },\r\n      ],\r\n      options: 'tmtv.RectangleROIThresholdOptions',\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 'Brush',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'icon-tool-brush',\r\n      label: 'Brush',\r\n      evaluate: {\r\n        name: 'evaluate.cornerstone.segmentation',\r\n        toolNames: ['CircularBrush', 'SphereBrush'],\r\n        disabledText: 'Create new segmentation to enable this tool.',\r\n      },\r\n      options: [\r\n        {\r\n          name: 'Radius (mm)',\r\n          id: 'brush-radius',\r\n          type: 'range',\r\n          min: 0.5,\r\n          max: 99.5,\r\n          step: 0.5,\r\n          value: 25,\r\n          commands: {\r\n            commandName: 'setBrushSize',\r\n            commandOptions: { toolNames: ['CircularBrush', 'SphereBrush'] },\r\n          },\r\n        },\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          id: 'brush-mode',\r\n          value: 'CircularBrush',\r\n          values: [\r\n            { value: 'CircularBrush', label: 'Circle' },\r\n            { value: 'SphereBrush', label: 'Sphere' },\r\n          ],\r\n          commands: 'setToolActiveToolbar',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Eraser',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'icon-tool-eraser',\r\n      label: 'Eraser',\r\n      evaluate: {\r\n        name: 'evaluate.cornerstone.segmentation',\r\n        toolNames: ['CircularEraser', 'SphereEraser'],\r\n      },\r\n      options: [\r\n        {\r\n          name: 'Radius (mm)',\r\n          id: 'eraser-radius',\r\n          type: 'range',\r\n          min: 0.5,\r\n          max: 99.5,\r\n          step: 0.5,\r\n          value: 25,\r\n          commands: {\r\n            commandName: 'setBrushSize',\r\n            commandOptions: { toolNames: ['CircularEraser', 'SphereEraser'] },\r\n          },\r\n        },\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          id: 'eraser-mode',\r\n          value: 'CircularEraser',\r\n          values: [\r\n            { value: 'CircularEraser', label: 'Circle' },\r\n            { value: 'SphereEraser', label: 'Sphere' },\r\n          ],\r\n          commands: 'setToolActiveToolbar',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Threshold',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'icon-tool-threshold',\r\n      label: 'Threshold Tool',\r\n      evaluate: {\r\n        name: 'evaluate.cornerstone.segmentation',\r\n        toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\r\n      },\r\n      options: [\r\n        {\r\n          name: 'Radius (mm)',\r\n          id: 'threshold-radius',\r\n          type: 'range',\r\n          min: 0.5,\r\n          max: 99.5,\r\n          step: 0.5,\r\n          value: 25,\r\n          commands: {\r\n            commandName: 'setBrushSize',\r\n            commandOptions: {\r\n              toolNames: [\r\n                'ThresholdCircularBrush',\r\n                'ThresholdSphereBrush',\r\n                'ThresholdCircularBrushDynamic',\r\n              ],\r\n            },\r\n          },\r\n        },\r\n        {\r\n          name: 'Threshold',\r\n          type: 'radio',\r\n          id: 'dynamic-mode',\r\n          value: 'ThresholdRange',\r\n          values: [\r\n            { value: 'ThresholdDynamic', label: 'Dynamic' },\r\n            { value: 'ThresholdRange', label: 'Range' },\r\n          ],\r\n          commands: ({ value, commandsManager }) => {\r\n            if (value === 'ThresholdDynamic') {\r\n              commandsManager.run('setToolActive', {\r\n                toolName: 'ThresholdCircularBrushDynamic',\r\n              });\r\n            } else {\r\n              commandsManager.run('setToolActive', {\r\n                toolName: 'ThresholdCircularBrush',\r\n              });\r\n            }\r\n          },\r\n        },\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          id: 'eraser-mode',\r\n          value: 'ThresholdCircularBrush',\r\n          values: [\r\n            { value: 'ThresholdCircularBrush', label: 'Circle' },\r\n            { value: 'ThresholdSphereBrush', label: 'Sphere' },\r\n          ],\r\n          condition: ({ options }) =>\r\n            options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\r\n          commands: 'setToolActiveToolbar',\r\n        },\r\n        {\r\n          name: 'ThresholdRange',\r\n          type: 'double-range',\r\n          id: 'threshold-range',\r\n          min: 0,\r\n          max: 50,\r\n          step: 0.5,\r\n          value: [2.5, 50],\r\n          condition: ({ options }) =>\r\n            options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\r\n          commands: {\r\n            commandName: 'setThresholdRange',\r\n            commandOptions: {\r\n              toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n];\r\n\r\nexport default toolbarButtons;\r\n","import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","import { classes } from '@ohif/core';\r\nimport toolbarButtons from './toolbarButtons';\r\nimport { id } from './id.js';\r\nimport initToolGroups from './initToolGroups.js';\r\nimport setCrosshairsConfiguration from './utils/setCrosshairsConfiguration.js';\r\nimport setFusionActiveVolume from './utils/setFusionActiveVolume.js';\r\nimport i18n from 'i18next';\r\n\r\nconst { MetadataProvider } = classes;\r\n\r\nconst ohif = {\r\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\r\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\r\n  thumbnailList: '@ohif/extension-default.panelModule.seriesList',\r\n};\r\n\r\nconst cs3d = {\r\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\r\n  segPanel: '@ohif/extension-cornerstone.panelModule.panelSegmentationNoHeader',\r\n  measurements: '@ohif/extension-cornerstone.panelModule.measurements',\r\n};\r\n\r\nconst tmtv = {\r\n  hangingProtocol: '@ohif/extension-tmtv.hangingProtocolModule.ptCT',\r\n  petSUV: '@ohif/extension-tmtv.panelModule.petSUV',\r\n  tmtv: '@ohif/extension-tmtv.panelModule.tmtv',\r\n};\r\n\r\nconst extensionDependencies = {\r\n  // Can derive the versions at least process.env.from npm_package_version\r\n  '@ohif/extension-default': '^3.0.0',\r\n  '@ohif/extension-cornerstone': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\r\n  '@ohif/extension-tmtv': '^3.0.0',\r\n};\r\n\r\nconst unsubscriptions = [];\r\nfunction modeFactory({ modeConfiguration }) {\r\n  return {\r\n    // TODO: We're using this as a route segment\r\n    // We should not be.\r\n    id,\r\n    routeName: 'tmtv',\r\n    displayName: i18n.t('Modes:Total Metabolic Tumor Volume'),\r\n    /**\r\n     * Lifecycle hooks\r\n     */\r\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }: withAppTypes) => {\r\n      const {\r\n        toolbarService,\r\n        toolGroupService,\r\n        customizationService,\r\n        hangingProtocolService,\r\n        displaySetService,\r\n      } = servicesManager.services;\r\n\r\n      const utilityModule = extensionManager.getModuleEntry(\r\n        '@ohif/extension-cornerstone.utilityModule.tools'\r\n      );\r\n\r\n      const { toolNames, Enums } = utilityModule.exports;\r\n\r\n      // Init Default and SR ToolGroups\r\n      initToolGroups(toolNames, Enums, toolGroupService, commandsManager);\r\n\r\n      const { unsubscribe } = toolGroupService.subscribe(\r\n        toolGroupService.EVENTS.VIEWPORT_ADDED,\r\n        () => {\r\n          // For fusion toolGroup we need to add the volumeIds for the crosshairs\r\n          // since in the fusion viewport we don't want both PT and CT to render MIP\r\n          // when slabThickness is modified\r\n          const { displaySetMatchDetails } = hangingProtocolService.getMatchDetails();\r\n\r\n          setCrosshairsConfiguration(\r\n            displaySetMatchDetails,\r\n            toolNames,\r\n            toolGroupService,\r\n            displaySetService\r\n          );\r\n\r\n          setFusionActiveVolume(\r\n            displaySetMatchDetails,\r\n            toolNames,\r\n            toolGroupService,\r\n            displaySetService\r\n          );\r\n        }\r\n      );\r\n\r\n      unsubscriptions.push(unsubscribe);\r\n      toolbarService.addButtons(toolbarButtons);\r\n      toolbarService.createButtonSection('primary', [\r\n        'MeasurementTools',\r\n        'Zoom',\r\n        'WindowLevel',\r\n        'Crosshairs',\r\n        'Pan',\r\n      ]);\r\n      toolbarService.createButtonSection('measurementSection', [\r\n        'Length',\r\n        'Bidirectional',\r\n        'ArrowAnnotate',\r\n        'EllipticalROI',\r\n      ]);\r\n\r\n      toolbarService.createButtonSection('ROIThresholdToolbox', ['SegmentationTools']);\r\n      toolbarService.createButtonSection('segmentationToolboxToolsSection', [\r\n        'RectangleROIStartEndThreshold',\r\n        'BrushTools',\r\n      ]);\r\n\r\n      toolbarService.createButtonSection('brushToolsSection', ['Brush', 'Eraser', 'Threshold']);\r\n\r\n      customizationService.setCustomizations({\r\n        'panelSegmentation.tableMode': {\r\n          $set: 'expanded',\r\n        },\r\n        'panelSegmentation.onSegmentationAdd': {\r\n          $set: () => {\r\n            commandsManager.run('createNewLabelmapFromPT');\r\n          },\r\n        },\r\n      });\r\n\r\n      // For the hanging protocol we need to decide on the window level\r\n      // based on whether the SUV is corrected or not, hence we can't hard\r\n      // code the window level in the hanging protocol but we add a custom\r\n      // attribute to the hanging protocol that will be used to get the\r\n      // window level based on the metadata\r\n      hangingProtocolService.addCustomAttribute(\r\n        'getPTVOIRange',\r\n        'get PT VOI based on corrected or not',\r\n        props => {\r\n          const ptDisplaySet = props.find(imageSet => imageSet.Modality === 'PT');\r\n\r\n          if (!ptDisplaySet) {\r\n            return;\r\n          }\r\n\r\n          const { imageId } = ptDisplaySet.images[0];\r\n          const imageIdScalingFactor = MetadataProvider.get('scalingModule', imageId);\r\n\r\n          const isSUVAvailable = imageIdScalingFactor && imageIdScalingFactor.suvbw;\r\n\r\n          if (isSUVAvailable) {\r\n            return {\r\n              windowWidth: 5,\r\n              windowCenter: 2.5,\r\n            };\r\n          }\r\n\r\n          return;\r\n        }\r\n      );\r\n    },\r\n    onModeExit: ({ servicesManager }: withAppTypes) => {\r\n      const {\r\n        toolGroupService,\r\n        syncGroupService,\r\n        segmentationService,\r\n        cornerstoneViewportService,\r\n        uiDialogService,\r\n        uiModalService,\r\n      } = servicesManager.services;\r\n\r\n      unsubscriptions.forEach(unsubscribe => unsubscribe());\r\n      uiDialogService.hideAll();\r\n      uiModalService.hide();\r\n      toolGroupService.destroy();\r\n      syncGroupService.destroy();\r\n      segmentationService.destroy();\r\n      cornerstoneViewportService.destroy();\r\n    },\r\n    validationTags: {\r\n      study: [],\r\n      series: [],\r\n    },\r\n    isValidMode: ({ modalities, study }) => {\r\n      const modalities_list = modalities.split('\\\\');\r\n      const invalidModalities = ['SM'];\r\n\r\n      const isValid =\r\n        modalities_list.includes('CT') &&\r\n        study.mrn !== 'M1' &&\r\n        modalities_list.includes('PT') &&\r\n        !invalidModalities.some(modality => modalities_list.includes(modality)) &&\r\n        // This is study is a 4D study with PT and CT and not a 3D study for the tmtv\r\n        // mode, until we have a better way to identify 4D studies we will use the\r\n        // StudyInstanceUID to identify the study\r\n        // Todo: when we add the 4D mode which comes with a mechanism to identify\r\n        // 4D studies we can use that\r\n        study.studyInstanceUid !== '1.3.6.1.4.1.12842.1.1.14.3.20220915.105557.468.2963630849';\r\n\r\n      // there should be both CT and PT modalities and the modality should not be SM\r\n      return {\r\n        valid: isValid,\r\n        description: 'The mode requires both PT and CT series in the study',\r\n      };\r\n    },\r\n    routes: [\r\n      {\r\n        path: 'tmtv',\r\n        /*init: ({ servicesManager, extensionManager }) => {\r\n          //defaultViewerRouteInit\r\n        },*/\r\n        layoutTemplate: () => {\r\n          return {\r\n            id: ohif.layout,\r\n            props: {\r\n              leftPanels: [ohif.thumbnailList],\r\n              leftPanelResizable: true,\r\n              leftPanelClosed: true,\r\n              rightPanels: [tmtv.tmtv, tmtv.petSUV],\r\n              rightPanelResizable: true,\r\n              viewports: [\r\n                {\r\n                  namespace: cs3d.viewport,\r\n                  displaySetsToDisplay: [ohif.sopClassHandler],\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ],\r\n    extensions: extensionDependencies,\r\n    hangingProtocol: tmtv.hangingProtocol,\r\n    sopClassHandlers: [ohif.sopClassHandler],\r\n    ...modeConfiguration,\r\n  };\r\n}\r\n\r\nconst mode = {\r\n  id,\r\n  modeFactory,\r\n  extensionDependencies,\r\n};\r\n\r\nexport default mode;\r\n","import { toolGroupIds } from '../initToolGroups';\r\n\r\nexport default function setCrosshairsConfiguration(\r\n  matches,\r\n  toolNames,\r\n  toolGroupService,\r\n  displaySetService\r\n) {\r\n  const matchDetails = matches.get('ctDisplaySet');\r\n\r\n  if (!matchDetails) {\r\n    return;\r\n  }\r\n\r\n  const { SeriesInstanceUID } = matchDetails;\r\n  const displaySets = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\r\n\r\n  const toolConfig = toolGroupService.getToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.Crosshairs\r\n  );\r\n\r\n  const crosshairsConfig = {\r\n    ...toolConfig,\r\n    filterActorUIDsToSetSlabThickness: [displaySets[0].displaySetInstanceUID],\r\n  };\r\n\r\n  toolGroupService.setToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.Crosshairs,\r\n    crosshairsConfig\r\n  );\r\n}\r\n","import { toolGroupIds } from '../initToolGroups';\r\n\r\nexport default function setFusionActiveVolume(\r\n  matches,\r\n  toolNames,\r\n  toolGroupService,\r\n  displaySetService\r\n) {\r\n  const matchDetails = matches.get('ptDisplaySet');\r\n  const matchDetails2 = matches.get('ctDisplaySet');\r\n\r\n  if (!matchDetails) {\r\n    return;\r\n  }\r\n\r\n  const { SeriesInstanceUID } = matchDetails;\r\n\r\n  const displaySets = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\r\n\r\n  if (!displaySets || displaySets.length === 0) {\r\n    return;\r\n  }\r\n\r\n  const wlToolConfig = toolGroupService.getToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.WindowLevel\r\n  );\r\n\r\n  const ellipticalToolConfig = toolGroupService.getToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.EllipticalROI\r\n  );\r\n\r\n  // Todo: this should not take into account the loader id\r\n  const volumeId = `cornerstoneStreamingImageVolume:${displaySets[0].displaySetInstanceUID}`;\r\n  const { SeriesInstanceUID: SeriesInstanceUID2 } = matchDetails2;\r\n  const ctDisplaySets = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID2);\r\n  const ctVolumeId = `cornerstoneStreamingImageVolume:${ctDisplaySets[0].displaySetInstanceUID}`;\r\n\r\n  const windowLevelConfig = {\r\n    ...wlToolConfig,\r\n    volumeId: ctVolumeId,\r\n  };\r\n\r\n  const ellipticalROIConfig = {\r\n    ...ellipticalToolConfig,\r\n    volumeId,\r\n  };\r\n\r\n  toolGroupService.setToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.WindowLevel,\r\n    windowLevelConfig\r\n  );\r\n\r\n  toolGroupService.setToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.EllipticalROI,\r\n    ellipticalROIConfig\r\n  );\r\n}\r\n"],"names":["toolGroupIds","CT","PT","Fusion","MIP","default","toolNames","Enums","toolGroupService","commandsManager","tools","active","toolName","WindowLevel","bindings","mouseButton","MouseBindings","Primary","Pan","Auxiliary","Zoom","Secondary","StackScroll","Wheel","passive","Length","SegmentBidirectional","ArrowAnnotate","configuration","getTextCallback","callback","eventDetails","runCommand","changeTextCallback","data","Bidirectional","DragProbe","Probe","EllipticalROI","RectangleROI","Angle","CobbAngle","Magnify","parentTool","activeStrategy","threshold","isDynamic","dynamicRadius","enabled","disabled","Crosshairs","disableOnPassive","autoPan","panSize","createToolGroupAndAddTools","mipTools","VolumeRotate","rotateIncrementDegrees","MipJumpToClick","toolGroupId","OrientationMarker","orientationWidget","viewportCorner","_initToolGroups","setToolActiveToolbar","commandName","commandOptions","id","uiType","props","buttonSection","groupId","icon","label","tooltip","commands","evaluate","name","disabledText","options","type","min","max","step","value","values","run","condition","find","option","packageJson","MetadataProvider","classes","ohif","cs3d","tmtv","extensionDependencies","unsubscriptions","modeFactory","modeConfiguration","routeName","displayName","i18n","t","onModeEnter","servicesManager","extensionManager","toolbarService","customizationService","hangingProtocolService","displaySetService","services","utilityModule","getModuleEntry","exports","initToolGroups","unsubscribe","subscribe","EVENTS","VIEWPORT_ADDED","displaySetMatchDetails","getMatchDetails","matches","matchDetails","get","SeriesInstanceUID","displaySets","getDisplaySetsForSeries","crosshairsConfig","getToolConfiguration","filterActorUIDsToSetSlabThickness","displaySetInstanceUID","setToolConfiguration","setCrosshairsConfiguration","matchDetails2","length","wlToolConfig","ellipticalToolConfig","volumeId","SeriesInstanceUID2","windowLevelConfig","ellipticalROIConfig","setFusionActiveVolume","push","addButtons","toolbarButtons","createButtonSection","setCustomizations","$set","addCustomAttribute","ptDisplaySet","imageSet","Modality","imageId","images","imageIdScalingFactor","suvbw","windowWidth","windowCenter","onModeExit","syncGroupService","segmentationService","cornerstoneViewportService","uiDialogService","uiModalService","forEach","hideAll","hide","destroy","validationTags","study","series","isValidMode","modalities","modalities_list","split","valid","includes","mrn","some","modality","studyInstanceUid","description","routes","path","layoutTemplate","leftPanels","leftPanelResizable","leftPanelClosed","rightPanels","rightPanelResizable","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers"],"sourceRoot":""}