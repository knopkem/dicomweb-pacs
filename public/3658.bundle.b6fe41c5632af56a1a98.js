"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3658],{1152:(e,t,i)=>{i.r(t),i.d(t,{default:()=>W});const n=JSON.parse('{"UU":"@ohif/extension-dicom-microscopy"}').UU;var o=i(86326),s=i(2836),r=i(43984),a=i(62037),c=i(99993),d=i(55807);function l(e,t){let i=!1;Array.isArray(e[0])||(e=[e],i=!0);const n=t[t.length-1],o=n.ImageOrientationSlide,s=function(e){if(e.PixelSpacing)return e.PixelSpacing;const t=e.SharedFunctionalGroupsSequence[0];return t.PixelMeasuresSequence[0].PixelSpacing}(n),r=n.TotalPixelMatrixOriginSequence[0],a=[Number(r.XOffsetInSlideCoordinateSystem),Number(r.YOffsetInSlideCoordinateSystem)];return e=e.map((e=>{const t=[e[0],e[1]],i=function(e){if(!("offset"in e))throw new Error('Option "offset" is required.');if(!Array.isArray(e.offset))throw new Error('Option "offset" must be an array.');if(2!==e.offset.length)throw new Error('Option "offset" must be an array with 2 elements.');const t=e.offset;if(!("orientation"in e))throw new Error('Option "orientation" is required.');if(!Array.isArray(e.orientation))throw new Error('Option "orientation" must be an array.');if(6!==e.orientation.length)throw new Error('Option "orientation" must be an array with 6 elements.');const i=e.orientation;if(!("spacing"in e))throw new Error('Option "spacing" is required.');if(!Array.isArray(e.spacing))throw new Error('Option "spacing" must be an array.');if(2!==e.spacing.length)throw new Error('Option "spacing" must be an array with 2 elements.');const n=e.spacing;if(!("point"in e))throw new Error('Option "point" is required.');if(!Array.isArray(e.point))throw new Error('Option "point" must be an array.');if(2!==e.point.length)throw new Error('Option "point" must be an array with 2 elements.');const o=e.point,s=[[i[0]*n[1],i[3]*n[0],t[0]],[i[1]*n[1],i[4]*n[0],t[1]],[0,0,1]],r=(0,d.WCD)(s),a=[[o[0]],[o[1]],[1]],c=(0,d.lwT)(r,a),l=Number(c[1][0].toFixed(4));return[Number(c[0][0].toFixed(4)),l]}({offset:a,orientation:o,spacing:s,point:t});return[i[0],-(i[1]+1),0]})),i?e[0]:e}const u={color:"rgba(255,255,255,0.4)"},h={color:"rgba(255,255,255,0.0)"},p={color:"rgb(0,255,0)",width:1.5},m={color:"rgb(255,255,0)",width:1.5},g={active:{image:{circle:{fill:u,stroke:m,radius:5}},fill:u,stroke:m},default:{image:{circle:{fill:h,stroke:p,radius:5}},fill:h,stroke:p}},I={ROI_ADDED:"dicommicroscopyviewer_roi_added",ROI_MODIFIED:"dicommicroscopyviewer_roi_modified",ROI_REMOVED:"dicommicroscopyviewer_roi_removed",ROI_DRAWN:"dicommicroscopyviewer_roi_drawn",ROI_SELECTED:"dicommicroscopyviewer_roi_selected",MOVE_STARTED:"dicommicroscopyviewer_move_started",MOVE_ENDED:"dicommicroscopyviewer_move_ended",LOADING_STARTED:"dicommicroscopyviewer_loading_started",LOADING_ENDED:"dicommicroscopyviewer_loading_ended",LOADING_ERROR:"dicommicroscopyviewer_loading_error",FRAME_LOADING_STARTED:"dicommicroscopyviewer_frame_loading_started",FRAME_LOADING_ENDED:"dicommicroscopyviewer_frame_loading_ended",FRAME_LOADING_ERROR:"dicommicroscopyviewer_frame_loading_ended"},S={ADDED:"added",MODIFIED:"modified",REMOVED:"removed",UPDATED:"updated",SELECTED:"selected"};class f extends a.Rc{constructor(e,t,i,n,o){super(S),this.viewer=e,this.viewportId=t,this.container=i,this.studyInstanceUID=n,this.seriesInstanceUID=o,this.onRoiAdded=this.roiAddedHandler.bind(this),this.onRoiModified=this.roiModifiedHandler.bind(this),this.onRoiRemoved=this.roiRemovedHandler.bind(this),this.onRoiSelected=this.roiSelectedHandler.bind(this),this.contextMenuCallback=()=>{};const s=Object.getOwnPropertySymbols(this.viewer);this._drawingSource=s.find((e=>"drawingSource"===e.description)),this._pyramid=s.find((e=>"pyramid"===e.description)),this._map=s.find((e=>"map"===e.description)),this._affine=s.find((e=>"affine"===e.description)),this.registerEvents(),this.activateDefaultInteractions()}addContextMenuCallback(e){this.contextMenuCallback=e}destroy(){this.unregisterEvents()}publish(e,t){this._broadcastEvent(e,{roiGraphic:t,managedViewer:this})}registerEvents(){this.container.addEventListener(I.ROI_ADDED,this.onRoiAdded),this.container.addEventListener(I.ROI_MODIFIED,this.onRoiModified),this.container.addEventListener(I.ROI_REMOVED,this.onRoiRemoved),this.container.addEventListener(I.ROI_SELECTED,this.onRoiSelected)}unregisterEvents(){this.container.removeEventListener(I.ROI_ADDED,this.onRoiAdded),this.container.removeEventListener(I.ROI_MODIFIED,this.onRoiModified),this.container.removeEventListener(I.ROI_REMOVED,this.onRoiRemoved),this.container.removeEventListener(I.ROI_SELECTED,this.onRoiSelected)}roiAddedHandler(e){const t=e.detail.payload;this.publish(S.ADDED,t),this.publish(S.UPDATED,t)}roiModifiedHandler(e){const t=e.detail.payload;this.publish(S.MODIFIED,t),this.publish(S.UPDATED,t)}roiRemovedHandler(e){const t=e.detail.payload;this.publish(S.REMOVED,t),this.publish(S.UPDATED,t)}roiSelectedHandler(e){const t=e.detail.payload;this.publish(S.SELECTED,t)}runSilently(e){this.unregisterEvents(),e(),this.registerEvents()}clearRoiGraphics(){this.runSilently((()=>this.viewer.removeAllROIs()))}showROIs(){this.viewer.showROIs()}hideROIs(){this.viewer.hideROIs()}addRoiGraphic(e){this.runSilently((()=>this.viewer.addROI(e,g.default)))}addRoiGraphicWithLabel(e,t){this.runSilently((()=>this.viewer.addROI(e,g.default))),this._broadcastEvent(S.ADDED,{roiGraphic:e,managedViewer:this,label:t})}setROIStyle(e,t){this.viewer.setROIStyle(e,t)}removeRoiGraphic(e){this.viewer.removeROI(e)}updateROIProperties({uid:e,properties:t}){this.viewer.updateROI({uid:e,properties:t})}toggleOverviewMap(){this.viewer.toggleOverviewMap()}activateDefaultInteractions(){document.querySelector(".DicomMicroscopyViewer").addEventListener("contextmenu",(e=>{e.preventDefault()}),!1);this.activateInteractions([["dragPan",{bindings:{mouseButtons:["middle"]}}],["dragZoom",{bindings:{mouseButtons:["right"]}}],["modify",{}]])}activateInteractions(e){const t={draw:e=>e?"activateDrawInteraction":"deactivateDrawInteraction",modify:e=>e?"activateModifyInteraction":"deactivateModifyInteraction",translate:e=>e?"activateTranslateInteraction":"deactivateTranslateInteraction",snap:e=>e?"activateSnapInteraction":"deactivateSnapInteraction",dragPan:e=>e?"activateDragPanInteraction":"deactivateDragPanInteraction",dragZoom:e=>e?"activateDragZoomInteraction":"deactivateDragZoomInteraction",select:e=>e?"activateSelectInteraction":"deactivateSelectInteraction"};Object.keys(t).forEach((i=>{const n=e.find((e=>e[0]===i));if(n){const[e,i]=n,o=t[e](!0);this.viewer[o](i)}else{const e=t[i](!1);this.viewer[e]()}}))}_getMapView(){return this._getMap().getView()}_getMap(){const e=Object.getOwnPropertySymbols(this.viewer).find((e=>"Symbol(map)"===String(e)));return window.map=this.viewer[e],this.viewer[e]}getViewState(){const e=this._getMapView();return{center:e.getCenter(),resolution:e.getResolution(),zoom:e.getZoom()}}setViewState(e){const t=this._getMapView();t.setZoom(e.zoom),t.setResolution(e.resolution),t.setCenter(e.center)}setViewStateByExtent(e){const t=e.getCoordinates();Array.isArray(t[0])&&!t[2]?this._jumpToPolyline(t):Array.isArray(t[0])?this._jumpToPolygonOrEllipse(t):this._jumpToPoint(t)}_jumpToPoint(e){const t=l(e,this.viewer[this._pyramid].metadata);this._getMapView().setCenter(t)}_jumpToPolyline(e){const t=l(e,this.viewer[this._pyramid].metadata),i=this._getMapView(),n=t[0],o=t[1],s=[(n[0]+o[0])/2,(n[1]+o[1])/2];i.setCenter(s)}_jumpToPolygonOrEllipse(e){const t=this.viewer[this._pyramid].metadata;let i=1/0,n=-1/0,o=1/0,s=-1/0;e.forEach((e=>{let r=l(e,t);const[a,c]=r;a<i?i=a:a>n&&(n=a),c<o?o=c:c>s&&(s=c)}));const r=n-i,a=s-o;i-=.5*r,n+=.5*r,o-=.5*a,s+=.5*a;const c=this._getMap();c.getView().fit([i,o,n,s],c.getSize())}}const E=f;const v={LABEL_UPDATED:"labelUpdated",GRAPHIC_UPDATED:"graphicUpdated",VIEW_UPDATED:"viewUpdated",REMOVED:"removed"};class y extends a.Rc{constructor(e,t,i,n="",o=null){super(v),this.uid=e.uid,this.roiGraphic=e,this.studyInstanceUID=t,this.seriesInstanceUID=i,this.label=n,this.viewState=o,this.setMeasurements(e)}getScoord3d(){const e=this.roiGraphic;return e[Object.getOwnPropertySymbols(e).find((e=>"Symbol(scoord3d)"===String(e)))]}getCoordinates(){const e=this.getScoord3d();return e[Object.getOwnPropertySymbols(e).find((e=>"Symbol(coordinates)"===String(e)))]}destroy(){this._broadcastEvent(v.REMOVED,this)}setRoiGraphic(e){this.roiGraphic=e,this.setMeasurements(),this._broadcastEvent(v.GRAPHIC_UPDATED,this)}setMeasurements(){const e=this.roiGraphic.scoord3d.graphicType,t=this.roiGraphic.scoord3d.graphicData;switch(e){case"ELLIPSE":const e=t[0],i=t[1];let n=i[0]-e[0],o=i[1]-e[1];n*=n,o*=o;const s=Math.sqrt(n+o)/2,r=Math.PI*s*s;this._area=r,this._length=void 0;break;case"POLYGON":const a=function(e){const t=e.length;let i=0,n=t-1;for(let o=0;o<t;o++)i+=(e[n][0]+e[o][0])*(e[n][1]-e[o][1]),n=o;return Math.abs(i/2)}(t);this._area=a,this._length=void 0;break;case"POINT":this._area=void 0,this._length=void 0;break;case"POLYLINE":let c=0;for(let e=1;e<t.length;e++){const i=t[e-1],n=t[e];let o=n[0]-i[0],s=n[1]-i[1];o*=o,s*=s,c+=Math.sqrt(o+s)}this._area=void 0,this._length=c}}setViewState(e){this.viewState=e,this._broadcastEvent(v.VIEW_UPDATED,this)}setLabel(e,t){this.label=e||t&&t.CodeMeaning,this.finding=t||{CodingSchemeDesignator:"@ohif/extension-dicom-microscopy",CodeValue:e,CodeMeaning:e},this._broadcastEvent(v.LABEL_UPDATED,this)}getLabel(){return this.label?`${this.label}`:""}getDetailedLabel(){return this.label?`${this.label}`:"(empty)"}getLength(){return this._length}getArea(){return this._area}}const b=y;var A;const w={ANNOTATION_UPDATED:"annotationUpdated",ANNOTATION_SELECTED:"annotationSelected",ANNOTATION_REMOVED:"annotationRemoved",RELABEL:"relabel",DELETE:"delete"};class D extends a.Rc{constructor({servicesManager:e,extensionManager:t}){super(w),this.servicesManager=void 0,this.managedViewers=new Set,this.roiUids=new Set,this.annotations={},this.selectedAnnotation=null,this.pendingFocus=!1,this.servicesManager=e,this.peerImport=t.appConfig.peerImport,this._onRoiAdded=this._onRoiAdded.bind(this),this._onRoiModified=this._onRoiModified.bind(this),this._onRoiRemoved=this._onRoiRemoved.bind(this),this._onRoiUpdated=this._onRoiUpdated.bind(this),this._onRoiSelected=this._onRoiSelected.bind(this),this.isROIsVisible=!0}clear(){this.managedViewers.forEach((e=>e.destroy())),this.managedViewers.clear();for(const e in this.annotations)delete this.annotations[e];this.roiUids.clear(),this.selectedAnnotation=null,this.pendingFocus=!1}clearAnnotations(){Object.keys(this.annotations).forEach((e=>{this.removeAnnotation(this.annotations[e])}))}importDicomMicroscopyViewer(){return this.peerImport("dicom-microscopy-viewer")}_onRoiAdded(e){const{roiGraphic:t,managedViewer:i,label:n}=e,{studyInstanceUID:o,seriesInstanceUID:s}=i,r=i.getViewState(),a=new b(t,o,s,"",r);if(this.roiUids.add(t.uid),this.annotations[t.uid]=a,a.subscribe(v.LABEL_UPDATED,(()=>{this._broadcastEvent(w.ANNOTATION_UPDATED,a)})),void 0!==n)a.setLabel(n);else{const e=e=>i.updateROIProperties({uid:t.uid,properties:{label:e.label,finding:e.finding}});this.triggerRelabel(a,!0,e)}}_onRoiModified(e){const{roiGraphic:t,managedViewer:i}=e,n=this.getAnnotation(t.uid);n&&(n.setRoiGraphic(t),n.setViewState(i.getViewState()))}_onRoiRemoved(e){const{roiGraphic:t}=e;this.roiUids.delete(t.uid),this.annotations[t.uid].destroy(),delete this.annotations[t.uid],this._broadcastEvent(w.ANNOTATION_REMOVED,t)}_onRoiUpdated(e){const{roiGraphic:t,managedViewer:i}=e;this.synchronizeViewers(i),this._broadcastEvent(w.ANNOTATION_UPDATED,this.getAnnotation(t.uid))}_onRoiSelected(e){const{roiGraphic:t}=e,i=this.getAnnotation(t.uid);i&&i!==this.getSelectedAnnotation()&&(this.selectedAnnotation&&this.clearSelection(),this.selectedAnnotation=i,this._broadcastEvent(w.ANNOTATION_SELECTED,i))}_addManagedViewerSubscriptions(e){e._roiAddedSubscription=e.subscribe(S.ADDED,this._onRoiAdded),e._roiModifiedSubscription=e.subscribe(S.MODIFIED,this._onRoiModified),e._roiRemovedSubscription=e.subscribe(S.REMOVED,this._onRoiRemoved),e._roiUpdatedSubscription=e.subscribe(S.UPDATED,this._onRoiUpdated),e._roiSelectedSubscription=e.subscribe(S.UPDATED,this._onRoiSelected)}_removeManagedViewerSubscriptions(e){e._roiAddedSubscription&&e._roiAddedSubscription.unsubscribe(),e._roiModifiedSubscription&&e._roiModifiedSubscription.unsubscribe(),e._roiRemovedSubscription&&e._roiRemovedSubscription.unsubscribe(),e._roiUpdatedSubscription&&e._roiUpdatedSubscription.unsubscribe(),e._roiSelectedSubscription&&e._roiSelectedSubscription.unsubscribe(),e._roiAddedSubscription=null,e._roiModifiedSubscription=null,e._roiRemovedSubscription=null,e._roiUpdatedSubscription=null,e._roiSelectedSubscription=null}_getManagedViewersForSeries(e,t){return Array.from(this.managedViewers).filter((i=>i.studyInstanceUID===e&&i.seriesInstanceUID===t))}getManagedViewersForStudy(e){return Array.from(this.managedViewers).filter((t=>t.studyInstanceUID===e))}_restoreAnnotations(e){const{studyInstanceUID:t,seriesInstanceUID:i}=e;this.getAnnotationsForSeries(t,i).forEach((t=>{e.addRoiGraphic(t.roiGraphic)}))}addViewer(e,t,i,n,o){const s=new E(e,t,i,n,o);return this._restoreAnnotations(s),e._manager=s,this.managedViewers.add(s),this._addManagedViewerSubscriptions(s),this.pendingFocus&&(this.pendingFocus=!1,this.focusAnnotation(this.selectedAnnotation,t)),s}_potentiallyLoadSR(e,t){const i=a.H8.getStudy(e),n=t.find((e=>"SM"===e.Modality)),{FrameOfReferenceUID:o,othersFrameOfReferenceUID:s}=n;if(!i)return;let r=o?t.filter((e=>e.ReferencedFrameOfReferenceUID===o||s.includes(e.ReferencedFrameOfReferenceUID))):[];if(!r.length)return;if(r=r.filter((e=>"SR"===e.Modality)),r.some((e=>!0===e.isLoaded)))return;let c=0,d=r[0];r.forEach((e=>{const t=Number(`${e.SeriesDate}${e.SeriesTime}`);t>c&&(c=t,d=e)})),d.isLoading=!0,d.load(n)}removeViewer(e){const t=e._manager;this._removeManagedViewerSubscriptions(t),t.destroy(),this.managedViewers.delete(t)}toggleROIsVisibility(){this.isROIsVisible?this.hideROIs():this.showROIs,this.isROIsVisible=!this.isROIsVisible}hideROIs(){this.managedViewers.forEach((e=>e.hideROIs()))}showROIs(){this.managedViewers.forEach((e=>e.showROIs()))}getAnnotation(e){return this.annotations[e]}getAnnotations(){const e=[];return Object.keys(this.annotations).forEach((t=>{e.push(this.getAnnotation(t))})),e}getAnnotationsForStudy(e){return this.getAnnotations().filter((t=>t.studyInstanceUID===e))}getAnnotationsForSeries(e,t){return this.getAnnotations().filter((i=>i.studyInstanceUID===e&&i.seriesInstanceUID===t))}getSelectedAnnotation(){return this.selectedAnnotation}clearSelection(){this.selectedAnnotation&&this.setROIStyle(this.selectedAnnotation.uid,{stroke:{color:"#00ff00"}}),this.selectedAnnotation=null}selectAnnotation(e){this.selectedAnnotation&&this.clearSelection(),this.selectedAnnotation=e,this._broadcastEvent(w.ANNOTATION_SELECTED,e),this.setROIStyle(e.uid,g.active)}toggleOverviewMap(e){const t=Array.from(this.managedViewers).find((t=>t.viewportId===e));t&&t.toggleOverviewMap()}removeAnnotation(e){const{uid:t,studyInstanceUID:i,seriesInstanceUID:n}=e;Array.from(this.managedViewers).filter((e=>e.studyInstanceUID===i&&e.seriesInstanceUID===n)).forEach((e=>e.removeRoiGraphic(t))),this.annotations[t]&&(this.roiUids.delete(t),this.annotations[t].destroy(),delete this.annotations[t],this._broadcastEvent(w.ANNOTATION_REMOVED,e))}focusAnnotation(e,t){const i=Array.from(this.managedViewers).find((e=>e.viewportId===t));i?i.setViewStateByExtent(e):this.pendingFocus=!0}synchronizeViewers(e){const{studyInstanceUID:t,seriesInstanceUID:i}=e,n=this._getManagedViewersForSeries(t,i);n.forEach((e=>this._removeManagedViewerSubscriptions(e))),n.forEach((n=>{if(n===e)return;const o=this.getAnnotationsForSeries(t,i);n.clearRoiGraphics(),o.forEach((e=>{n.addRoiGraphic(e.roiGraphic)}))})),n.forEach((e=>this._addManagedViewerSubscriptions(e)))}activateInteractions(e){this.managedViewers.forEach((t=>t.activateInteractions(e))),this.activeInteractions=e}getActiveInteractions(){return this.activeInteractions}triggerRelabel(e,t=!1,i){i||(i=({label:t})=>this.managedViewers.forEach((i=>i.updateROIProperties({uid:e.uid,properties:{label:t}})))),this._broadcastEvent(w.RELABEL,{roiAnnotation:e,deleteCallback:()=>this.removeAnnotation(e),successCallback:i,newAnnotation:t})}triggerDelete(e){this._broadcastEvent(w.DELETE,e)}setROIStyle(e,t){this.managedViewers.forEach((i=>i.setROIStyle(e,t)))}getAllManagedViewers(){return Array.from(this.managedViewers)}}A=D,D.REGISTRATION=e=>({name:"microscopyService",altName:"MicroscopyService",create:e=>new A(e)});var R=i(5842);const{datasetToBuffer:_}=R.Ay.data,O=(e,t)=>{let i=1;if("km"==t||!t&&e>1e6)t="km",i=1e-6;else if("m"==t||!t&&e>1e3)t="m",i=.001;else if("μm"==t||!t&&e<1)t="μm",i=1e3;else{if(t&&"mm"!=t)throw new Error(`Unknown length unit ${t}`);t="mm"}return`${(e*i).toFixed(2)} ${t}`};const M=(0,c.CI)(["MicroscopyTable","Common"])((function(e){const{microscopyService:t}=e.servicesManager.services,[i,n]=(0,o.useState)(null),[r,a]=(0,o.useState)([]),[c,d]=(0,o.useState)(null),{servicesManager:l,extensionManager:u}=e,{uiDialogService:h,displaySetService:p}=l.services;(0,o.useEffect)((()=>{const t=e.viewports.get(e.activeViewportId);if(t?.displaySetInstanceUIDs[0]){const e=p.getDisplaySetByUID(t.displaySetInstanceUIDs[0]);e&&n(e.StudyInstanceUID)}}),[e.viewports,e.activeViewportId]),(0,o.useEffect)((()=>{const e=()=>{const e=t.getAnnotationsForStudy(i);a(e)},n=()=>{const e=t.getSelectedAnnotation();d(e)},{unsubscribe:o}=t.subscribe(w.ANNOTATION_UPDATED,e),{unsubscribe:s}=t.subscribe(w.ANNOTATION_SELECTED,n),{unsubscribe:r}=t.subscribe(w.ANNOTATION_REMOVED,(()=>{e()}));return e(),n(),()=>{o(),s(),r()}}),[i]);const m=r.map(((e,t)=>{const i=e.getDetailedLabel(),n=e.getArea(),o=e.getLength(),s=e.roiGraphic.properties.shortAxisLength,r=c===e,{uid:a}=e,d=[];return void 0!==n?d.push((e=>{let t=1,i="mm";return e>1e6?(i="m",t=1e-6):e<1&&(i="μm",t=1e6),`${(e*t).toFixed(2)} ${i}²`})(n)):void 0!==o&&d.push(s?`${O(o,"μm")} x ${O(s,"μm")}`:`${O(o,"μm")}`),{uid:a,index:t,label:i,isActive:r,displayText:d,roiAnnotation:e}}));return o.createElement(o.Fragment,null,o.createElement("div",{className:"ohif-scrollbar overflow-y-auto overflow-x-hidden","data-cy":"measurements-panel"},o.createElement("div",{className:"flex flex-col"},m.map((i=>o.createElement(s.x3Y,{key:i.uid,number:i.index+1,title:i.label,isSelected:i.isActive,onSelect:()=>(({uid:i})=>{const n=t.getAnnotation(i);t.selectAnnotation(n),t.focusAnnotation(n,e.activeViewportId)})({uid:i.uid}),details:{primary:i.displayText,secondary:[]},isVisible:!0,onToggleVisibility:()=>{},isLocked:!1,onToggleLocked:()=>{},onRename:()=>(({uid:t,isActive:i})=>{e.commandsManager.runCommand("setLabel",{uid:t},"MICROSCOPY")})({uid:i.uid,isActive:i.isActive}),onDelete:()=>(({uid:e,isActive:i})=>{const n=t.getAnnotation(e);t.removeAnnotation(n)})({uid:i.uid,isActive:i.isActive}),onColor:()=>{},disableEditing:!1,description:i.displayText.join(", ")}))))))})),C=M;const N={IMAGING_MEASUREMENTS:"126010",MEASUREMENT_GROUP:"125007",IMAGE_REGION:"111030",FINDING:"121071",TRACKING_UNIQUE_IDENTIFIER:"112039",LENGTH:"410668003",AREA:"42798000",SHORT_AXIS:"G-A186",LONG_AXIS:"G-A185",ELLIPSE_AREA:"G-D7FE"};function T(e){return Array.isArray(e)?e:[e]}const U=R.Ay.adapters.DICOMMicroscopyViewer.MeasurementReport;async function V(e,t,i){const n=t.metadata,{StudyInstanceUID:o,FrameOfReferenceUID:s}=i,r=e.getManagedViewersForStudy(o);if(!r||!r.length)return;t.isLoaded=!0;const{rois:a,labels:c}=await async function(e,t,i){const n=U.generateToolState(t),o=Object.getOwnPropertyNames(n),s=await e.importDicomMicroscopyViewer(),r=function(e){const{ContentSequence:t}=e,i=T(t.find((e=>e.ConceptNameCodeSequence.CodeValue===N.IMAGING_MEASUREMENTS)).ContentSequence).filter((e=>e.ConceptNameCodeSequence.CodeValue===N.MEASUREMENT_GROUP));return i}(t),a=[],c=[];return o.forEach((e=>{const t=n[e];let o;const d=e.toUpperCase(),l=r.filter((e=>T(e.ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===N.IMAGE_REGION)).GraphicType===d));t.forEach(((t,n)=>{const r={},d={coordinates:t,frameOfReferenceUID:i};if("Polygon"===e)o=new s.scoord3d.Polygon(d);else if("Polyline"===e)o=new s.scoord3d.Polyline(d);else if("Point"===e)o=new s.scoord3d.Point(d);else{if("Ellipse"!==e)throw new Error("Unsupported tool type");o=new s.scoord3d.Ellipse(d)}const u=l[n],h=T(u.ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===N.FINDING)),p=T(u.ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===N.TRACKING_UNIQUE_IDENTIFIER));if(p){const e=/\(([^)]+)\)/.exec(p.TextValue);e&&e[1]&&(r.presentationState=JSON.parse(e[1]),r.marker=r.presentationState.marker)}let m=T(u.ContentSequence).filter((e=>[N.LENGTH,N.AREA,N.SHORT_AXIS,N.LONG_AXIS,N.ELLIPSE_AREA].includes(e.ConceptNameCodeSequence.CodeValue))),g=T(u.ContentSequence).filter((e=>[N.TRACKING_UNIQUE_IDENTIFIER].includes(e.ConceptNameCodeSequence.CodeValue)));g=g.map((e=>{const t={...e};return t.ConceptNameCodeSequence=T(t.ConceptNameCodeSequence),t})),m=m.map((e=>{const t={...e};return t.ConceptNameCodeSequence=T(t.ConceptNameCodeSequence),t})),m&&m.length&&(r.measurements=m,console.log("[SR] retrieving measurements...",m)),g&&g.length&&(r.evaluations=g,console.log("[SR] retrieving evaluations...",g));const I=new s.roi.ROI({scoord3d:o,properties:r});a.push(I),h?c.push(h.ConceptCodeSequence.CodeValue):c.push("")}))})),{rois:a,labels:c}}(e,n,s),d=r[0];for(let e=0;e<a.length;e++){const t=a[e];t[Object.getOwnPropertySymbols(t).find((e=>"properties"===e.description))].evaluations=[],d.addRoiGraphicWithLabel(t,c[e])}}const{utils:L}=a.Ay,P="1.2.840.10008.5.1.4.1.1.88.34",G="@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopySRSopClassHandler";function F(e,t,i){if(!e||!e.length)throw new Error("No instances were provided");const{displaySetService:n,microscopyService:o}=t.services,s=e[0],r=a.H8.getSeries(s.StudyInstanceUID,s.SeriesInstanceUID).instances[0],c=function(e){const{ContentSequence:t}=e,i=T(t.find((e=>e.ConceptNameCodeSequence.CodeValue===N.IMAGING_MEASUREMENTS)).ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===N.MEASUREMENT_GROUP));return T(i.ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===N.IMAGE_REGION)).ReferencedFrameOfReferenceUID}(r),{FrameOfReferenceUID:d,SeriesDescription:l,ContentDate:u,ContentTime:h,SeriesNumber:p,StudyInstanceUID:m,SeriesInstanceUID:g,SOPInstanceUID:I,SOPClassUID:S}=s,f={plugin:"microscopy",Modality:"SR",altImageText:"Microscopy SR",displaySetInstanceUID:L.guid(),SOPInstanceUID:I,SeriesInstanceUID:g,StudyInstanceUID:m,ReferencedFrameOfReferenceUID:c,SOPClassHandlerId:G,SOPClassUID:S,SeriesDescription:l,SeriesDate:u,SeriesTime:h,SeriesNumber:p,instance:s,metadata:r,isDerived:!0,isLoading:!1,isLoaded:!1,loadError:!1,load:function(e){return V(o,f,e).catch((e=>{throw f.isLoaded=!1,f.loadError=!0,new Error(e)}))}};return f.getSourceDisplaySet=function(){let e=[];return a.H8.getStudy(m).series.forEach((t=>{const i=n.getDisplaySetsForSeries(t.SeriesInstanceUID);e=e.concat(i)})),function(e,t){const{ReferencedFrameOfReferenceUID:i}=t,n=e.filter((e=>e.displaySetInstanceUID!==t.displaySetInstanceUID)),o=n.find((e=>"SM"===e.Modality&&(e.FrameOfReferenceUID===i||e.othersFrameOfReferenceUID.includes(i))));return!o&&n.length>=1?(console.warn("No display set with FrameOfReferenceUID",i,"single series, assuming data error, defaulting to only series."),n.find((e=>"SM"===e.Modality))):o}(e,f)},[f]}function x({servicesManager:e,extensionManager:t}){return{name:"DicomMicroscopySRSopClassHandler",sopClassUids:[P],getDisplaySetsFromSeries:t=>F(t,e)}}var q=i(81980),k=i(62051),H=i.n(k);function j(){return j=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)({}).hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e},j.apply(null,arguments)}const B=o.lazy((()=>i.e(8228).then(i.bind(i,48228)))),$=e=>o.createElement(o.Suspense,{fallback:o.createElement("div",null,"Loading...")},o.createElement(B,e)),z={id:n,async preRegistration({servicesManager:e}){e.registerService(D.REGISTRATION(e))},getViewportModule:({servicesManager:e,extensionManager:t,commandsManager:i})=>[{name:"microscopy-dicom",component:t=>{const{viewportOptions:i}=t,[n,r]=(0,s.ihW)(),{activeViewportId:a}=n,c=(0,o.useMemo)((()=>t.displaySets.map((e=>e.displaySetInstanceUID)).join("-")),[t.displaySets]),d=H()((()=>{const{microscopyService:t}=e.services,i=t.getAllManagedViewers();i&&i.length>0&&i[0].viewer.resize()}),100),{ref:l}=(0,q.u)({onResize:d,handleHeight:!0,handleWidth:!0});return o.createElement($,j({key:c,activeViewportId:a,setViewportActive:e=>{r.setActiveViewportId(e)},viewportData:i,resizeRef:l},t))}}],getToolbarModule:({servicesManager:e})=>[{name:"evaluate.microscopyTool",evaluate:({button:t})=>{const{microscopyService:i}=e.services,n=i.getActiveInteractions();if(!n)return!1;const o=n.find((e=>{if(!e[1].bindings.mouseButtons.includes("left"))return!1;return"draw"!==e[0]?e[0]===t.id:e[1].geometryType===t.id}));return{disabled:!1,className:o?"!text-black bg-primary-light":"!text-common-bright hover:!bg-primary-dark hover:!text-primary-light",isActive:o}}}],getSopClassHandlerModule:e=>[x(e)],getPanelModule:function({commandsManager:e,extensionManager:t,servicesManager:i}){return[{name:"measure",iconName:"tab-linear",iconLabel:"Measure",label:"Measurements",secondaryLabel:"Measurements",component:({})=>{const[{activeViewportId:n,viewports:r}]=(0,s.ihW)();return o.createElement(C,{viewports:r,activeViewportId:n,onSaveComplete:()=>{},onRejectComplete:()=>{},commandsManager:e,servicesManager:i,extensionManager:t})}}]},getCommandsModule:function({servicesManager:e,commandsManager:t,extensionManager:i}){const{viewportGridService:n,uiDialogService:o,microscopyService:s}=e.services,a={deleteMeasurement:({uid:e})=>{if(e){const t=s.getAnnotation(e);t&&s.removeAnnotation(t)}},setLabel:({uid:e})=>{const t=s.getAnnotation(e);(0,r.callInputDialog)({uiDialogService:o,defaultValue:"",onSave:e=>{t.setLabel(e),s.triggerRelabel(t)}})},setToolActive:({toolName:e,toolGroupId:t="MICROSCOPY"})=>{const i=["dragPan",{bindings:{mouseButtons:["middle"]}}],n=["dragZoom",{bindings:{mouseButtons:["right"]}}];if(["line","box","circle","point","polygon","freehandpolygon","freehandline"].indexOf(e)>=0){const t={geometryType:e,vertexEnabled:!0,styleOptions:g.default,bindings:{mouseButtons:["left"]}};"line"===e?(t.minPoints=2,t.maxPoints=2):"point"===e&&(delete t.styleOptions,delete t.vertexEnabled),s.activateInteractions([["draw",t],i,n])}else"dragPan"==e?s.activateInteractions([["dragPan",{bindings:{mouseButtons:["left","middle"]}}],n]):s.activateInteractions([[e,{bindings:{mouseButtons:["left"]}}],i,n])},toggleOverlays:()=>{const e=document.getElementsByClassName("microscopy-viewport-overlay");let t=!1;for(let i=0;i<e.length;i++)0===i&&(t=e.item(0).classList.contains("hidden")),e.item(i).classList.toggle("hidden");const{activeViewportId:i}=n.getState();s.toggleOverviewMap(i)},toggleAnnotations:()=>{s.toggleROIsVisibility()}};return{actions:a,definitions:{deleteMeasurement:{commandFn:a.deleteMeasurement},setLabel:{commandFn:a.setLabel},setToolActive:{commandFn:a.setToolActive},toggleOverlays:{commandFn:a.toggleOverlays},toggleAnnotations:{commandFn:a.toggleAnnotations}},defaultContext:"MICROSCOPY"}},getCustomizationModule:function(){return[]}},W=z}}]);
//# sourceMappingURL=3658.bundle.b6fe41c5632af56a1a98.js.map