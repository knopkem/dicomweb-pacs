{"version":3,"file":"7759.bundle.813220d8f572ec6ff766.js","mappings":"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","sources":["webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getActiveToolForKeyboardEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/keyboardEventHandlers/keyDown.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getToolsWithActionsForKeyboardEvents.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/keyboardEventHandlers/keyUp.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseClick.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseDoubleClick.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getActiveToolForMouseEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseDownAnnotationAction.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getToolsWithActionsForMouseEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseDown.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseDownActivate.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseDrag.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseMove.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseUp.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseWheel.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/customCallbackHandler.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getToolsWithModesForMouseEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getActiveToolForTouchEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getToolsWithModesForTouchEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchStart.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchStartActivate.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchDrag.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchEnd.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchTap.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchPress.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/keyboard/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/keyboard/keyDownListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/mouse/getMouseEventPoints.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/mouse/mouseDoubleClickListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/mouse/mouseDownListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/mouse/mouseMoveListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/touch/preventGhostClick.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/touch/getTouchEventPoints.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/touch/touchStartListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/wheel/normalizeWheel.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/wheel/wheelListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/helpers/convertStackToVolumeLabelmap.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/helpers/updateStackSegmentationState.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/filterMoveableAnnotationTools.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/filterToolsWithAnnotationsForElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/filterToolsWithMoveableHandles.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/SculptorTool/CircleSculptCursor.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/base/GrowCutBaseTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/distancePointToContour.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/strategies/eraseRectangle.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/geometricSurfaceUtils.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/getToolsWithModesForElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/getVOIMultipliers.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/livewire/LiveWirePath.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/BucketQueue.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/livewire/LivewireScissors.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/aabb/intersectAABB.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/aabb/distanceToPointSquared.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/aabb/distanceToPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/angle/angleBetweenLines.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/basic/Calculator.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/circle/getCanvasCircleRadius.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/circle/getCanvasCircleCorners.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/ellipse/pointInEllipse.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/line/distanceToPointSquared.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/line/distanceToPointSquaredInfo.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/line/isPointOnLineSegment.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/midPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/point/distanceToPointSquared.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/point/distanceToPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/point/mirror.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/addCanvasPointsToArray.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/areLineSegmentsIntersecting.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/combinePolyline.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/containsPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/containsPoints.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/decimate.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getAABB.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getArea.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getClosestLineSegmentIntersection.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getFirstLineSegmentIntersectionIndexes.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getLineSegmentIntersectionsCoordinates.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getLineSegmentIntersectionsIndexes.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getLinesIntersection.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getNormal2.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getNormal3.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getSignedArea.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getSubPixelSpacingAndXYDirections.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getWindingDirection.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/intersectPolyline.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/isClosed.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/isPointInsidePolyline3D.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/pointCanProjectOnLine.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/pointsAreWithinCloseContourProximity.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/projectTo2D.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/vec2/liangBarksyClip.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planarFreehandROITool/smoothAnnotation.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/growCut/constants.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/stackPrefetch/stackPrefetchUtils.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/stackPrefetch/state.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/voi/colorbar/ColorbarCanvas.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/vec3/interpolateVec3.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/voi/colorbar/ColorbarTicks.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/voi/colorbar/common/isRangeValid.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/voi/colorbar/common/isColorbarSizeValid.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/voi/colorbar/common/areColorbarRangesEqual.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/voi/colorbar/common/areColorbarSizesEqual.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/voi/colorbar/common/isRangeTextPositionValid.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/widgets/Widget.js","webpack:///../../../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget/Constants.js","webpack:///../../../node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/Core/ImageHelper.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/AnnotatedCubeActor/Presets.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/AnnotatedCubeActor.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/AppendPolyData.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/Sources/ConeSource.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/Sources/CylinderSource.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/Sources/ArrowSource.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/AxesActor.js"],"sourcesContent":["import { ToolModes } from '../../enums';\nimport { keyEventListener } from '../../eventListeners';\nimport { getMouseButton } from '../../eventListeners/mouse/mouseDownListener';\nimport { getToolGroupForViewport } from '../../store/ToolGroupManager';\nconst { Active } = ToolModes;\nexport default function getActiveToolForKeyboardEvent(evt) {\n    const { renderingEngineId, viewportId } = evt.detail;\n    const mouseButton = getMouseButton();\n    const modifierKey = keyEventListener.getModifierKey();\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return null;\n    }\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const toolOptions = toolGroup.toolOptions[toolName];\n        if (toolOptions.mode !== Active) {\n            continue;\n        }\n        const correctBinding = toolOptions.bindings.length &&\n            toolOptions.bindings.some((binding) => binding.mouseButton === (mouseButton ?? defaultMousePrimary) &&\n                binding.modifierKey === modifierKey);\n        if (correctBinding) {\n            return toolGroup.getToolInstance(toolName);\n        }\n    }\n}\n","import getActiveToolForKeyboardEvent from '../shared/getActiveToolForKeyboardEvent';\nimport getToolsWithActionsForKeyboardEvent from '../shared/getToolsWithActionsForKeyboardEvents';\nimport ToolModes from '../../enums/ToolModes';\nimport { getToolGroupForViewport } from '../../store/ToolGroupManager';\nexport default function keyDown(evt) {\n    const activeTool = getActiveToolForKeyboardEvent(evt);\n    if (activeTool) {\n        const { renderingEngineId, viewportId } = evt.detail;\n        const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n        const toolName = activeTool.getToolName();\n        if (Object.keys(toolGroup.toolOptions).includes(toolName)) {\n            toolGroup.setViewportsCursorByToolName(toolName);\n        }\n    }\n    const activeToolsWithEventBinding = getToolsWithActionsForKeyboardEvent(evt, [\n        ToolModes.Active,\n    ]);\n    if (activeToolsWithEventBinding?.size) {\n        const { element } = evt.detail;\n        for (const [key, value] of [...activeToolsWithEventBinding.entries()]) {\n            const method = typeof value.method === 'function' ? value.method : key[value.method];\n            method.call(key, element, value, evt);\n        }\n    }\n}\n","import { getToolGroupForViewport } from '../../store/ToolGroupManager';\nexport default function getToolsWithModesForKeyboardEvent(evt, toolModes) {\n    const toolsWithActions = new Map();\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return toolsWithActions;\n    }\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    const key = evt.detail.key;\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const tool = toolGroup.getToolInstance(toolName);\n        const actionsConfig = tool.configuration?.actions;\n        if (!actionsConfig) {\n            continue;\n        }\n        const actions = Object.values(actionsConfig);\n        if (!actions?.length || !toolModes.includes(tool.mode)) {\n            continue;\n        }\n        const action = actions.find((action) => action.bindings?.some((binding) => binding.key === key));\n        if (action) {\n            toolsWithActions.set(tool, action);\n        }\n    }\n    return toolsWithActions;\n}\n","import { resetModifierKey } from '../../eventListeners/keyboard/keyDownListener';\nimport getActiveToolForKeyboardEvent from '../shared/getActiveToolForKeyboardEvent';\nimport { getToolGroupForViewport } from '../../store/ToolGroupManager';\nexport default function keyUp(evt) {\n    const activeTool = getActiveToolForKeyboardEvent(evt);\n    if (!activeTool) {\n        return;\n    }\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    resetModifierKey();\n    const toolName = activeTool.getToolName();\n    if (Object.keys(toolGroup.toolOptions).includes(toolName)) {\n        toolGroup.setViewportsCursorByToolName(toolName);\n    }\n}\n","import customCallbackHandler from '../shared/customCallbackHandler';\nconst mouseClick = customCallbackHandler.bind(null, 'Mouse', 'mouseClickCallback');\nexport default mouseClick;\n","import customCallbackHandler from '../shared/customCallbackHandler';\nconst mouseDoubleClick = customCallbackHandler.bind(null, 'Mouse', 'doubleClickCallback');\nexport default mouseDoubleClick;\n","import { ToolModes } from '../../enums';\nimport { keyEventListener } from '../../eventListeners';\nimport { getToolGroupForViewport } from '../../store/ToolGroupManager';\nimport getMouseModifier from './getMouseModifier';\nconst { Active } = ToolModes;\nexport default function getActiveToolForMouseEvent(evt) {\n    const { renderingEngineId, viewportId, event: mouseEvent } = evt.detail;\n    const modifierKey = getMouseModifier(mouseEvent) || keyEventListener.getModifierKey();\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return null;\n    }\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n    const mouseButton = evt.detail.buttons ?? mouseEvent?.buttons ?? defaultMousePrimary;\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const toolOptions = toolGroup.toolOptions[toolName];\n        const correctBinding = toolOptions.bindings.length &&\n            toolOptions.bindings.some((binding) => {\n                return (binding.mouseButton === mouseButton &&\n                    binding.modifierKey === modifierKey);\n            });\n        if (toolOptions.mode === Active && correctBinding) {\n            return toolGroup.getToolInstance(toolName);\n        }\n    }\n}\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport { state } from '../../store/state';\nimport { ToolModes } from '../../enums';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport filterMoveableAnnotationTools from '../../store/filterMoveableAnnotationTools';\nimport getToolsWithActionsForMouseEvent from '../shared/getToolsWithActionsForMouseEvent';\nconst { Active, Passive } = ToolModes;\nexport default function mouseDownAnnotationAction(evt) {\n    if (state.isInteractingWithTool) {\n        return false;\n    }\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { canvas: canvasCoords } = eventDetail.currentPoints;\n    if (!enabledElement) {\n        return false;\n    }\n    const toolsWithActions = getToolsWithActionsForMouseEvent(evt, [\n        Active,\n        Passive,\n    ]);\n    const tools = Array.from(toolsWithActions.keys());\n    const annotationToolsWithAnnotations = filterToolsWithAnnotationsForElement(element, tools);\n    const moveableAnnotationTools = filterMoveableAnnotationTools(element, annotationToolsWithAnnotations, canvasCoords);\n    if (moveableAnnotationTools.length > 0) {\n        const { tool, annotation } = moveableAnnotationTools[0];\n        const action = toolsWithActions.get(tool);\n        const method = typeof action.method === 'string' ? tool[action.method] : action.method;\n        method.call(tool, evt, annotation);\n        return true;\n    }\n    return false;\n}\n","import { keyEventListener } from '../../eventListeners';\nimport getMouseModifier from './getMouseModifier';\nimport { getToolGroupForViewport } from '../../store/ToolGroupManager';\nexport default function getToolsWithActionsForMouseEvent(evt, toolModes) {\n    const toolsWithActions = new Map();\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return toolsWithActions;\n    }\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n    const mouseEvent = evt.detail.event;\n    const mouseButton = mouseEvent?.buttons ?? defaultMousePrimary;\n    const modifierKey = getMouseModifier(mouseEvent) || keyEventListener.getModifierKey();\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const tool = toolGroup.getToolInstance(toolName);\n        const actionsConfig = tool.configuration?.actions ?? {};\n        const actions = Object.values(actionsConfig);\n        if (!actions?.length || !toolModes.includes(tool.mode)) {\n            continue;\n        }\n        const action = actions.find((action) => action.bindings?.length &&\n            action.bindings.some((binding) => binding.mouseButton === mouseButton &&\n                binding.modifierKey === modifierKey));\n        if (action) {\n            toolsWithActions.set(tool, action);\n        }\n    }\n    return toolsWithActions;\n}\n","import { state } from '../../store/state';\nimport { ToolModes } from '../../enums';\nimport { setAnnotationSelected, isAnnotationSelected, } from '../../stateManagement/annotation/annotationSelection';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport filterToolsWithMoveableHandles from '../../store/filterToolsWithMoveableHandles';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport filterMoveableAnnotationTools from '../../store/filterMoveableAnnotationTools';\nimport getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport getToolsWithModesForMouseEvent from '../shared/getToolsWithModesForMouseEvent';\nimport mouseDownAnnotationAction from './mouseDownAnnotationAction';\nconst { Active, Passive } = ToolModes;\nexport default function mouseDown(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForMouseEvent(evt);\n    if (activeTool && typeof activeTool.preMouseDownCallback === 'function') {\n        const consumedEvent = activeTool.preMouseDownCallback(evt);\n        if (consumedEvent) {\n            return;\n        }\n    }\n    const isPrimaryClick = evt.detail.event.buttons === 1;\n    const activeToolsWithEventBinding = getToolsWithModesForMouseEvent(evt, [Active], evt.detail.event.buttons);\n    const passiveToolsIfEventWasPrimaryMouseButton = isPrimaryClick\n        ? getToolsWithModesForMouseEvent(evt, [Passive])\n        : undefined;\n    const applicableTools = [\n        ...(activeToolsWithEventBinding || []),\n        ...(passiveToolsIfEventWasPrimaryMouseButton || []),\n    ];\n    const actionExecuted = mouseDownAnnotationAction(evt);\n    if (actionExecuted) {\n        return;\n    }\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const annotationToolsWithAnnotations = filterToolsWithAnnotationsForElement(element, applicableTools);\n    const canvasCoords = eventDetail.currentPoints.canvas;\n    const annotationToolsWithMoveableHandles = filterToolsWithMoveableHandles(element, annotationToolsWithAnnotations, canvasCoords, 'mouse');\n    const isMultiSelect = !!evt.detail.event.shiftKey;\n    if (annotationToolsWithMoveableHandles.length > 0) {\n        const { tool, annotation, handle } = getAnnotationForSelection(annotationToolsWithMoveableHandles);\n        toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n        tool.handleSelectedCallback(evt, annotation, handle, 'Mouse');\n        return;\n    }\n    const moveableAnnotationTools = filterMoveableAnnotationTools(element, annotationToolsWithAnnotations, canvasCoords, 'mouse');\n    if (moveableAnnotationTools.length > 0) {\n        const { tool, annotation } = getAnnotationForSelection(moveableAnnotationTools);\n        toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n        tool.toolSelectedCallback(evt, annotation, 'Mouse', canvasCoords);\n        return;\n    }\n    if (activeTool && typeof activeTool.postMouseDownCallback === 'function') {\n        const consumedEvent = activeTool.postMouseDownCallback(evt);\n        if (consumedEvent) {\n            return;\n        }\n    }\n}\nfunction getAnnotationForSelection(toolsWithMovableHandles) {\n    if (toolsWithMovableHandles.length > 1) {\n        const unlockAndVisibleAnnotation = toolsWithMovableHandles.find((item) => {\n            const isUnlocked = !isAnnotationLocked(item.annotation.annotationUID);\n            const isVisible = isAnnotationVisible(item.annotation.annotationUID);\n            return isUnlocked && isVisible;\n        });\n        if (unlockAndVisibleAnnotation) {\n            return unlockAndVisibleAnnotation;\n        }\n    }\n    return toolsWithMovableHandles[0];\n}\nfunction toggleAnnotationSelection(annotationUID, isMultiSelect = false) {\n    if (isMultiSelect) {\n        if (isAnnotationSelected(annotationUID)) {\n            setAnnotationSelected(annotationUID, false);\n        }\n        else {\n            const preserveSelected = true;\n            setAnnotationSelected(annotationUID, true, preserveSelected);\n        }\n    }\n    else {\n        const preserveSelected = false;\n        setAnnotationSelected(annotationUID, true, preserveSelected);\n    }\n}\n","import { state } from '../../store/state';\nimport getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport { setAnnotationSelected } from '../../stateManagement/annotation/annotationSelection';\nexport default function mouseDownActivate(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForMouseEvent(evt);\n    if (!activeTool) {\n        return;\n    }\n    if (state.isMultiPartToolActive) {\n        return;\n    }\n    if (activeTool.addNewAnnotation) {\n        const annotation = activeTool.addNewAnnotation(evt, 'mouse');\n        setAnnotationSelected(annotation.annotationUID);\n    }\n}\n","import getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport { state } from '../../store/state';\nexport default function mouseDrag(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForMouseEvent(evt);\n    const noFoundToolOrDoesNotHaveMouseDragCallback = !activeTool || typeof activeTool.mouseDragCallback !== 'function';\n    if (noFoundToolOrDoesNotHaveMouseDragCallback) {\n        return;\n    }\n    activeTool.mouseDragCallback(evt);\n}\n","import { state } from '../../store/state';\nimport { ToolModes } from '../../enums';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport getToolsWithModesForMouseEvent from '../shared/getToolsWithModesForMouseEvent';\nimport triggerAnnotationRender from '../../utilities/triggerAnnotationRender';\nconst { Active, Passive } = ToolModes;\nexport default function mouseMove(evt) {\n    if (state.isInteractingWithTool || state.isMultiPartToolActive) {\n        return;\n    }\n    const activeAndPassiveTools = getToolsWithModesForMouseEvent(evt, [\n        Active,\n        Passive,\n    ]);\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const toolsWithAnnotations = filterToolsWithAnnotationsForElement(element, activeAndPassiveTools);\n    const toolsWithoutAnnotations = activeAndPassiveTools.filter((tool) => {\n        const doesNotHaveAnnotations = !toolsWithAnnotations.some((toolAndAnnotation) => toolAndAnnotation.tool.getToolName() === tool.getToolName());\n        return doesNotHaveAnnotations;\n    });\n    let annotationsNeedToBeRedrawn = false;\n    for (const { tool, annotations } of toolsWithAnnotations) {\n        if (typeof tool.mouseMoveCallback === 'function') {\n            annotationsNeedToBeRedrawn =\n                tool.mouseMoveCallback(evt, annotations) || annotationsNeedToBeRedrawn;\n        }\n    }\n    toolsWithoutAnnotations.forEach((tool) => {\n        if (typeof tool.mouseMoveCallback === 'function') {\n            tool.mouseMoveCallback(evt);\n        }\n    });\n    if (annotationsNeedToBeRedrawn === true) {\n        triggerAnnotationRender(element);\n    }\n}\n","import customCallbackHandler from '../shared/customCallbackHandler';\nconst mouseUp = customCallbackHandler.bind(null, 'Mouse', 'mouseUpCallback');\nexport default mouseUp;\n","import { state } from '../../store/state';\nimport getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport { MouseBindings } from '../../enums/ToolBindings';\nfunction mouseWheel(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    evt.detail.buttons =\n        MouseBindings.Wheel | (evt.detail.event.buttons || 0);\n    const activeTool = getActiveToolForMouseEvent(evt);\n    if (!activeTool) {\n        return;\n    }\n    return activeTool.mouseWheelCallback(evt);\n}\nexport default mouseWheel;\n","import { state } from '../../store/state';\nimport ToolModes from '../../enums/ToolModes';\nimport { getToolGroupForViewport } from '../../store/ToolGroupManager';\nconst { Active } = ToolModes;\nexport default function customCallbackHandler(handlerType, customFunction, evt) {\n    if (state.isInteractingWithTool) {\n        return false;\n    }\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return false;\n    }\n    let activeTool;\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const tool = toolGroup.toolOptions[toolName];\n        const toolInstance = toolGroup.getToolInstance(toolName);\n        if (tool.mode === Active &&\n            typeof toolInstance[customFunction] === 'function') {\n            activeTool = toolGroup.getToolInstance(toolName);\n            break;\n        }\n    }\n    if (!activeTool) {\n        return;\n    }\n    activeTool[customFunction](evt);\n}\n","import { getToolGroupForViewport } from '../../store/ToolGroupManager';\nexport default function getToolsWithModesForMouseEvent(evt, modesFilter, evtButton) {\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return [];\n    }\n    const enabledTools = [];\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const tool = toolGroup.toolOptions[toolName];\n        const correctBinding = evtButton != null &&\n            tool.bindings.length &&\n            tool.bindings.some((binding) => binding.mouseButton === evtButton);\n        if (modesFilter.includes(tool.mode) &&\n            (!evtButton || correctBinding)) {\n            const toolInstance = toolGroup.getToolInstance(toolName);\n            enabledTools.push(toolInstance);\n        }\n    }\n    return enabledTools;\n}\n","import { ToolModes } from '../../enums';\nimport getMouseModifier from './getMouseModifier';\nimport { keyEventListener } from '../../eventListeners';\nimport { getToolGroupForViewport } from '../../store/ToolGroupManager';\nconst { Active } = ToolModes;\nexport default function getActiveToolForTouchEvent(evt) {\n    const { renderingEngineId, viewportId } = evt.detail;\n    const touchEvent = evt.detail.event;\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return null;\n    }\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    const numTouchPoints = Object.keys(touchEvent.touches).length;\n    const modifierKey = getMouseModifier(touchEvent) || keyEventListener.getModifierKey();\n    const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const toolOptions = toolGroup.toolOptions[toolName];\n        const correctBinding = toolOptions.bindings.length &&\n            toolOptions.bindings.some((binding) => (binding.numTouchPoints === numTouchPoints ||\n                (numTouchPoints === 1 &&\n                    binding.mouseButton === defaultMousePrimary)) &&\n                binding.modifierKey === modifierKey);\n        if (toolOptions.mode === Active && correctBinding) {\n            return toolGroup.getToolInstance(toolName);\n        }\n    }\n}\n","import { getToolGroupForViewport } from '../../store/ToolGroupManager';\nexport default function getToolsWithModesForTouchEvent(evt, modesFilter, numTouchPoints) {\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return [];\n    }\n    const enabledTools = [];\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const tool = toolGroup.toolOptions[toolName];\n        const correctBinding = numTouchPoints != null &&\n            tool.bindings.length &&\n            tool.bindings.some((binding) => binding.numTouchPoints === numTouchPoints);\n        if (modesFilter.includes(tool.mode) &&\n            (!numTouchPoints || correctBinding)) {\n            const toolInstance = toolGroup.getToolInstance(toolName);\n            enabledTools.push(toolInstance);\n        }\n    }\n    return enabledTools;\n}\n","import { state } from '../../store/state';\nimport { ToolModes } from '../../enums';\nimport { setAnnotationSelected, isAnnotationSelected, } from '../../stateManagement/annotation/annotationSelection';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport filterToolsWithMoveableHandles from '../../store/filterToolsWithMoveableHandles';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport filterMoveableAnnotationTools from '../../store/filterMoveableAnnotationTools';\nimport getActiveToolForTouchEvent from '../shared/getActiveToolForTouchEvent';\nimport getToolsWithModesForTouchEvent from '../shared/getToolsWithModesForTouchEvent';\nconst { Active, Passive } = ToolModes;\nexport default function touchStart(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForTouchEvent(evt);\n    if (activeTool && typeof activeTool.preTouchStartCallback === 'function') {\n        const consumedEvent = activeTool.preTouchStartCallback(evt);\n        if (consumedEvent) {\n            return;\n        }\n    }\n    const isPrimaryClick = Object.keys(evt.detail.event.touches).length === 1;\n    const activeToolsWithEventBinding = getToolsWithModesForTouchEvent(evt, [Active], Object.keys(evt.detail.event.touches).length);\n    const passiveToolsIfEventWasPrimaryTouchButton = isPrimaryClick\n        ? getToolsWithModesForTouchEvent(evt, [Passive])\n        : undefined;\n    const applicableTools = [\n        ...(activeToolsWithEventBinding || []),\n        ...(passiveToolsIfEventWasPrimaryTouchButton || []),\n        activeTool,\n    ];\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const annotationToolsWithAnnotations = filterToolsWithAnnotationsForElement(element, applicableTools);\n    const canvasCoords = eventDetail.currentPoints.canvas;\n    const annotationToolsWithMoveableHandles = filterToolsWithMoveableHandles(element, annotationToolsWithAnnotations, canvasCoords, 'touch');\n    const isMultiSelect = false;\n    if (annotationToolsWithMoveableHandles.length > 0) {\n        const { tool, annotation, handle } = getAnnotationForSelection(annotationToolsWithMoveableHandles);\n        toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n        tool.handleSelectedCallback(evt, annotation, handle, 'Touch');\n        return;\n    }\n    const moveableAnnotationTools = filterMoveableAnnotationTools(element, annotationToolsWithAnnotations, canvasCoords, 'touch');\n    if (moveableAnnotationTools.length > 0) {\n        const { tool, annotation } = getAnnotationForSelection(moveableAnnotationTools);\n        toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n        tool.toolSelectedCallback(evt, annotation, 'Touch', canvasCoords);\n        return;\n    }\n    if (activeTool && typeof activeTool.postTouchStartCallback === 'function') {\n        const consumedEvent = activeTool.postTouchStartCallback(evt);\n        if (consumedEvent) {\n            return;\n        }\n    }\n}\nfunction getAnnotationForSelection(toolsWithMovableHandles) {\n    return ((toolsWithMovableHandles.length > 1 &&\n        toolsWithMovableHandles.find((item) => !isAnnotationLocked(item.annotation.annotationUID) &&\n            isAnnotationVisible(item.annotation.annotationUID))) ||\n        toolsWithMovableHandles[0]);\n}\nfunction toggleAnnotationSelection(annotationUID, isMultiSelect = false) {\n    if (isMultiSelect) {\n        if (isAnnotationSelected(annotationUID)) {\n            setAnnotationSelected(annotationUID, false);\n        }\n        else {\n            const preserveSelected = true;\n            setAnnotationSelected(annotationUID, true, preserveSelected);\n        }\n    }\n    else {\n        const preserveSelected = false;\n        setAnnotationSelected(annotationUID, true, preserveSelected);\n    }\n}\n","import { state } from '../../store/state';\nimport { setAnnotationSelected } from '../../stateManagement/annotation/annotationSelection';\nimport getActiveToolForTouchEvent from '../shared/getActiveToolForTouchEvent';\nexport default function touchStartActivate(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForTouchEvent(evt);\n    if (!activeTool) {\n        return;\n    }\n    if (state.isMultiPartToolActive) {\n        return;\n    }\n    if (activeTool.addNewAnnotation) {\n        const annotation = activeTool.addNewAnnotation(evt, 'touch');\n        setAnnotationSelected(annotation.annotationUID);\n    }\n}\n","import getActiveToolForTouchEvent from '../shared/getActiveToolForTouchEvent';\nimport { state } from '../../store/state';\nexport default function touchDrag(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForTouchEvent(evt);\n    const noFoundToolOrDoesNotHaveTouchDragCallback = !activeTool || typeof activeTool.touchDragCallback !== 'function';\n    if (noFoundToolOrDoesNotHaveTouchDragCallback) {\n        return;\n    }\n    activeTool.touchDragCallback(evt);\n}\n","import customCallbackHandler from '../shared/customCallbackHandler';\nconst touchEnd = customCallbackHandler.bind(null, 'Touch', 'touchEndCallback');\nexport default touchEnd;\n","import customCallbackHandler from '../shared/customCallbackHandler';\nconst touchTap = customCallbackHandler.bind(null, 'Touch', 'touchTapCallback');\nexport default touchTap;\n","import customCallbackHandler from '../shared/customCallbackHandler';\nconst touchPress = customCallbackHandler.bind(null, 'Touch', 'touchPressCallback');\nexport default touchPress;\n","import keyDownListener, { getModifierKey } from './keyDownListener';\nfunction enable(element) {\n    disable(element);\n    element.addEventListener('keydown', keyDownListener);\n}\nfunction disable(element) {\n    element.removeEventListener('keydown', keyDownListener);\n}\nexport default {\n    enable,\n    disable,\n    getModifierKey,\n};\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nconst defaultState = {\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    key: undefined,\n    keyCode: undefined,\n    element: null,\n};\nlet state = {\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    key: undefined,\n    keyCode: undefined,\n    element: null,\n};\nfunction keyListener(evt) {\n    state.element = evt.currentTarget;\n    const enabledElement = getEnabledElement(state.element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    state.renderingEngineId = renderingEngineId;\n    state.viewportId = viewportId;\n    state.key = evt.key;\n    state.keyCode = evt.keyCode;\n    evt.preventDefault();\n    const eventDetail = {\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        element: state.element,\n        key: state.key,\n        keyCode: state.keyCode,\n    };\n    triggerEvent(eventDetail.element, Events.KEY_DOWN, eventDetail);\n    document.addEventListener('keyup', _onKeyUp);\n    document.addEventListener('visibilitychange', _onVisibilityChange);\n    state.element.removeEventListener('keydown', keyListener);\n}\nfunction _onVisibilityChange() {\n    document.removeEventListener('visibilitychange', _onVisibilityChange);\n    if (document.visibilityState === 'hidden') {\n        resetModifierKey();\n    }\n}\nfunction _onKeyUp(evt) {\n    const eventDetail = {\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        element: state.element,\n        key: state.key,\n        keyCode: state.keyCode,\n    };\n    document.removeEventListener('keyup', _onKeyUp);\n    document.removeEventListener('visibilitychange', _onVisibilityChange);\n    state.element.addEventListener('keydown', keyListener);\n    state = structuredClone(defaultState);\n    triggerEvent(eventDetail.element, Events.KEY_UP, eventDetail);\n}\nexport function getModifierKey() {\n    return state.keyCode;\n}\nexport function resetModifierKey() {\n    state.keyCode = undefined;\n}\nexport default keyListener;\n","import { getEnabledElement } from '@cornerstonejs/core';\nexport default function getMouseEventPoints(evt, element) {\n    const elementToUse = element || evt.currentTarget;\n    const { viewport } = getEnabledElement(elementToUse) || {};\n    if (!viewport) {\n        return;\n    }\n    const clientPoint = _clientToPoint(evt);\n    const pagePoint = _pageToPoint(evt);\n    const canvasPoint = _pagePointsToCanvasPoints(elementToUse, pagePoint);\n    const worldPoint = viewport.canvasToWorld(canvasPoint);\n    return {\n        page: pagePoint,\n        client: clientPoint,\n        canvas: canvasPoint,\n        world: worldPoint,\n    };\n}\nfunction _pagePointsToCanvasPoints(element, pagePoint) {\n    const rect = element.getBoundingClientRect();\n    return [\n        pagePoint[0] - rect.left - window.pageXOffset,\n        pagePoint[1] - rect.top - window.pageYOffset,\n    ];\n}\nfunction _pageToPoint(evt) {\n    return [evt.pageX, evt.pageY];\n}\nfunction _clientToPoint(evt) {\n    return [evt.clientX, evt.clientY];\n}\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport getMouseEventPoints from './getMouseEventPoints';\nfunction mouseDoubleClickListener(evt) {\n    const element = evt.currentTarget;\n    const { viewportId, renderingEngineId } = getEnabledElement(element);\n    const startPoints = getMouseEventPoints(evt, element);\n    const deltaPoints = {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    };\n    const eventDetail = {\n        event: evt,\n        eventName: Events.MOUSE_DOUBLE_CLICK,\n        viewportId,\n        renderingEngineId,\n        camera: {},\n        element,\n        startPoints,\n        lastPoints: startPoints,\n        currentPoints: startPoints,\n        deltaPoints,\n    };\n    const consumed = !triggerEvent(element, Events.MOUSE_DOUBLE_CLICK, eventDetail);\n    if (consumed) {\n        evt.stopImmediatePropagation();\n        evt.preventDefault();\n    }\n}\nexport default mouseDoubleClickListener;\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport mouseMoveListener from './mouseMoveListener';\nimport getMouseEventPoints from './getMouseEventPoints';\nconst { MOUSE_DOWN, MOUSE_DOWN_ACTIVATE, MOUSE_CLICK, MOUSE_UP, MOUSE_DRAG } = Events;\nconst DOUBLE_CLICK_TOLERANCE_MS = 400;\nconst MULTI_BUTTON_TOLERANCE_MS = 150;\nconst DOUBLE_CLICK_DRAG_TOLERANCE = 3;\nconst defaultState = {\n    mouseButton: undefined,\n    element: null,\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    isClickEvent: true,\n    clickDelay: 200,\n    preventClickTimeout: null,\n    startPoints: {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    },\n    lastPoints: {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    },\n};\nlet state = {\n    mouseButton: undefined,\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    isClickEvent: true,\n    clickDelay: 200,\n    element: null,\n    preventClickTimeout: null,\n    startPoints: {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    },\n    lastPoints: {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    },\n};\nconst doubleClickState = {\n    doubleClickTimeout: null,\n    mouseDownEvent: null,\n    mouseUpEvent: null,\n    ignoreDoubleClick: false,\n};\nfunction mouseDownListener(evt) {\n    if (doubleClickState.doubleClickTimeout) {\n        if (evt.buttons === doubleClickState.mouseDownEvent.buttons) {\n            return;\n        }\n        doubleClickState.mouseDownEvent = evt;\n        _doStateMouseDownAndUp();\n        return;\n    }\n    doubleClickState.doubleClickTimeout = setTimeout(_doStateMouseDownAndUp, evt.buttons === 1 ? DOUBLE_CLICK_TOLERANCE_MS : MULTI_BUTTON_TOLERANCE_MS);\n    doubleClickState.mouseDownEvent = evt;\n    doubleClickState.ignoreDoubleClick = false;\n    state.element = evt.currentTarget;\n    state.mouseButton = evt.buttons;\n    const enabledElement = getEnabledElement(state.element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    state.renderingEngineId = renderingEngineId;\n    state.viewportId = viewportId;\n    state.preventClickTimeout = setTimeout(_preventClickHandler, state.clickDelay);\n    state.element.removeEventListener('mousemove', mouseMoveListener);\n    const startPoints = getMouseEventPoints(evt, state.element);\n    state.startPoints = _copyPoints(startPoints);\n    state.lastPoints = _copyPoints(startPoints);\n    document.addEventListener('mouseup', _onMouseUp);\n    document.addEventListener('mousemove', _onMouseDrag);\n}\nfunction _doMouseDown(evt) {\n    const deltaPoints = _getDeltaPoints(state.startPoints, state.startPoints);\n    const eventDetail = {\n        event: evt,\n        eventName: MOUSE_DOWN,\n        element: state.element,\n        mouseButton: state.mouseButton,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        startPoints: state.startPoints,\n        lastPoints: state.startPoints,\n        currentPoints: state.startPoints,\n        deltaPoints,\n    };\n    state.lastPoints = _copyPoints(eventDetail.lastPoints);\n    const notConsumed = triggerEvent(eventDetail.element, MOUSE_DOWN, eventDetail);\n    if (notConsumed) {\n        triggerEvent(eventDetail.element, MOUSE_DOWN_ACTIVATE, eventDetail);\n    }\n}\nfunction _onMouseDrag(evt) {\n    const enabledElement = getEnabledElement(state.element);\n    if (!enabledElement?.viewport) {\n        return;\n    }\n    const currentPoints = getMouseEventPoints(evt, state.element);\n    const lastPoints = _updateMouseEventsLastPoints(state.element, state.lastPoints);\n    const deltaPoints = _getDeltaPoints(currentPoints, lastPoints);\n    if (doubleClickState.doubleClickTimeout) {\n        if (_isDragPastDoubleClickTolerance(deltaPoints.canvas)) {\n            _doStateMouseDownAndUp();\n        }\n        else {\n            return;\n        }\n    }\n    const eventDetail = {\n        event: evt,\n        eventName: MOUSE_DRAG,\n        mouseButton: state.mouseButton,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        element: state.element,\n        startPoints: _copyPoints(state.startPoints),\n        lastPoints: _copyPoints(lastPoints),\n        currentPoints,\n        deltaPoints,\n    };\n    const consumed = !triggerEvent(state.element, MOUSE_DRAG, eventDetail);\n    if (consumed) {\n        evt.stopImmediatePropagation();\n        evt.preventDefault();\n    }\n    state.lastPoints = _copyPoints(currentPoints);\n}\nfunction _onMouseUp(evt) {\n    clearTimeout(state.preventClickTimeout);\n    if (doubleClickState.doubleClickTimeout) {\n        if (!doubleClickState.mouseUpEvent) {\n            doubleClickState.mouseUpEvent = evt;\n            state.element.addEventListener('mousemove', _onMouseMove);\n        }\n        else {\n            _cleanUp();\n        }\n    }\n    else {\n        const eventName = state.isClickEvent ? MOUSE_CLICK : MOUSE_UP;\n        const currentPoints = getMouseEventPoints(evt, state.element);\n        const deltaPoints = _getDeltaPoints(currentPoints, state.lastPoints);\n        const eventDetail = {\n            event: evt,\n            eventName,\n            mouseButton: state.mouseButton,\n            element: state.element,\n            renderingEngineId: state.renderingEngineId,\n            viewportId: state.viewportId,\n            camera: {},\n            startPoints: _copyPoints(state.startPoints),\n            lastPoints: _copyPoints(state.lastPoints),\n            currentPoints,\n            deltaPoints,\n        };\n        triggerEvent(eventDetail.element, eventName, eventDetail);\n        _cleanUp();\n    }\n    document.removeEventListener('mousemove', _onMouseDrag);\n}\nfunction _onMouseMove(evt) {\n    const currentPoints = getMouseEventPoints(evt, state.element);\n    const lastPoints = _updateMouseEventsLastPoints(state.element, state.lastPoints);\n    const deltaPoints = _getDeltaPoints(currentPoints, lastPoints);\n    if (!_isDragPastDoubleClickTolerance(deltaPoints.canvas)) {\n        return;\n    }\n    _doStateMouseDownAndUp();\n    mouseMoveListener(evt);\n}\nfunction _isDragPastDoubleClickTolerance(delta) {\n    return Math.abs(delta[0]) + Math.abs(delta[1]) > DOUBLE_CLICK_DRAG_TOLERANCE;\n}\nfunction _preventClickHandler() {\n    state.isClickEvent = false;\n}\nfunction _doStateMouseDownAndUp() {\n    doubleClickState.ignoreDoubleClick = true;\n    const mouseDownEvent = doubleClickState.mouseDownEvent;\n    const mouseUpEvent = doubleClickState.mouseUpEvent;\n    _clearDoubleClickTimeoutAndEvents();\n    _doMouseDown(mouseDownEvent);\n    if (mouseUpEvent) {\n        _onMouseUp(mouseUpEvent);\n    }\n}\nfunction _clearDoubleClickTimeoutAndEvents() {\n    if (doubleClickState.doubleClickTimeout) {\n        clearTimeout(doubleClickState.doubleClickTimeout);\n        doubleClickState.doubleClickTimeout = null;\n    }\n    doubleClickState.mouseDownEvent = null;\n    doubleClickState.mouseUpEvent = null;\n}\nfunction _cleanUp() {\n    document.removeEventListener('mouseup', _onMouseUp);\n    state.element?.removeEventListener('mousemove', _onMouseMove);\n    state.element?.addEventListener('mousemove', mouseMoveListener);\n    _clearDoubleClickTimeoutAndEvents();\n    state = JSON.parse(JSON.stringify(defaultState));\n}\nfunction _copyPoints(points) {\n    return JSON.parse(JSON.stringify(points));\n}\nfunction _updateMouseEventsLastPoints(element, lastPoints) {\n    const { viewport } = getEnabledElement(element) || {};\n    if (!viewport) {\n        return lastPoints;\n    }\n    const world = viewport.canvasToWorld(lastPoints.canvas);\n    return {\n        page: lastPoints.page,\n        client: lastPoints.client,\n        canvas: lastPoints.canvas,\n        world,\n    };\n}\nfunction _getDeltaPoints(currentPoints, lastPoints) {\n    if (!currentPoints || !lastPoints) {\n        return {\n            page: [0, 0],\n            client: [0, 0],\n            canvas: [0, 0],\n            world: [0, 0, 0],\n        };\n    }\n    return {\n        page: _subtractPoints2D(currentPoints.page, lastPoints.page),\n        client: _subtractPoints2D(currentPoints.client, lastPoints.client),\n        canvas: _subtractPoints2D(currentPoints.canvas, lastPoints.canvas),\n        world: _subtractPoints3D(currentPoints.world, lastPoints.world),\n    };\n}\nfunction _subtractPoints2D(point0, point1) {\n    return [point0[0] - point1[0], point0[1] - point1[1]];\n}\nfunction _subtractPoints3D(point0, point1) {\n    return [point0[0] - point1[0], point0[1] - point1[1], point0[2] - point1[2]];\n}\nexport function getMouseButton() {\n    return state.mouseButton;\n}\nexport function mouseDoubleClickIgnoreListener(evt) {\n    if (doubleClickState.ignoreDoubleClick) {\n        doubleClickState.ignoreDoubleClick = false;\n        evt.stopImmediatePropagation();\n        evt.preventDefault();\n    }\n    else {\n        _cleanUp();\n    }\n}\nexport default mouseDownListener;\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport getMouseEventPoints from './getMouseEventPoints';\nconst eventName = Events.MOUSE_MOVE;\nfunction mouseMoveListener(evt) {\n    const element = evt.currentTarget;\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) {\n        return;\n    }\n    const { renderingEngineId, viewportId } = enabledElement;\n    const currentPoints = getMouseEventPoints(evt);\n    const eventDetail = {\n        renderingEngineId,\n        viewportId,\n        camera: {},\n        element,\n        currentPoints,\n        eventName,\n        event: evt,\n    };\n    const consumed = !triggerEvent(element, eventName, eventDetail);\n    if (consumed) {\n        evt.stopImmediatePropagation();\n        evt.preventDefault();\n    }\n}\nexport default mouseMoveListener;\n","const antiGhostDelay = 2000, pointerType = {\n    mouse: 0,\n    touch: 1,\n};\nlet lastInteractionType, lastInteractionTime;\nfunction handleTap(type, e) {\n    const now = Date.now();\n    if (type !== lastInteractionType) {\n        if (now - lastInteractionTime <= antiGhostDelay) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n            return false;\n        }\n        lastInteractionType = type;\n    }\n    lastInteractionTime = now;\n}\nconst handleTapMouse = handleTap.bind(null, pointerType.mouse);\nconst handleTapTouch = handleTap.bind(null, pointerType.touch);\nfunction attachEvents(element, eventList, interactionType) {\n    const tapHandler = interactionType ? handleTapMouse : handleTapTouch;\n    eventList.forEach(function (eventName) {\n        element.addEventListener(eventName, tapHandler, { passive: false });\n    });\n}\nfunction removeEvents(element, eventList, interactionType) {\n    const tapHandler = interactionType ? handleTapMouse : handleTapTouch;\n    eventList.forEach(function (eventName) {\n        element.removeEventListener(eventName, tapHandler);\n    });\n}\nconst mouseEvents = ['mousedown', 'mouseup', 'mousemove'];\nconst touchEvents = ['touchstart', 'touchend'];\nfunction disable(element) {\n    removeEvents(element, mouseEvents, pointerType.mouse);\n    removeEvents(element, touchEvents, pointerType.touch);\n}\nfunction enable(element) {\n    disable(element);\n    attachEvents(element, mouseEvents, pointerType.mouse);\n    attachEvents(element, touchEvents, pointerType.touch);\n}\nexport default {\n    enable,\n    disable,\n};\n","import { getEnabledElement } from '@cornerstonejs/core';\nexport default function getTouchEventPoints(evt, element) {\n    const elementToUse = element || evt.currentTarget;\n    const touches = evt.type === 'touchend' ? evt.changedTouches : evt.touches;\n    return Object.keys(touches).map((i) => {\n        const clientPoint = _clientToPoint(touches[i]);\n        const pagePoint = _pageToPoint(touches[i]);\n        const canvasPoint = _pagePointsToCanvasPoints(elementToUse, pagePoint);\n        const { viewport } = getEnabledElement(elementToUse);\n        const worldPoint = viewport.canvasToWorld(canvasPoint);\n        return {\n            page: pagePoint,\n            client: clientPoint,\n            canvas: canvasPoint,\n            world: worldPoint,\n            touch: {\n                identifier: i,\n                radiusX: touches[i].radiusX,\n                radiusY: touches[i].radiusY,\n                force: touches[i].force,\n                rotationAngle: touches[i].rotationAngle,\n            },\n        };\n    });\n}\nfunction _pagePointsToCanvasPoints(element, pagePoint) {\n    const rect = element.getBoundingClientRect();\n    return [\n        pagePoint[0] - rect.left - window.pageXOffset,\n        pagePoint[1] - rect.top - window.pageYOffset,\n    ];\n}\nfunction _pageToPoint(touch) {\n    return [touch.pageX, touch.pageY];\n}\nfunction _clientToPoint(touch) {\n    return [touch.clientX, touch.clientY];\n}\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport { Swipe } from '../../enums/Touch';\nimport getTouchEventPoints from './getTouchEventPoints';\nimport { copyPoints, copyPointsList, getDeltaDistanceBetweenIPoints, getDeltaDistance, getDeltaPoints, getMeanTouchPoints, } from '../../utilities/touch';\nimport { Settings } from '@cornerstonejs/core';\nconst runtimeSettings = Settings.getRuntimeSettings();\nconst { TOUCH_START, TOUCH_START_ACTIVATE, TOUCH_PRESS, TOUCH_DRAG, TOUCH_END, TOUCH_TAP, TOUCH_SWIPE, } = Events;\nconst zeroIPoint = {\n    page: [0, 0],\n    client: [0, 0],\n    canvas: [0, 0],\n    world: [0, 0, 0],\n};\nconst zeroIDistance = {\n    page: 0,\n    client: 0,\n    canvas: 0,\n    world: 0,\n};\nconst defaultState = {\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    element: null,\n    startPointsList: [\n        {\n            ...zeroIPoint,\n            touch: null,\n        },\n    ],\n    lastPointsList: [\n        {\n            ...zeroIPoint,\n            touch: null,\n        },\n    ],\n    isTouchStart: false,\n    startTime: null,\n    pressTimeout: null,\n    pressDelay: 700,\n    pressMaxDistance: 5,\n    accumulatedDistance: zeroIDistance,\n    swipeDistanceThreshold: 48,\n    swiped: false,\n    swipeToleranceMs: 300,\n};\nconst defaultTapState = {\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    element: null,\n    startPointsList: [\n        {\n            ...zeroIPoint,\n            touch: null,\n        },\n    ],\n    taps: 0,\n    tapTimeout: null,\n    tapMaxDistance: 24,\n    tapToleranceMs: 300,\n};\nlet state = JSON.parse(JSON.stringify(defaultState));\nlet tapState = JSON.parse(JSON.stringify(defaultTapState));\nfunction triggerEventCallback(ele, name, eventDetail) {\n    return triggerEvent(ele, name, eventDetail);\n}\nfunction touchStartListener(evt) {\n    state.element = evt.currentTarget;\n    const enabledElement = getEnabledElement(state.element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    state.renderingEngineId = renderingEngineId;\n    state.viewportId = viewportId;\n    if (state.isTouchStart) {\n        return;\n    }\n    clearTimeout(state.pressTimeout);\n    state.pressTimeout = setTimeout(() => _onTouchPress(evt), state.pressDelay);\n    _onTouchStart(evt);\n    document.addEventListener('touchmove', _onTouchDrag);\n    document.addEventListener('touchend', _onTouchEnd);\n}\nfunction _onTouchPress(evt) {\n    const totalDistance = state.accumulatedDistance.canvas;\n    if (totalDistance > state.pressMaxDistance) {\n        return;\n    }\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_PRESS,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        element: state.element,\n        startPointsList: copyPointsList(state.startPointsList),\n        lastPointsList: copyPointsList(state.lastPointsList),\n        startPoints: copyPoints(getMeanTouchPoints(state.startPointsList)),\n        lastPoints: copyPoints(getMeanTouchPoints(state.lastPointsList)),\n    };\n    triggerEventCallback(eventDetail.element, TOUCH_PRESS, eventDetail);\n}\nfunction _onTouchStart(evt) {\n    state.isTouchStart = true;\n    state.startTime = new Date();\n    const startPointsList = getTouchEventPoints(evt, state.element);\n    const startPoints = getMeanTouchPoints(startPointsList);\n    const deltaPoints = zeroIPoint;\n    const deltaDistance = zeroIDistance;\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_START,\n        element: state.element,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        startPointsList: startPointsList,\n        lastPointsList: startPointsList,\n        currentPointsList: startPointsList,\n        startPoints: startPoints,\n        lastPoints: startPoints,\n        currentPoints: startPoints,\n        deltaPoints,\n        deltaDistance,\n    };\n    state.startPointsList = copyPointsList(eventDetail.startPointsList);\n    state.lastPointsList = copyPointsList(eventDetail.lastPointsList);\n    const eventDidPropagate = triggerEventCallback(eventDetail.element, TOUCH_START, eventDetail);\n    if (eventDidPropagate) {\n        triggerEventCallback(eventDetail.element, TOUCH_START_ACTIVATE, eventDetail);\n    }\n}\nfunction _onTouchDrag(evt) {\n    const currentPointsList = getTouchEventPoints(evt, state.element);\n    const lastPointsList = _updateTouchEventsLastPoints(state.element, state.lastPointsList);\n    const deltaPoints = currentPointsList.length === lastPointsList.length\n        ? getDeltaPoints(currentPointsList, lastPointsList)\n        : zeroIPoint;\n    const deltaDistance = currentPointsList.length === lastPointsList.length\n        ? getDeltaDistanceBetweenIPoints(currentPointsList, lastPointsList)\n        : zeroIDistance;\n    const totalDistance = currentPointsList.length === lastPointsList.length\n        ? getDeltaDistance(currentPointsList, state.lastPointsList)\n        : zeroIDistance;\n    state.accumulatedDistance = {\n        page: state.accumulatedDistance.page + totalDistance.page,\n        client: state.accumulatedDistance.client + totalDistance.client,\n        canvas: state.accumulatedDistance.canvas + totalDistance.canvas,\n        world: state.accumulatedDistance.world + totalDistance.world,\n    };\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_DRAG,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        element: state.element,\n        startPoints: getMeanTouchPoints(state.startPointsList),\n        lastPoints: getMeanTouchPoints(lastPointsList),\n        currentPoints: getMeanTouchPoints(currentPointsList),\n        startPointsList: copyPointsList(state.startPointsList),\n        lastPointsList: copyPointsList(lastPointsList),\n        currentPointsList,\n        deltaPoints: deltaPoints,\n        deltaDistance: deltaDistance,\n    };\n    triggerEventCallback(state.element, TOUCH_DRAG, eventDetail);\n    _checkTouchSwipe(evt, deltaPoints);\n    state.lastPointsList = copyPointsList(currentPointsList);\n}\nfunction _onTouchEnd(evt) {\n    clearTimeout(state.pressTimeout);\n    const currentPointsList = getTouchEventPoints(evt, state.element);\n    const lastPointsList = _updateTouchEventsLastPoints(state.element, state.lastPointsList);\n    const deltaPoints = currentPointsList.length === lastPointsList.length\n        ? getDeltaPoints(currentPointsList, lastPointsList)\n        : getDeltaPoints(currentPointsList, currentPointsList);\n    const deltaDistance = currentPointsList.length === lastPointsList.length\n        ? getDeltaDistanceBetweenIPoints(currentPointsList, lastPointsList)\n        : getDeltaDistanceBetweenIPoints(currentPointsList, currentPointsList);\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_END,\n        element: state.element,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        startPointsList: copyPointsList(state.startPointsList),\n        lastPointsList: copyPointsList(lastPointsList),\n        currentPointsList,\n        startPoints: getMeanTouchPoints(state.startPointsList),\n        lastPoints: getMeanTouchPoints(lastPointsList),\n        currentPoints: getMeanTouchPoints(currentPointsList),\n        deltaPoints,\n        deltaDistance,\n    };\n    triggerEventCallback(eventDetail.element, TOUCH_END, eventDetail);\n    _checkTouchTap(evt);\n    state = JSON.parse(JSON.stringify(defaultState));\n    document.removeEventListener('touchmove', _onTouchDrag);\n    document.removeEventListener('touchend', _onTouchEnd);\n}\nfunction _checkTouchTap(evt) {\n    const currentTime = new Date().getTime();\n    const startTime = state.startTime.getTime();\n    if (currentTime - startTime > tapState.tapToleranceMs) {\n        return;\n    }\n    if (tapState.taps === 0) {\n        tapState.element = state.element;\n        tapState.renderingEngineId = state.renderingEngineId;\n        tapState.viewportId = state.viewportId;\n        tapState.startPointsList = state.startPointsList;\n    }\n    if (tapState.taps > 0 &&\n        !(tapState.element == state.element &&\n            tapState.renderingEngineId == state.renderingEngineId &&\n            tapState.viewportId == state.viewportId)) {\n        return;\n    }\n    const currentPointsList = getTouchEventPoints(evt, tapState.element);\n    const distanceFromStart = getDeltaDistance(currentPointsList, tapState.startPointsList).canvas;\n    if (distanceFromStart > tapState.tapMaxDistance) {\n        return;\n    }\n    clearTimeout(tapState.tapTimeout);\n    tapState.taps += 1;\n    tapState.tapTimeout = setTimeout(() => {\n        const eventDetail = {\n            event: evt,\n            eventName: TOUCH_TAP,\n            element: tapState.element,\n            renderingEngineId: tapState.renderingEngineId,\n            viewportId: tapState.viewportId,\n            camera: {},\n            currentPointsList,\n            currentPoints: getMeanTouchPoints(currentPointsList),\n            taps: tapState.taps,\n        };\n        triggerEventCallback(eventDetail.element, TOUCH_TAP, eventDetail);\n        tapState = JSON.parse(JSON.stringify(defaultTapState));\n    }, tapState.tapToleranceMs);\n}\nfunction _checkTouchSwipe(evt, deltaPoints) {\n    const currentTime = new Date().getTime();\n    const startTime = state.startTime.getTime();\n    if (state.swiped || currentTime - startTime > state.swipeToleranceMs) {\n        return;\n    }\n    const [x, y] = deltaPoints.canvas;\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_SWIPE,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        element: state.element,\n        swipe: null,\n    };\n    if (Math.abs(x) > state.swipeDistanceThreshold) {\n        eventDetail.swipe = x > 0 ? Swipe.RIGHT : Swipe.LEFT;\n        triggerEventCallback(eventDetail.element, TOUCH_SWIPE, eventDetail);\n        state.swiped = true;\n    }\n    if (Math.abs(y) > state.swipeDistanceThreshold) {\n        eventDetail.swipe = y > 0 ? Swipe.DOWN : Swipe.UP;\n        triggerEventCallback(eventDetail.element, TOUCH_SWIPE, eventDetail);\n        state.swiped = true;\n    }\n}\nfunction _updateTouchEventsLastPoints(element, lastPoints) {\n    const { viewport } = getEnabledElement(element);\n    return lastPoints.map((lp) => {\n        const world = viewport.canvasToWorld(lp.canvas);\n        return {\n            page: lp.page,\n            client: lp.client,\n            canvas: lp.canvas,\n            world,\n            touch: lp.touch,\n        };\n    });\n}\nexport default touchStartListener;\n","const PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nexport default function normalizeWheel(event) {\n    let spinX = 0, spinY = 0, pixelX = 0, pixelY = 0;\n    if ('detail' in event) {\n        spinY = event.detail;\n    }\n    if ('wheelDelta' in event) {\n        spinY = -event.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in event) {\n        spinY = -event.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in event) {\n        spinX = -event.wheelDeltaX / 120;\n    }\n    pixelX = spinX * PIXEL_STEP;\n    pixelY = spinY * PIXEL_STEP;\n    if ('deltaY' in event) {\n        pixelY = event.deltaY;\n    }\n    if ('deltaX' in event) {\n        pixelX = event.deltaX;\n    }\n    if ((pixelX || pixelY) && event.deltaMode) {\n        if (event.deltaMode === 1) {\n            pixelX *= LINE_HEIGHT;\n            pixelY *= LINE_HEIGHT;\n        }\n        else {\n            pixelX *= PAGE_HEIGHT;\n            pixelY *= PAGE_HEIGHT;\n        }\n    }\n    if (pixelX && !spinX) {\n        spinX = pixelX < 1 ? -1 : 1;\n    }\n    if (pixelY && !spinY) {\n        spinY = pixelY < 1 ? -1 : 1;\n    }\n    return {\n        spinX,\n        spinY,\n        pixelX,\n        pixelY,\n    };\n}\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport normalizeWheel from './normalizeWheel';\nimport Events from '../../enums/Events';\nimport getMouseEventPoints from '../mouse/getMouseEventPoints';\nfunction wheelListener(evt) {\n    const element = evt.currentTarget;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    if (evt.deltaY > -1 && evt.deltaY < 1) {\n        return;\n    }\n    evt.preventDefault();\n    const { spinX, spinY, pixelX, pixelY } = normalizeWheel(evt);\n    const direction = spinY < 0 ? -1 : 1;\n    const eventDetail = {\n        event: evt,\n        eventName: Events.MOUSE_WHEEL,\n        renderingEngineId,\n        viewportId,\n        element,\n        camera: {},\n        detail: evt,\n        wheel: {\n            spinX,\n            spinY,\n            pixelX,\n            pixelY,\n            direction,\n        },\n        points: getMouseEventPoints(evt),\n    };\n    triggerEvent(element, Events.MOUSE_WHEEL, eventDetail);\n}\nexport default wheelListener;\n","import { internalConvertStackToVolumeLabelmap } from '../SegmentationStateManager';\nimport { triggerSegmentationModified } from '../triggerSegmentationEvents';\nexport async function convertStackToVolumeLabelmap(args) {\n    const result = internalConvertStackToVolumeLabelmap(args);\n    triggerSegmentationModified(args.segmentationId);\n    return result;\n}\n","import { cache, eventTarget } from '@cornerstonejs/core';\nimport { Events, SegmentationRepresentations } from '../../../enums';\nimport { getSegmentation } from '../getSegmentation';\nimport { triggerSegmentationDataModified } from '../triggerSegmentationEvents';\nimport { addSegmentationRepresentations } from '../addSegmentationRepresentationsToViewport';\nexport async function updateStackSegmentationState({ segmentationId, viewportId, imageIds, options, }) {\n    const segmentation = getSegmentation(segmentationId);\n    if (options?.removeOriginal) {\n        const data = segmentation.representationData\n            .Labelmap;\n        if (cache.getVolume(data.volumeId)) {\n            cache.removeVolumeLoadObject(data.volumeId);\n        }\n        segmentation.representationData.Labelmap = {\n            imageIds,\n        };\n    }\n    else {\n        segmentation.representationData.Labelmap = {\n            ...segmentation.representationData.Labelmap,\n            imageIds,\n        };\n    }\n    await addSegmentationRepresentations(viewportId, [\n        {\n            segmentationId,\n            type: SegmentationRepresentations.Labelmap,\n        },\n    ]);\n    eventTarget.addEventListenerOnce(Events.SEGMENTATION_RENDERED, () => triggerSegmentationDataModified(segmentationId));\n}\n","export default function filterMoveableAnnotationTools(element, ToolAndAnnotations, canvasCoords, interactionType = 'mouse') {\n    const proximity = interactionType === 'touch' ? 36 : 6;\n    const moveableAnnotationTools = [];\n    ToolAndAnnotations.forEach(({ tool, annotations }) => {\n        for (const annotation of annotations) {\n            if (annotation.isLocked || !annotation.isVisible) {\n                continue;\n            }\n            const near = tool.isPointNearTool(element, annotation, canvasCoords, proximity, interactionType);\n            if (near) {\n                moveableAnnotationTools.push({\n                    tool,\n                    annotation,\n                });\n                break;\n            }\n        }\n    });\n    return moveableAnnotationTools;\n}\n","import { getAnnotations } from '../stateManagement/annotation/annotationState';\nexport default function filterToolsWithAnnotationsForElement(element, tools) {\n    const result = [];\n    for (let i = 0; i < tools.length; i++) {\n        const tool = tools[i];\n        if (!tool) {\n            console.warn('undefined tool in filterToolsWithAnnotationsForElement');\n            continue;\n        }\n        let annotations = getAnnotations(tool.constructor.toolName, element);\n        if (!annotations?.length) {\n            continue;\n        }\n        if (typeof tool.filterInteractableAnnotationsForElement === 'function') {\n            annotations = tool.filterInteractableAnnotationsForElement(element, annotations);\n        }\n        if (annotations?.length > 0) {\n            result.push({ tool, annotations });\n        }\n    }\n    return result;\n}\n","export default function filterToolsWithMoveableHandles(element, ToolAndAnnotations, canvasCoords, interactionType = 'mouse') {\n    const proximity = interactionType === 'touch' ? 36 : 6;\n    const toolsWithMoveableHandles = [];\n    ToolAndAnnotations.forEach(({ tool, annotations }) => {\n        for (const annotation of annotations) {\n            if (annotation.isLocked || !annotation.isVisible) {\n                continue;\n            }\n            const handle = tool.getHandleNearImagePoint(element, annotation, canvasCoords, proximity);\n            if (handle) {\n                toolsWithMoveableHandles.push({\n                    tool,\n                    annotation,\n                    handle,\n                });\n                break;\n            }\n        }\n    });\n    return toolsWithMoveableHandles;\n}\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport { distancePointToContour } from '../distancePointToContour';\nimport { drawCircle as drawCircleSvg } from '../../drawingSvg';\nimport { point } from '../../utilities/math';\nclass CircleSculptCursor {\n    constructor() {\n        this.toolInfo = {\n            toolSize: null,\n            maxToolSize: null,\n        };\n    }\n    static { this.shapeName = 'Circle'; }\n    renderShape(svgDrawingHelper, canvasLocation, options) {\n        const circleUID = '0';\n        drawCircleSvg(svgDrawingHelper, 'SculptorTool', circleUID, canvasLocation, this.toolInfo.toolSize, options);\n    }\n    pushHandles(viewport, sculptData) {\n        const { points, mouseCanvasPoint } = sculptData;\n        const pushedHandles = { first: undefined, last: undefined };\n        for (let i = 0; i < points.length; i++) {\n            const handleCanvasPoint = viewport.worldToCanvas(points[i]);\n            const distanceToHandle = point.distanceToPoint(handleCanvasPoint, mouseCanvasPoint);\n            if (distanceToHandle > this.toolInfo.toolSize) {\n                continue;\n            }\n            this.pushOneHandle(i, distanceToHandle, sculptData);\n            if (pushedHandles.first === undefined) {\n                pushedHandles.first = i;\n                pushedHandles.last = i;\n            }\n            else {\n                pushedHandles.last = i;\n            }\n        }\n        return pushedHandles;\n    }\n    configureToolSize(evt) {\n        const toolInfo = this.toolInfo;\n        if (toolInfo.toolSize && toolInfo.maxToolSize) {\n            return;\n        }\n        const eventData = evt.detail;\n        const element = eventData.element;\n        const minDim = Math.min(element.clientWidth, element.clientHeight);\n        const maxRadius = minDim / 12;\n        toolInfo.toolSize = maxRadius;\n        toolInfo.maxToolSize = maxRadius;\n    }\n    updateToolSize(canvasCoords, viewport, activeAnnotation) {\n        const toolInfo = this.toolInfo;\n        const radius = distancePointToContour(viewport, activeAnnotation, canvasCoords);\n        if (radius > 0) {\n            toolInfo.toolSize = Math.min(toolInfo.maxToolSize, radius);\n        }\n    }\n    getMaxSpacing(minSpacing) {\n        return Math.max(this.toolInfo.toolSize / 4, minSpacing);\n    }\n    getInsertPosition(previousIndex, nextIndex, sculptData) {\n        let insertPosition;\n        const { points, element, mouseCanvasPoint } = sculptData;\n        const toolSize = this.toolInfo.toolSize;\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        const previousCanvasPoint = viewport.worldToCanvas(points[previousIndex]);\n        const nextCanvasPoint = viewport.worldToCanvas(points[nextIndex]);\n        const midPoint = [\n            (previousCanvasPoint[0] + nextCanvasPoint[0]) / 2.0,\n            (previousCanvasPoint[1] + nextCanvasPoint[1]) / 2.0,\n        ];\n        const distanceToMidPoint = point.distanceToPoint(mouseCanvasPoint, midPoint);\n        if (distanceToMidPoint < toolSize) {\n            const directionUnitVector = {\n                x: (midPoint[0] - mouseCanvasPoint[0]) / distanceToMidPoint,\n                y: (midPoint[1] - mouseCanvasPoint[1]) / distanceToMidPoint,\n            };\n            insertPosition = [\n                mouseCanvasPoint[0] + toolSize * directionUnitVector.x,\n                mouseCanvasPoint[1] + toolSize * directionUnitVector.y,\n            ];\n        }\n        else {\n            insertPosition = midPoint;\n        }\n        const worldPosition = viewport.canvasToWorld(insertPosition);\n        return worldPosition;\n    }\n    pushOneHandle(i, distanceToHandle, sculptData) {\n        const { points, mousePoint } = sculptData;\n        const toolSize = this.toolInfo.toolSize;\n        const handle = points[i];\n        const directionUnitVector = {\n            x: (handle[0] - mousePoint[0]) / distanceToHandle,\n            y: (handle[1] - mousePoint[1]) / distanceToHandle,\n            z: (handle[2] - mousePoint[2]) / distanceToHandle,\n        };\n        const position = {\n            x: mousePoint[0] + toolSize * directionUnitVector.x,\n            y: mousePoint[1] + toolSize * directionUnitVector.y,\n            z: mousePoint[2] + toolSize * directionUnitVector.z,\n        };\n        handle[0] = position.x;\n        handle[1] = position.y;\n        handle[2] = position.z;\n    }\n}\nexport default CircleSculptCursor;\n","import { getEnabledElement, utilities as csUtils, cache, getRenderingEngine, volumeLoader, imageLoader, ImageVolume, } from '@cornerstonejs/core';\nimport { BaseTool } from '../base';\nimport { SegmentationRepresentations } from '../../enums';\nimport { segmentIndex as segmentIndexController, state as segmentationState, activeSegmentation, } from '../../stateManagement/segmentation';\nimport { triggerSegmentationDataModified } from '../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { DEFAULT_POSITIVE_STD_DEV_MULTIPLIER, DEFAULT_NEGATIVE_SEED_MARGIN, } from '../../utilities/segmentation/growCut/constants';\nimport { getSVGStyleForSegment } from '../../utilities/segmentation/getSVGStyleForSegment';\nimport IslandRemoval from '../../utilities/segmentation/islandRemoval';\nimport { getOrCreateSegmentationVolume } from '../../utilities/segmentation';\nimport { getCurrentLabelmapImageIdForViewport } from '../../stateManagement/segmentation/getCurrentLabelmapImageIdForViewport';\nconst { transformWorldToIndex, transformIndexToWorld } = csUtils;\nclass GrowCutBaseTool extends BaseTool {\n    static { this.lastGrowCutCommand = null; }\n    constructor(toolProps, defaultToolProps) {\n        const baseToolProps = csUtils.deepMerge({\n            configuration: {\n                positiveStdDevMultiplier: DEFAULT_POSITIVE_STD_DEV_MULTIPLIER,\n                shrinkExpandIncrement: 0.1,\n                islandRemoval: {\n                    enabled: false,\n                },\n            },\n        }, defaultToolProps);\n        super(toolProps, baseToolProps);\n    }\n    async preMouseDownCallback(evt) {\n        const eventData = evt.detail;\n        const { element, currentPoints } = eventData;\n        const { world: worldPoint } = currentPoints;\n        const enabledElement = getEnabledElement(element);\n        const { viewport, renderingEngine } = enabledElement;\n        const { viewUp } = viewport.getCamera();\n        const { segmentationId, segmentIndex, labelmapVolumeId, referencedVolumeId, } = await this.getLabelmapSegmentationData(viewport);\n        if (!this._isOrthogonalView(viewport, referencedVolumeId)) {\n            throw new Error('Oblique view is not supported yet');\n        }\n        this.growCutData = {\n            metadata: {\n                ...viewport.getViewReference({ points: [worldPoint] }),\n                viewUp,\n            },\n            segmentation: {\n                segmentationId,\n                segmentIndex,\n                labelmapVolumeId,\n                referencedVolumeId,\n            },\n            viewportId: viewport.id,\n            renderingEngineId: renderingEngine.id,\n        };\n        evt.preventDefault();\n        return true;\n    }\n    shrink() {\n        this._runLastCommand({\n            shrinkExpandAmount: -this.configuration.shrinkExpandIncrement,\n        });\n    }\n    expand() {\n        this._runLastCommand({\n            shrinkExpandAmount: this.configuration.shrinkExpandIncrement,\n        });\n    }\n    refresh() {\n        this._runLastCommand();\n    }\n    async getGrowCutLabelmap(_growCutData) {\n        throw new Error('Not implemented');\n    }\n    async runGrowCut() {\n        const { growCutData, configuration: config } = this;\n        const { segmentation: { segmentationId, segmentIndex, labelmapVolumeId }, } = growCutData;\n        const labelmap = cache.getVolume(labelmapVolumeId);\n        let shrinkExpandAccumulator = 0;\n        const growCutCommand = async ({ shrinkExpandAmount = 0 } = {}) => {\n            if (shrinkExpandAmount !== 0) {\n                this.seeds = null;\n            }\n            shrinkExpandAccumulator += shrinkExpandAmount;\n            const newPositiveStdDevMultiplier = Math.max(0.1, config.positiveStdDevMultiplier + shrinkExpandAccumulator);\n            const negativeSeedMargin = shrinkExpandAmount < 0\n                ? Math.max(1, DEFAULT_NEGATIVE_SEED_MARGIN -\n                    Math.abs(shrinkExpandAccumulator) * 3)\n                : DEFAULT_NEGATIVE_SEED_MARGIN + shrinkExpandAccumulator * 3;\n            const updatedGrowCutData = {\n                ...growCutData,\n                options: {\n                    ...(growCutData.options || {}),\n                    positiveSeedValue: segmentIndex,\n                    negativeSeedValue: 255,\n                    positiveStdDevMultiplier: newPositiveStdDevMultiplier,\n                    negativeSeedMargin,\n                },\n            };\n            const growcutLabelmap = await this.getGrowCutLabelmap(updatedGrowCutData);\n            const { isPartialVolume } = config;\n            const fn = isPartialVolume\n                ? this.applyPartialGrowCutLabelmap\n                : this.applyGrowCutLabelmap;\n            fn(segmentationId, segmentIndex, labelmap, growcutLabelmap);\n            this._removeIslands(updatedGrowCutData);\n        };\n        await growCutCommand();\n        GrowCutBaseTool.lastGrowCutCommand = growCutCommand;\n        this.growCutData = null;\n    }\n    applyPartialGrowCutLabelmap(segmentationId, segmentIndex, targetLabelmap, sourceLabelmap) {\n        const srcLabelmapData = sourceLabelmap.voxelManager.getCompleteScalarDataArray();\n        const tgtVoxelManager = targetLabelmap.voxelManager;\n        const [srcColumns, srcRows, srcNumSlices] = sourceLabelmap.dimensions;\n        const [tgtColumns, tgtRows] = targetLabelmap.dimensions;\n        const srcPixelsPerSlice = srcColumns * srcRows;\n        const tgtPixelsPerSlice = tgtColumns * tgtRows;\n        for (let srcSlice = 0; srcSlice < srcNumSlices; srcSlice++) {\n            for (let srcRow = 0; srcRow < srcRows; srcRow++) {\n                const srcRowIJK = [0, srcRow, srcSlice];\n                const rowVoxelWorld = transformIndexToWorld(sourceLabelmap.imageData, srcRowIJK);\n                const tgtRowIJK = transformWorldToIndex(targetLabelmap.imageData, rowVoxelWorld);\n                const [tgtColumn, tgtRow, tgtSlice] = tgtRowIJK;\n                const srcOffset = srcRow * srcColumns + srcSlice * srcPixelsPerSlice;\n                const tgtOffset = tgtColumn + tgtRow * tgtColumns + tgtSlice * tgtPixelsPerSlice;\n                for (let column = 0; column < srcColumns; column++) {\n                    const labelmapValue = srcLabelmapData[srcOffset + column] === segmentIndex\n                        ? segmentIndex\n                        : 0;\n                    tgtVoxelManager.setAtIndex(tgtOffset + column, labelmapValue);\n                }\n            }\n        }\n        triggerSegmentationDataModified(segmentationId);\n    }\n    applyGrowCutLabelmap(segmentationId, segmentIndex, targetLabelmap, sourceLabelmap) {\n        const tgtVoxelManager = targetLabelmap.voxelManager;\n        const srcVoxelManager = sourceLabelmap.voxelManager;\n        srcVoxelManager.forEach(({ value, index }) => {\n            if (value === segmentIndex) {\n                tgtVoxelManager.setAtIndex(index, value);\n            }\n        });\n        triggerSegmentationDataModified(segmentationId);\n    }\n    _runLastCommand({ shrinkExpandAmount = 0 } = {}) {\n        const cmd = GrowCutBaseTool.lastGrowCutCommand;\n        if (cmd) {\n            cmd({ shrinkExpandAmount });\n        }\n    }\n    async getLabelmapSegmentationData(viewport) {\n        const activeSeg = activeSegmentation.getActiveSegmentation(viewport.id);\n        if (!activeSeg) {\n            throw new Error('No active segmentation found');\n        }\n        const { segmentationId } = activeSeg;\n        const segmentIndex = segmentIndexController.getActiveSegmentIndex(segmentationId);\n        const { representationData } = segmentationState.getSegmentation(segmentationId);\n        const labelmapData = representationData[SegmentationRepresentations.Labelmap];\n        let { volumeId: labelmapVolumeId, referencedVolumeId } = labelmapData;\n        if (!labelmapVolumeId) {\n            const referencedImageIds = viewport.getImageIds();\n            if (!csUtils.isValidVolume(referencedImageIds)) {\n                const currentImageId = viewport.getCurrentImageId();\n                const currentImage = cache.getImage(currentImageId);\n                const fakeImage = imageLoader.createAndCacheDerivedImage(currentImageId);\n                const fakeVolume = this._createFakeVolume([\n                    currentImage.imageId,\n                    fakeImage.imageId,\n                ]);\n                referencedVolumeId = fakeVolume.volumeId;\n                const currentLabelmapImageId = getCurrentLabelmapImageIdForViewport(viewport.id, segmentationId);\n                const fakeDerivedImage = imageLoader.createAndCacheDerivedImage(currentLabelmapImageId);\n                const fakeLabelmapVolume = this._createFakeVolume([\n                    currentLabelmapImageId,\n                    fakeDerivedImage.imageId,\n                ]);\n                labelmapVolumeId = fakeLabelmapVolume.volumeId;\n            }\n            else {\n                const segVolume = getOrCreateSegmentationVolume(segmentationId);\n                labelmapVolumeId = segVolume.volumeId;\n            }\n        }\n        if (!referencedVolumeId) {\n            const { imageIds: segImageIds } = labelmapData;\n            const referencedImageIds = segImageIds.map((imageId) => cache.getImage(imageId).referencedImageId);\n            const volumeId = cache.generateVolumeId(referencedImageIds);\n            const imageVolume = cache.getVolume(volumeId);\n            referencedVolumeId = imageVolume\n                ? imageVolume.volumeId\n                : (await volumeLoader.createAndCacheVolumeFromImagesSync(volumeId, referencedImageIds)).volumeId;\n        }\n        return {\n            segmentationId,\n            segmentIndex,\n            labelmapVolumeId,\n            referencedVolumeId,\n        };\n    }\n    _createFakeVolume(imageIds) {\n        const volumeId = cache.generateVolumeId(imageIds);\n        const cachedVolume = cache.getVolume(volumeId);\n        if (cachedVolume) {\n            return cachedVolume;\n        }\n        const volumeProps = csUtils.generateVolumePropsFromImageIds(imageIds, volumeId);\n        const spacing = volumeProps.spacing;\n        if (spacing[2] === 0) {\n            spacing[2] = 1;\n        }\n        const derivedVolume = new ImageVolume({\n            volumeId,\n            dataType: volumeProps.dataType,\n            metadata: structuredClone(volumeProps.metadata),\n            dimensions: volumeProps.dimensions,\n            spacing: volumeProps.spacing,\n            origin: volumeProps.origin,\n            direction: volumeProps.direction,\n            referencedVolumeId: volumeProps.referencedVolumeId,\n            imageIds: volumeProps.imageIds,\n            referencedImageIds: volumeProps.referencedImageIds,\n        });\n        cache.putVolumeSync(volumeId, derivedVolume);\n        return derivedVolume;\n    }\n    _isOrthogonalView(viewport, referencedVolumeId) {\n        const volume = cache.getVolume(referencedVolumeId);\n        const volumeImageData = volume.imageData;\n        const camera = viewport.getCamera();\n        const { ijkVecColDir, ijkVecSliceDir } = csUtils.getVolumeDirectionVectors(volumeImageData, camera);\n        return [ijkVecColDir, ijkVecSliceDir].every((vec) => csUtils.isEqual(Math.abs(vec[0]), 1) ||\n            csUtils.isEqual(Math.abs(vec[1]), 1) ||\n            csUtils.isEqual(Math.abs(vec[2]), 1));\n    }\n    getRemoveIslandData(_growCutData) {\n        return;\n    }\n    _removeIslands(growCutData) {\n        const { islandRemoval: config } = this.configuration;\n        if (!config.enabled) {\n            return;\n        }\n        const { segmentation: { segmentIndex, labelmapVolumeId }, renderingEngineId, viewportId, } = growCutData;\n        const labelmap = cache.getVolume(labelmapVolumeId);\n        const removeIslandData = this.getRemoveIslandData(growCutData);\n        if (!removeIslandData) {\n            return;\n        }\n        const [width, height] = labelmap.dimensions;\n        const numPixelsPerSlice = width * height;\n        const { worldIslandPoints = [], islandPointIndexes = [] } = removeIslandData;\n        let ijkIslandPoints = [...(removeIslandData?.ijkIslandPoints ?? [])];\n        const renderingEngine = getRenderingEngine(renderingEngineId);\n        const viewport = renderingEngine.getViewport(viewportId);\n        const { voxelManager } = labelmap;\n        const islandRemoval = new IslandRemoval();\n        ijkIslandPoints = ijkIslandPoints.concat(worldIslandPoints.map((worldPoint) => transformWorldToIndex(labelmap.imageData, worldPoint)));\n        ijkIslandPoints = ijkIslandPoints.concat(islandPointIndexes.map((pointIndex) => {\n            const x = pointIndex % width;\n            const y = Math.floor(pointIndex / width) % height;\n            const z = Math.floor(pointIndex / numPixelsPerSlice);\n            return [x, y, z];\n        }));\n        islandRemoval.initialize(viewport, voxelManager, {\n            points: ijkIslandPoints,\n            previewSegmentIndex: segmentIndex,\n            segmentIndex,\n        });\n        islandRemoval.floodFillSegmentIsland();\n        islandRemoval.removeExternalIslands();\n        islandRemoval.removeInternalIslands();\n    }\n    getSegmentStyle({ segmentationId, viewportId, segmentIndex }) {\n        return getSVGStyleForSegment({\n            segmentationId,\n            segmentIndex,\n            viewportId,\n        });\n    }\n}\nGrowCutBaseTool.toolName = 'GrowCutBaseTool';\nexport default GrowCutBaseTool;\n","import { point } from '../utilities/math';\nexport const distancePointToContour = (viewport, annotation, coords) => {\n    if (!annotation?.data?.contour?.polyline?.length) {\n        return;\n    }\n    const { polyline } = annotation.data.contour;\n    const { length } = polyline;\n    let distance = Infinity;\n    for (let i = 0; i < length; i++) {\n        const canvasPoint = viewport.worldToCanvas(polyline[i]);\n        const distanceToPoint = point.distanceToPoint(canvasPoint, coords);\n        distance = Math.min(distance, distanceToPoint);\n    }\n    if (distance === Infinity || isNaN(distance)) {\n        return;\n    }\n    return distance;\n};\n","import { fillInsideRectangle } from './fillRectangle';\nfunction eraseRectangle(enabledElement, operationData, inside = true) {\n    const eraseOperationData = Object.assign({}, operationData, {\n        segmentIndex: 0,\n    });\n    fillInsideRectangle(enabledElement, eraseOperationData);\n}\nexport function eraseInsideRectangle(enabledElement, operationData) {\n    eraseRectangle(enabledElement, operationData, true);\n}\nexport function eraseOutsideRectangle(enabledElement, operationData) {\n    eraseRectangle(enabledElement, operationData, false);\n}\n","function validate3x3Matrix(matrix) {\n    if (!Array.isArray(matrix) || matrix.length !== 9) {\n        throw new Error('Matrix must be an array of 9 numbers');\n    }\n    if (!matrix.every((n) => typeof n === 'number' && !isNaN(n))) {\n        throw new Error('Matrix must contain only valid numbers');\n    }\n}\nexport function inverse3x3Matrix(matrix) {\n    validate3x3Matrix(matrix);\n    const mat = [\n        [matrix[0], matrix[1], matrix[2]],\n        [matrix[3], matrix[4], matrix[5]],\n        [matrix[6], matrix[7], matrix[8]],\n    ];\n    const determinant = mat[0][0] * (mat[1][1] * mat[2][2] - mat[1][2] * mat[2][1]) -\n        mat[0][1] * (mat[1][0] * mat[2][2] - mat[1][2] * mat[2][0]) +\n        mat[0][2] * (mat[1][0] * mat[2][1] - mat[1][1] * mat[2][0]);\n    if (Math.abs(determinant) < 1e-10) {\n        throw new Error('Matrix is not invertible (determinant is zero)');\n    }\n    const adjugate = [\n        [\n            mat[1][1] * mat[2][2] - mat[1][2] * mat[2][1],\n            -(mat[0][1] * mat[2][2] - mat[0][2] * mat[2][1]),\n            mat[0][1] * mat[1][2] - mat[0][2] * mat[1][1],\n        ],\n        [\n            -(mat[1][0] * mat[2][2] - mat[1][2] * mat[2][0]),\n            mat[0][0] * mat[2][2] - mat[0][2] * mat[2][0],\n            -(mat[0][0] * mat[1][2] - mat[0][2] * mat[1][0]),\n        ],\n        [\n            mat[1][0] * mat[2][1] - mat[1][1] * mat[2][0],\n            -(mat[0][0] * mat[2][1] - mat[0][1] * mat[2][0]),\n            mat[0][0] * mat[1][1] - mat[0][1] * mat[1][0],\n        ],\n    ];\n    const inverse = [];\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n            inverse.push(adjugate[i][j] / determinant);\n        }\n    }\n    return inverse;\n}\nfunction normalizeVector(v) {\n    const magnitude = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    return v.map((component) => component / magnitude);\n}\nexport function checkStandardBasis(directions) {\n    validate3x3Matrix(directions);\n    const xVector = directions.slice(0, 3);\n    const yVector = directions.slice(3, 6);\n    const zVector = directions.slice(6, 9);\n    const normalizedX = normalizeVector(xVector);\n    const normalizedY = normalizeVector(yVector);\n    const normalizedZ = normalizeVector(zVector);\n    const standardBasis = {\n        x: [1, 0, 0],\n        y: [0, 1, 0],\n        z: [0, 0, 1],\n    };\n    const epsilon = 1e-10;\n    const isStandard = normalizedX.every((val, i) => Math.abs(val - standardBasis.x[i]) < epsilon) &&\n        normalizedY.every((val, i) => Math.abs(val - standardBasis.y[i]) < epsilon) &&\n        normalizedZ.every((val, i) => Math.abs(val - standardBasis.z[i]) < epsilon);\n    const rotationMatrix = isStandard\n        ? [...standardBasis.x, ...standardBasis.y, ...standardBasis.z]\n        : inverse3x3Matrix([...normalizedX, ...normalizedY, ...normalizedZ]);\n    return {\n        isStandard,\n        rotationMatrix,\n    };\n}\nfunction rotatePoint(point, origin, rotationMatrix) {\n    const x = point[0] - origin[0];\n    const y = point[1] - origin[1];\n    const z = point[2] - origin[2];\n    return [\n        rotationMatrix[0] * x +\n            rotationMatrix[1] * y +\n            rotationMatrix[2] * z +\n            origin[0],\n        rotationMatrix[3] * x +\n            rotationMatrix[4] * y +\n            rotationMatrix[5] * z +\n            origin[1],\n        rotationMatrix[6] * x +\n            rotationMatrix[7] * y +\n            rotationMatrix[8] * z +\n            origin[2],\n    ];\n}\nexport function rotatePoints(rotationMatrix, origin, points) {\n    const rotatedPoints = [];\n    for (let i = 0; i < points.length; i += 3) {\n        const point = points.slice(i, i + 3);\n        const rotated = rotatePoint(point, origin, rotationMatrix);\n        rotatedPoints.push(...rotated);\n    }\n    return rotatedPoints;\n}\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport { getToolGroupForViewport } from '../store/ToolGroupManager';\nexport default function getToolsWithModesForElement(element, modesFilter) {\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return [];\n    }\n    const enabledTools = [];\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const toolOptions = toolGroup.toolOptions[toolName];\n        if (!toolOptions) {\n            continue;\n        }\n        if (modesFilter.includes(toolOptions.mode)) {\n            const toolInstance = toolGroup.getToolInstance(toolName);\n            enabledTools.push(toolInstance);\n        }\n    }\n    return enabledTools;\n}\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport { isViewportPreScaled } from './viewport';\nconst DEFAULT_MULTIPLIER = 4;\nfunction getVOIMultipliers(viewport, volumeId, options) {\n    const modality = csUtils.getViewportModality(viewport, volumeId);\n    if (modality === 'PT') {\n        const { clientWidth, clientHeight } = viewport.element;\n        const ptMultiplier = 5 / Math.max(clientWidth, clientHeight);\n        const isPreScaled = isViewportPreScaled(viewport, volumeId);\n        const { fixedPTWindowWidth = true } = options ?? {};\n        const xMultiplier = fixedPTWindowWidth ? 0 : ptMultiplier;\n        return isPreScaled\n            ? [xMultiplier, ptMultiplier]\n            : [xMultiplier, DEFAULT_MULTIPLIER];\n    }\n    return [DEFAULT_MULTIPLIER, DEFAULT_MULTIPLIER];\n}\nexport { getVOIMultipliers as default, getVOIMultipliers };\n","export class LivewirePath {\n    constructor(inputPointArray, inputControlPointIndexArray) {\n        this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n        this._controlPointIndexes = inputControlPointIndexArray\n            ? inputControlPointIndexArray.slice()\n            : [];\n    }\n    getPoint(index) {\n        return this.pointArray[index];\n    }\n    getLastPoint() {\n        return this.pointArray[this.pointArray.length - 1];\n    }\n    isControlPoint(point) {\n        const index = this.pointArray.indexOf(point);\n        if (index !== -1) {\n            return this._controlPointIndexes.indexOf(index) !== -1;\n        }\n        else {\n            throw new Error('Error: isControlPoint called with not in list point.');\n        }\n    }\n    addPoint(point) {\n        this.pointArray.push(point);\n    }\n    addControlPoint(point) {\n        const index = this.pointArray.indexOf(point);\n        if (index !== -1) {\n            this._controlPointIndexes.push(index);\n        }\n        else {\n            throw new Error('Cannot mark a non registered point as control point.');\n        }\n    }\n    getControlPoints() {\n        return this._controlPointIndexes.map((i) => this.pointArray[i]);\n    }\n    getNumControlPoints() {\n        return this._controlPointIndexes.length;\n    }\n    removeLastControlPoint() {\n        if (this._controlPointIndexes.length) {\n            this._controlPointIndexes.pop();\n        }\n    }\n    getLastControlPoint() {\n        if (this._controlPointIndexes.length) {\n            return this.pointArray[this._controlPointIndexes[this._controlPointIndexes.length - 1]];\n        }\n    }\n    removeLastPoints(count) {\n        this.pointArray.splice(this.pointArray.length - count, count);\n    }\n    addPoints(newPointArray) {\n        this.pointArray = this.pointArray.concat(newPointArray);\n    }\n    prependPath(other) {\n        const otherSize = other.pointArray.length;\n        const shiftedIndexArray = [];\n        this.pointArray = other.pointArray.concat(this.pointArray);\n        for (let i = 0; i < this._controlPointIndexes.length; ++i) {\n            shiftedIndexArray[i] = this._controlPointIndexes[i] + otherSize;\n        }\n        this._controlPointIndexes =\n            other._controlPointIndexes.concat(shiftedIndexArray);\n    }\n    appendPath(other) {\n        this.addPoints(other.pointArray);\n        other._controlPointIndexes.forEach((point) => this._controlPointIndexes.push(point));\n    }\n}\n","export class BucketQueue {\n    constructor({ numBits, getPriority, areEqual, }) {\n        this._bucketCount = 1 << numBits;\n        this._mask = this._bucketCount - 1;\n        this._size = 0;\n        this._currentBucketIndex = 0;\n        this._buckets = this._buildArray(this._bucketCount);\n        this._getPriority =\n            typeof getPriority !== 'undefined'\n                ? getPriority\n                : (item) => item;\n        this._areEqual =\n            typeof areEqual === 'function'\n                ? areEqual\n                : (itemA, itemB) => itemA === itemB;\n    }\n    push(item) {\n        const bucketIndex = this._getBucketIndex(item);\n        const oldHead = this._buckets[bucketIndex];\n        const newHead = {\n            value: item,\n            next: oldHead,\n        };\n        this._buckets[bucketIndex] = newHead;\n        this._size++;\n    }\n    pop() {\n        if (this._size === 0) {\n            throw new Error('Cannot pop because the queue is empty.');\n        }\n        while (this._buckets[this._currentBucketIndex] === null) {\n            this._currentBucketIndex =\n                (this._currentBucketIndex + 1) % this._bucketCount;\n        }\n        const ret = this._buckets[this._currentBucketIndex];\n        this._buckets[this._currentBucketIndex] = ret.next;\n        this._size--;\n        return ret.value;\n    }\n    remove(item) {\n        if (!item) {\n            return false;\n        }\n        const bucketIndex = this._getBucketIndex(item);\n        const firstBucketNode = this._buckets[bucketIndex];\n        let node = firstBucketNode;\n        let prevNode;\n        while (node !== null) {\n            if (this._areEqual(item, node.value)) {\n                break;\n            }\n            prevNode = node;\n            node = node.next;\n        }\n        if (node === null) {\n            return false;\n        }\n        if (node === firstBucketNode) {\n            this._buckets[bucketIndex] = node.next;\n        }\n        else {\n            prevNode.next = node.next;\n        }\n        this._size--;\n        return true;\n    }\n    isEmpty() {\n        return this._size === 0;\n    }\n    _getBucketIndex(item) {\n        return this._getPriority(item) & this._mask;\n    }\n    _buildArray(size) {\n        const buckets = new Array(size);\n        buckets.fill(null);\n        return buckets;\n    }\n}\n","import { utilities } from '@cornerstonejs/core';\nimport { BucketQueue } from '../BucketQueue';\nconst { isEqual } = utilities;\nconst MAX_UINT32 = 4294967295;\nconst TWO_THIRD_PI = 2 / (3 * Math.PI);\nexport class LivewireScissors {\n    constructor(grayscalePixelData, width, height) {\n        this._getPointIndex = (row, col) => {\n            const { width } = this;\n            return row * width + col;\n        };\n        this._getPointCoordinate = (index) => {\n            const x = index % this.width;\n            const y = Math.floor(index / this.width);\n            return [x, y];\n        };\n        this._getPointCost = (pointIndex) => {\n            return Math.round(this.searchGranularity * this.costs[pointIndex]);\n        };\n        const numPixels = grayscalePixelData.length;\n        this.searchGranularityBits = 8;\n        this.searchGranularity = 1 << this.searchGranularityBits;\n        this.width = width;\n        this.height = height;\n        this.grayscalePixelData = grayscalePixelData;\n        this.laplace = null;\n        this.gradXNew = null;\n        this.gradYNew = null;\n        this.laplace = this._computeLaplace();\n        this.gradMagnitude = this._computeGradient();\n        this.gradXNew = this._computeGradientX();\n        this.gradYNew = this._computeGradientY();\n        this.visited = new Array(numPixels);\n        this.parents = new Uint32Array(numPixels);\n        this.costs = new Float32Array(numPixels);\n    }\n    startSearch(startPoint) {\n        const startPointIndex = this._getPointIndex(startPoint[1], startPoint[0]);\n        this.startPoint = null;\n        this.visited.fill(false);\n        this.parents.fill(MAX_UINT32);\n        this.costs.fill(Infinity);\n        this.priorityQueueNew = new BucketQueue({\n            numBits: this.searchGranularityBits,\n            getPriority: this._getPointCost,\n        });\n        this.startPoint = startPoint;\n        this.costs[startPointIndex] = 0;\n        this.priorityQueueNew.push(startPointIndex);\n    }\n    findMinNearby(testPoint, delta = 2) {\n        const [x, y] = testPoint;\n        const { costs } = this;\n        const xRange = [\n            Math.max(0, x - delta),\n            Math.min(x + delta + 1, this.width),\n        ];\n        const yRange = [\n            Math.max(0, y - delta),\n            Math.min(y + delta + 1, this.height),\n        ];\n        let minValue = costs[this._getPointIndex(y, x)] * 0.8;\n        let minPoint = testPoint;\n        for (let xTest = xRange[0]; xTest < xRange[1]; xTest++) {\n            for (let yTest = yRange[0]; yTest < yRange[1]; yTest++) {\n                const distanceCost = 1 -\n                    (Math.abs(xTest - testPoint[0]) + Math.abs(yTest - testPoint[1])) /\n                        delta /\n                        2;\n                const weightCost = costs[this._getPointIndex(yTest, xTest)];\n                const weight = weightCost * 0.8 + distanceCost * 0.2;\n                if (weight < minValue) {\n                    minPoint = [xTest, yTest];\n                    minValue = weight;\n                }\n            }\n        }\n        return minPoint;\n    }\n    findPathToPoint(targetPoint) {\n        if (!this.startPoint) {\n            throw new Error('There is no search in progress');\n        }\n        const { startPoint, _getPointIndex: index, _getPointCoordinate: coord, } = this;\n        const startPointIndex = index(startPoint[1], startPoint[0]);\n        const targetPointIndex = index(targetPoint[1], targetPoint[0]);\n        const { visited: visited, parents: parents, costs: cost, priorityQueueNew: priorityQueue, } = this;\n        if (targetPointIndex === startPointIndex) {\n            return [];\n        }\n        while (!priorityQueue.isEmpty() &&\n            parents[targetPointIndex] === MAX_UINT32) {\n            const pointIndex = priorityQueue.pop();\n            if (visited[pointIndex]) {\n                continue;\n            }\n            const point = coord(pointIndex);\n            const neighborsPoints = this._getNeighborPoints(point);\n            visited[pointIndex] = true;\n            for (let i = 0, len = neighborsPoints.length; i < len; i++) {\n                const neighborPoint = neighborsPoints[i];\n                const neighborPointIndex = index(neighborPoint[1], neighborPoint[0]);\n                const dist = this._getWeightedDistance(point, neighborPoint);\n                const neighborCost = cost[pointIndex] + dist;\n                if (neighborCost < cost[neighborPointIndex]) {\n                    if (cost[neighborPointIndex] !== Infinity) {\n                        priorityQueue.remove(neighborPointIndex);\n                    }\n                    cost[neighborPointIndex] = neighborCost;\n                    parents[neighborPointIndex] = pointIndex;\n                    priorityQueue.push(neighborPointIndex);\n                }\n            }\n        }\n        const pathPoints = [];\n        let pathPointIndex = targetPointIndex;\n        while (pathPointIndex !== MAX_UINT32) {\n            pathPoints.push(coord(pathPointIndex));\n            pathPointIndex = parents[pathPointIndex];\n        }\n        return pathPoints.reverse();\n    }\n    _getDeltaX(x, y) {\n        const { grayscalePixelData: data, width } = this;\n        let index = this._getPointIndex(y, x);\n        if (x + 1 === width) {\n            index--;\n        }\n        return data[index + 1] - data[index];\n    }\n    _getDeltaY(x, y) {\n        const { grayscalePixelData: data, width, height } = this;\n        let index = this._getPointIndex(y, x);\n        if (y + 1 === height) {\n            index -= width;\n        }\n        return data[index] - data[index + width];\n    }\n    _getGradientMagnitude(x, y) {\n        const dx = this._getDeltaX(x, y);\n        const dy = this._getDeltaY(x, y);\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    _getLaplace(x, y) {\n        const { grayscalePixelData: data, _getPointIndex: index } = this;\n        const p02 = data[index(y - 2, x)];\n        const p11 = data[index(y - 1, x - 1)];\n        const p12 = data[index(y - 1, x)];\n        const p13 = data[index(y - 1, x + 1)];\n        const p20 = data[index(y, x - 2)];\n        const p21 = data[index(y, x - 1)];\n        const p22 = data[index(y, x)];\n        const p23 = data[index(y, x + 1)];\n        const p24 = data[index(y, x + 2)];\n        const p31 = data[index(y + 1, x - 1)];\n        const p32 = data[index(y + 1, x)];\n        const p33 = data[index(y + 1, x + 1)];\n        const p42 = data[index(y + 2, x)];\n        let lap = p02;\n        lap += p11 + 2 * p12 + p13;\n        lap += p20 + 2 * p21 - 16 * p22 + 2 * p23 + p24;\n        lap += p31 + 2 * p32 + p33;\n        lap += p42;\n        return lap;\n    }\n    _computeGradient() {\n        const { width, height } = this;\n        const gradient = new Float32Array(width * height);\n        let pixelIndex = 0;\n        let max = 0;\n        let x = 0;\n        let y = 0;\n        for (y = 0; y < height - 1; y++) {\n            for (x = 0; x < width - 1; x++) {\n                gradient[pixelIndex] = this._getGradientMagnitude(x, y);\n                max = Math.max(gradient[pixelIndex], max);\n                pixelIndex++;\n            }\n            gradient[pixelIndex] = gradient[pixelIndex - 1];\n            pixelIndex++;\n        }\n        for (let len = gradient.length; pixelIndex < len; pixelIndex++) {\n            gradient[pixelIndex] = gradient[pixelIndex - width];\n        }\n        for (let i = 0, len = gradient.length; i < len; i++) {\n            gradient[i] = 1 - gradient[i] / max;\n        }\n        return gradient;\n    }\n    _computeLaplace() {\n        const { width, height, _getPointIndex: index } = this;\n        const laplace = new Float32Array(width * height);\n        laplace.fill(1, 0, index(2, 0));\n        for (let y = 2; y < height - 2; y++) {\n            laplace[index(y, 0)] = 1;\n            laplace[index(y, 1)] = 1;\n            for (let x = 2; x < width - 2; x++) {\n                laplace[index(y, x)] = this._getLaplace(x, y) > 0.33 ? 0 : 1;\n            }\n            laplace[index(y, width - 2)] = 1;\n            laplace[index(y, width - 1)] = 1;\n        }\n        laplace.fill(1, index(height - 2, 0));\n        return laplace;\n    }\n    _computeGradientX() {\n        const { width, height } = this;\n        const gradX = new Float32Array(width * height);\n        let pixelIndex = 0;\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                gradX[pixelIndex++] = this._getDeltaX(x, y);\n            }\n        }\n        return gradX;\n    }\n    _computeGradientY() {\n        const { width, height } = this;\n        const gradY = new Float32Array(width * height);\n        let pixelIndex = 0;\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                gradY[pixelIndex++] = this._getDeltaY(x, y);\n            }\n        }\n        return gradY;\n    }\n    _getGradientUnitVector(px, py) {\n        const { gradXNew, gradYNew, _getPointIndex: index } = this;\n        const pointGradX = gradXNew[index(py, px)];\n        const pointGradY = gradYNew[index(py, px)];\n        let gradVecLen = Math.sqrt(pointGradX * pointGradX + pointGradY * pointGradY);\n        gradVecLen = Math.max(gradVecLen, 1e-100);\n        return [pointGradX / gradVecLen, pointGradY / gradVecLen];\n    }\n    _getGradientDirection(px, py, qx, qy) {\n        const dgpUnitVec = this._getGradientUnitVector(px, py);\n        const gdqUnitVec = this._getGradientUnitVector(qx, qy);\n        let dp = dgpUnitVec[1] * (qx - px) - dgpUnitVec[0] * (qy - py);\n        let dq = gdqUnitVec[1] * (qx - px) - gdqUnitVec[0] * (qy - py);\n        if (dp < 0) {\n            dp = -dp;\n            dq = -dq;\n        }\n        if (px !== qx && py !== qy) {\n            dp *= Math.SQRT1_2;\n            dq *= Math.SQRT1_2;\n        }\n        dq = Math.min(Math.max(dq, -1), 1);\n        const direction = TWO_THIRD_PI * (Math.acos(Math.min(dp, 1)) + Math.acos(dq));\n        if (isNaN(direction) || !isFinite(direction)) {\n            console.warn('Found non-direction:', px, py, qx, qy, dp, dq, direction);\n            return 1;\n        }\n        return direction;\n    }\n    getCost(pointA, pointB) {\n        return this._getWeightedDistance(pointA, pointB);\n    }\n    _getWeightedDistance(pointA, pointB) {\n        const { _getPointIndex: index, width, height } = this;\n        const [aX, aY] = pointA;\n        const [bX, bY] = pointB;\n        if (bX < 0 || bX >= width || bY < 0 || bY >= height) {\n            return 1;\n        }\n        if (aX < 0 || aY < 0 || aX >= width || aY >= height) {\n            return 0;\n        }\n        const bIndex = index(bY, bX);\n        let gradient = this.gradMagnitude[bIndex];\n        if (aX === bX || aY === bY) {\n            gradient *= Math.SQRT1_2;\n        }\n        const laplace = this.laplace[bIndex];\n        const direction = this._getGradientDirection(aX, aY, bX, bY);\n        return 0.43 * gradient + 0.43 * laplace + 0.11 * direction;\n    }\n    _getNeighborPoints(point) {\n        const { width, height } = this;\n        const list = [];\n        const sx = Math.max(point[0] - 1, 0);\n        const sy = Math.max(point[1] - 1, 0);\n        const ex = Math.min(point[0] + 1, width - 1);\n        const ey = Math.min(point[1] + 1, height - 1);\n        for (let y = sy; y <= ey; y++) {\n            for (let x = sx; x <= ex; x++) {\n                if (x !== point[0] || y !== point[1]) {\n                    list.push([x, y]);\n                }\n            }\n        }\n        return list;\n    }\n    static createInstanceFromRawPixelData(pixelData, width, height, voiRange) {\n        const numPixels = pixelData.length;\n        const grayscalePixelData = new Float32Array(numPixels);\n        const { lower: minPixelValue, upper: maxPixelValue } = voiRange;\n        const pixelRange = maxPixelValue - minPixelValue;\n        for (let i = 0, len = pixelData.length; i < len; i++) {\n            grayscalePixelData[i] = Math.max(0, Math.min(1, (pixelData[i] - minPixelValue) / pixelRange));\n        }\n        return new LivewireScissors(grayscalePixelData, width, height);\n    }\n}\n","export default function intersectAABB(aabb1, aabb2) {\n    return (aabb1.minX <= aabb2.maxX &&\n        aabb1.maxX >= aabb2.minX &&\n        aabb1.minY <= aabb2.maxY &&\n        aabb1.maxY >= aabb2.minY);\n}\n","export default function distanceToPointSquared(aabb, point) {\n    const aabbWidth = aabb.maxX - aabb.minX;\n    const aabbHeight = aabb.maxY - aabb.minY;\n    const aabbSize = [aabbWidth, aabbHeight];\n    const aabbCenter = [\n        aabb.minX + aabbWidth / 2,\n        aabb.minY + aabbHeight / 2,\n    ];\n    const translatedPoint = [\n        Math.abs(point[0] - aabbCenter[0]),\n        Math.abs(point[1] - aabbCenter[1]),\n    ];\n    const dx = translatedPoint[0] - aabbSize[0] * 0.5;\n    const dy = translatedPoint[1] - aabbSize[1] * 0.5;\n    if (dx > 0 && dy > 0) {\n        return dx * dx + dy * dy;\n    }\n    const dist = Math.max(dx, 0) + Math.max(dy, 0);\n    return dist * dist;\n}\n","import distanceToPointSquared from './distanceToPointSquared';\nexport default function distanceToPoint(aabb, point) {\n    return Math.sqrt(distanceToPointSquared(aabb, point));\n}\n","import { vec2, vec3 } from 'gl-matrix';\nfunction angleBetween3DLines(line1, line2) {\n    const [p1, p2] = line1;\n    const [p3, p4] = line2;\n    const v1 = vec3.sub(vec3.create(), p2, p1);\n    const v2 = vec3.sub(vec3.create(), p3, p4);\n    const dot = vec3.dot(v1, v2);\n    const v1Length = vec3.length(v1);\n    const v2Length = vec3.length(v2);\n    const cos = dot / (v1Length * v2Length);\n    const radian = Math.acos(cos);\n    return (radian * 180) / Math.PI;\n}\nfunction angleBetween2DLines(line1, line2) {\n    const [p1, p2] = line1;\n    const [p3, p4] = line2;\n    const v1 = vec2.sub(vec2.create(), p2, p1);\n    const v2 = vec2.sub(vec2.create(), p3, p4);\n    const dot = vec2.dot(v1, v2);\n    const v1Length = vec2.length(v1);\n    const v2Length = vec2.length(v2);\n    const cos = dot / (v1Length * v2Length);\n    return Math.acos(cos) * (180 / Math.PI);\n}\nexport default function angleBetweenLines(line1, line2) {\n    const is3D = line1[0].length === 3;\n    return is3D\n        ? angleBetween3DLines(line1, line2)\n        : angleBetween2DLines(line1, line2);\n}\n","export class Calculator {\n}\nexport class InstanceCalculator {\n    constructor(options) {\n        this.storePointData = options.storePointData;\n    }\n    getStatistics() {\n        console.debug('InstanceCalculator getStatistics called');\n    }\n}\n","import { distanceToPoint } from '../point';\nexport default function getCanvasCircleRadius(circleCanvasPoints) {\n    const [center, end] = circleCanvasPoints;\n    return distanceToPoint(center, end);\n}\n","import { distanceToPoint } from '../point';\nexport default function getCanvasCircleCorners(circleCanvasPoints) {\n    const [center, end] = circleCanvasPoints;\n    const radius = distanceToPoint(center, end);\n    const topLeft = [center[0] - radius, center[1] - radius];\n    const bottomRight = [center[0] + radius, center[1] + radius];\n    return [topLeft, bottomRight];\n}\n","export default function pointInEllipse(ellipse, pointLPS, inverts = {}) {\n    if (!inverts.precalculated) {\n        precalculatePointInEllipse(ellipse, inverts);\n    }\n    return inverts.precalculated(pointLPS);\n}\nconst precalculatePointInEllipse = (ellipse, inverts = {}) => {\n    const { xRadius, yRadius, zRadius } = ellipse;\n    if (inverts.invXRadiusSq === undefined ||\n        inverts.invYRadiusSq === undefined ||\n        inverts.invZRadiusSq === undefined) {\n        inverts.invXRadiusSq = xRadius !== 0 ? 1 / xRadius ** 2 : 0;\n        inverts.invYRadiusSq = yRadius !== 0 ? 1 / yRadius ** 2 : 0;\n        inverts.invZRadiusSq = zRadius !== 0 ? 1 / zRadius ** 2 : 0;\n    }\n    const { invXRadiusSq, invYRadiusSq, invZRadiusSq } = inverts;\n    const { center } = ellipse;\n    const [centerL, centerP, centerS] = center;\n    inverts.precalculated = (pointLPS) => {\n        const dx = pointLPS[0] - centerL;\n        let inside = dx * dx * invXRadiusSq;\n        if (inside > 1) {\n            return false;\n        }\n        const dy = pointLPS[1] - centerP;\n        inside += dy * dy * invYRadiusSq;\n        if (inside > 1) {\n            return false;\n        }\n        const dz = pointLPS[2] - centerS;\n        inside += dz * dz * invZRadiusSq;\n        return inside <= 1;\n    };\n    return inverts;\n};\nexport { precalculatePointInEllipse };\n","import distanceToPointSquaredInfo from './distanceToPointSquaredInfo';\nexport default function distanceToPointSquared(lineStart, lineEnd, point) {\n    return distanceToPointSquaredInfo(lineStart, lineEnd, point).distanceSquared;\n}\n","import { distanceToPointSquared } from '../point';\nexport default function distanceToPointSquaredInfo(lineStart, lineEnd, point) {\n    let closestPoint;\n    const distanceSquared = distanceToPointSquared(lineStart, lineEnd);\n    if (lineStart[0] === lineEnd[0] && lineStart[1] === lineEnd[1]) {\n        closestPoint = lineStart;\n    }\n    if (!closestPoint) {\n        const dotProduct = ((point[0] - lineStart[0]) * (lineEnd[0] - lineStart[0]) +\n            (point[1] - lineStart[1]) * (lineEnd[1] - lineStart[1])) /\n            distanceSquared;\n        if (dotProduct < 0) {\n            closestPoint = lineStart;\n        }\n        else if (dotProduct > 1) {\n            closestPoint = lineEnd;\n        }\n        else {\n            closestPoint = [\n                lineStart[0] + dotProduct * (lineEnd[0] - lineStart[0]),\n                lineStart[1] + dotProduct * (lineEnd[1] - lineStart[1]),\n            ];\n        }\n    }\n    return {\n        point: [...closestPoint],\n        distanceSquared: distanceToPointSquared(point, closestPoint),\n    };\n}\n","const ORIENTATION_TOLERANCE = 1e-2;\nexport default function isPointOnLineSegment(lineStart, lineEnd, point) {\n    const minX = lineStart[0] <= lineEnd[0] ? lineStart[0] : lineEnd[0];\n    const maxX = lineStart[0] >= lineEnd[0] ? lineStart[0] : lineEnd[0];\n    const minY = lineStart[1] <= lineEnd[1] ? lineStart[1] : lineEnd[1];\n    const maxY = lineStart[1] >= lineEnd[1] ? lineStart[1] : lineEnd[1];\n    const aabbContainsPoint = point[0] >= minX - ORIENTATION_TOLERANCE &&\n        point[0] <= maxX + ORIENTATION_TOLERANCE &&\n        point[1] >= minY - ORIENTATION_TOLERANCE &&\n        point[1] <= maxY + ORIENTATION_TOLERANCE;\n    if (!aabbContainsPoint) {\n        return false;\n    }\n    const orientation = (lineEnd[1] - lineStart[1]) * (point[0] - lineEnd[0]) -\n        (lineEnd[0] - lineStart[0]) * (point[1] - lineEnd[1]);\n    const absOrientation = orientation >= 0 ? orientation : -orientation;\n    return absOrientation <= ORIENTATION_TOLERANCE;\n}\n","const midPoint = (...args) => {\n    const ret = args[0].length === 2 ? [0, 0] : [0, 0, 0];\n    const len = args.length;\n    for (const arg of args) {\n        ret[0] += arg[0] / len;\n        ret[1] += arg[1] / len;\n        if (ret.length === 3) {\n            ret[2] += arg[2] / len;\n        }\n    }\n    return ret;\n};\nconst midPoint2 = midPoint;\nexport default midPoint;\nexport { midPoint2 };\n","export default function distanceToPointSquared(p1, p2) {\n    if (p1.length !== p2.length) {\n        throw Error('Both points should have the same dimensionality');\n    }\n    const [x1, y1, z1 = 0] = p1;\n    const [x2, y2, z2 = 0] = p2;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const dz = z2 - z1;\n    return dx * dx + dy * dy + dz * dz;\n}\n","import distanceToPointSquared from './distanceToPointSquared';\nexport default function distanceToPoint(p1, p2) {\n    return Math.sqrt(distanceToPointSquared(p1, p2));\n}\n","export default function mirror(mirrorPoint, staticPoint) {\n    const [x1, y1] = mirrorPoint;\n    const [x2, y2] = staticPoint;\n    const newX = 2 * x2 - x1;\n    const newY = 2 * y2 - y1;\n    return [newX, newY];\n}\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport { vec2, vec3 } from 'gl-matrix';\nconst addCanvasPointsToArray = (element, canvasPoints, newCanvasPoint, commonData) => {\n    const { xDir, yDir, spacing } = commonData;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    if (!canvasPoints.length) {\n        canvasPoints.push(newCanvasPoint);\n        console.log('>>>>> !canvasPoints. :: RETURN');\n        return 1;\n    }\n    const lastWorldPos = viewport.canvasToWorld(canvasPoints[canvasPoints.length - 1]);\n    const newWorldPos = viewport.canvasToWorld(newCanvasPoint);\n    const worldPosDiff = vec3.create();\n    vec3.subtract(worldPosDiff, newWorldPos, lastWorldPos);\n    const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n    const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n    const numPointsToAdd = Math.max(Math.floor(xDist / spacing[0]), Math.floor(yDist / spacing[0]));\n    if (numPointsToAdd > 1) {\n        const lastCanvasPoint = canvasPoints[canvasPoints.length - 1];\n        const canvasDist = vec2.dist(lastCanvasPoint, newCanvasPoint);\n        const canvasDir = vec2.create();\n        vec2.subtract(canvasDir, newCanvasPoint, lastCanvasPoint);\n        vec2.set(canvasDir, canvasDir[0] / canvasDist, canvasDir[1] / canvasDist);\n        const distPerPoint = canvasDist / numPointsToAdd;\n        for (let i = 1; i <= numPointsToAdd; i++) {\n            canvasPoints.push([\n                lastCanvasPoint[0] + distPerPoint * canvasDir[0] * i,\n                lastCanvasPoint[1] + distPerPoint * canvasDir[1] * i,\n            ]);\n        }\n    }\n    else {\n        canvasPoints.push(newCanvasPoint);\n    }\n    return numPointsToAdd;\n};\nexport default addCanvasPointsToArray;\n","export default function areLineSegmentsIntersecting(p1, q1, p2, q2) {\n    let result = false;\n    const line1MinX = p1[0] < q1[0] ? p1[0] : q1[0];\n    const line1MinY = p1[1] < q1[1] ? p1[1] : q1[1];\n    const line1MaxX = p1[0] > q1[0] ? p1[0] : q1[0];\n    const line1MaxY = p1[1] > q1[1] ? p1[1] : q1[1];\n    const line2MinX = p2[0] < q2[0] ? p2[0] : q2[0];\n    const line2MinY = p2[1] < q2[1] ? p2[1] : q2[1];\n    const line2MaxX = p2[0] > q2[0] ? p2[0] : q2[0];\n    const line2MaxY = p2[1] > q2[1] ? p2[1] : q2[1];\n    if (line1MinX > line2MaxX ||\n        line1MaxX < line2MinX ||\n        line1MinY > line2MaxY ||\n        line1MaxY < line2MinY) {\n        return false;\n    }\n    const orient = [\n        orientation(p1, q1, p2),\n        orientation(p1, q1, q2),\n        orientation(p2, q2, p1),\n        orientation(p2, q2, q1),\n    ];\n    if (orient[0] !== orient[1] && orient[2] !== orient[3]) {\n        return true;\n    }\n    if (orient[0] === 0 && onSegment(p1, p2, q1)) {\n        result = true;\n    }\n    else if (orient[1] === 0 && onSegment(p1, q2, q1)) {\n        result = true;\n    }\n    else if (orient[2] === 0 && onSegment(p2, p1, q2)) {\n        result = true;\n    }\n    else if (orient[3] === 0 && onSegment(p2, q1, q2)) {\n        result = true;\n    }\n    return result;\n}\nfunction orientation(p, q, r) {\n    const orientationValue = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n    if (orientationValue === 0) {\n        return 0;\n    }\n    return orientationValue > 0 ? 1 : 2;\n}\nfunction onSegment(p, q, r) {\n    if (q[0] <= Math.max(p[0], r[0]) &&\n        q[0] >= Math.min(p[0], r[0]) &&\n        q[1] <= Math.max(p[1], r[1]) &&\n        q[1] >= Math.min(p[1], r[1])) {\n        return true;\n    }\n    return false;\n}\n","import * as mathPoint from '../point';\nimport getLineSegmentIntersectionsIndexes from './getLineSegmentIntersectionsIndexes';\nimport containsPoint from './containsPoint';\nimport getNormal2 from './getNormal2';\nimport { glMatrix, vec3 } from 'gl-matrix';\nimport getLinesIntersection from './getLinesIntersection';\nvar PolylinePointType;\n(function (PolylinePointType) {\n    PolylinePointType[PolylinePointType[\"Vertex\"] = 0] = \"Vertex\";\n    PolylinePointType[PolylinePointType[\"Intersection\"] = 1] = \"Intersection\";\n})(PolylinePointType || (PolylinePointType = {}));\nvar PolylinePointPosition;\n(function (PolylinePointPosition) {\n    PolylinePointPosition[PolylinePointPosition[\"Outside\"] = -1] = \"Outside\";\n    PolylinePointPosition[PolylinePointPosition[\"Edge\"] = 0] = \"Edge\";\n    PolylinePointPosition[PolylinePointPosition[\"Inside\"] = 1] = \"Inside\";\n})(PolylinePointPosition || (PolylinePointPosition = {}));\nvar PolylinePointDirection;\n(function (PolylinePointDirection) {\n    PolylinePointDirection[PolylinePointDirection[\"Exiting\"] = -1] = \"Exiting\";\n    PolylinePointDirection[PolylinePointDirection[\"Unknown\"] = 0] = \"Unknown\";\n    PolylinePointDirection[PolylinePointDirection[\"Entering\"] = 1] = \"Entering\";\n})(PolylinePointDirection || (PolylinePointDirection = {}));\nfunction ensuresNextPointers(polylinePoints) {\n    for (let i = 0, len = polylinePoints.length; i < len; i++) {\n        const currentPoint = polylinePoints[i];\n        if (!currentPoint.next) {\n            currentPoint.next = polylinePoints[i === len - 1 ? 0 : i + 1];\n        }\n    }\n}\nfunction getSourceAndTargetPointsList(targetPolyline, sourcePolyline) {\n    const targetPolylinePoints = [];\n    const sourcePolylinePoints = [];\n    const sourceIntersectionsCache = new Map();\n    const isFirstPointInside = containsPoint(sourcePolyline, targetPolyline[0]);\n    let intersectionPointDirection = isFirstPointInside\n        ? PolylinePointDirection.Exiting\n        : PolylinePointDirection.Entering;\n    for (let i = 0, len = targetPolyline.length; i < len; i++) {\n        const p1 = targetPolyline[i];\n        const pointInside = containsPoint(sourcePolyline, p1);\n        const vertexPoint = {\n            type: PolylinePointType.Vertex,\n            coordinates: p1,\n            position: pointInside\n                ? PolylinePointPosition.Inside\n                : PolylinePointPosition.Outside,\n            visited: false,\n            next: null,\n        };\n        targetPolylinePoints.push(vertexPoint);\n        const q1 = targetPolyline[i === len - 1 ? 0 : i + 1];\n        const intersectionsInfo = getLineSegmentIntersectionsIndexes(sourcePolyline, p1, q1).map((intersectedLineSegment) => {\n            const sourceLineSegmentId = intersectedLineSegment[0];\n            const p2 = sourcePolyline[intersectedLineSegment[0]];\n            const q2 = sourcePolyline[intersectedLineSegment[1]];\n            const intersectionCoordinate = getLinesIntersection(p1, q1, p2, q2);\n            const targetStartPointDistSquared = mathPoint.distanceToPointSquared(p1, intersectionCoordinate);\n            return {\n                sourceLineSegmentId,\n                coordinate: intersectionCoordinate,\n                targetStartPointDistSquared,\n            };\n        });\n        intersectionsInfo.sort((left, right) => left.targetStartPointDistSquared - right.targetStartPointDistSquared);\n        intersectionsInfo.forEach((intersectionInfo) => {\n            const { sourceLineSegmentId, coordinate: intersectionCoordinate } = intersectionInfo;\n            const targetEdgePoint = {\n                type: PolylinePointType.Intersection,\n                coordinates: intersectionCoordinate,\n                position: PolylinePointPosition.Edge,\n                direction: intersectionPointDirection,\n                visited: false,\n                next: null,\n            };\n            const sourceEdgePoint = {\n                ...targetEdgePoint,\n                direction: PolylinePointDirection.Unknown,\n                cloned: true,\n            };\n            if (intersectionPointDirection === PolylinePointDirection.Entering) {\n                targetEdgePoint.next = sourceEdgePoint;\n            }\n            else {\n                sourceEdgePoint.next = targetEdgePoint;\n            }\n            let sourceIntersectionPoints = sourceIntersectionsCache.get(sourceLineSegmentId);\n            if (!sourceIntersectionPoints) {\n                sourceIntersectionPoints = [];\n                sourceIntersectionsCache.set(sourceLineSegmentId, sourceIntersectionPoints);\n            }\n            targetPolylinePoints.push(targetEdgePoint);\n            sourceIntersectionPoints.push(sourceEdgePoint);\n            intersectionPointDirection *= -1;\n        });\n    }\n    for (let i = 0, len = sourcePolyline.length; i < len; i++) {\n        const lineSegmentId = i;\n        const p1 = sourcePolyline[i];\n        const vertexPoint = {\n            type: PolylinePointType.Vertex,\n            coordinates: p1,\n            visited: false,\n            next: null,\n        };\n        sourcePolylinePoints.push(vertexPoint);\n        const sourceIntersectionPoints = sourceIntersectionsCache.get(lineSegmentId);\n        if (!sourceIntersectionPoints?.length) {\n            continue;\n        }\n        sourceIntersectionPoints\n            .map((intersectionPoint) => ({\n            intersectionPoint,\n            lineSegStartDistSquared: mathPoint.distanceToPointSquared(p1, intersectionPoint.coordinates),\n        }))\n            .sort((left, right) => left.lineSegStartDistSquared - right.lineSegStartDistSquared)\n            .map(({ intersectionPoint }) => intersectionPoint)\n            .forEach((intersectionPoint) => sourcePolylinePoints.push(intersectionPoint));\n    }\n    ensuresNextPointers(targetPolylinePoints);\n    ensuresNextPointers(sourcePolylinePoints);\n    return { targetPolylinePoints, sourcePolylinePoints };\n}\nfunction getUnvisitedOutsidePoint(polylinePoints) {\n    for (let i = 0, len = polylinePoints.length; i < len; i++) {\n        const point = polylinePoints[i];\n        if (!point.visited && point.position === PolylinePointPosition.Outside) {\n            return point;\n        }\n    }\n}\nfunction mergePolylines(targetPolyline, sourcePolyline) {\n    const targetNormal = getNormal2(targetPolyline);\n    const sourceNormal = getNormal2(sourcePolyline);\n    const dotNormals = vec3.dot(sourceNormal, targetNormal);\n    if (!glMatrix.equals(1, dotNormals)) {\n        sourcePolyline = sourcePolyline.slice().reverse();\n    }\n    const { targetPolylinePoints } = getSourceAndTargetPointsList(targetPolyline, sourcePolyline);\n    const startPoint = getUnvisitedOutsidePoint(targetPolylinePoints);\n    if (!startPoint) {\n        return targetPolyline.slice();\n    }\n    const mergedPolyline = [startPoint.coordinates];\n    let currentPoint = startPoint.next;\n    while (currentPoint !== startPoint) {\n        if (currentPoint.type === PolylinePointType.Intersection &&\n            currentPoint.cloned) {\n            currentPoint = currentPoint.next;\n            continue;\n        }\n        mergedPolyline.push(currentPoint.coordinates);\n        currentPoint = currentPoint.next;\n    }\n    return mergedPolyline;\n}\nfunction subtractPolylines(targetPolyline, sourcePolyline) {\n    const targetNormal = getNormal2(targetPolyline);\n    const sourceNormal = getNormal2(sourcePolyline);\n    const dotNormals = vec3.dot(sourceNormal, targetNormal);\n    if (!glMatrix.equals(-1, dotNormals)) {\n        sourcePolyline = sourcePolyline.slice().reverse();\n    }\n    const { targetPolylinePoints } = getSourceAndTargetPointsList(targetPolyline, sourcePolyline);\n    let startPoint = null;\n    const subtractedPolylines = [];\n    while ((startPoint = getUnvisitedOutsidePoint(targetPolylinePoints))) {\n        const subtractedPolyline = [startPoint.coordinates];\n        let currentPoint = startPoint.next;\n        startPoint.visited = true;\n        while (currentPoint !== startPoint) {\n            currentPoint.visited = true;\n            if (currentPoint.type === PolylinePointType.Intersection &&\n                currentPoint.cloned) {\n                currentPoint = currentPoint.next;\n                continue;\n            }\n            subtractedPolyline.push(currentPoint.coordinates);\n            currentPoint = currentPoint.next;\n        }\n        subtractedPolylines.push(subtractedPolyline);\n    }\n    return subtractedPolylines;\n}\nexport { mergePolylines, subtractPolylines };\n","import isClosed from './isClosed';\nexport default function containsPoint(polyline, point, options = {\n    closed: undefined,\n}) {\n    if (polyline.length < 3) {\n        return false;\n    }\n    const numPolylinePoints = polyline.length;\n    let numIntersections = 0;\n    const { closed, holes } = options;\n    if (holes?.length) {\n        for (const hole of holes) {\n            if (containsPoint(hole, point)) {\n                return false;\n            }\n        }\n    }\n    const shouldClose = !(closed === undefined ? isClosed(polyline) : closed);\n    const maxSegmentIndex = polyline.length - (shouldClose ? 1 : 2);\n    for (let i = 0; i <= maxSegmentIndex; i++) {\n        const p1 = polyline[i];\n        const p2Index = i === numPolylinePoints - 1 ? 0 : i + 1;\n        const p2 = polyline[p2Index];\n        const maxX = p1[0] >= p2[0] ? p1[0] : p2[0];\n        const maxY = p1[1] >= p2[1] ? p1[1] : p2[1];\n        const minY = p1[1] <= p2[1] ? p1[1] : p2[1];\n        const mayIntersectLineSegment = point[0] <= maxX && point[1] >= minY && point[1] < maxY;\n        if (mayIntersectLineSegment) {\n            const isVerticalLine = p1[0] === p2[0];\n            let intersects = isVerticalLine;\n            if (!intersects) {\n                const xIntersection = ((point[1] - p1[1]) * (p2[0] - p1[0])) / (p2[1] - p1[1]) + p1[0];\n                intersects = point[0] <= xIntersection;\n            }\n            numIntersections += intersects ? 1 : 0;\n        }\n    }\n    return !!(numIntersections % 2);\n}\n","import containsPoint from './containsPoint';\nexport default function containsPoints(polyline, points) {\n    for (let i = 0, numPoint = points.length; i < numPoint; i++) {\n        if (!containsPoint(polyline, points[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n","import * as mathLine from '../line';\nconst DEFAULT_EPSILON = 0.1;\nexport default function decimate(polyline, epsilon = DEFAULT_EPSILON) {\n    const numPoints = polyline.length;\n    if (numPoints < 3) {\n        return polyline;\n    }\n    const epsilonSquared = epsilon * epsilon;\n    const partitionQueue = [[0, numPoints - 1]];\n    const polylinePointFlags = new Array(numPoints).fill(false);\n    let numDecimatedPoints = 2;\n    polylinePointFlags[0] = true;\n    polylinePointFlags[numPoints - 1] = true;\n    while (partitionQueue.length) {\n        const [startIndex, endIndex] = partitionQueue.pop();\n        if (endIndex - startIndex === 1) {\n            continue;\n        }\n        const startPoint = polyline[startIndex];\n        const endPoint = polyline[endIndex];\n        let maxDistSquared = -Infinity;\n        let maxDistIndex = -1;\n        for (let i = startIndex + 1; i < endIndex; i++) {\n            const currentPoint = polyline[i];\n            const distSquared = mathLine.distanceToPointSquared(startPoint, endPoint, currentPoint);\n            if (distSquared > maxDistSquared) {\n                maxDistSquared = distSquared;\n                maxDistIndex = i;\n            }\n        }\n        if (maxDistSquared < epsilonSquared) {\n            continue;\n        }\n        polylinePointFlags[maxDistIndex] = true;\n        numDecimatedPoints++;\n        partitionQueue.push([maxDistIndex, endIndex]);\n        partitionQueue.push([startIndex, maxDistIndex]);\n    }\n    const decimatedPolyline = new Array(numDecimatedPoints);\n    for (let srcIndex = 0, dstIndex = 0; srcIndex < numPoints; srcIndex++) {\n        if (polylinePointFlags[srcIndex]) {\n            decimatedPolyline[dstIndex++] = polyline[srcIndex];\n        }\n    }\n    return decimatedPolyline;\n}\n","export default function getAABB(polyline, options) {\n    let polylineToUse = polyline;\n    const numDimensions = options?.numDimensions || 2;\n    const is3D = numDimensions === 3;\n    if (!Array.isArray(polyline[0])) {\n        const currentPolyline = polyline;\n        const totalPoints = currentPolyline.length / numDimensions;\n        polylineToUse = new Array(currentPolyline.length / numDimensions);\n        for (let i = 0, len = totalPoints; i < len; i++) {\n            polylineToUse[i] = [\n                currentPolyline[i * numDimensions],\n                currentPolyline[i * numDimensions + 1],\n            ];\n            if (is3D) {\n                polylineToUse[i].push(currentPolyline[i * numDimensions + 2]);\n            }\n        }\n    }\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    let minZ = Infinity;\n    let maxZ = -Infinity;\n    polylineToUse = polylineToUse;\n    for (let i = 0, len = polylineToUse.length; i < len; i++) {\n        const [x, y, z] = polylineToUse[i];\n        minX = minX < x ? minX : x;\n        minY = minY < y ? minY : y;\n        maxX = maxX > x ? maxX : x;\n        maxY = maxY > y ? maxY : y;\n        if (is3D) {\n            minZ = minZ < z ? minZ : z;\n            maxZ = maxZ > z ? maxZ : z;\n        }\n    }\n    return is3D\n        ? { minX, maxX, minY, maxY, minZ, maxZ }\n        : { minX, maxX, minY, maxY };\n}\n","export default function getArea(points) {\n    const n = points.length;\n    let area = 0.0;\n    let j = n - 1;\n    for (let i = 0; i < n; i++) {\n        area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n        j = i;\n    }\n    return Math.abs(area / 2.0);\n}\n","import { vec2 } from 'gl-matrix';\nimport areLineSegmentsIntersecting from './areLineSegmentsIntersecting';\nexport default function getClosestLineSegmentIntersection(points, p1, q1, closed = true) {\n    let initialQ2Index;\n    let p2Index;\n    if (closed) {\n        p2Index = points.length - 1;\n        initialQ2Index = 0;\n    }\n    else {\n        p2Index = 0;\n        initialQ2Index = 1;\n    }\n    const intersections = [];\n    for (let q2Index = initialQ2Index; q2Index < points.length; q2Index++) {\n        const p2 = points[p2Index];\n        const q2 = points[q2Index];\n        if (areLineSegmentsIntersecting(p1, q1, p2, q2)) {\n            intersections.push([p2Index, q2Index]);\n        }\n        p2Index = q2Index;\n    }\n    if (intersections.length === 0) {\n        return;\n    }\n    const distances = [];\n    intersections.forEach((intersection) => {\n        const intersectionPoints = [\n            points[intersection[0]],\n            points[intersection[1]],\n        ];\n        const midpoint = [\n            (intersectionPoints[0][0] + intersectionPoints[1][0]) / 2,\n            (intersectionPoints[0][1] + intersectionPoints[1][1]) / 2,\n        ];\n        distances.push(vec2.distance(midpoint, p1));\n    });\n    const minDistance = Math.min(...distances);\n    const indexOfMinDistance = distances.indexOf(minDistance);\n    return {\n        segment: intersections[indexOfMinDistance],\n        distance: minDistance,\n    };\n}\n","import areLineSegmentsIntersecting from './areLineSegmentsIntersecting';\nexport default function getFirstLineSegmentIntersectionIndexes(points, p1, q1, closed = true) {\n    let initialI;\n    let j;\n    if (closed) {\n        j = points.length - 1;\n        initialI = 0;\n    }\n    else {\n        j = 0;\n        initialI = 1;\n    }\n    for (let i = initialI; i < points.length; i++) {\n        const p2 = points[j];\n        const q2 = points[i];\n        if (areLineSegmentsIntersecting(p1, q1, p2, q2)) {\n            return [j, i];\n        }\n        j = i;\n    }\n}\n","import getLineSegmentIntersectionsIndexes from './getLineSegmentIntersectionsIndexes';\nimport getLinesIntersection from './getLinesIntersection';\nexport default function getLineSegmentIntersectionsCoordinates(points, p1, q1, closed = true) {\n    const result = [];\n    const polylineIndexes = getLineSegmentIntersectionsIndexes(points, p1, q1, closed);\n    for (let i = 0; i < polylineIndexes.length; i++) {\n        const p2 = points[polylineIndexes[i][0]];\n        const q2 = points[polylineIndexes[i][1]];\n        const intersection = getLinesIntersection(p1, q1, p2, q2);\n        result.push(intersection);\n    }\n    return result;\n}\n","import areLineSegmentsIntersecting from './areLineSegmentsIntersecting';\nexport default function getLineSegmentIntersectionsIndexes(polyline, p1, q1, closed = true) {\n    const intersections = [];\n    const numPoints = polyline.length;\n    const maxI = numPoints - (closed ? 1 : 2);\n    for (let i = 0; i <= maxI; i++) {\n        const p2 = polyline[i];\n        const j = i === numPoints - 1 ? 0 : i + 1;\n        const q2 = polyline[j];\n        if (areLineSegmentsIntersecting(p1, q1, p2, q2)) {\n            intersections.push([i, j]);\n        }\n    }\n    return intersections;\n}\n","import * as mathLine from '../line';\nconst PARALLEL_LINES_TOLERANCE = 1e-2;\nexport default function getLinesIntersection(p1, q1, p2, q2) {\n    const diffQ1P1 = [q1[0] - p1[0], q1[1] - p1[1]];\n    const diffQ2P2 = [q2[0] - p2[0], q2[1] - p2[1]];\n    const denominator = diffQ2P2[1] * diffQ1P1[0] - diffQ2P2[0] * diffQ1P1[1];\n    const absDenominator = denominator >= 0 ? denominator : -denominator;\n    if (absDenominator < PARALLEL_LINES_TOLERANCE) {\n        const line1AABB = [\n            p1[0] < q1[0] ? p1[0] : q1[0],\n            p1[0] > q1[0] ? p1[0] : q1[0],\n            p1[1] < q1[1] ? p1[1] : q1[1],\n            p1[1] > q1[1] ? p1[1] : q1[1],\n        ];\n        const line2AABB = [\n            p2[0] < q2[0] ? p2[0] : q2[0],\n            p2[0] > q2[0] ? p2[0] : q2[0],\n            p2[1] < q2[1] ? p2[1] : q2[1],\n            p2[1] > q2[1] ? p2[1] : q2[1],\n        ];\n        const aabbIntersects = line1AABB[0] <= line2AABB[1] &&\n            line1AABB[1] >= line2AABB[0] &&\n            line1AABB[2] <= line2AABB[3] &&\n            line1AABB[3] >= line2AABB[2];\n        if (!aabbIntersects) {\n            return;\n        }\n        const overlap = mathLine.isPointOnLineSegment(p1, q1, p2) ||\n            mathLine.isPointOnLineSegment(p1, q1, q2) ||\n            mathLine.isPointOnLineSegment(p2, q2, p1);\n        if (!overlap) {\n            return;\n        }\n        const minX = line1AABB[0] > line2AABB[0] ? line1AABB[0] : line2AABB[0];\n        const maxX = line1AABB[1] < line2AABB[1] ? line1AABB[1] : line2AABB[1];\n        const minY = line1AABB[2] > line2AABB[2] ? line1AABB[2] : line2AABB[2];\n        const maxY = line1AABB[3] < line2AABB[3] ? line1AABB[3] : line2AABB[3];\n        const midX = (minX + maxX) * 0.5;\n        const midY = (minY + maxY) * 0.5;\n        return [midX, midY];\n    }\n    let a = p1[1] - p2[1];\n    let b = p1[0] - p2[0];\n    const numerator1 = diffQ2P2[0] * a - diffQ2P2[1] * b;\n    const numerator2 = diffQ1P1[0] * a - diffQ1P1[1] * b;\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n    const resultX = p1[0] + a * diffQ1P1[0];\n    const resultY = p1[1] + a * diffQ1P1[1];\n    return [resultX, resultY];\n}\n","import getSignedArea from './getSignedArea';\nexport default function getNormal2(polyline) {\n    const area = getSignedArea(polyline);\n    return [0, 0, area / Math.abs(area)];\n}\n","import { vec3 } from 'gl-matrix';\nfunction _getAreaVector(polyline) {\n    const vecArea = vec3.create();\n    const refPoint = polyline[0];\n    for (let i = 0, len = polyline.length; i < len; i++) {\n        const p1 = polyline[i];\n        const p2Index = i === len - 1 ? 0 : i + 1;\n        const p2 = polyline[p2Index];\n        const aX = p1[0] - refPoint[0];\n        const aY = p1[1] - refPoint[1];\n        const aZ = p1[2] - refPoint[2];\n        const bX = p2[0] - refPoint[0];\n        const bY = p2[1] - refPoint[1];\n        const bZ = p2[2] - refPoint[2];\n        vecArea[0] += aY * bZ - aZ * bY;\n        vecArea[1] += aZ * bX - aX * bZ;\n        vecArea[2] += aX * bY - aY * bX;\n    }\n    vec3.scale(vecArea, vecArea, 0.5);\n    return vecArea;\n}\nexport default function getNormal3(polyline) {\n    const vecArea = _getAreaVector(polyline);\n    return vec3.normalize(vecArea, vecArea);\n}\n","export default function getSignedArea(polyline) {\n    if (polyline.length < 3) {\n        return 0;\n    }\n    const refPoint = polyline[0];\n    let area = 0;\n    for (let i = 0, len = polyline.length; i < len; i++) {\n        const p1 = polyline[i];\n        const p2Index = i === len - 1 ? 0 : i + 1;\n        const p2 = polyline[p2Index];\n        const aX = p1[0] - refPoint[0];\n        const aY = p1[1] - refPoint[1];\n        const bX = p2[0] - refPoint[0];\n        const bY = p2[1] - refPoint[1];\n        area += aX * bY - aY * bX;\n    }\n    area *= 0.5;\n    return area;\n}\n","import { StackViewport } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nconst EPSILON = 1e-3;\nconst getSubPixelSpacingAndXYDirections = (viewport, subPixelResolution) => {\n    let spacing;\n    let xDir;\n    let yDir;\n    if (viewport instanceof StackViewport) {\n        const imageData = viewport.getImageData();\n        if (!imageData) {\n            return;\n        }\n        xDir = imageData.direction.slice(0, 3);\n        yDir = imageData.direction.slice(3, 6);\n        spacing = imageData.spacing;\n    }\n    else {\n        const imageData = viewport.getImageData();\n        const { direction, spacing: volumeSpacing } = imageData;\n        const { viewPlaneNormal, viewUp } = viewport.getCamera();\n        const iVector = direction.slice(0, 3);\n        const jVector = direction.slice(3, 6);\n        const kVector = direction.slice(6, 9);\n        const viewRight = vec3.create();\n        vec3.cross(viewRight, viewUp, viewPlaneNormal);\n        const absViewRightDotI = Math.abs(vec3.dot(viewRight, iVector));\n        const absViewRightDotJ = Math.abs(vec3.dot(viewRight, jVector));\n        const absViewRightDotK = Math.abs(vec3.dot(viewRight, kVector));\n        let xSpacing;\n        if (Math.abs(1 - absViewRightDotI) < EPSILON) {\n            xSpacing = volumeSpacing[0];\n            xDir = iVector;\n        }\n        else if (Math.abs(1 - absViewRightDotJ) < EPSILON) {\n            xSpacing = volumeSpacing[1];\n            xDir = jVector;\n        }\n        else if (Math.abs(1 - absViewRightDotK) < EPSILON) {\n            xSpacing = volumeSpacing[2];\n            xDir = kVector;\n        }\n        else {\n            throw new Error('No support yet for oblique plane planar contours');\n        }\n        const absViewUpDotI = Math.abs(vec3.dot(viewUp, iVector));\n        const absViewUpDotJ = Math.abs(vec3.dot(viewUp, jVector));\n        const absViewUpDotK = Math.abs(vec3.dot(viewUp, kVector));\n        let ySpacing;\n        if (Math.abs(1 - absViewUpDotI) < EPSILON) {\n            ySpacing = volumeSpacing[0];\n            yDir = iVector;\n        }\n        else if (Math.abs(1 - absViewUpDotJ) < EPSILON) {\n            ySpacing = volumeSpacing[1];\n            yDir = jVector;\n        }\n        else if (Math.abs(1 - absViewUpDotK) < EPSILON) {\n            ySpacing = volumeSpacing[2];\n            yDir = kVector;\n        }\n        else {\n            throw new Error('No support yet for oblique plane planar contours');\n        }\n        spacing = [xSpacing, ySpacing];\n    }\n    const subPixelSpacing = [\n        spacing[0] / subPixelResolution,\n        spacing[1] / subPixelResolution,\n    ];\n    return { spacing: subPixelSpacing, xDir, yDir };\n};\nexport default getSubPixelSpacingAndXYDirections;\n","import getSignedArea from './getSignedArea';\nexport default function getWindingDirection(polyline) {\n    const signedArea = getSignedArea(polyline);\n    return signedArea >= 0 ? 1 : -1;\n}\n","import getFirstLineSegmentIntersectionIndexes from './getFirstLineSegmentIntersectionIndexes';\nexport default function intersectPolyline(sourcePolyline, targetPolyline) {\n    for (let i = 0, sourceLen = sourcePolyline.length; i < sourceLen; i++) {\n        const sourceP1 = sourcePolyline[i];\n        const sourceP2Index = i === sourceLen - 1 ? 0 : i + 1;\n        const sourceP2 = sourcePolyline[sourceP2Index];\n        const intersectionPointIndexes = getFirstLineSegmentIntersectionIndexes(targetPolyline, sourceP1, sourceP2);\n        if (intersectionPointIndexes?.length === 2) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { glMatrix } from 'gl-matrix';\nimport { distanceToPointSquared } from '../point';\nexport default function isClosed(polyline) {\n    if (polyline.length < 3) {\n        return false;\n    }\n    const numPolylinePoints = polyline.length;\n    const firstPoint = polyline[0];\n    const lastPoint = polyline[numPolylinePoints - 1];\n    const distFirstToLastPoints = distanceToPointSquared(firstPoint, lastPoint);\n    return glMatrix.equals(0, distFirstToLastPoints);\n}\n","import containsPoint from './containsPoint';\nimport { projectTo2D } from './projectTo2D';\nexport function isPointInsidePolyline3D(point, polyline, options = {}) {\n    const { sharedDimensionIndex, projectedPolyline } = projectTo2D(polyline);\n    const { holes } = options;\n    const projectedHoles = [];\n    if (holes) {\n        for (let i = 0; i < holes.length; i++) {\n            const hole = holes[i];\n            const hole2D = [];\n            for (let j = 0; j < hole.length; j++) {\n                hole2D.push([\n                    hole[j][(sharedDimensionIndex + 1) % 3],\n                    hole[j][(sharedDimensionIndex + 2) % 3],\n                ]);\n            }\n            projectedHoles.push(hole2D);\n        }\n    }\n    const point2D = [\n        point[(sharedDimensionIndex + 1) % 3],\n        point[(sharedDimensionIndex + 2) % 3],\n    ];\n    return containsPoint(projectedPolyline, point2D, { holes: projectedHoles });\n}\n","import { vec2 } from 'gl-matrix';\nconst pointCanProjectOnLine = (p, p1, p2, proximity) => {\n    const p1p = [p[0] - p1[0], p[1] - p1[1]];\n    const p1p2 = [p2[0] - p1[0], p2[1] - p1[1]];\n    const dot = p1p[0] * p1p2[0] + p1p[1] * p1p2[1];\n    if (dot < 0) {\n        return false;\n    }\n    const p1p2Mag = Math.sqrt(p1p2[0] * p1p2[0] + p1p2[1] * p1p2[1]);\n    if (p1p2Mag === 0) {\n        return false;\n    }\n    const projectionVectorMag = dot / p1p2Mag;\n    const p1p2UnitVector = [p1p2[0] / p1p2Mag, p1p2[1] / p1p2Mag];\n    const projectionVector = [\n        p1p2UnitVector[0] * projectionVectorMag,\n        p1p2UnitVector[1] * projectionVectorMag,\n    ];\n    const projectionPoint = [\n        p1[0] + projectionVector[0],\n        p1[1] + projectionVector[1],\n    ];\n    const distance = vec2.distance(p, projectionPoint);\n    if (distance > proximity) {\n        return false;\n    }\n    if (vec2.distance(p1, projectionPoint) > vec2.distance(p1, p2)) {\n        return false;\n    }\n    return true;\n};\nexport default pointCanProjectOnLine;\n","import { vec2 } from 'gl-matrix';\nconst pointsAreWithinCloseContourProximity = (p1, p2, closeContourProximity) => {\n    return vec2.dist(p1, p2) < closeContourProximity;\n};\nexport default pointsAreWithinCloseContourProximity;\n","import { utilities } from '@cornerstonejs/core';\nconst epsilon = 1e-6;\nexport function projectTo2D(polyline) {\n    let sharedDimensionIndex;\n    const testPoints = utilities.getRandomSampleFromArray(polyline, 50);\n    for (let i = 0; i < 3; i++) {\n        if (testPoints.every((point, index, array) => Math.abs(point[i] - array[0][i]) < epsilon)) {\n            sharedDimensionIndex = i;\n            break;\n        }\n    }\n    if (sharedDimensionIndex === undefined) {\n        throw new Error('Cannot find a shared dimension index for polyline, probably oblique plane');\n    }\n    const points2D = [];\n    const firstDim = (sharedDimensionIndex + 1) % 3;\n    const secondDim = (sharedDimensionIndex + 2) % 3;\n    for (let i = 0; i < polyline.length; i++) {\n        points2D.push([polyline[i][firstDim], polyline[i][secondDim]]);\n    }\n    return {\n        sharedDimensionIndex,\n        projectedPolyline: points2D,\n    };\n}\n","const EPSILON = 1e-6;\nconst INSIDE = 1;\nconst OUTSIDE = 0;\nfunction clipT(num, denom, c) {\n    const [tE, tL] = c;\n    if (Math.abs(denom) < EPSILON) {\n        return num < 0;\n    }\n    const t = num / denom;\n    if (denom > 0) {\n        if (t > tL) {\n            return 0;\n        }\n        if (t > tE) {\n            c[0] = t;\n        }\n    }\n    else {\n        if (t < tE) {\n            return 0;\n        }\n        if (t < tL) {\n            c[1] = t;\n        }\n    }\n    return 1;\n}\nexport default function clip(a, b, box, da, db) {\n    const [x1, y1] = a;\n    const [x2, y2] = b;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    if (da === undefined || db === undefined) {\n        da = a;\n        db = b;\n    }\n    else {\n        da[0] = a[0];\n        da[1] = a[1];\n        db[0] = b[0];\n        db[1] = b[1];\n    }\n    if (Math.abs(dx) < EPSILON &&\n        Math.abs(dy) < EPSILON &&\n        x1 >= box[0] &&\n        x1 <= box[2] &&\n        y1 >= box[1] &&\n        y1 <= box[3]) {\n        return INSIDE;\n    }\n    const c = [0, 1];\n    if (clipT(box[0] - x1, dx, c) &&\n        clipT(x1 - box[2], -dx, c) &&\n        clipT(box[1] - y1, dy, c) &&\n        clipT(y1 - box[3], -dy, c)) {\n        const [tE, tL] = c;\n        if (tL < 1) {\n            db[0] = x1 + tL * dx;\n            db[1] = y1 + tL * dy;\n        }\n        if (tE > 0) {\n            da[0] += tE * dx;\n            da[1] += tE * dy;\n        }\n        return INSIDE;\n    }\n    return OUTSIDE;\n}\n","import { mat4, vec3 } from 'gl-matrix';\nimport interpolateSegmentPoints from './interpolation/interpolateSegmentPoints';\nfunction shouldPreventInterpolation(annotation, options) {\n    const knotsRatioPercentage = options?.knotsRatioPercentage || 30;\n    if (!annotation?.data?.contour?.polyline?.length ||\n        knotsRatioPercentage <= 0) {\n        return true;\n    }\n    return false;\n}\nfunction rotateMatrix(normal, focal) {\n    const mat = mat4.create();\n    const eye = vec3.add(vec3.create(), focal, normal);\n    const up = Math.abs(normal[0]) > 0.1\n        ? vec3.fromValues(-normal[1], normal[0], 0)\n        : vec3.fromValues(0, -normal[2], normal[1]);\n    mat4.lookAt(mat, focal, eye, up);\n    return mat;\n}\nfunction rotate(list, count = Math.floor(Math.random() * (list.length - 1))) {\n    if (count === 0) {\n        return 0;\n    }\n    const srcList = [...list];\n    const { length } = list;\n    for (let i = 0; i < length; i++) {\n        list[i] = srcList[(i + count + length) % length];\n    }\n    return count;\n}\nexport default function smoothAnnotation(annotation, options) {\n    if (shouldPreventInterpolation(annotation, options)) {\n        return false;\n    }\n    const { viewPlaneNormal } = annotation.metadata;\n    const { closed, polyline } = annotation.data.contour;\n    const rotateMat = rotateMatrix(viewPlaneNormal, annotation.data.contour.polyline[0]);\n    const canvasPoints = annotation.data.contour.polyline.map((p) => {\n        const planeP = vec3.transformMat4(vec3.create(), p, rotateMat);\n        return [planeP[0], planeP[1]];\n    });\n    let rotation = closed ? rotate(canvasPoints) : 0;\n    let interpolatedCanvasPoints = (interpolateSegmentPoints(canvasPoints, 0, canvasPoints.length, options?.knotsRatioPercentage || 30));\n    if (interpolatedCanvasPoints === canvasPoints) {\n        return false;\n    }\n    rotate(interpolatedCanvasPoints, -rotation);\n    for (let i = 1; i < options?.loop; i++) {\n        rotation = closed ? rotate(interpolatedCanvasPoints) : 0;\n        interpolatedCanvasPoints = (interpolateSegmentPoints(interpolatedCanvasPoints, 0, canvasPoints.length, options?.knotsRatioPercentage || 30));\n        rotate(interpolatedCanvasPoints, -rotation);\n    }\n    const unRotate = mat4.invert(mat4.create(), rotateMat);\n    annotation.data.contour.polyline = (interpolatedCanvasPoints.map((p) => vec3.transformMat4([0, 0, 0], [...p, 0], unRotate)));\n    return true;\n}\n","import filterAnnotationsWithinSlice from './filterAnnotationsWithinSlice';\nimport getWorldWidthAndHeightFromCorners from './getWorldWidthAndHeightFromCorners';\nimport filterAnnotationsForDisplay from './filterAnnotationsForDisplay';\nimport getWorldWidthAndHeightFromTwoPoints from './getWorldWidthAndHeightFromTwoPoints';\nimport { getPointInLineOfSightWithCriteria, getPointsInLineOfSight, } from './getPointInLineOfSightWithCriteria';\nimport { isPlaneIntersectingAABB } from './isPlaneIntersectingAABB';\nimport { filterAnnotationsWithinSamePlane } from './filterAnnotationsWithinPlane';\nexport default {\n    filterAnnotationsWithinSlice,\n    getWorldWidthAndHeightFromCorners,\n    getWorldWidthAndHeightFromTwoPoints,\n    filterAnnotationsForDisplay,\n    getPointInLineOfSightWithCriteria,\n    isPlaneIntersectingAABB,\n    filterAnnotationsWithinSamePlane,\n    getPointsInLineOfSight,\n};\nexport { filterAnnotationsWithinSlice, getWorldWidthAndHeightFromCorners, getWorldWidthAndHeightFromTwoPoints, filterAnnotationsForDisplay, getPointInLineOfSightWithCriteria, isPlaneIntersectingAABB, filterAnnotationsWithinSamePlane, getPointsInLineOfSight, };\n","export const POSITIVE_SEED_LABEL = 254;\nexport const NEGATIVE_SEED_LABEL = 255;\nexport const DEFAULT_NEIGHBORHOOD_RADIUS = 1;\nexport const DEFAULT_POSITIVE_STD_DEV_MULTIPLIER = 1.8;\nexport const DEFAULT_NEGATIVE_STD_DEV_MULTIPLIER = 3.2;\nexport const DEFAULT_NEGATIVE_SEED_MARGIN = 30;\nexport const DEFAULT_NEGATIVE_SEEDS_COUNT = 70;\nexport const MAX_NEGATIVE_SEED_ATTEMPTS_MULTIPLIER = 50;\n","import { getEnabledElement, StackViewport, Enums } from '@cornerstonejs/core';\nimport { getToolState } from './state';\nexport const requestType = Enums.RequestType.Prefetch;\nexport const priority = 0;\nexport function range(lowEnd, highEnd) {\n    lowEnd = Math.round(lowEnd) || 0;\n    highEnd = Math.round(highEnd) || 0;\n    const arr = [];\n    let c = highEnd - lowEnd + 1;\n    if (c <= 0) {\n        return arr;\n    }\n    while (c--) {\n        arr[c] = highEnd--;\n    }\n    return arr;\n}\nexport function nearestIndex(arr, x) {\n    let low = 0;\n    let high = arr.length - 1;\n    arr.forEach((v, idx) => {\n        if (v < x) {\n            low = Math.max(idx, low);\n        }\n        else if (v > x) {\n            high = Math.min(idx, high);\n        }\n    });\n    return { low, high };\n}\nexport function getStackData(element) {\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) {\n        return null;\n    }\n    const { viewport } = enabledElement;\n    if (!(viewport instanceof StackViewport)) {\n        return null;\n    }\n    return {\n        currentImageIdIndex: viewport.getCurrentImageIdIndex(),\n        imageIds: viewport.getImageIds(),\n    };\n}\nexport function getPromiseRemovedHandler(element) {\n    return function (e) {\n        const eventData = e.detail;\n        let stackData;\n        try {\n            stackData = getStackData(element);\n        }\n        catch (error) {\n            return;\n        }\n        if (!stackData || !stackData.imageIds || stackData.imageIds.length === 0) {\n            return;\n        }\n        const stack = stackData;\n        const imageIdIndex = stack.imageIds.indexOf(eventData.imageId);\n        if (imageIdIndex < 0) {\n            return;\n        }\n        const stackPrefetchData = getToolState(element);\n        if (!stackPrefetchData ||\n            !stackPrefetchData.indicesToRequest ||\n            !stackPrefetchData.indicesToRequest.length) {\n            return;\n        }\n        stackPrefetchData.indicesToRequest.push(imageIdIndex);\n    };\n}\nexport const clearFromImageIds = (stack) => {\n    const imageIdSet = new Set(stack.imageIds);\n    return (requestDetails) => requestDetails.type !== requestType ||\n        !imageIdSet.has(requestDetails.additionalDetails.imageId);\n};\n","import { getEnabledElement } from '@cornerstonejs/core';\nconst state = {};\nfunction addToolState(element, data) {\n    const enabledElement = getEnabledElement(element);\n    const { viewportId } = enabledElement;\n    state[viewportId] = data;\n}\nfunction getToolState(element) {\n    const enabledElement = getEnabledElement(element);\n    const { viewportId } = enabledElement;\n    return state[viewportId];\n}\nexport { addToolState, getToolState };\n","import { utilities } from '@cornerstonejs/core';\nimport interpolateVec3 from '../../math/vec3/interpolateVec3';\nimport { isRangeValid, areColorbarRangesEqual, isColorbarSizeValid, areColorbarSizesEqual, } from './common';\nconst { clamp } = utilities;\nclass ColorbarCanvas {\n    constructor(props) {\n        ColorbarCanvas.validateProps(props);\n        const { colormap, size = { width: 20, height: 100 }, imageRange = { lower: 0, upper: 1 }, voiRange = { lower: 0, upper: 1 }, container, showFullPixelValueRange = false, } = props;\n        this._colormap = colormap;\n        this._imageRange = imageRange;\n        this._voiRange = voiRange;\n        this._showFullImageRange = showFullPixelValueRange;\n        this._canvas = this._createRootElement(size);\n        if (container) {\n            this.appendTo(container);\n        }\n    }\n    get colormap() {\n        return this._colormap;\n    }\n    set colormap(colormap) {\n        this._colormap = colormap;\n        this.render();\n    }\n    get size() {\n        const { width, height } = this._canvas;\n        return { width, height };\n    }\n    set size(size) {\n        const { _canvas: canvas } = this;\n        if (!isColorbarSizeValid(size) || areColorbarSizesEqual(canvas, size)) {\n            return;\n        }\n        this._setCanvasSize(canvas, size);\n        this.render();\n    }\n    get imageRange() {\n        return { ...this._imageRange };\n    }\n    set imageRange(imageRange) {\n        if (!isRangeValid(imageRange) ||\n            areColorbarRangesEqual(imageRange, this._imageRange)) {\n            return;\n        }\n        this._imageRange = imageRange;\n        this.render();\n    }\n    get voiRange() {\n        return { ...this._voiRange };\n    }\n    set voiRange(voiRange) {\n        if (!isRangeValid(voiRange) ||\n            areColorbarRangesEqual(voiRange, this._voiRange)) {\n            return;\n        }\n        this._voiRange = voiRange;\n        this.render();\n    }\n    get showFullImageRange() {\n        return this._showFullImageRange;\n    }\n    set showFullImageRange(showFullImageRange) {\n        if (showFullImageRange === this._showFullImageRange) {\n            return;\n        }\n        this._showFullImageRange = showFullImageRange;\n        this.render();\n    }\n    appendTo(container) {\n        container.appendChild(this._canvas);\n        this.render();\n    }\n    dispose() {\n        const { _canvas: canvas } = this;\n        const { parentElement } = canvas;\n        parentElement?.removeChild(canvas);\n    }\n    static validateProps(props) {\n        const { size, imageRange, voiRange } = props;\n        if (size && !isColorbarSizeValid(size)) {\n            throw new Error('Invalid \"size\"');\n        }\n        if (imageRange && !isRangeValid(imageRange)) {\n            throw new Error('Invalid \"imageRange\"');\n        }\n        if (voiRange && !isRangeValid(voiRange)) {\n            throw new Error('Invalid \"voiRange\"');\n        }\n    }\n    _setCanvasSize(canvas, size) {\n        const { width, height } = size;\n        canvas.width = width;\n        canvas.height = height;\n        Object.assign(canvas.style, {\n            width: `${width}px`,\n            height: `${height}px`,\n        });\n    }\n    _createRootElement(size) {\n        const canvas = document.createElement('canvas');\n        Object.assign(canvas.style, {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            pointerEvents: 'none',\n            boxSizing: 'border-box',\n        });\n        this._setCanvasSize(canvas, size);\n        return canvas;\n    }\n    render() {\n        if (!this._canvas.isConnected) {\n            return;\n        }\n        const { _colormap: colormap } = this;\n        const { RGBPoints: rgbPoints } = colormap;\n        const colorsCount = rgbPoints.length / 4;\n        const getColorPoint = (index) => {\n            const offset = 4 * index;\n            if (index < 0 || index >= colorsCount) {\n                return;\n            }\n            return {\n                index,\n                position: rgbPoints[offset],\n                color: [\n                    rgbPoints[offset + 1],\n                    rgbPoints[offset + 2],\n                    rgbPoints[offset + 3],\n                ],\n            };\n        };\n        const { width, height } = this._canvas;\n        const canvasContext = this._canvas.getContext('2d');\n        if (!canvasContext) {\n            return;\n        }\n        const isHorizontal = width > height;\n        const maxValue = isHorizontal ? width : height;\n        const { _voiRange: voiRange } = this;\n        const range = this._showFullImageRange ? this._imageRange : { ...voiRange };\n        let previousColorPoint = undefined;\n        let currentColorPoint = getColorPoint(0);\n        const incRawPixelValue = (range.upper - range.lower) / (maxValue - 1);\n        let rawPixelValue = range.lower;\n        for (let i = 0; i < maxValue; i++) {\n            const tVoiRange = (rawPixelValue - voiRange.lower) /\n                Math.abs(voiRange.upper - voiRange.lower);\n            if (currentColorPoint) {\n                for (let i = currentColorPoint.index; i < colorsCount; i++) {\n                    if (tVoiRange <= currentColorPoint.position) {\n                        break;\n                    }\n                    previousColorPoint = currentColorPoint;\n                    currentColorPoint = getColorPoint(i + 1);\n                }\n            }\n            let normColor;\n            if (!previousColorPoint) {\n                normColor = [...currentColorPoint.color];\n            }\n            else if (!currentColorPoint) {\n                normColor = [...previousColorPoint.color];\n            }\n            else {\n                const tColorRange = (tVoiRange - previousColorPoint.position) /\n                    (currentColorPoint.position - previousColorPoint.position);\n                normColor = interpolateVec3(previousColorPoint.color, currentColorPoint.color, tColorRange);\n            }\n            const color = normColor.map((color) => clamp(Math.round(color * 255), 0, 255));\n            canvasContext.fillStyle = `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n            if (isHorizontal) {\n                canvasContext.fillRect(i, 0, 1, height);\n            }\n            else {\n                canvasContext.fillRect(0, height - i - 1, width, 1);\n            }\n            rawPixelValue += incRawPixelValue;\n        }\n    }\n}\nexport { ColorbarCanvas as default, ColorbarCanvas };\n","const interpolateVec3 = (a, b, t) => {\n    return [\n        a[0] * (1 - t) + b[0] * t,\n        a[1] * (1 - t) + b[1] * t,\n        a[2] * (1 - t) + b[2] * t,\n    ];\n};\nexport { interpolateVec3 as default, interpolateVec3 };\n","import { isColorbarSizeValid, isRangeValid, areColorbarRangesEqual, areColorbarSizesEqual, } from './common';\nimport { ColorbarRangeTextPosition } from './enums/ColorbarRangeTextPosition';\nconst DEFAULTS = {\n    FONT: '10px Arial',\n    COLOR: 'white',\n    TICK_SIZE: 5,\n    TICK_WIDTH: 1,\n    TICK_LABEL_MARGIN: 3,\n    MAX_NUM_TICKS: 8,\n    TICKS_STEPS: [1, 2.5, 5, 10],\n};\nclass ColorbarTicks {\n    constructor(props) {\n        ColorbarTicks.validateProps(props);\n        const { top = 0, left = 0, size = { width: 20, height: 100 }, imageRange = { lower: 0, upper: 1 }, voiRange = { lower: 0, upper: 1 }, ticks: ticksProps, container, showFullPixelValueRange = false, } = props;\n        const { style: ticksStyle, position: rangeTextPosition } = ticksProps ?? {};\n        this._imageRange = imageRange;\n        this._voiRange = voiRange;\n        this._font = ticksStyle?.font ?? DEFAULTS.FONT;\n        this._color = ticksStyle?.color ?? DEFAULTS.COLOR;\n        this._tickSize = ticksStyle?.tickSize ?? DEFAULTS.TICK_SIZE;\n        this._tickWidth = ticksStyle?.tickWidth ?? DEFAULTS.TICK_WIDTH;\n        this._labelMargin = ticksStyle?.labelMargin ?? DEFAULTS.TICK_LABEL_MARGIN;\n        this._maxNumTicks = ticksStyle?.maxNumTicks ?? DEFAULTS.MAX_NUM_TICKS;\n        this._rangeTextPosition =\n            rangeTextPosition ?? ColorbarRangeTextPosition.Right;\n        this._showFullPixelValueRange = showFullPixelValueRange;\n        this._canvas = this._createCanvasElement(size, top, left);\n        if (container) {\n            this.appendTo(container);\n        }\n    }\n    get size() {\n        const { width, height } = this._canvas;\n        return { width, height };\n    }\n    set size(size) {\n        const { _canvas: canvas } = this;\n        if (!isColorbarSizeValid(size) || areColorbarSizesEqual(canvas, size)) {\n            return;\n        }\n        this._setCanvasSize(canvas, size);\n        this.render();\n    }\n    get top() {\n        return Number.parseInt(this._canvas.style.top);\n    }\n    set top(top) {\n        const { _canvas: canvas } = this;\n        const currentTop = this.top;\n        if (top === currentTop) {\n            return;\n        }\n        canvas.style.top = `${top}px`;\n        this.render();\n    }\n    get left() {\n        return Number.parseInt(this._canvas.style.left);\n    }\n    set left(left) {\n        const { _canvas: canvas } = this;\n        const currentLeft = this.left;\n        if (left === currentLeft) {\n            return;\n        }\n        canvas.style.left = `${left}px`;\n        this.render();\n    }\n    get imageRange() {\n        return { ...this._imageRange };\n    }\n    set imageRange(imageRange) {\n        if (!isRangeValid(imageRange) ||\n            areColorbarRangesEqual(imageRange, this._imageRange)) {\n            return;\n        }\n        this._imageRange = imageRange;\n        this.render();\n    }\n    get voiRange() {\n        return { ...this._voiRange };\n    }\n    set voiRange(voiRange) {\n        if (!isRangeValid(voiRange) ||\n            areColorbarRangesEqual(voiRange, this._voiRange)) {\n            return;\n        }\n        this._voiRange = voiRange;\n        this.render();\n    }\n    get tickSize() {\n        return this._tickSize;\n    }\n    set tickSize(tickSize) {\n        if (tickSize === this._tickSize) {\n            return;\n        }\n        this._tickSize = tickSize;\n        this.render();\n    }\n    get tickWidth() {\n        return this._tickWidth;\n    }\n    set tickWidth(tickWidth) {\n        if (tickWidth === this._tickWidth) {\n            return;\n        }\n        this._tickWidth = tickWidth;\n        this.render();\n    }\n    get color() {\n        return this._color;\n    }\n    set color(color) {\n        if (color === this._color) {\n            return;\n        }\n        this._color = color;\n        this.render();\n    }\n    get showFullPixelValueRange() {\n        return this._showFullPixelValueRange;\n    }\n    set showFullPixelValueRange(showFullRange) {\n        if (showFullRange === this._showFullPixelValueRange) {\n            return;\n        }\n        this._showFullPixelValueRange = showFullRange;\n        this.render();\n    }\n    get visible() {\n        return this._canvas.style.display === 'block';\n    }\n    set visible(visible) {\n        if (visible === this.visible) {\n            return;\n        }\n        this._canvas.style.display = visible ? 'block' : 'none';\n        if (visible) {\n            this.render();\n        }\n    }\n    appendTo(container) {\n        container.appendChild(this._canvas);\n        this.render();\n    }\n    static validateProps(props) {\n        const { size, imageRange, voiRange } = props;\n        if (size && !isColorbarSizeValid(size)) {\n            throw new Error('Invalid \"size\"');\n        }\n        if (imageRange && !isRangeValid(imageRange)) {\n            throw new Error('Invalid \"imageRange\"');\n        }\n        if (voiRange && !isRangeValid(voiRange)) {\n            throw new Error('Invalid \"voiRange\"');\n        }\n    }\n    _setCanvasSize(canvas, size) {\n        const { width, height } = size;\n        canvas.width = width;\n        canvas.height = height;\n        Object.assign(canvas.style, {\n            width: `${width}px`,\n            height: `${height}px`,\n        });\n    }\n    _createCanvasElement(size, top, left) {\n        const canvas = document.createElement('canvas');\n        Object.assign(canvas.style, {\n            display: 'none',\n            position: 'absolute',\n            boxSizing: 'border-box',\n            top: `${top}px`,\n            left: `${left}px`,\n        });\n        this._setCanvasSize(canvas, size);\n        return canvas;\n    }\n    _getTicks(range) {\n        const { lower, upper } = range;\n        const rangeValue = upper - lower;\n        const roughStep = rangeValue / (this._maxNumTicks - 1);\n        const stepPower = Math.pow(10, -Math.floor(Math.log10(Math.abs(roughStep))));\n        const roughtStepNormalized = roughStep * stepPower;\n        const normalizedStep = DEFAULTS.TICKS_STEPS.find((n) => n >= roughtStepNormalized);\n        const step = normalizedStep / stepPower;\n        const scaleMax = Math.ceil(upper / step) * step;\n        const scaleMin = Math.floor(lower / step) * step;\n        const ticksCount = Math.round((scaleMax - scaleMin) / step) + 1;\n        const ticks = [];\n        for (let i = 0; i < ticksCount; i++) {\n            ticks.push(scaleMin + i * step);\n        }\n        return { scaleMin, scaleMax, step, ticks };\n    }\n    _getLeftTickInfo({ position, labelMeasure }) {\n        const { width } = this._canvas;\n        const labelX = width - this.tickSize - labelMeasure.width - this._labelMargin;\n        const labelPoint = [labelX, position];\n        const tickPoints = {\n            start: [width - this._tickSize, position],\n            end: [width, position],\n        };\n        return { labelPoint, tickPoints };\n    }\n    _getRightTickInfo({ position }) {\n        const labelPoint = [this._tickSize + this._labelMargin, position];\n        const tickPoints = {\n            start: [0, position],\n            end: [this._tickSize, position],\n        };\n        return { labelPoint, tickPoints };\n    }\n    _getTopTickInfo({ position, labelMeasure }) {\n        throw new Error('Not implemented');\n    }\n    _getBottomTickInfo({ position, labelMeasure }) {\n        throw new Error('Not implemented');\n    }\n    render() {\n        const { _canvas: canvas } = this;\n        if (!canvas.isConnected || !this.visible) {\n            return;\n        }\n        const { width, height } = canvas;\n        const isHorizontal = width >= height;\n        const maxCanvasPixelValue = isHorizontal ? width : height;\n        const canvasContext = canvas.getContext('2d');\n        const { _voiRange: voiRange } = this;\n        const range = this._showFullPixelValueRange\n            ? this._imageRange\n            : { ...voiRange };\n        const rangeWidth = range.upper - range.lower;\n        const { ticks } = this._getTicks(range);\n        canvasContext.clearRect(0, 0, width, height);\n        canvasContext.font = this._font;\n        canvasContext.textBaseline = 'middle';\n        canvasContext.fillStyle = this._color;\n        canvasContext.strokeStyle = this._color;\n        canvasContext.lineWidth = this.tickWidth;\n        ticks.forEach((tick) => {\n            let position = Math.round(maxCanvasPixelValue * ((tick - range.lower) / rangeWidth));\n            if (!isHorizontal) {\n                position = height - position;\n            }\n            if (position < 0 || position > maxCanvasPixelValue) {\n                return;\n            }\n            const label = tick.toString();\n            const labelMeasure = canvasContext.measureText(label);\n            let tickInfo;\n            if (isHorizontal) {\n                if (this._rangeTextPosition === ColorbarRangeTextPosition.Top) {\n                    tickInfo = this._getTopTickInfo({ position, labelMeasure });\n                }\n                else {\n                    tickInfo = this._getBottomTickInfo({ position, labelMeasure });\n                }\n            }\n            else {\n                if (this._rangeTextPosition === ColorbarRangeTextPosition.Left) {\n                    tickInfo = this._getLeftTickInfo({ position, labelMeasure });\n                }\n                else {\n                    tickInfo = this._getRightTickInfo({ position });\n                }\n            }\n            const { labelPoint, tickPoints } = tickInfo;\n            const { start: tickStart, end: tickEnd } = tickPoints;\n            canvasContext.beginPath();\n            canvasContext.moveTo(tickStart[0], tickStart[1]);\n            canvasContext.lineTo(tickEnd[0], tickEnd[1]);\n            canvasContext.fillText(label, labelPoint[0], labelPoint[1]);\n            canvasContext.stroke();\n            return position;\n        });\n    }\n}\nexport { ColorbarTicks as default, ColorbarTicks };\n","const isRangeValid = (range) => {\n    return range && range.upper > range.lower;\n};\nexport { isRangeValid as default, isRangeValid };\n","const isColorbarSizeValid = (size) => {\n    return !!size && size.width > 0 && size.height > 0;\n};\nexport { isColorbarSizeValid as default, isColorbarSizeValid };\n","const areColorbarRangesEqual = (a, b) => {\n    return !!a && !!b && a.lower === b.lower && a.upper === b.upper;\n};\nexport { areColorbarRangesEqual as default, areColorbarRangesEqual };\n","const areColorbarSizesEqual = (a, b) => {\n    return !!a && !!b && a.width === b.width && a.height === b.height;\n};\nexport { areColorbarSizesEqual as default, areColorbarSizesEqual };\n","import { ColorbarRangeTextPosition } from '../enums';\nfunction isRangeTextPositionValid(colorbarWidth, colorbarHeight, rangeTextPosition) {\n    const isHorizontal = colorbarWidth >= colorbarHeight;\n    const validRangeTextPositions = isHorizontal\n        ? [ColorbarRangeTextPosition.Top, ColorbarRangeTextPosition.Bottom]\n        : [ColorbarRangeTextPosition.Left, ColorbarRangeTextPosition.Right];\n    return validRangeTextPositions.includes(rangeTextPosition);\n}\nexport { isRangeTextPositionValid as default, isRangeTextPositionValid };\n","class Widget {\n    constructor({ id, container }) {\n        this._containerResizeCallback = (entries) => {\n            let width;\n            let height;\n            const { contentRect, contentBoxSize } = entries[0];\n            if (contentRect) {\n                width = contentRect.width;\n                height = contentRect.height;\n            }\n            else if (contentBoxSize?.length) {\n                width = contentBoxSize[0].inlineSize;\n                height = contentBoxSize[0].blockSize;\n            }\n            this._containerSize = { width, height };\n            this.onContainerResize();\n        };\n        this._id = id;\n        this._containerSize = { width: 0, height: 0 };\n        this._rootElement = this.createRootElement(id);\n        this._containerResizeObserver = new ResizeObserver(this._containerResizeCallback);\n        if (container) {\n            this.appendTo(container);\n        }\n    }\n    get id() {\n        return this._id;\n    }\n    get rootElement() {\n        return this._rootElement;\n    }\n    appendTo(container) {\n        const { _rootElement: rootElement, _containerResizeObserver: resizeObserver, } = this;\n        const { parentElement: currentContainer } = rootElement;\n        if (!container || container === currentContainer) {\n            return;\n        }\n        if (currentContainer) {\n            resizeObserver.unobserve(currentContainer);\n        }\n        container.appendChild(rootElement);\n        resizeObserver.observe(container);\n    }\n    destroy() {\n        const { _rootElement: rootElement, _containerResizeObserver: resizeObserver, } = this;\n        const { parentElement } = rootElement;\n        parentElement?.removeChild(rootElement);\n        resizeObserver.disconnect();\n    }\n    get containerSize() {\n        return { ...this._containerSize };\n    }\n    createRootElement(id) {\n        const rootElement = document.createElement('div');\n        rootElement.id = id;\n        rootElement.classList.add('widget');\n        Object.assign(rootElement.style, {\n            width: '100%',\n            height: '100%',\n        });\n        return rootElement;\n    }\n    onContainerResize() {\n    }\n}\nexport { Widget as default, Widget };\n","const Corners = {\n  TOP_LEFT: 'TOP_LEFT',\n  TOP_RIGHT: 'TOP_RIGHT',\n  BOTTOM_LEFT: 'BOTTOM_LEFT',\n  BOTTOM_RIGHT: 'BOTTOM_RIGHT'\n};\nvar Constants = {\n  Corners\n};\n\nexport { Corners, Constants as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkRenderer from '../../Rendering/Core/Renderer.js';\nimport Constants from './OrientationMarkerWidget/Constants.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nconst {\n  Corners\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkOrientationMarkerWidget\n// ----------------------------------------------------------------------------\n\nfunction vtkOrientationMarkerWidget(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOrientationMarkerWidget');\n  const superClass = {\n    ...publicAPI\n  };\n\n  // Private variables\n\n  const previousCameraInput = [];\n  const selfRenderer = vtkRenderer.newInstance();\n  const resizeObserver = new ResizeObserver(entries => {\n    publicAPI.updateViewport();\n  });\n  let onCameraChangedSub = null;\n  let onCameraModifiedSub = null;\n  let onAnimationSub = null;\n  let onEndAnimationSub = null;\n  let selfSubscription = null;\n  function onCameraModified() {\n    // If animating, marker will be updated on Animation event\n    if (!model._interactor.isAnimating()) {\n      publicAPI.updateMarkerOrientation();\n    }\n  }\n  model._onParentRendererChanged = () => publicAPI.updateViewport();\n  publicAPI.computeViewport = () => {\n    const parentRen = model.parentRenderer || model._interactor.getCurrentRenderer();\n    const [xMin, yMin, xMax, yMax] = parentRen.getViewport();\n    const view = model._interactor.getView();\n    const canvasSize = view.getSize();\n    const [viewXSize, viewYSize] = view.getViewportSize(parentRen);\n    const minViewSize = Math.min(viewXSize, viewYSize);\n    let pixelSize = model.viewportSize * minViewSize;\n    // clamp pixel size\n    pixelSize = Math.max(Math.min(model.minPixelSize, minViewSize), Math.min(model.maxPixelSize, pixelSize));\n    const xFrac = pixelSize / canvasSize[0];\n    const yFrac = pixelSize / canvasSize[1];\n    // [left bottom right top]\n    switch (model.viewportCorner) {\n      case Corners.TOP_LEFT:\n        return [xMin, yMax - yFrac, xMin + xFrac, yMax];\n      case Corners.TOP_RIGHT:\n        return [xMax - xFrac, yMax - yFrac, xMax, yMax];\n      case Corners.BOTTOM_LEFT:\n        return [xMin, yMin, xMin + xFrac, yMin + yFrac];\n      case Corners.BOTTOM_RIGHT:\n        return [xMax - xFrac, yMin, xMax, yMin + yFrac];\n      default:\n        vtkErrorMacro('Invalid widget corner');\n        return null;\n    }\n  };\n  publicAPI.updateViewport = () => {\n    if (model.enabled) {\n      selfRenderer.setViewport(...publicAPI.computeViewport());\n      model._interactor.render();\n    }\n  };\n  publicAPI.updateMarkerOrientation = () => {\n    const ren = model.parentRenderer || model._interactor.getCurrentRenderer();\n    const currentCamera = ren.getActiveCamera();\n    if (!currentCamera) {\n      return;\n    }\n    const position = currentCamera.getReferenceByName('position');\n    const focalPoint = currentCamera.getReferenceByName('focalPoint');\n    const viewUp = currentCamera.getReferenceByName('viewUp');\n    if (previousCameraInput[0] !== position[0] || previousCameraInput[1] !== position[1] || previousCameraInput[2] !== position[2] || previousCameraInput[3] !== focalPoint[0] || previousCameraInput[4] !== focalPoint[1] || previousCameraInput[5] !== focalPoint[2] || previousCameraInput[6] !== viewUp[0] || previousCameraInput[7] !== viewUp[1] || previousCameraInput[8] !== viewUp[2]) {\n      previousCameraInput[0] = position[0];\n      previousCameraInput[1] = position[1];\n      previousCameraInput[2] = position[2];\n      previousCameraInput[3] = focalPoint[0];\n      previousCameraInput[4] = focalPoint[1];\n      previousCameraInput[5] = focalPoint[2];\n      previousCameraInput[6] = viewUp[0];\n      previousCameraInput[7] = viewUp[1];\n      previousCameraInput[8] = viewUp[2];\n      const activeCamera = selfRenderer.getActiveCamera();\n      activeCamera.setPosition(position[0], position[1], position[2]);\n      activeCamera.setFocalPoint(focalPoint[0], focalPoint[1], focalPoint[2]);\n      activeCamera.setViewUp(viewUp[0], viewUp[1], viewUp[2]);\n      selfRenderer.resetCamera();\n    }\n  };\n\n  /**\n   * Enables/Disables the orientation marker.\n   */\n  publicAPI.setEnabled = enabling => {\n    if (enabling) {\n      if (model.enabled) {\n        return;\n      }\n      if (!model.actor) {\n        vtkErrorMacro('Must set actor before enabling orientation marker.');\n        return;\n      }\n      if (!model._interactor) {\n        vtkErrorMacro('Must set interactor before enabling orientation marker.');\n        return;\n      }\n      const ren = model.parentRenderer || model._interactor.getCurrentRenderer();\n      const renderWindow = ren.getRenderWindow();\n      renderWindow.addRenderer(selfRenderer);\n      if (renderWindow.getNumberOfLayers() < 2) {\n        renderWindow.setNumberOfLayers(2);\n      }\n      // Highest number is foreground\n      selfRenderer.setLayer(renderWindow.getNumberOfLayers() - 1);\n      selfRenderer.setInteractive(model.interactiveRenderer);\n      selfRenderer.addViewProp(model.actor);\n      model.actor.setVisibility(true);\n      onCameraChangedSub = ren.onEvent(event => {\n        if (event.type === 'ActiveCameraEvent') {\n          if (onCameraModifiedSub) {\n            onCameraModifiedSub.unsubscribe();\n          }\n          onCameraModifiedSub = event.camera.onModified(onCameraModified);\n        }\n      });\n      onCameraModifiedSub = ren.getActiveCamera().onModified(onCameraModified);\n      onAnimationSub = model._interactor.onAnimation(publicAPI.updateMarkerOrientation);\n      onEndAnimationSub = model._interactor.onEndAnimation(publicAPI.updateMarkerOrientation);\n      resizeObserver.observe(model._interactor.getView().getCanvas());\n      publicAPI.updateViewport();\n      publicAPI.updateMarkerOrientation();\n      model.enabled = true;\n    } else {\n      if (!model.enabled) {\n        return;\n      }\n      model.enabled = false;\n      resizeObserver.disconnect();\n      onCameraChangedSub.unsubscribe();\n      onCameraChangedSub = null;\n      onCameraModifiedSub.unsubscribe();\n      onCameraModifiedSub = null;\n      onAnimationSub.unsubscribe();\n      onAnimationSub = null;\n      onEndAnimationSub.unsubscribe();\n      onEndAnimationSub = null;\n      model.actor.setVisibility(false);\n      selfRenderer.removeViewProp(model.actor);\n      const renderWindow = model._interactor?.findPokedRenderer()?.getRenderWindow();\n      if (renderWindow) {\n        renderWindow.removeRenderer(selfRenderer);\n      }\n    }\n    publicAPI.modified();\n  };\n\n  /**\n   * Sets the viewport corner.\n   */\n  publicAPI.setViewportCorner = corner => {\n    if (corner === model.viewportCorner) {\n      return;\n    }\n    model.viewportCorner = corner;\n    publicAPI.updateViewport();\n  };\n\n  /**\n   * Sets the viewport size.\n   */\n  publicAPI.setViewportSize = sizeFactor => {\n    const viewportSize = Math.min(1, Math.max(0, sizeFactor));\n    if (viewportSize === model.viewportSize) {\n      return;\n    }\n    model.viewportSize = viewportSize;\n    publicAPI.updateViewport();\n  };\n  publicAPI.setActor = actor => {\n    const previousState = model.enabled;\n    publicAPI.setEnabled(false);\n    model.actor = actor;\n    publicAPI.setEnabled(previousState);\n  };\n  publicAPI.getRenderer = () => selfRenderer;\n  publicAPI.delete = () => {\n    superClass.delete();\n    if (selfSubscription) {\n      selfSubscription.unsubscribe();\n      selfSubscription = null;\n    }\n    if (onCameraChangedSub) {\n      onCameraChangedSub.unsubscribe();\n      onCameraChangedSub = null;\n    }\n    if (onCameraModifiedSub) {\n      onCameraModifiedSub.unsubscribe();\n      onCameraModifiedSub = null;\n    }\n    if (onAnimationSub) {\n      onAnimationSub.unsubscribe();\n      onAnimationSub = null;\n    }\n    if (onEndAnimationSub) {\n      onEndAnimationSub.unsubscribe();\n      onEndAnimationSub = null;\n    }\n    resizeObserver.disconnect();\n  };\n\n  // --------------------------------------------------------------------------\n\n  // update viewport whenever we are updated\n  selfSubscription = publicAPI.onModified(publicAPI.updateViewport);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // actor: null,\n  // _interactor: null,\n  viewportCorner: Constants.Corners.BOTTOM_LEFT,\n  viewportSize: 0.2,\n  minPixelSize: 50,\n  maxPixelSize: 200,\n  parentRenderer: null,\n  interactiveRenderer: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['enabled', 'viewportCorner', 'viewportSize', 'interactiveRenderer']);\n\n  // NOTE: setting these while the widget is enabled will\n  // not update the widget.\n  macro.setGet(publicAPI, model, ['_interactor', 'minPixelSize', 'maxPixelSize', 'parentRenderer']);\n  macro.get(publicAPI, model, ['actor']);\n  macro.moveToProtected(publicAPI, model, ['interactor']);\n\n  // Object methods\n  vtkOrientationMarkerWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOrientationMarkerWidget');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOrientationMarkerWidget$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { DEFAULT_VALUES, vtkOrientationMarkerWidget$1 as default, extend, newInstance };\n","import vtkImageData from '../DataModel/ImageData.js';\nimport vtkDataArray from './DataArray.js';\n\n/**\n * Takes a canvas and converts it to a vtkImageData.\n *\n * Optionally supply a bounding box to get a particular subset of the canvas.\n *\n * @param canvas       The HTML canvas to convert\n * @param boundingBox  A bounding box of type [top, left, width, height]\n */\nfunction canvasToImageData(canvas) {\n  let boundingBox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0, 0];\n  const [top, left, width, height] = boundingBox;\n  const ctxt = canvas.getContext('2d');\n  const idata = ctxt.getImageData(top, left, width || canvas.width, height || canvas.height);\n  const imageData = vtkImageData.newInstance({\n    type: 'vtkImageData'\n  });\n  imageData.setOrigin(0, 0, 0);\n  imageData.setSpacing(1, 1, 1);\n  imageData.setExtent(0, (width || canvas.width) - 1, 0, (height || canvas.height) - 1, 0, 0);\n  const scalars = vtkDataArray.newInstance({\n    numberOfComponents: 4,\n    values: new Uint8Array(idata.data.buffer)\n  });\n  scalars.setName('scalars');\n  imageData.getPointData().setScalars(scalars);\n  return imageData;\n}\n\n/**\n * Converts an Image object to a vtkImageData.\n */\nfunction imageToImageData(image) {\n  let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    flipX: false,\n    flipY: false,\n    rotate: 0\n  };\n  const canvas = document.createElement('canvas');\n  canvas.width = image.width;\n  canvas.height = image.height;\n  const ctx = canvas.getContext('2d');\n  const {\n    flipX,\n    flipY,\n    rotate\n  } = transform;\n  ctx.translate(canvas.width / 2, canvas.height / 2);\n  ctx.scale(flipX ? -1 : 1, flipY ? -1 : 1);\n  ctx.rotate(rotate * Math.PI / 180);\n  ctx.drawImage(image, -image.width / 2, -image.height / 2);\n  return canvasToImageData(canvas);\n}\nvar ImageHelper = {\n  canvasToImageData,\n  imageToImageData\n};\n\nexport { ImageHelper as default };\n","const STYLES = {\n  default: {\n    defaultStyle: {\n      fontStyle: 'bold',\n      fontFamily: 'Arial',\n      fontColor: 'black',\n      fontSizeScale: res => res / 2,\n      faceColor: 'white',\n      edgeThickness: 0.1,\n      edgeColor: 'black',\n      resolution: 400\n    },\n    xMinusFaceProperty: {\n      text: 'X-',\n      faceColor: 'yellow'\n    },\n    xPlusFaceProperty: {\n      text: 'X+',\n      faceColor: 'yellow'\n    },\n    yMinusFaceProperty: {\n      text: 'Y-',\n      faceColor: 'red'\n    },\n    yPlusFaceProperty: {\n      text: 'Y+',\n      faceColor: 'red'\n    },\n    zMinusFaceProperty: {\n      text: 'Z-',\n      faceColor: '#008000'\n    },\n    zPlusFaceProperty: {\n      text: 'Z+',\n      faceColor: '#008000'\n    }\n  },\n  lps: {\n    xMinusFaceProperty: {\n      text: 'R',\n      faceRotation: -90\n    },\n    xPlusFaceProperty: {\n      text: 'L',\n      faceRotation: 90\n    },\n    yMinusFaceProperty: {\n      text: 'A',\n      faceRotation: 0\n    },\n    yPlusFaceProperty: {\n      text: 'P',\n      faceRotation: 180\n    },\n    zMinusFaceProperty: {\n      text: 'I',\n      faceRotation: 180\n    },\n    zPlusFaceProperty: {\n      text: 'S',\n      faceRotation: 0\n    }\n  }\n};\nfunction applyDefinitions(definitions, cubeActor) {\n  cubeActor.set(definitions);\n}\nfunction applyPreset(name, cubeActor) {\n  return applyDefinitions(STYLES[name], cubeActor);\n}\nfunction registerStylePreset(name, definitions) {\n  STYLES[name] = definitions;\n}\nvar AnnotatedCubePresets = {\n  applyDefinitions,\n  applyPreset,\n  registerStylePreset\n};\n\nexport { AnnotatedCubePresets as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkActor from './Actor.js';\nimport vtkMapper from './Mapper.js';\nimport vtkTexture from './Texture.js';\nimport vtkCubeSource from '../../Filters/Sources/CubeSource.js';\nimport ImageHelper from '../../Common/Core/ImageHelper.js';\nimport AnnotatedCubePresets from './AnnotatedCubeActor/Presets.js';\n\nconst FACE_TO_INDEX = {\n  xPlus: 0,\n  xMinus: 1,\n  yPlus: 2,\n  yMinus: 3,\n  zPlus: 4,\n  zMinus: 5\n};\n\n// ----------------------------------------------------------------------------\n// vtkAnnotatedCubeActor\n// ----------------------------------------------------------------------------\n\nfunction vtkAnnotatedCubeActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAnnotatedCubeActor');\n\n  // Make sure face properties are not references to the default value\n  model.xPlusFaceProperty = {\n    ...model.xPlusFaceProperty\n  };\n  model.xMinusFaceProperty = {\n    ...model.xMinusFaceProperty\n  };\n  model.yPlusFaceProperty = {\n    ...model.yPlusFaceProperty\n  };\n  model.yMinusFaceProperty = {\n    ...model.yMinusFaceProperty\n  };\n  model.zPlusFaceProperty = {\n    ...model.zPlusFaceProperty\n  };\n  model.zMinusFaceProperty = {\n    ...model.zMinusFaceProperty\n  };\n\n  // private variables\n\n  let cubeSource = null;\n  const canvas = document.createElement('canvas');\n  const mapper = vtkMapper.newInstance();\n  const texture = vtkTexture.newInstance();\n  texture.setInterpolate(true);\n\n  // private methods\n\n  function updateFaceTexture(faceName) {\n    let newProp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (newProp) {\n      Object.assign(model[`${faceName}FaceProperty`], newProp);\n    }\n    const prop = {\n      ...model.defaultStyle,\n      ...model[`${faceName}FaceProperty`]\n    };\n\n    // set canvas resolution\n    canvas.width = prop.resolution;\n    canvas.height = prop.resolution;\n    const ctxt = canvas.getContext('2d');\n\n    // set background color\n    ctxt.fillStyle = prop.faceColor;\n    ctxt.fillRect(0, 0, canvas.width, canvas.height);\n\n    // draw edge\n    if (prop.edgeThickness > 0) {\n      ctxt.strokeStyle = prop.edgeColor;\n      ctxt.lineWidth = prop.edgeThickness * canvas.width;\n      ctxt.strokeRect(0, 0, canvas.width, canvas.height);\n    }\n\n    // set face rotation\n    ctxt.save();\n\n    // vertical flip\n    ctxt.translate(0, canvas.height);\n    ctxt.scale(1, -1);\n    ctxt.translate(canvas.width / 2, canvas.height / 2);\n    ctxt.rotate(-Math.PI * (prop.faceRotation / 180.0));\n\n    // set foreground text\n    const textSize = prop.fontSizeScale(prop.resolution);\n    ctxt.fillStyle = prop.fontColor;\n    ctxt.textAlign = 'center';\n    ctxt.textBaseline = 'middle';\n    ctxt.font = `${prop.fontStyle} ${textSize}px \"${prop.fontFamily}\"`;\n    ctxt.fillText(prop.text, 0, 0);\n    ctxt.restore();\n    const vtkImage = ImageHelper.canvasToImageData(canvas);\n    texture.setInputData(vtkImage, FACE_TO_INDEX[faceName]);\n    publicAPI.modified();\n  }\n  function updateAllFaceTextures() {\n    cubeSource = vtkCubeSource.newInstance({\n      generate3DTextureCoordinates: true\n    });\n    mapper.setInputConnection(cubeSource.getOutputPort());\n    updateFaceTexture('xPlus');\n    updateFaceTexture('xMinus');\n    updateFaceTexture('yPlus');\n    updateFaceTexture('yMinus');\n    updateFaceTexture('zPlus');\n    updateFaceTexture('zMinus');\n  }\n\n  // public methods\n\n  publicAPI.setDefaultStyle = style => {\n    model.defaultStyle = {\n      ...model.defaultStyle,\n      ...style\n    };\n    updateAllFaceTextures();\n  };\n  publicAPI.setXPlusFaceProperty = prop => updateFaceTexture('xPlus', prop);\n  publicAPI.setXMinusFaceProperty = prop => updateFaceTexture('xMinus', prop);\n  publicAPI.setYPlusFaceProperty = prop => updateFaceTexture('yPlus', prop);\n  publicAPI.setYMinusFaceProperty = prop => updateFaceTexture('yMinus', prop);\n  publicAPI.setZPlusFaceProperty = prop => updateFaceTexture('zPlus', prop);\n  publicAPI.setZMinusFaceProperty = prop => updateFaceTexture('zMinus', prop);\n\n  // constructor\n\n  updateAllFaceTextures();\n\n  // set mapper\n  mapper.setInputConnection(cubeSource.getOutputPort());\n  publicAPI.setMapper(mapper);\n\n  // set texture\n  publicAPI.addTexture(texture);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  defaultStyle: {\n    text: '',\n    faceColor: 'white',\n    faceRotation: 0,\n    fontFamily: 'Arial',\n    fontColor: 'black',\n    fontStyle: 'normal',\n    fontSizeScale: resolution => resolution / 1.8,\n    edgeThickness: 0.1,\n    edgeColor: 'black',\n    resolution: 200\n  }\n  // xPlusFaceProperty: null,\n  // xMinusFaceProperty: null,\n  // yPlusFaceProperty: null,\n  // yMinusFaceProperty: null,\n  // zPlusFaceProperty: null,\n  // zMinusFaceProperty: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkActor.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['defaultStyle', 'xPlusFaceProperty', 'xMinusFaceProperty', 'yPlusFaceProperty', 'yMinusFaceProperty', 'zPlusFaceProperty', 'zMinusFaceProperty']);\n\n  // Object methods\n  vtkAnnotatedCubeActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkAnnotatedCubeActor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkAnnotatedCubeActor$1 = {\n  newInstance,\n  extend,\n  Presets: AnnotatedCubePresets\n};\n\nexport { DEFAULT_VALUES, vtkAnnotatedCubeActor$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPoints from '../../Common/Core/Points.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { DesiredOutputPrecision } from '../../Common/DataModel/DataSetAttributes/Constants.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nfunction offsetCellArray(typedArray, offset) {\n  let currentIdx = 0;\n  return typedArray.map((value, index) => {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return value;\n    }\n    return value + offset;\n  });\n}\nfunction appendCellData(dest, src, ptOffset, cellOffset) {\n  dest.set(offsetCellArray(src, ptOffset), cellOffset);\n}\n\n// ----------------------------------------------------------------------------\n// vtkAppendPolyData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAppendPolyData(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkAppendPolyData');\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const numberOfInputs = publicAPI.getNumberOfInputPorts();\n    if (!numberOfInputs) {\n      vtkErrorMacro('No input specified.');\n      return;\n    }\n    if (numberOfInputs === 1) {\n      // pass through filter\n      outData[0] = inData[0];\n      return;\n    }\n\n    // Allocate output\n    const output = vtkPolyData.newInstance();\n    let numPts = 0;\n    let pointType = 0;\n    let ttype = 1;\n    let firstType = 1;\n    let numVerts = 0;\n    let numLines = 0;\n    let numStrips = 0;\n    let numPolys = 0;\n\n    // Field data is propagated to output only if present in all inputs\n    let hasPtNormals = true; // assume present by default\n    let hasPtTCoords = true;\n    let hasPtScalars = true;\n    for (let i = 0; i < numberOfInputs; i++) {\n      const ds = inData[i];\n      if (!ds) {\n        // eslint-disable-next-line\n        continue;\n      }\n      const dsNumPts = ds.getPoints().getNumberOfPoints();\n      numPts += dsNumPts;\n      numVerts += ds.getVerts().getNumberOfValues();\n      numLines += ds.getLines().getNumberOfValues();\n      numStrips += ds.getStrips().getNumberOfValues();\n      numPolys += ds.getPolys().getNumberOfValues();\n      if (dsNumPts) {\n        if (firstType) {\n          firstType = 0;\n          pointType = ds.getPoints().getDataType();\n        }\n        ttype = ds.getPoints().getDataType();\n        pointType = pointType > ttype ? pointType : ttype;\n      }\n      const ptD = ds.getPointData();\n      if (ptD) {\n        hasPtNormals = hasPtNormals && ptD.getNormals() !== null;\n        hasPtTCoords = hasPtTCoords && ptD.getTCoords() !== null;\n        hasPtScalars = hasPtScalars && ptD.getScalars() !== null;\n      } else {\n        hasPtNormals = false;\n        hasPtTCoords = false;\n        hasPtScalars = false;\n      }\n    }\n    if (model.outputPointsPrecision === DesiredOutputPrecision.SINGLE) {\n      pointType = VtkDataTypes.FLOAT;\n    } else if (model.outputPointsPrecision === DesiredOutputPrecision.DOUBLE) {\n      pointType = VtkDataTypes.DOUBLE;\n    }\n    const points = vtkPoints.newInstance({\n      dataType: pointType\n    });\n    points.setNumberOfPoints(numPts);\n    const pointData = points.getData();\n    const vertData = new Uint32Array(numVerts);\n    const lineData = new Uint32Array(numLines);\n    const stripData = new Uint32Array(numStrips);\n    const polyData = new Uint32Array(numPolys);\n    let newPtNormals = null;\n    let newPtTCoords = null;\n    let newPtScalars = null;\n    const lds = inData[numberOfInputs - 1];\n    if (hasPtNormals) {\n      const dsNormals = lds.getPointData().getNormals();\n      newPtNormals = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        numberOfTuples: numPts,\n        size: 3 * numPts,\n        dataType: dsNormals.getDataType(),\n        name: dsNormals.getName()\n      });\n    }\n    if (hasPtTCoords) {\n      const dsTCoords = lds.getPointData().getTCoords();\n      newPtTCoords = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        numberOfTuples: numPts,\n        size: 2 * numPts,\n        dataType: dsTCoords.getDataType(),\n        name: dsTCoords.getName()\n      });\n    }\n    if (hasPtScalars) {\n      const dsScalars = lds.getPointData().getScalars();\n      newPtScalars = vtkDataArray.newInstance({\n        numberOfComponents: dsScalars.getNumberOfComponents(),\n        numberOfTuples: numPts,\n        size: numPts * dsScalars.getNumberOfComponents(),\n        dataType: dsScalars.getDataType(),\n        name: dsScalars.getName()\n      });\n    }\n    numPts = 0;\n    numVerts = 0;\n    numLines = 0;\n    numStrips = 0;\n    numPolys = 0;\n    for (let i = 0; i < numberOfInputs; i++) {\n      const ds = inData[i];\n      pointData.set(ds.getPoints().getData(), numPts * 3);\n      appendCellData(vertData, ds.getVerts().getData(), numPts, numVerts);\n      numVerts += ds.getVerts().getNumberOfValues();\n      appendCellData(lineData, ds.getLines().getData(), numPts, numLines);\n      numLines += ds.getLines().getNumberOfValues();\n      appendCellData(stripData, ds.getStrips().getData(), numPts, numStrips);\n      numStrips += ds.getStrips().getNumberOfValues();\n      appendCellData(polyData, ds.getPolys().getData(), numPts, numPolys);\n      numPolys += ds.getPolys().getNumberOfValues();\n      const dsPD = ds.getPointData();\n      if (hasPtNormals) {\n        const ptNorms = dsPD.getNormals();\n        newPtNormals.getData().set(ptNorms.getData(), numPts * 3);\n      }\n      if (hasPtTCoords) {\n        const ptTCoords = dsPD.getTCoords();\n        newPtTCoords.getData().set(ptTCoords.getData(), numPts * 2);\n      }\n      if (hasPtScalars) {\n        const ptScalars = dsPD.getScalars();\n        newPtScalars.getData().set(ptScalars.getData(), numPts * newPtScalars.getNumberOfComponents());\n      }\n      numPts += ds.getPoints().getNumberOfPoints();\n    }\n    output.setPoints(points);\n    output.getVerts().setData(vertData);\n    output.getLines().setData(lineData);\n    output.getStrips().setData(stripData);\n    output.getPolys().setData(polyData);\n    if (newPtNormals) {\n      output.getPointData().setNormals(newPtNormals);\n    }\n    if (newPtTCoords) {\n      output.getPointData().setTCoords(newPtTCoords);\n    }\n    if (newPtScalars) {\n      output.getPointData().setScalars(newPtScalars);\n    }\n    outData[0] = output;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  outputPointsPrecision: DesiredOutputPrecision.DEFAULT\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['outputPointsPrecision']);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n\n  // Object specific methods\n  vtkAppendPolyData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkAppendPolyData');\n\n// ----------------------------------------------------------------------------\n\nvar vtkAppendPolyData$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkAppendPolyData$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// ----------------------------------------------------------------------------\n// vtkConeSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkConeSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkConeSource');\n  function requestData(inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    let dataset = outData[0];\n    const angle = 2 * Math.PI / model.resolution;\n    const xbot = -model.height / 2.0;\n    const numberOfPoints = model.resolution + 1;\n    const cellArraySize = 4 * model.resolution + 1 + model.resolution;\n\n    // Points\n    let pointIdx = 0;\n    const points = macro.newTypedArray(model.pointType, numberOfPoints * 3);\n\n    // Cells\n    let cellLocation = 0;\n    const polys = new Uint32Array(cellArraySize);\n\n    // Add summit point\n    points[0] = model.height / 2.0;\n    points[1] = 0.0;\n    points[2] = 0.0;\n\n    // Create bottom cell\n    if (model.capping) {\n      polys[cellLocation++] = model.resolution;\n    }\n\n    // Add all points\n    for (let i = 0; i < model.resolution; i++) {\n      pointIdx++;\n      points[pointIdx * 3 + 0] = xbot;\n      points[pointIdx * 3 + 1] = model.radius * Math.cos(i * angle);\n      points[pointIdx * 3 + 2] = model.radius * Math.sin(i * angle);\n\n      // Add points to bottom cell in reverse order\n      if (model.capping) {\n        polys[model.resolution - cellLocation++ + 1] = pointIdx;\n      }\n    }\n\n    // Add all triangle cells\n    for (let i = 0; i < model.resolution; i++) {\n      polys[cellLocation++] = 3;\n      polys[cellLocation++] = 0;\n      polys[cellLocation++] = i + 1;\n      polys[cellLocation++] = i + 2 > model.resolution ? 1 : i + 2;\n    }\n\n    // Apply transformation to the points coordinates\n    vtkMatrixBuilder.buildFromRadian().translate(...model.center).rotateFromDirections([1, 0, 0], model.direction).apply(points);\n    dataset = vtkPolyData.newInstance();\n    dataset.getPoints().setData(points, 3);\n    dataset.getPolys().setData(polys, 1);\n\n    // Update output\n    outData[0] = dataset;\n  }\n\n  // Expose methods\n  publicAPI.requestData = requestData;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  height: 1.0,\n  radius: 0.5,\n  resolution: 6,\n  center: [0, 0, 0],\n  direction: [1.0, 0.0, 0.0],\n  capping: true,\n  pointType: 'Float64Array'\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['height', 'radius', 'resolution', 'capping']);\n  macro.setGetArray(publicAPI, model, ['center', 'direction'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkConeSource(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkConeSource');\n\n// ----------------------------------------------------------------------------\n\nvar vtkConeSource$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkConeSource$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// ----------------------------------------------------------------------------\n// vtkCylinderSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCylinderSource(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkCylinderSource');\n  function requestData(inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    let dataset = outData[0];\n    const angle = 2.0 * Math.PI / model.resolution;\n    let numberOfPoints = 2 * model.resolution;\n    let numberOfPolys = 5 * model.resolution;\n    if (model.capping) {\n      numberOfPoints = 4 * model.resolution;\n      numberOfPolys = 7 * model.resolution + 2;\n    }\n\n    // Points\n    const points = macro.newTypedArray(model.pointType, numberOfPoints * 3);\n\n    // Cells\n    let cellLocation = 0;\n    const polys = new Uint32Array(numberOfPolys);\n\n    // Normals\n    const normalsData = new Float32Array(numberOfPoints * 3);\n    const normals = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: normalsData,\n      name: 'Normals'\n    });\n\n    // Texture coords\n    const tcData = new Float32Array(numberOfPoints * 2);\n    const tcoords = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcData,\n      name: 'TCoords'\n    });\n\n    // Generate points for all sides\n    const nbot = [0.0, 0.0, 0.0];\n    const ntop = [0.0, 0.0, 0.0];\n    const xbot = [0.0, 0.0, 0.0];\n    const xtop = [0.0, 0.0, 0.0];\n    const tcbot = [0.0, 0.0];\n    const tctop = [0.0, 0.0];\n    const otherRadius = model.otherRadius == null ? model.radius : model.otherRadius;\n    for (let i = 0; i < model.resolution; i++) {\n      // x coordinate\n      nbot[0] = Math.cos(i * angle + model.initAngle);\n      ntop[0] = nbot[0];\n      xbot[0] = model.radius * nbot[0] + model.center[0];\n      xtop[0] = xbot[0];\n      tcbot[0] = Math.abs(2.0 * i / model.resolution - 1.0);\n      tctop[0] = tcbot[0];\n\n      // y coordinate\n      xbot[1] = 0.5 * model.height + model.center[1];\n      xtop[1] = -0.5 * model.height + model.center[1];\n      tcbot[1] = 0.0;\n      tctop[1] = 1.0;\n\n      // z coordinate\n      nbot[2] = -Math.sin(i * angle + model.initAngle);\n      ntop[2] = nbot[2];\n      xbot[2] = otherRadius * nbot[2] + model.center[2];\n      xtop[2] = xbot[2];\n      const pointIdx = 2 * i;\n      for (let j = 0; j < 3; j++) {\n        normalsData[pointIdx * 3 + j] = nbot[j];\n        normalsData[(pointIdx + 1) * 3 + j] = ntop[j];\n        points[pointIdx * 3 + j] = xbot[j];\n        points[(pointIdx + 1) * 3 + j] = xtop[j];\n        if (j < 2) {\n          tcData[pointIdx * 2 + j] = tcbot[j];\n          tcData[(pointIdx + 1) * 2 + j] = tctop[j];\n        }\n      }\n    }\n\n    // Generate polygons for sides\n    for (let i = 0; i < model.resolution; i++) {\n      polys[cellLocation++] = 4;\n      polys[cellLocation++] = 2 * i;\n      polys[cellLocation++] = 2 * i + 1;\n      const pt = (2 * i + 3) % (2 * model.resolution);\n      polys[cellLocation++] = pt;\n      polys[cellLocation++] = pt - 1;\n    }\n    if (model.capping) {\n      // Generate points for top/bottom polygons\n      for (let i = 0; i < model.resolution; i++) {\n        // x coordinate\n        xbot[0] = model.radius * Math.cos(i * angle + model.initAngle);\n        xtop[0] = xbot[0];\n        tcbot[0] = xbot[0];\n        tctop[0] = xbot[0];\n        xbot[0] += model.center[0];\n        xtop[0] += model.center[0];\n\n        // y coordinate\n        nbot[1] = 1.0;\n        ntop[1] = -1.0;\n        xbot[1] = 0.5 * model.height + model.center[1];\n        xtop[1] = -0.5 * model.height + model.center[1];\n\n        // z coordinate\n        xbot[2] = -otherRadius * Math.sin(i * angle + model.initAngle);\n        xtop[2] = xbot[2];\n        tcbot[1] = xbot[2];\n        tctop[1] = xbot[2];\n        xbot[2] += model.center[2];\n        xtop[2] += model.center[2];\n        const botIdx = 2 * model.resolution + i;\n        const topIdx = 3 * model.resolution + model.resolution - i - 1;\n        for (let j = 0; j < 3; j++) {\n          normalsData[3 * botIdx + j] = nbot[j];\n          normalsData[3 * topIdx + j] = ntop[j];\n          points[3 * botIdx + j] = xbot[j];\n          points[3 * topIdx + j] = xtop[j];\n          if (j < 2) {\n            tcData[2 * botIdx + j] = tcbot[j];\n            tcData[2 * topIdx + j] = tctop[j];\n          }\n        }\n      }\n\n      // Generate polygons for top/bottom\n      polys[cellLocation++] = model.resolution;\n      for (let i = 0; i < model.resolution; i++) {\n        polys[cellLocation++] = 2 * model.resolution + i;\n      }\n      polys[cellLocation++] = model.resolution;\n      for (let i = 0; i < model.resolution; i++) {\n        polys[cellLocation++] = 3 * model.resolution + i;\n      }\n    }\n\n    // Apply transformation to the points coordinates\n    vtkMatrixBuilder.buildFromRadian().translate(...model.center).rotateFromDirections([0, 1, 0], model.direction).translate(...model.center.map(c => c * -1)).apply(points);\n    dataset = vtkPolyData.newInstance();\n    dataset.getPoints().setData(points, 3);\n    dataset.getPolys().setData(polys, 1);\n    dataset.getPointData().setNormals(normals);\n    dataset.getPointData().setTCoords(tcoords);\n\n    // Update output\n    outData[0] = dataset;\n  }\n\n  // Expose methods\n  publicAPI.requestData = requestData;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  height: 1.0,\n  initAngle: 0,\n  radius: 1.0,\n  resolution: 6,\n  center: [0, 0, 0],\n  direction: [0.0, 1.0, 0.0],\n  capping: true,\n  pointType: 'Float64Array'\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['height', 'initAngle', 'otherRadius', 'radius', 'resolution', 'capping']);\n  macro.setGetArray(publicAPI, model, ['center', 'direction'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkCylinderSource(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCylinderSource');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCylinderSource$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkCylinderSource$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkAppendPolyData from '../General/AppendPolyData.js';\nimport vtkConeSource from './ConeSource.js';\nimport vtkCylinderSource from './CylinderSource.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// ----------------------------------------------------------------------------\n// vtkArrowSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkArrowSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkArrowSource');\n  function requestData(inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    const cylinder = vtkCylinderSource.newInstance({\n      capping: true\n    });\n    cylinder.setResolution(model.shaftResolution);\n    cylinder.setRadius(model.shaftRadius);\n    cylinder.setHeight(1.0 - model.tipLength);\n    cylinder.setCenter(0, (1.0 - model.tipLength) * 0.5, 0.0);\n    const cylinderPD = cylinder.getOutputData();\n    const cylinderPts = cylinderPD.getPoints().getData();\n    const cylinderNormals = cylinderPD.getPointData().getNormals().getData();\n\n    // Apply transformation to the cylinder\n    vtkMatrixBuilder.buildFromDegree().rotateZ(-90).apply(cylinderPts).apply(cylinderNormals);\n    const cone = vtkConeSource.newInstance();\n    cone.setResolution(model.tipResolution);\n    cone.setHeight(model.tipLength);\n    cone.setRadius(model.tipRadius);\n    const conePD = cone.getOutputData();\n    const conePts = conePD.getPoints().getData();\n\n    // Apply transformation to the cone\n    vtkMatrixBuilder.buildFromRadian().translate(1.0 - model.tipLength * 0.5, 0.0, 0.0).apply(conePts);\n    const append = vtkAppendPolyData.newInstance();\n    append.setInputData(cylinderPD);\n    append.addInputData(conePD);\n    const appendPD = append.getOutputData();\n    const appendPts = appendPD.getPoints().getData();\n    // Center the arrow about [0, 0, 0]\n    vtkMatrixBuilder.buildFromRadian().translate(-0.5 + model.tipLength * 0.5, 0.0, 0.0).apply(appendPts);\n    if (model.invert) {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(-1, -1, -1).apply(appendPts);\n\n      // Update output\n      outData[0] = appendPD;\n    } else {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(1, 1, 1).apply(appendPts);\n\n      // Update output\n      outData[0] = append.getOutputData();\n    }\n  }\n\n  // Expose methods\n  publicAPI.requestData = requestData;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  tipResolution: 6,\n  tipRadius: 0.1,\n  tipLength: 0.35,\n  shaftResolution: 6,\n  shaftRadius: 0.03,\n  invert: false,\n  direction: [1.0, 0.0, 0.0],\n  pointType: 'Float64Array'\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['tipResolution', 'tipRadius', 'tipLength', 'shaftResolution', 'shaftRadius', 'invert']);\n  macro.setGetArray(publicAPI, model, ['direction'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkArrowSource(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkArrowSource');\n\n// ----------------------------------------------------------------------------\n\nvar vtkArrowSource$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkArrowSource$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkActor from './Actor.js';\nimport vtkMapper from './Mapper.js';\nimport vtkArrowSource from '../../Filters/Sources/ArrowSource.js';\nimport vtkAppendPolyData from '../../Filters/General/AppendPolyData.js';\n\n// ----------------------------------------------------------------------------\n\nfunction centerDataSet(ds) {\n  const bounds = ds.getPoints().getBounds();\n  const center = [-(bounds[0] + bounds[1]) * 0.5, -(bounds[2] + bounds[3]) * 0.5, -(bounds[4] + bounds[5]) * 0.5];\n  vtkMatrixBuilder.buildFromDegree().translate(...center).apply(ds.getPoints().getData());\n}\nfunction shiftDataset(ds, axis) {\n  let invert = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const bounds = ds.getPoints().getBounds();\n  const center = [0, 0, 0];\n  if (invert) {\n    center[axis] = -bounds[axis * 2 + 1];\n  } else {\n    center[axis] = -bounds[axis * 2];\n  }\n  vtkMatrixBuilder.buildFromDegree().translate(...center).apply(ds.getPoints().getData());\n}\n\n// ----------------------------------------------------------------------------\n\nfunction addColor(ds, r, g, b) {\n  const size = ds.getPoints().getData().length;\n  const rgbArray = new Uint8ClampedArray(size);\n  let offset = 0;\n  while (offset < size) {\n    rgbArray[offset++] = r;\n    rgbArray[offset++] = g;\n    rgbArray[offset++] = b;\n  }\n  ds.getPointData().setScalars(vtkDataArray.newInstance({\n    name: 'color',\n    numberOfComponents: 3,\n    values: rgbArray\n  }));\n}\n\n// ----------------------------------------------------------------------------\n// vtkAxesActor\n// ----------------------------------------------------------------------------\n\nfunction vtkAxesActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAxesActor');\n  const _mapper = vtkMapper.newInstance();\n  publicAPI.setMapper(_mapper);\n  publicAPI.update = () => {\n    let currentConfig = {\n      ...model.config,\n      ...model.xConfig\n    };\n    const xAxis = vtkArrowSource.newInstance({\n      direction: [1, 0, 0],\n      ...currentConfig\n    }).getOutputData();\n    if (model.config.recenter) {\n      centerDataSet(xAxis);\n    } else {\n      shiftDataset(xAxis, 0, currentConfig.invert);\n    }\n    addColor(xAxis, ...currentConfig.color);\n    currentConfig = {\n      ...model.config,\n      ...model.yConfig\n    };\n    const yAxis = vtkArrowSource.newInstance({\n      direction: [0, 1, 0],\n      ...currentConfig\n    }).getOutputData();\n    if (model.config.recenter) {\n      centerDataSet(yAxis);\n    } else {\n      shiftDataset(yAxis, 1, currentConfig.invert);\n    }\n    addColor(yAxis, ...currentConfig.color);\n    currentConfig = {\n      ...model.config,\n      ...model.zConfig\n    };\n    const zAxis = vtkArrowSource.newInstance({\n      direction: [0, 0, 1],\n      ...currentConfig\n    }).getOutputData();\n    if (model.config.recenter) {\n      centerDataSet(zAxis);\n    } else {\n      shiftDataset(zAxis, 2, currentConfig.invert);\n    }\n    addColor(zAxis, ...currentConfig.color);\n    const source = vtkAppendPolyData.newInstance();\n    source.setInputData(xAxis);\n    source.addInputData(yAxis);\n    source.addInputData(zAxis);\n    _mapper.setInputConnection(source.getOutputPort());\n  };\n  publicAPI.update();\n  const _debouncedUpdate = macro.debounce(publicAPI.update, 0);\n  publicAPI.setXAxisColor = color => publicAPI.setXConfig({\n    ...publicAPI.getXConfig(),\n    color\n  });\n  publicAPI.setYAxisColor = color => publicAPI.setYConfig({\n    ...publicAPI.getYConfig(),\n    color\n  });\n  publicAPI.setZAxisColor = color => publicAPI.setZConfig({\n    ...publicAPI.getZConfig(),\n    color\n  });\n  publicAPI.getXAxisColor = () => model.getXConfig().color;\n  publicAPI.getYAxisColor = () => model.getYConfig().color;\n  publicAPI.getZAxisColor = () => model.getZConfig().color;\n  model._onConfigChanged = _debouncedUpdate;\n  model._onXConfigChanged = _debouncedUpdate;\n  model._onYConfigChanged = _debouncedUpdate;\n  model._onZConfigChanged = _debouncedUpdate;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    config: {\n      recenter: true,\n      tipResolution: 60,\n      tipRadius: 0.1,\n      tipLength: 0.2,\n      shaftResolution: 60,\n      shaftRadius: 0.03,\n      invert: false,\n      ...initialValues?.config\n    },\n    xConfig: {\n      color: [255, 0, 0],\n      invert: false,\n      ...initialValues?.xConfig\n    },\n    yConfig: {\n      color: [255, 255, 0],\n      invert: false,\n      ...initialValues?.yConfig\n    },\n    zConfig: {\n      color: [0, 128, 0],\n      invert: false,\n      ...initialValues?.zConfig\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // Inheritance\n  vtkActor.extend(publicAPI, model, defaultValues(initialValues));\n  macro.setGet(publicAPI, model, ['config', 'xConfig', 'yConfig', 'zConfig']);\n\n  // Object methods\n  vtkAxesActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkAxesActor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkAxesActor$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkAxesActor$1 as default, extend, newInstance };\n"],"names":["Active","ToolModes","getActiveToolForKeyboardEvent","evt","renderingEngineId","viewportId","detail","mouseButton","modifierKey","getModifierKey","toolGroup","getToolGroupForViewport","toolGroupToolNames","Object","keys","toolOptions","defaultMousePrimary","getDefaultMousePrimary","j","length","toolName","mode","bindings","some","binding","getToolInstance","keyDown","activeTool","getToolName","includes","setViewportsCursorByToolName","activeToolsWithEventBinding","toolModes","toolsWithActions","Map","key","tool","actionsConfig","configuration","actions","values","action","find","set","size","element","value","entries","method","call","keyUp","customCallbackHandler","bind","getActiveToolForMouseEvent","event","mouseEvent","getMouseModifier","buttons","correctBinding","mouseDownAnnotationAction","state","isInteractingWithTool","eventDetail","enabledElement","getEnabledElement","canvas","canvasCoords","currentPoints","getToolsWithActionsForMouseEvent","Passive","tools","Array","from","annotationToolsWithAnnotations","filterToolsWithAnnotationsForElement","moveableAnnotationTools","filterMoveableAnnotationTools","annotation","get","mouseDown","preMouseDownCallback","isPrimaryClick","applicableTools","getToolsWithModesForMouseEvent","undefined","annotationToolsWithMoveableHandles","filterToolsWithMoveableHandles","isMultiSelect","shiftKey","handle","getAnnotationForSelection","toggleAnnotationSelection","annotationUID","handleSelectedCallback","toolSelectedCallback","postMouseDownCallback","toolsWithMovableHandles","unlockAndVisibleAnnotation","item","isUnlocked","isAnnotationLocked","isVisible","isAnnotationVisible","isAnnotationSelected","setAnnotationSelected","preserveSelected","mouseDownActivate","isMultiPartToolActive","addNewAnnotation","mouseDrag","mouseDragCallback","mouseMove","activeAndPassiveTools","toolsWithAnnotations","toolsWithoutAnnotations","filter","toolAndAnnotation","annotationsNeedToBeRedrawn","annotations","mouseMoveCallback","forEach","triggerAnnotationRender","Wheel","mouseWheelCallback","handlerType","customFunction","toolInstance","modesFilter","evtButton","enabledTools","push","getActiveToolForTouchEvent","touchEvent","numTouchPoints","touches","getToolsWithModesForTouchEvent","touchStart","preTouchStartCallback","postTouchStartCallback","touchStartActivate","touchDrag","touchDragCallback","disable","removeEventListener","enable","addEventListener","defaultState","keyCode","keyListener","currentTarget","preventDefault","triggerEvent","KEY_DOWN","document","_onKeyUp","_onVisibilityChange","visibilityState","resetModifierKey","structuredClone","KEY_UP","getMouseEventPoints","elementToUse","viewport","clientPoint","clientX","clientY","_clientToPoint","pagePoint","pageX","pageY","_pageToPoint","canvasPoint","rect","getBoundingClientRect","left","window","pageXOffset","top","pageYOffset","_pagePointsToCanvasPoints","page","client","world","canvasToWorld","startPoints","eventName","MOUSE_DOUBLE_CLICK","camera","lastPoints","deltaPoints","stopImmediatePropagation","MOUSE_DOWN","MOUSE_DOWN_ACTIVATE","MOUSE_CLICK","MOUSE_UP","MOUSE_DRAG","DOUBLE_CLICK_DRAG_TOLERANCE","isClickEvent","clickDelay","preventClickTimeout","doubleClickState","doubleClickTimeout","mouseDownEvent","mouseUpEvent","ignoreDoubleClick","_onMouseDrag","_updateMouseEventsLastPoints","_getDeltaPoints","_isDragPastDoubleClickTolerance","_doStateMouseDownAndUp","_copyPoints","_onMouseUp","clearTimeout","_cleanUp","_onMouseMove","delta","Math","abs","_preventClickHandler","_clearDoubleClickTimeoutAndEvents","_doMouseDown","JSON","parse","stringify","points","_subtractPoints2D","point0","point1","getMouseButton","mouseDoubleClickIgnoreListener","setTimeout","MOUSE_MOVE","pointerType","mouse","touch","lastInteractionType","lastInteractionTime","handleTap","type","e","now","Date","stopPropagation","handleTapMouse","handleTapTouch","attachEvents","eventList","interactionType","tapHandler","passive","removeEvents","mouseEvents","touchEvents","getTouchEventPoints","changedTouches","map","i","identifier","radiusX","radiusY","force","rotationAngle","Settings","getRuntimeSettings","TOUCH_START","TOUCH_START_ACTIVATE","TOUCH_PRESS","TOUCH_DRAG","TOUCH_END","TOUCH_TAP","TOUCH_SWIPE","Events","zeroIPoint","zeroIDistance","startPointsList","lastPointsList","isTouchStart","startTime","pressTimeout","pressDelay","pressMaxDistance","accumulatedDistance","swipeDistanceThreshold","swiped","swipeToleranceMs","defaultTapState","taps","tapTimeout","tapMaxDistance","tapToleranceMs","tapState","triggerEventCallback","ele","name","_onTouchDrag","currentPointsList","_updateTouchEventsLastPoints","getDeltaPoints","deltaDistance","getDeltaDistanceBetweenIPoints","totalDistance","getDeltaDistance","getMeanTouchPoints","copyPointsList","currentTime","getTime","x","y","swipe","RIGHT","LEFT","DOWN","UP","_checkTouchSwipe","_onTouchEnd","distanceFromStart","_checkTouchTap","lp","copyPoints","_onTouchPress","_onTouchStart","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","deltaY","spinX","spinY","pixelX","pixelY","wheelDelta","wheelDeltaY","wheelDeltaX","deltaX","deltaMode","normalizeWheel","direction","MOUSE_WHEEL","wheel","async","convertStackToVolumeLabelmap","args","result","triggerSegmentationModified","segmentationId","updateStackSegmentationState","imageIds","options","segmentation","removeOriginal","data","representationData","Labelmap","cache","getVolume","volumeId","removeVolumeLoadObject","SegmentationRepresentations","eventTarget","addEventListenerOnce","SEGMENTATION_RENDERED","triggerSegmentationDataModified","ToolAndAnnotations","proximity","isLocked","isPointNearTool","console","warn","getAnnotations","constructor","filterInteractableAnnotationsForElement","toolsWithMoveableHandles","getHandleNearImagePoint","CircleSculptCursor","this","toolInfo","toolSize","maxToolSize","shapeName","renderShape","svgDrawingHelper","canvasLocation","drawCircle","pushHandles","sculptData","mouseCanvasPoint","pushedHandles","first","last","handleCanvasPoint","worldToCanvas","distanceToHandle","point","pushOneHandle","configureToolSize","maxRadius","min","clientWidth","clientHeight","updateToolSize","activeAnnotation","radius","getMaxSpacing","minSpacing","max","getInsertPosition","previousIndex","nextIndex","insertPosition","previousCanvasPoint","nextCanvasPoint","midPoint","distanceToMidPoint","directionUnitVector","mousePoint","position","z","transformWorldToIndex","transformIndexToWorld","GrowCutBaseTool","lastGrowCutCommand","toolProps","defaultToolProps","super","positiveStdDevMultiplier","shrinkExpandIncrement","islandRemoval","enabled","eventData","worldPoint","renderingEngine","viewUp","getCamera","segmentIndex","labelmapVolumeId","referencedVolumeId","getLabelmapSegmentationData","_isOrthogonalView","Error","growCutData","metadata","getViewReference","id","shrink","_runLastCommand","shrinkExpandAmount","expand","refresh","getGrowCutLabelmap","_growCutData","runGrowCut","config","labelmap","shrinkExpandAccumulator","growCutCommand","seeds","newPositiveStdDevMultiplier","negativeSeedMargin","updatedGrowCutData","positiveSeedValue","negativeSeedValue","growcutLabelmap","isPartialVolume","applyPartialGrowCutLabelmap","applyGrowCutLabelmap","_removeIslands","targetLabelmap","sourceLabelmap","srcLabelmapData","voxelManager","getCompleteScalarDataArray","tgtVoxelManager","srcColumns","srcRows","srcNumSlices","dimensions","tgtColumns","tgtRows","srcPixelsPerSlice","tgtPixelsPerSlice","srcSlice","srcRow","srcRowIJK","rowVoxelWorld","imageData","tgtRowIJK","tgtColumn","tgtRow","tgtSlice","srcOffset","tgtOffset","column","labelmapValue","setAtIndex","index","cmd","activeSeg","activeSegmentation","labelmapData","referencedImageIds","getImageIds","getOrCreateSegmentationVolume","currentImageId","getCurrentImageId","currentImage","getImage","fakeImage","imageLoader","_createFakeVolume","imageId","currentLabelmapImageId","fakeDerivedImage","segImageIds","referencedImageId","generateVolumeId","imageVolume","volumeLoader","cachedVolume","volumeProps","spacing","derivedVolume","ImageVolume","dataType","origin","putVolumeSync","volumeImageData","ijkVecColDir","ijkVecSliceDir","every","vec","getRemoveIslandData","removeIslandData","width","height","numPixelsPerSlice","worldIslandPoints","islandPointIndexes","ijkIslandPoints","getRenderingEngine","getViewport","concat","pointIndex","floor","initialize","previewSegmentIndex","floodFillSegmentIsland","removeExternalIslands","removeInternalIslands","getSegmentStyle","distancePointToContour","coords","contour","polyline","distance","Infinity","distanceToPoint","isNaN","eraseRectangle","operationData","inside","eraseOperationData","assign","eraseInsideRectangle","validate3x3Matrix","matrix","isArray","n","inverse3x3Matrix","mat","determinant","adjugate","inverse","normalizeVector","v","magnitude","sqrt","component","checkStandardBasis","directions","xVector","slice","yVector","zVector","normalizedX","normalizedY","normalizedZ","standardBasis","epsilon","isStandard","val","rotationMatrix","rotatePoint","rotatePoints","rotatedPoints","rotated","getToolsWithModesForElement","DEFAULT_MULTIPLIER","getVOIMultipliers","ptMultiplier","isPreScaled","isViewportPreScaled","fixedPTWindowWidth","xMultiplier","LivewirePath","inputPointArray","inputControlPointIndexArray","pointArray","_controlPointIndexes","getPoint","getLastPoint","isControlPoint","indexOf","addPoint","addControlPoint","getControlPoints","getNumControlPoints","removeLastControlPoint","pop","getLastControlPoint","removeLastPoints","count","splice","addPoints","newPointArray","prependPath","other","otherSize","shiftedIndexArray","appendPath","BucketQueue","numBits","getPriority","areEqual","_bucketCount","_mask","_size","_currentBucketIndex","_buckets","_buildArray","_getPriority","_areEqual","itemA","itemB","bucketIndex","_getBucketIndex","newHead","next","ret","remove","firstBucketNode","prevNode","node","isEmpty","buckets","fill","isEqual","utilities","MAX_UINT32","TWO_THIRD_PI","PI","LivewireScissors","grayscalePixelData","_getPointIndex","row","col","_getPointCoordinate","_getPointCost","round","searchGranularity","costs","numPixels","searchGranularityBits","laplace","gradXNew","gradYNew","_computeLaplace","gradMagnitude","_computeGradient","_computeGradientX","_computeGradientY","visited","parents","Uint32Array","Float32Array","startSearch","startPoint","startPointIndex","priorityQueueNew","findMinNearby","testPoint","xRange","yRange","minValue","minPoint","xTest","yTest","distanceCost","weight","findPathToPoint","targetPoint","coord","targetPointIndex","cost","priorityQueue","neighborsPoints","_getNeighborPoints","len","neighborPoint","neighborPointIndex","dist","_getWeightedDistance","neighborCost","pathPoints","pathPointIndex","reverse","_getDeltaX","_getDeltaY","_getGradientMagnitude","dx","dy","_getLaplace","lap","gradient","pixelIndex","gradX","gradY","_getGradientUnitVector","px","py","pointGradX","pointGradY","gradVecLen","_getGradientDirection","qx","qy","dgpUnitVec","gdqUnitVec","dp","dq","SQRT1_2","acos","isFinite","getCost","pointA","pointB","aX","aY","bX","bY","bIndex","list","sx","sy","ex","ey","createInstanceFromRawPixelData","pixelData","voiRange","lower","minPixelValue","upper","maxPixelValue","pixelRange","intersectAABB","aabb1","aabb2","minX","maxX","minY","maxY","distanceToPointSquared","aabb","aabbWidth","aabbHeight","aabbSize","aabbCenter","translatedPoint","angleBetweenLines","line1","line2","p1","p2","p3","p4","v1","v2","cos","angleBetween3DLines","angleBetween2DLines","Calculator","InstanceCalculator","storePointData","getStatistics","debug","getCanvasCircleRadius","circleCanvasPoints","center","end","getCanvasCircleCorners","pointInEllipse","ellipse","pointLPS","inverts","precalculated","precalculatePointInEllipse","xRadius","yRadius","zRadius","invXRadiusSq","invYRadiusSq","invZRadiusSq","centerL","centerP","centerS","dz","lineStart","lineEnd","distanceSquared","distanceToPointSquaredInfo","closestPoint","dotProduct","ORIENTATION_TOLERANCE","isPointOnLineSegment","orientation","arg","midPoint2","x1","y1","z1","x2","y2","z2","mirror","mirrorPoint","staticPoint","canvasPoints","newCanvasPoint","commonData","xDir","yDir","log","lastWorldPos","newWorldPos","worldPosDiff","xDist","yDist","numPointsToAdd","lastCanvasPoint","canvasDist","canvasDir","distPerPoint","areLineSegmentsIntersecting","q1","q2","line1MinX","line1MinY","line1MaxX","line1MaxY","line2MinX","line2MinY","line2MaxX","line2MaxY","orient","onSegment","p","q","r","orientationValue","PolylinePointType","PolylinePointPosition","PolylinePointDirection","ensuresNextPointers","polylinePoints","currentPoint","getSourceAndTargetPointsList","targetPolyline","sourcePolyline","targetPolylinePoints","sourcePolylinePoints","sourceIntersectionsCache","intersectionPointDirection","Exiting","Entering","pointInside","vertexPoint","Vertex","coordinates","Inside","Outside","intersectionsInfo","intersectedLineSegment","sourceLineSegmentId","intersectionCoordinate","coordinate","targetStartPointDistSquared","sort","right","intersectionInfo","targetEdgePoint","Intersection","Edge","sourceEdgePoint","Unknown","cloned","sourceIntersectionPoints","lineSegmentId","intersectionPoint","lineSegStartDistSquared","getUnvisitedOutsidePoint","mergePolylines","targetNormal","sourceNormal","dotNormals","mergedPolyline","subtractPolylines","subtractedPolylines","subtractedPolyline","containsPoint","closed","numPolylinePoints","numIntersections","holes","hole","shouldClose","maxSegmentIndex","intersects","xIntersection","containsPoints","numPoint","DEFAULT_EPSILON","decimate","numPoints","epsilonSquared","partitionQueue","polylinePointFlags","numDecimatedPoints","startIndex","endIndex","endPoint","maxDistSquared","maxDistIndex","distSquared","decimatedPolyline","srcIndex","dstIndex","getAABB","polylineToUse","numDimensions","is3D","currentPolyline","totalPoints","minZ","maxZ","getArea","area","getClosestLineSegmentIntersection","initialQ2Index","p2Index","intersections","q2Index","distances","intersection","intersectionPoints","midpoint","minDistance","segment","getFirstLineSegmentIntersectionIndexes","initialI","getLineSegmentIntersectionsCoordinates","polylineIndexes","getLineSegmentIntersectionsIndexes","maxI","PARALLEL_LINES_TOLERANCE","getLinesIntersection","diffQ1P1","diffQ2P2","denominator","line1AABB","line2AABB","a","b","numerator2","getNormal2","getNormal3","vecArea","refPoint","aZ","bZ","_getAreaVector","getSignedArea","EPSILON","subPixelResolution","StackViewport","getImageData","volumeSpacing","viewPlaneNormal","iVector","jVector","kVector","viewRight","absViewRightDotI","absViewRightDotJ","absViewRightDotK","xSpacing","absViewUpDotI","absViewUpDotJ","absViewUpDotK","ySpacing","getWindingDirection","intersectPolyline","sourceLen","sourceP1","sourceP2","intersectionPointIndexes","isClosed","firstPoint","lastPoint","distFirstToLastPoints","isPointInsidePolyline3D","sharedDimensionIndex","projectedPolyline","projectedHoles","hole2D","point2D","p1p","p1p2","dot","p1p2Mag","projectionVectorMag","p1p2UnitVector","projectionVector","projectionPoint","closeContourProximity","projectTo2D","testPoints","array","points2D","firstDim","secondDim","INSIDE","OUTSIDE","clipT","num","denom","c","tE","tL","t","clip","box","da","db","rotate","random","srcList","smoothAnnotation","knotsRatioPercentage","shouldPreventInterpolation","rotateMat","normal","focal","eye","up","rotateMatrix","planeP","rotation","interpolatedCanvasPoints","loop","unRotate","filterAnnotationsWithinSlice","getWorldWidthAndHeightFromCorners","getWorldWidthAndHeightFromTwoPoints","filterAnnotationsForDisplay","getPointInLineOfSightWithCriteria","isPlaneIntersectingAABB","filterAnnotationsWithinSamePlane","getPointsInLineOfSight","POSITIVE_SEED_LABEL","NEGATIVE_SEED_LABEL","DEFAULT_NEIGHBORHOOD_RADIUS","DEFAULT_POSITIVE_STD_DEV_MULTIPLIER","DEFAULT_NEGATIVE_STD_DEV_MULTIPLIER","DEFAULT_NEGATIVE_SEED_MARGIN","DEFAULT_NEGATIVE_SEEDS_COUNT","MAX_NEGATIVE_SEED_ATTEMPTS_MULTIPLIER","requestType","Enums","Prefetch","priority","range","lowEnd","highEnd","arr","nearestIndex","low","high","idx","getStackData","currentImageIdIndex","getCurrentImageIdIndex","getPromiseRemovedHandler","stackData","error","imageIdIndex","stackPrefetchData","indicesToRequest","clearFromImageIds","stack","imageIdSet","Set","requestDetails","has","additionalDetails","addToolState","getToolState","clamp","ColorbarCanvas","props","validateProps","colormap","imageRange","container","showFullPixelValueRange","_colormap","_imageRange","_voiRange","_showFullImageRange","_canvas","_createRootElement","appendTo","render","_setCanvasSize","showFullImageRange","appendChild","dispose","parentElement","removeChild","style","createElement","pointerEvents","boxSizing","isConnected","RGBPoints","rgbPoints","colorsCount","getColorPoint","offset","color","canvasContext","getContext","isHorizontal","maxValue","previousColorPoint","currentColorPoint","incRawPixelValue","rawPixelValue","tVoiRange","normColor","tColorRange","fillStyle","fillRect","DEFAULTS","FONT","COLOR","TICK_SIZE","TICK_WIDTH","TICK_LABEL_MARGIN","MAX_NUM_TICKS","TICKS_STEPS","ColorbarTicks","ticks","ticksProps","ticksStyle","rangeTextPosition","_font","font","_color","_tickSize","tickSize","_tickWidth","tickWidth","_labelMargin","labelMargin","_maxNumTicks","maxNumTicks","_rangeTextPosition","Right","_showFullPixelValueRange","_createCanvasElement","Number","parseInt","showFullRange","visible","display","_getTicks","roughStep","stepPower","pow","log10","roughtStepNormalized","step","scaleMax","ceil","scaleMin","ticksCount","_getLeftTickInfo","labelMeasure","labelPoint","tickPoints","start","_getRightTickInfo","_getTopTickInfo","_getBottomTickInfo","maxCanvasPixelValue","rangeWidth","clearRect","textBaseline","strokeStyle","lineWidth","tick","label","toString","measureText","tickInfo","Top","Left","tickStart","tickEnd","beginPath","moveTo","lineTo","fillText","stroke","isRangeValid","isColorbarSizeValid","areColorbarRangesEqual","areColorbarSizesEqual","isRangeTextPositionValid","colorbarWidth","colorbarHeight","ColorbarRangeTextPosition","Bottom","Widget","_containerResizeCallback","contentRect","contentBoxSize","inlineSize","blockSize","_containerSize","onContainerResize","_id","_rootElement","createRootElement","_containerResizeObserver","ResizeObserver","rootElement","resizeObserver","currentContainer","unobserve","observe","destroy","disconnect","containerSize","classList","add","Constants","Corners","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","vtkErrorMacro","m","DEFAULT_VALUES","viewportCorner","viewportSize","minPixelSize","maxPixelSize","parentRenderer","interactiveRenderer","extend","publicAPI","model","initialValues","arguments","obj","setGet","moveToProtected","classHierarchy","superClass","previousCameraInput","selfRenderer","updateViewport","onCameraChangedSub","onCameraModifiedSub","onAnimationSub","onEndAnimationSub","selfSubscription","onCameraModified","_interactor","isAnimating","updateMarkerOrientation","_onParentRendererChanged","computeViewport","parentRen","getCurrentRenderer","xMin","yMin","xMax","yMax","view","getView","canvasSize","getSize","viewXSize","viewYSize","getViewportSize","minViewSize","pixelSize","xFrac","yFrac","setViewport","currentCamera","getActiveCamera","getReferenceByName","focalPoint","activeCamera","setPosition","setFocalPoint","setViewUp","resetCamera","setEnabled","enabling","actor","ren","renderWindow","getRenderWindow","addRenderer","getNumberOfLayers","setNumberOfLayers","setLayer","setInteractive","addViewProp","setVisibility","onEvent","unsubscribe","onModified","onAnimation","onEndAnimation","getCanvas","removeViewProp","findPokedRenderer","removeRenderer","modified","setViewportCorner","corner","setViewportSize","sizeFactor","setActor","previousState","getRenderer","delete","vtkOrientationMarkerWidget","vtkOrientationMarkerWidget$1","newInstance","canvasToImageData","boundingBox","idata","setOrigin","setSpacing","setExtent","scalars","numberOfComponents","Uint8Array","buffer","setName","getPointData","setScalars","ImageHelper","imageToImageData","image","transform","flipX","flipY","ctx","translate","scale","drawImage","STYLES","default","defaultStyle","fontStyle","fontFamily","fontColor","fontSizeScale","res","faceColor","edgeThickness","edgeColor","resolution","xMinusFaceProperty","text","xPlusFaceProperty","yMinusFaceProperty","yPlusFaceProperty","zMinusFaceProperty","zPlusFaceProperty","lps","faceRotation","applyDefinitions","definitions","cubeActor","AnnotatedCubePresets","applyPreset","registerStylePreset","FACE_TO_INDEX","xPlus","xMinus","yPlus","yMinus","zPlus","zMinus","cubeSource","mapper","texture","updateFaceTexture","faceName","newProp","prop","ctxt","strokeRect","save","textSize","textAlign","restore","vtkImage","setInputData","updateAllFaceTextures","generate3DTextureCoordinates","setInputConnection","getOutputPort","setInterpolate","setDefaultStyle","setXPlusFaceProperty","setXMinusFaceProperty","setYPlusFaceProperty","setYMinusFaceProperty","setZPlusFaceProperty","setZMinusFaceProperty","setMapper","addTexture","vtkAnnotatedCubeActor","vtkAnnotatedCubeActor$1","Presets","appendCellData","dest","src","ptOffset","cellOffset","typedArray","currentIdx","offsetCellArray","outputPointsPrecision","DEFAULT","algo","requestData","inData","outData","numberOfInputs","getNumberOfInputPorts","output","numPts","pointType","ttype","firstType","numVerts","numLines","numStrips","numPolys","hasPtNormals","hasPtTCoords","hasPtScalars","ds","dsNumPts","getPoints","getNumberOfPoints","getVerts","getNumberOfValues","getLines","getStrips","getPolys","getDataType","ptD","getNormals","getTCoords","getScalars","SINGLE","FLOAT","DOUBLE","setNumberOfPoints","pointData","getData","vertData","lineData","stripData","polyData","newPtNormals","newPtTCoords","newPtScalars","lds","dsNormals","numberOfTuples","getName","dsTCoords","dsScalars","getNumberOfComponents","dsPD","ptNorms","ptTCoords","ptScalars","setPoints","setData","setNormals","setTCoords","vtkAppendPolyData","vtkAppendPolyData$1","capping","setGetArray","deleted","dataset","angle","xbot","numberOfPoints","cellArraySize","pointIdx","newTypedArray","cellLocation","polys","sin","buildFromRadian","rotateFromDirections","apply","vtkConeSource","vtkConeSource$1","initAngle","numberOfPolys","normalsData","normals","tcData","tcoords","nbot","ntop","xtop","tcbot","tctop","otherRadius","pt","botIdx","topIdx","vtkCylinderSource","vtkCylinderSource$1","tipResolution","tipRadius","tipLength","shaftResolution","shaftRadius","invert","cylinder","setResolution","setRadius","setHeight","setCenter","cylinderPD","getOutputData","cylinderPts","cylinderNormals","buildFromDegree","rotateZ","cone","conePD","conePts","append","addInputData","appendPD","appendPts","vtkArrowSource","vtkArrowSource$1","centerDataSet","bounds","getBounds","shiftDataset","axis","addColor","g","rgbArray","Uint8ClampedArray","recenter","xConfig","yConfig","zConfig","defaultValues","_mapper","update","currentConfig","xAxis","yAxis","zAxis","source","_debouncedUpdate","debounce","setXAxisColor","setXConfig","getXConfig","setYAxisColor","setYConfig","getYConfig","setZAxisColor","setZConfig","getZConfig","getXAxisColor","getYAxisColor","getZAxisColor","_onConfigChanged","_onXConfigChanged","_onYConfigChanged","_onZConfigChanged","vtkAxesActor","vtkAxesActor$1"],"sourceRoot":""}