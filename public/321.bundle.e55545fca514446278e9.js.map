{"version":3,"file":"321.bundle.e55545fca514446278e9.js","mappings":"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","sources":["webpack:///../../../extensions/cornerstone/src/contextProviders/ViewportActionCornersProvider.tsx","webpack:///../../../extensions/cornerstone/src/initWADOImageLoader.js","webpack:///../../../extensions/cornerstone/src/utils/callInputDialog.tsx","webpack:///../../../extensions/cornerstone/src/utils/getActiveViewportEnabledElement.ts","webpack:///../../../extensions/cornerstone/src/tools/CalibrationLineTool.ts","webpack:///../../../extensions/cornerstone/src/tools/OverlayPlaneModuleProvider.ts","webpack:///../../../extensions/cornerstone/src/tools/ImageOverlayViewerTool.tsx","webpack:///../../../extensions/cornerstone/src/initCornerstoneTools.js","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/constants/supportedTools.js","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/Length.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/utils/getHandlesFromPoints.js","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/utils/selection.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/utils/getDisplayUnit.js","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/Bidirectional.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/utils/getValueDisplayString.js","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/EllipticalROI.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/CircleROI.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/ArrowAnnotate.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/CobbAngle.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/Angle.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/PlanarFreehandROI.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/RectangleROI.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/SplineROI.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/LivewireContour.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/Probe.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/UltrasoundDirectional.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/measurementServiceMappingsFactory.ts","webpack:///../../../extensions/cornerstone/src/initMeasurementService.js","webpack:///../../../extensions/cornerstone/src/initCineService.ts","webpack:///../../../extensions/cornerstone/src/utils/interleaveCenterLoader.ts","webpack:///../../../extensions/cornerstone/src/utils/getInterleavedFrames.js","webpack:///../../../extensions/cornerstone/src/utils/nthLoader.ts","webpack:///../../../extensions/cornerstone/src/utils/interleave.js","webpack:///../../../extensions/cornerstone/src/utils/getNthFrames.js","webpack:///../../../extensions/cornerstone/src/utils/interleaveTopToBottom.ts","webpack:///../../../extensions/cornerstone/src/utils/findNearbyToolData.ts","webpack:///../../../extensions/cornerstone/src/initContextMenu.ts","webpack:///../../../extensions/cornerstone/src/initDoubleClick.ts","webpack:///../../../extensions/cornerstone/src/utils/initViewTiming.ts","webpack:///../../../extensions/cornerstone/src/utils/colormaps.js","webpack:///../../../extensions/cornerstone/src/init.tsx","webpack:///../../../extensions/cornerstone/src/utils/DicomFileUploader.ts","webpack:///../../../extensions/cornerstone/src/components/DicomUpload/DicomUploadProgressItem.tsx","webpack:///../../../extensions/cornerstone/src/components/DicomUpload/DicomUploadProgress.tsx","webpack:///../../../extensions/cornerstone/src/components/DicomUpload/DicomUpload.tsx","webpack:///../../../extensions/cornerstone/src/components/WindowLevelActionMenu/defaultWindowLevelPresets.ts","webpack:///../../../extensions/cornerstone/src/getCustomizationModule.ts","webpack:///../../../extensions/cornerstone/src/utils/CornerstoneViewportDownloadForm.tsx","webpack:///../../../extensions/cornerstone/src/utils/imageSliceSync/toggleImageSliceSync.ts","webpack:///../../../extensions/cornerstone/src/utils/toggleVOISliceSync.ts","webpack:///../../../extensions/cornerstone/src/commandsModule.ts","webpack:///../../../extensions/cornerstone/src/hps/fourUp.ts","webpack:///../../../extensions/cornerstone/src/hps/main3D.ts","webpack:///../../../extensions/cornerstone/src/hps/mpr.ts","webpack:///../../../extensions/cornerstone/src/hps/mprAnd3DVolumeViewport.ts","webpack:///../../../extensions/cornerstone/src/hps/only3D.ts","webpack:///../../../extensions/cornerstone/src/hps/primary3D.ts","webpack:///../../../extensions/cornerstone/src/hps/primaryAxial.ts","webpack:///../../../extensions/cornerstone/src/getHangingProtocolModule.ts","webpack:///../../../extensions/cornerstone/src/getToolbarModule.tsx","webpack:///../../../extensions/cornerstone/src/services/ToolGroupService/ToolGroupService.ts","webpack:///../../../extensions/cornerstone/src/services/ToolGroupService/index.js","webpack:///../../../extensions/cornerstone/src/services/SyncGroupService/SyncGroupService.ts","webpack:///../../../extensions/cornerstone/src/services/SyncGroupService/index.js","webpack:///../../../extensions/cornerstone/src/utils/transitions.ts","webpack:///../../../extensions/cornerstone/src/services/SegmentationService/SegmentationService.ts","webpack:///../../../extensions/cornerstone/src/services/SegmentationService/RTSTRUCT/mapROIContoursToRTStructData.ts","webpack:///../../../extensions/cornerstone/src/services/SegmentationService/index.js","webpack:///../../../extensions/cornerstone/src/utils/getCornerstoneViewportType.ts","webpack:///../../../extensions/cornerstone/src/services/CornerstoneCacheService/CornerstoneCacheService.ts","webpack:///../../../extensions/cornerstone/src/services/CornerstoneCacheService/index.js","webpack:///../../../extensions/cornerstone/src/services/ViewportService/constants.ts","webpack:///../../../extensions/cornerstone/src/services/ViewportService/Viewport.ts","webpack:///../../../extensions/cornerstone/src/utils/getCornerstoneOrientation.ts","webpack:///../../../extensions/cornerstone/src/utils/getCornerstoneBlendMode.ts","webpack:///../../../extensions/cornerstone/src/utils/JumpPresets.ts","webpack:///../../../extensions/cornerstone/src/services/ViewportService/CornerstoneViewportService.ts","webpack:///../../../extensions/cornerstone/src/types/Colorbar.ts","webpack:///../../../extensions/cornerstone/src/services/ColorbarService/ColorbarService.ts","webpack:///../../../extensions/cornerstone/src/services/ColorbarService/index.ts","webpack:///../../../extensions/cornerstone/src/utils/dicomLoaderService.js","webpack:///../../../extensions/cornerstone/src/id.js","webpack:///../../../extensions/cornerstone/src/components/ViewportWindowLevel/getViewportVolumeHistogram.ts","webpack:///../../../extensions/cornerstone/src/components/ViewportWindowLevel/ViewportWindowLevel.tsx","webpack:///../../../extensions/cornerstone/src/components/ActiveViewportWindowLevel/ActiveViewportWindowLevel.tsx","webpack:///../../../extensions/cornerstone/src/index.tsx","webpack:///../../../extensions/cornerstone/src/services/ViewportActionCornersService/ViewportActionCornersService.ts","webpack:///../../../extensions/cornerstone/src/state.ts","webpack:///../../../extensions/cornerstone/src/utils/measurementServiceMappings/utils/getSOPInstanceAttributes.js"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Types, ViewportActionCornersLocations } from '@ohif/ui';\nimport ViewportActionCornersService, {\n  ActionComponentInfo,\n} from '../services/ViewportActionCornersService/ViewportActionCornersService';\n\ninterface StateComponentInfo extends Types.ViewportActionCornersComponentInfo {\n  indexPriority: number;\n}\n\ntype State = Record<string, Record<ViewportActionCornersLocations, Array<StateComponentInfo>>>;\n\nconst DEFAULT_STATE: State = {\n  // default here is the viewportId of the default viewport\n  default: {\n    [ViewportActionCornersLocations.topLeft]: [],\n    [ViewportActionCornersLocations.topRight]: [],\n    [ViewportActionCornersLocations.bottomLeft]: [],\n    [ViewportActionCornersLocations.bottomRight]: [],\n  },\n  // [anotherViewportId]: { ..... }\n};\n\nexport const ViewportActionCornersContext = createContext(DEFAULT_STATE);\n\nexport function ViewportActionCornersProvider({ children, service }) {\n  const viewportActionCornersReducer = (state, action) => {\n    switch (action.type) {\n      case 'SET_ACTION_COMPONENT': {\n        const { viewportId, id, component, location, indexPriority = 0 } = action.payload;\n        // Get the components at the specified location of the specified viewport.\n        let locationComponents = state?.[viewportId]?.[location]\n          ? [...state[viewportId][location]]\n          : [];\n\n        // If the component (id) already exists at the location specified in the payload,\n        // then it must be replaced with the component in the payload so first\n        // remove it from that location.\n        const deletionIndex = locationComponents.findIndex(component => component.id === id);\n        if (deletionIndex !== -1) {\n          locationComponents = [\n            ...locationComponents.slice(0, deletionIndex),\n            ...locationComponents.slice(deletionIndex + 1),\n          ];\n        }\n\n        // Insert the component from the payload but\n        // do not insert an undefined or null component.\n        if (component) {\n          const insertionIndex = locationComponents.findIndex(\n            component => indexPriority <= component.indexPriority\n          );\n          locationComponents = [\n            ...locationComponents.slice(0, insertionIndex),\n            {\n              id,\n              component,\n              indexPriority,\n            },\n            ...locationComponents.slice(insertionIndex + 1),\n          ];\n        }\n\n        return {\n          ...state,\n          ...{\n            [viewportId]: {\n              ...state[viewportId],\n              [location]: locationComponents,\n            },\n          },\n        };\n      }\n      case 'CLEAR_ACTION_COMPONENTS': {\n        const viewportId = action.payload;\n        const nextState = { ...state };\n        delete nextState[viewportId];\n        return nextState;\n      }\n      default:\n        return { ...state };\n    }\n  };\n\n  const [viewportActionCornersState, dispatch] = useReducer(\n    viewportActionCornersReducer,\n    DEFAULT_STATE\n  );\n\n  const getState = useCallback(() => {\n    return viewportActionCornersState;\n  }, [viewportActionCornersState]);\n\n  const setComponent = useCallback(\n    (actionComponentInfo: ActionComponentInfo) => {\n      dispatch({ type: 'SET_ACTION_COMPONENT', payload: actionComponentInfo });\n    },\n    [dispatch]\n  );\n\n  const setComponents = useCallback(\n    (actionComponentInfos: Array<ActionComponentInfo>) => {\n      actionComponentInfos.forEach(actionComponentInfo =>\n        dispatch({ type: 'SET_ACTION_COMPONENT', payload: actionComponentInfo })\n      );\n    },\n    [dispatch]\n  );\n\n  const clear = useCallback(\n    (viewportId: string) => dispatch({ type: 'CLEAR_ACTION_COMPONENTS', payload: viewportId }),\n    [dispatch]\n  );\n  useEffect(() => {\n    if (service) {\n      service.setServiceImplementation({\n        getState,\n        setComponent,\n        setComponents,\n        clear,\n      });\n    }\n  }, [getState, service, setComponent, setComponents]);\n\n  // run many of the calls through the service itself since we want to publish events\n  const api = {\n    getState,\n    setComponent: props => service.setComponent(props),\n    setComponents: props => service.setComponents(props),\n    clear: props => service.clear(props),\n  };\n\n  const contextValue = useMemo(\n    () => [viewportActionCornersState, api],\n    [viewportActionCornersState, api]\n  );\n\n  return (\n    <ViewportActionCornersContext.Provider value={contextValue}>\n      {children}\n    </ViewportActionCornersContext.Provider>\n  );\n}\n\nViewportActionCornersProvider.propTypes = {\n  children: PropTypes.node,\n  service: PropTypes.instanceOf(ViewportActionCornersService).isRequired,\n};\n\nexport const useViewportActionCornersContext = () => useContext(ViewportActionCornersContext);\n","import * as cornerstone from '@cornerstonejs/core';\nimport { volumeLoader } from '@cornerstonejs/core';\nimport {\n  cornerstoneStreamingImageVolumeLoader,\n  cornerstoneStreamingDynamicImageVolumeLoader,\n} from '@cornerstonejs/streaming-image-volume-loader';\nimport dicomImageLoader, { webWorkerManager } from '@cornerstonejs/dicom-image-loader';\nimport dicomParser from 'dicom-parser';\nimport { errorHandler, utils } from '@ohif/core';\n\nconst { registerVolumeLoader } = volumeLoader;\n\nlet initialized = false;\n\nfunction initWebWorkers(appConfig) {\n  const config = {\n    maxWebWorkers: Math.min(\n      Math.max(navigator.hardwareConcurrency - 1, 1),\n      appConfig.maxNumberOfWebWorkers\n    ),\n    startWebWorkersOnDemand: true,\n    taskConfiguration: {\n      decodeTask: {\n        initializeCodecsOnStartup: false,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  if (!initialized) {\n    dicomImageLoader.webWorkerManager.initialize(config);\n    initialized = true;\n  }\n}\n\nexport default function initWADOImageLoader(\n  userAuthenticationService,\n  appConfig,\n  extensionManager\n) {\n  dicomImageLoader.external.cornerstone = cornerstone;\n  dicomImageLoader.external.dicomParser = dicomParser;\n\n  registerVolumeLoader('cornerstoneStreamingImageVolume', cornerstoneStreamingImageVolumeLoader);\n\n  registerVolumeLoader(\n    'cornerstoneStreamingDynamicImageVolume',\n    cornerstoneStreamingDynamicImageVolumeLoader\n  );\n\n  dicomImageLoader.configure({\n    decodeConfig: {\n      // !! IMPORTANT !!\n      // We should set this flag to false, since, by default @cornerstonejs/dicom-image-loader\n      // will convert everything to integers (to be able to work with cornerstone-2d).\n      // Until the default is set to true (which is the case for cornerstone3D),\n      // we should set this flag to false.\n      convertFloatPixelDataToInt: false,\n      use16BitDataType:\n        Boolean(appConfig.useNorm16Texture) || Boolean(appConfig.preferSizeOverAccuracy),\n    },\n    beforeSend: function (xhr) {\n      //TODO should be removed in the future and request emitted by DicomWebDataSource\n      const sourceConfig = extensionManager.getActiveDataSource()?.[0].getConfig() ?? {};\n      const headers = userAuthenticationService.getAuthorizationHeader();\n      const acceptHeader = utils.generateAcceptHeader(\n        sourceConfig.acceptHeader,\n        sourceConfig.requestTransferSyntaxUID,\n        sourceConfig.omitQuotationForMultipartRequest\n      );\n\n      const xhrRequestHeaders = {\n        Accept: acceptHeader,\n      };\n\n      if (headers) {\n        Object.assign(xhrRequestHeaders, headers);\n      }\n\n      return xhrRequestHeaders;\n    },\n    errorInterceptor: error => {\n      errorHandler.getHTTPErrorHandler(error);\n    },\n  });\n\n  initWebWorkers(appConfig);\n}\n\nexport function destroy() {\n  // Note: we don't want to call .terminate on the webWorkerManager since\n  // that resets the config\n  const webWorkers = webWorkerManager.webWorkers;\n  for (let i = 0; i < webWorkers.length; i++) {\n    webWorkers[i].worker.terminate();\n  }\n  webWorkers.length = 0;\n}\n","import React from 'react';\nimport { Input, Dialog, ButtonEnums, LabellingFlow } from '@ohif/ui';\n\n/**\n *\n * @param {*} data\n * @param {*} data.text\n * @param {*} data.label\n * @param {*} event\n * @param {*} callback\n * @param {*} isArrowAnnotateInputDialog\n * @param {*} dialogConfig\n * @param {string?} dialogConfig.dialogTitle - title of the input dialog\n * @param {string?} dialogConfig.inputLabel - show label above the input\n */\n\nfunction callInputDialog(\n  uiDialogService,\n  data,\n  callback,\n  isArrowAnnotateInputDialog = true,\n  dialogConfig: any = {}\n) {\n  const dialogId = 'dialog-enter-annotation';\n  const label = data ? (isArrowAnnotateInputDialog ? data.text : data.label) : '';\n  const {\n    dialogTitle = 'Annotation',\n    inputLabel = 'Enter your annotation',\n    validateFunc = value => true,\n  } = dialogConfig;\n\n  const onSubmitHandler = ({ action, value }) => {\n    switch (action.id) {\n      case 'save':\n        if (typeof validateFunc === 'function' && !validateFunc(value.label)) {\n          return;\n        }\n\n        callback(value.label, action.id);\n        break;\n      case 'cancel':\n        callback('', action.id);\n        break;\n    }\n    uiDialogService.dismiss({ id: dialogId });\n  };\n\n  if (uiDialogService) {\n    uiDialogService.create({\n      id: dialogId,\n      centralize: true,\n      isDraggable: false,\n      showOverlay: true,\n      content: Dialog,\n      contentProps: {\n        title: dialogTitle,\n        value: { label },\n        noCloseButton: true,\n        onClose: () => uiDialogService.dismiss({ id: dialogId }),\n        actions: [\n          { id: 'cancel', text: 'Cancel', type: ButtonEnums.type.secondary },\n          { id: 'save', text: 'Save', type: ButtonEnums.type.primary },\n        ],\n        onSubmit: onSubmitHandler,\n        body: ({ value, setValue }) => {\n          return (\n            <Input\n              autoFocus\n              className=\"border-primary-main bg-black\"\n              type=\"text\"\n              id=\"annotation\"\n              label={inputLabel}\n              labelClassName=\"text-white text-[14px] leading-[1.2]\"\n              value={value.label}\n              onChange={event => {\n                event.persist();\n                setValue(value => ({ ...value, label: event.target.value }));\n              }}\n              onKeyPress={event => {\n                if (event.key === 'Enter') {\n                  onSubmitHandler({ value, action: { id: 'save' } });\n                }\n              }}\n            />\n          );\n        },\n      },\n    });\n  }\n}\n\nexport function callLabelAutocompleteDialog(uiDialogService, callback, dialogConfig, labelConfig) {\n  const exclusive = labelConfig ? labelConfig.exclusive : false;\n  const dropDownItems = labelConfig ? labelConfig.items : [];\n\n  const { validateFunc = value => true } = dialogConfig;\n\n  const labellingDoneCallback = value => {\n    if (typeof value === 'string') {\n      if (typeof validateFunc === 'function' && !validateFunc(value)) {\n        return;\n      }\n      callback(value, 'save');\n    } else {\n      callback('', 'cancel');\n    }\n    uiDialogService.dismiss({ id: 'select-annotation' });\n  };\n\n  uiDialogService.create({\n    id: 'select-annotation',\n    centralize: true,\n    isDraggable: false,\n    showOverlay: true,\n    content: LabellingFlow,\n    contentProps: {\n      labellingDoneCallback: labellingDoneCallback,\n      measurementData: { label: '' },\n      componentClassName: {},\n      labelData: dropDownItems,\n      exclusive: exclusive,\n    },\n  });\n}\n\nexport function showLabelAnnotationPopup(measurement, uiDialogService, labelConfig) {\n  const exclusive = labelConfig ? labelConfig.exclusive : false;\n  const dropDownItems = labelConfig ? labelConfig.items : [];\n  return new Promise<Map<any, any>>((resolve, reject) => {\n    const labellingDoneCallback = value => {\n      uiDialogService.dismiss({ id: 'select-annotation' });\n      if (typeof value === 'string') {\n        measurement.label = value;\n      }\n      resolve(measurement);\n    };\n\n    uiDialogService.create({\n      id: 'select-annotation',\n      isDraggable: false,\n      showOverlay: true,\n      content: LabellingFlow,\n      defaultPosition: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2,\n      },\n      contentProps: {\n        labellingDoneCallback: labellingDoneCallback,\n        measurementData: measurement,\n        componentClassName: {},\n        labelData: dropDownItems,\n        exclusive: exclusive,\n      },\n    });\n  });\n}\n\nexport default callInputDialog;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport { IEnabledElement } from '@cornerstonejs/core/dist/esm/types';\n\nimport { getEnabledElement as OHIFgetEnabledElement } from '../state';\n\nexport default function getActiveViewportEnabledElement(viewportGridService): IEnabledElement {\n  const { activeViewportId } = viewportGridService.getState();\n  const { element } = OHIFgetEnabledElement(activeViewportId) || {};\n  const enabledElement = getEnabledElement(element);\n  return enabledElement;\n}\n","import { metaData } from '@cornerstonejs/core';\nimport { LengthTool, utilities } from '@cornerstonejs/tools';\nimport callInputDialog from '../utils/callInputDialog';\nimport getActiveViewportEnabledElement from '../utils/getActiveViewportEnabledElement';\n\nconst { calibrateImageSpacing } = utilities;\n\n/**\n * Calibration Line tool works almost the same as the\n */\nclass CalibrationLineTool extends LengthTool {\n  static toolName = 'CalibrationLine';\n\n  _renderingViewport: any;\n  _lengthToolRenderAnnotation = this.renderAnnotation;\n\n  renderAnnotation = (enabledElement, svgDrawingHelper) => {\n    const { viewport } = enabledElement;\n    this._renderingViewport = viewport;\n    return this._lengthToolRenderAnnotation(enabledElement, svgDrawingHelper);\n  };\n\n  _getTextLines(data, targetId) {\n    const [canvasPoint1, canvasPoint2] = data.handles.points.map(p =>\n      this._renderingViewport.worldToCanvas(p)\n    );\n    // for display, round to 2 decimal points\n    const lengthPx = Math.round(calculateLength2(canvasPoint1, canvasPoint2) * 100) / 100;\n\n    const textLines = [`${lengthPx}px`];\n\n    return textLines;\n  }\n}\n\nfunction calculateLength2(point1, point2) {\n  const dx = point1[0] - point2[0];\n  const dy = point1[1] - point2[1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction calculateLength3(pos1, pos2) {\n  const dx = pos1[0] - pos2[0];\n  const dy = pos1[1] - pos2[1];\n  const dz = pos1[2] - pos2[2];\n\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\nexport default CalibrationLineTool;\n\nexport function onCompletedCalibrationLine(servicesManager, csToolsEvent) {\n  const { uiDialogService, viewportGridService } = servicesManager.services;\n\n  // calculate length (mm) with the current Pixel Spacing\n  const annotationAddedEventDetail = csToolsEvent.detail;\n  const {\n    annotation: { metadata, data: annotationData },\n  } = annotationAddedEventDetail;\n  const { referencedImageId: imageId } = metadata;\n  const enabledElement = getActiveViewportEnabledElement(viewportGridService);\n  const { viewport } = enabledElement;\n\n  const length =\n    Math.round(\n      calculateLength3(annotationData.handles.points[0], annotationData.handles.points[1]) * 100\n    ) / 100;\n\n  const adjustCalibration = newLength => {\n    const spacingScale = newLength / length;\n\n    // trigger resize of the viewport to adjust the world/pixel mapping\n    calibrateImageSpacing(imageId, viewport.getRenderingEngine(), {\n      type: 'User',\n      scale: 1 / spacingScale,\n    });\n  };\n\n  return new Promise((resolve, reject) => {\n    if (!uiDialogService) {\n      reject('UIDialogService is not initiated');\n      return;\n    }\n\n    callInputDialog(\n      uiDialogService,\n      {\n        text: '',\n        label: `${length}`,\n      },\n      (value, id) => {\n        if (id === 'save') {\n          adjustCalibration(Number.parseFloat(value));\n          resolve(true);\n        } else {\n          reject('cancel');\n        }\n      },\n      false,\n      {\n        dialogTitle: 'Calibration',\n        inputLabel: 'Actual Physical distance (mm)',\n\n        // the input value must be a number\n        validateFunc: val => {\n          try {\n            const v = Number.parseFloat(val);\n            return !isNaN(v) && v !== 0.0;\n          } catch {\n            return false;\n          }\n        },\n      }\n    );\n  });\n}\n","import { metaData } from '@cornerstonejs/core';\n\nconst _cachedOverlayMetadata: Map<string, any[]> = new Map();\n\n/**\n * Image Overlay Viewer tool is not a traditional tool that requires user interactin.\n * But it is used to display Pixel Overlays. And it will provide toggling capability.\n *\n * The documentation for Overlay Plane Module of DICOM can be found in [C.9.2 of\n * Part-3 of DICOM standard](https://dicom.nema.org/medical/dicom/2018b/output/chtml/part03/sect_C.9.2.html)\n *\n * Image Overlay rendered by this tool can be toggled on and off using\n * toolGroup.setToolEnabled() and toolGroup.setToolDisabled()\n */\nconst OverlayPlaneModuleProvider = {\n  /** Adds the metadata for overlayPlaneModule */\n  add: (imageId, metadata) => {\n    if (_cachedOverlayMetadata.get(imageId) === metadata) {\n      // This is a no-op here as the tool re-caches the data\n      return;\n    }\n    _cachedOverlayMetadata.set(imageId, metadata);\n  },\n\n  /** Standard getter for metadata */\n  get: (type: string, query: string | string[]) => {\n    if (Array.isArray(query)) {\n      return;\n    }\n    if (type !== 'overlayPlaneModule') {\n      return;\n    }\n    return _cachedOverlayMetadata.get(query);\n  },\n};\n\n// Needs to be higher priority than default provider\nmetaData.addProvider(OverlayPlaneModuleProvider.get, 10_000);\n\nexport default OverlayPlaneModuleProvider;\n","import { VolumeViewport, metaData, utilities } from '@cornerstonejs/core';\nimport { IStackViewport, IVolumeViewport, Point3 } from '@cornerstonejs/core/dist/esm/types';\nimport { AnnotationDisplayTool, drawing } from '@cornerstonejs/tools';\nimport { guid, b64toBlob } from '@ohif/core/src/utils';\nimport OverlayPlaneModuleProvider from './OverlayPlaneModuleProvider';\n\ninterface CachedStat {\n  color: number[]; // [r, g, b, a]\n  overlays: {\n    // ...overlayPlaneModule\n    _id: string;\n    type: 'G' | 'R'; // G for Graphics, R for ROI\n    color?: number[]; // Rendered color [r, g, b, a]\n    dataUrl?: string; // Rendered image in Data URL expression\n  }[];\n}\n\n/**\n * Image Overlay Viewer tool is not a traditional tool that requires user interactin.\n * But it is used to display Pixel Overlays. And it will provide toggling capability.\n *\n * The documentation for Overlay Plane Module of DICOM can be found in [C.9.2 of\n * Part-3 of DICOM standard](https://dicom.nema.org/medical/dicom/2018b/output/chtml/part03/sect_C.9.2.html)\n *\n * Image Overlay rendered by this tool can be toggled on and off using\n * toolGroup.setToolEnabled() and toolGroup.setToolDisabled()\n */\nclass ImageOverlayViewerTool extends AnnotationDisplayTool {\n  static toolName = 'ImageOverlayViewer';\n\n  /**\n   * The overlay plane module provider add method is exposed here to be used\n   * when updating the overlay for this tool to use for displaying data.\n   */\n  public static addOverlayPlaneModule = OverlayPlaneModuleProvider.add;\n\n  constructor(\n    toolProps = {},\n    defaultToolProps = {\n      supportedInteractionTypes: [],\n      configuration: {\n        fillColor: [255, 127, 127, 255],\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  onSetToolDisabled = (): void => {};\n\n  protected getReferencedImageId(viewport: IStackViewport | IVolumeViewport): string {\n    if (viewport instanceof VolumeViewport) {\n      return;\n    }\n\n    const targetId = this.getTargetId(viewport);\n    return targetId.split('imageId:')[1];\n  }\n\n  renderAnnotation = (enabledElement, svgDrawingHelper) => {\n    const { viewport } = enabledElement;\n\n    const imageId = this.getReferencedImageId(viewport);\n    if (!imageId) {\n      return;\n    }\n\n    const overlayMetadata = metaData.get('overlayPlaneModule', imageId);\n    const overlays = overlayMetadata?.overlays;\n\n    // no overlays\n    if (!overlays?.length) {\n      return;\n    }\n\n    // Fix the x, y positions\n    overlays.forEach(overlay => {\n      overlay.x ||= 0;\n      overlay.y ||= 0;\n    });\n\n    // Will clear cached stat data when the overlay data changes\n    ImageOverlayViewerTool.addOverlayPlaneModule(imageId, overlayMetadata);\n\n    this._getCachedStat(imageId, overlayMetadata, this.configuration.fillColor).then(cachedStat => {\n      cachedStat.overlays.forEach(overlay => {\n        this._renderOverlay(enabledElement, svgDrawingHelper, overlay);\n      });\n    });\n\n    return true;\n  };\n\n  /**\n   * Render to DOM\n   *\n   * @param enabledElement\n   * @param svgDrawingHelper\n   * @param overlayData\n   * @returns\n   */\n  private _renderOverlay(enabledElement, svgDrawingHelper, overlayData) {\n    const { viewport } = enabledElement;\n    const imageId = this.getReferencedImageId(viewport);\n    if (!imageId) {\n      return;\n    }\n\n    // Decide the rendering position of the overlay image on the current canvas\n    const { _id, columns: width, rows: height, x, y } = overlayData;\n    const overlayTopLeftWorldPos = utilities.imageToWorldCoords(imageId, [\n      x - 1, // Remind that top-left corner's (x, y) is be (1, 1)\n      y - 1,\n    ]);\n    const overlayTopLeftOnCanvas = viewport.worldToCanvas(overlayTopLeftWorldPos);\n    const overlayBottomRightWorldPos = utilities.imageToWorldCoords(imageId, [width, height]);\n    const overlayBottomRightOnCanvas = viewport.worldToCanvas(overlayBottomRightWorldPos);\n\n    // add image to the annotations svg layer\n    const svgns = 'http://www.w3.org/2000/svg';\n    const svgNodeHash = `image-overlay-${_id}`;\n    const existingImageElement = svgDrawingHelper.getSvgNode(svgNodeHash);\n\n    const attributes = {\n      'data-id': svgNodeHash,\n      width: overlayBottomRightOnCanvas[0] - overlayTopLeftOnCanvas[0],\n      height: overlayBottomRightOnCanvas[1] - overlayTopLeftOnCanvas[1],\n      x: overlayTopLeftOnCanvas[0],\n      y: overlayTopLeftOnCanvas[1],\n      href: overlayData.dataUrl,\n    };\n\n    if (\n      isNaN(attributes.x) ||\n      isNaN(attributes.y) ||\n      isNaN(attributes.width) ||\n      isNaN(attributes.height)\n    ) {\n      console.warn('Invalid rendering attribute for image overlay', attributes['data-id']);\n      return false;\n    }\n\n    if (existingImageElement) {\n      drawing.setAttributesIfNecessary(attributes, existingImageElement);\n      svgDrawingHelper.setNodeTouched(svgNodeHash);\n    } else {\n      const newImageElement = document.createElementNS(svgns, 'image');\n      drawing.setNewAttributesIfValid(attributes, newImageElement);\n      svgDrawingHelper.appendNode(newImageElement, svgNodeHash);\n    }\n    return true;\n  }\n\n  private async _getCachedStat(\n    imageId: string,\n    overlayMetadata,\n    color: number[]\n  ): Promise<CachedStat> {\n    const missingOverlay = overlayMetadata.overlays.filter(\n      overlay => overlay.pixelData && !overlay.dataUrl\n    );\n    if (missingOverlay.length === 0) {\n      return overlayMetadata;\n    }\n\n    const overlays = await Promise.all(\n      overlayMetadata.overlays\n        .filter(overlay => overlay.pixelData)\n        .map(async (overlay, idx) => {\n          let pixelData = null;\n          if (overlay.pixelData.Value) {\n            pixelData = overlay.pixelData.Value;\n          } else if (overlay.pixelData instanceof Array) {\n            pixelData = overlay.pixelData[0];\n          } else if (overlay.pixelData.retrieveBulkData) {\n            pixelData = await overlay.pixelData.retrieveBulkData();\n          } else if (overlay.pixelData.InlineBinary) {\n            const blob = b64toBlob(overlay.pixelData.InlineBinary);\n            const arrayBuffer = await blob.arrayBuffer();\n            pixelData = arrayBuffer;\n          }\n\n          if (!pixelData) {\n            return;\n          }\n\n          const dataUrl = this._renderOverlayToDataUrl(\n            { width: overlay.columns, height: overlay.rows },\n            overlay.color || color,\n            pixelData\n          );\n\n          return {\n            ...overlay,\n            _id: guid(),\n            dataUrl, // this will be a data url expression of the rendered image\n            color,\n          };\n        })\n    );\n    overlayMetadata.overlays = overlays;\n\n    return overlayMetadata;\n  }\n\n  /**\n   * compare two RGBA expression of colors.\n   *\n   * @param color1\n   * @param color2\n   * @returns\n   */\n  private _isSameColor(color1: number[], color2: number[]) {\n    return (\n      color1 &&\n      color2 &&\n      color1[0] === color2[0] &&\n      color1[1] === color2[1] &&\n      color1[2] === color2[2] &&\n      color1[3] === color2[3]\n    );\n  }\n\n  /**\n   * pixelData of overlayPlane module is an array of bits corresponding\n   * to each of the underlying pixels of the image.\n   * Let's create pixel data from bit array of overlay data\n   *\n   * @param pixelDataRaw\n   * @param color\n   * @returns\n   */\n  private _renderOverlayToDataUrl({ width, height }, color, pixelDataRaw) {\n    const pixelDataView = new DataView(pixelDataRaw);\n    const totalBits = width * height;\n\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, width, height); // make it transparent\n    ctx.globalCompositeOperation = 'copy';\n\n    const imageData = ctx.getImageData(0, 0, width, height);\n    const data = imageData.data;\n    for (let i = 0, bitIdx = 0, byteIdx = 0; i < totalBits; i++) {\n      if (pixelDataView.getUint8(byteIdx) & (1 << bitIdx)) {\n        data[i * 4] = color[0];\n        data[i * 4 + 1] = color[1];\n        data[i * 4 + 2] = color[2];\n        data[i * 4 + 3] = color[3];\n      }\n\n      // next bit, byte\n      if (bitIdx >= 7) {\n        bitIdx = 0;\n        byteIdx++;\n      } else {\n        bitIdx++;\n      }\n    }\n    ctx.putImageData(imageData, 0, 0);\n\n    return canvas.toDataURL();\n  }\n}\n\nexport default ImageOverlayViewerTool;\n","import {\n  PanTool,\n  WindowLevelTool,\n  StackScrollTool,\n  StackScrollMouseWheelTool,\n  ZoomTool,\n  VolumeRotateMouseWheelTool,\n  MIPJumpToClickTool,\n  LengthTool,\n  RectangleROITool,\n  RectangleROIThresholdTool,\n  EllipticalROITool,\n  CircleROITool,\n  BidirectionalTool,\n  ArrowAnnotateTool,\n  DragProbeTool,\n  ProbeTool,\n  AngleTool,\n  CobbAngleTool,\n  MagnifyTool,\n  CrosshairsTool,\n  SegmentationDisplayTool,\n  RectangleScissorsTool,\n  SphereScissorsTool,\n  CircleScissorsTool,\n  BrushTool,\n  PaintFillTool,\n  init,\n  addTool,\n  annotation,\n  ReferenceLinesTool,\n  TrackballRotateTool,\n  AdvancedMagnifyTool,\n  UltrasoundDirectionalTool,\n  PlanarFreehandROITool,\n  SplineROITool,\n  LivewireContourTool,\n  OrientationMarkerTool,\n} from '@cornerstonejs/tools';\n\nimport CalibrationLineTool from './tools/CalibrationLineTool';\nimport ImageOverlayViewerTool from './tools/ImageOverlayViewerTool';\n\nexport default function initCornerstoneTools(configuration = {}) {\n  CrosshairsTool.isAnnotation = false;\n  ReferenceLinesTool.isAnnotation = false;\n  AdvancedMagnifyTool.isAnnotation = false;\n\n  init(configuration);\n  addTool(PanTool);\n  addTool(WindowLevelTool);\n  addTool(StackScrollMouseWheelTool);\n  addTool(StackScrollTool);\n  addTool(ZoomTool);\n  addTool(ProbeTool);\n  addTool(VolumeRotateMouseWheelTool);\n  addTool(MIPJumpToClickTool);\n  addTool(LengthTool);\n  addTool(RectangleROITool);\n  addTool(RectangleROIThresholdTool);\n  addTool(EllipticalROITool);\n  addTool(CircleROITool);\n  addTool(BidirectionalTool);\n  addTool(ArrowAnnotateTool);\n  addTool(DragProbeTool);\n  addTool(AngleTool);\n  addTool(CobbAngleTool);\n  addTool(MagnifyTool);\n  addTool(CrosshairsTool);\n  addTool(SegmentationDisplayTool);\n  addTool(RectangleScissorsTool);\n  addTool(SphereScissorsTool);\n  addTool(CircleScissorsTool);\n  addTool(BrushTool);\n  addTool(PaintFillTool);\n  addTool(ReferenceLinesTool);\n  addTool(CalibrationLineTool);\n  addTool(TrackballRotateTool);\n  addTool(ImageOverlayViewerTool);\n  addTool(AdvancedMagnifyTool);\n  addTool(UltrasoundDirectionalTool);\n  addTool(PlanarFreehandROITool);\n  addTool(SplineROITool);\n  addTool(LivewireContourTool);\n  addTool(OrientationMarkerTool);\n\n  // Modify annotation tools to use dashed lines on SR\n  const annotationStyle = {\n    textBoxFontSize: '15px',\n    lineWidth: '1.5',\n  };\n\n  const defaultStyles = annotation.config.style.getDefaultToolStyles();\n  annotation.config.style.setDefaultToolStyles({\n    global: {\n      ...defaultStyles.global,\n      ...annotationStyle,\n    },\n  });\n}\n\nconst toolNames = {\n  Pan: PanTool.toolName,\n  ArrowAnnotate: ArrowAnnotateTool.toolName,\n  WindowLevel: WindowLevelTool.toolName,\n  StackScroll: StackScrollTool.toolName,\n  StackScrollMouseWheel: StackScrollMouseWheelTool.toolName,\n  Zoom: ZoomTool.toolName,\n  VolumeRotateMouseWheel: VolumeRotateMouseWheelTool.toolName,\n  MipJumpToClick: MIPJumpToClickTool.toolName,\n  Length: LengthTool.toolName,\n  DragProbe: DragProbeTool.toolName,\n  Probe: ProbeTool.toolName,\n  RectangleROI: RectangleROITool.toolName,\n  RectangleROIThreshold: RectangleROIThresholdTool.toolName,\n  EllipticalROI: EllipticalROITool.toolName,\n  CircleROI: CircleROITool.toolName,\n  Bidirectional: BidirectionalTool.toolName,\n  Angle: AngleTool.toolName,\n  CobbAngle: CobbAngleTool.toolName,\n  Magnify: MagnifyTool.toolName,\n  Crosshairs: CrosshairsTool.toolName,\n  SegmentationDisplay: SegmentationDisplayTool.toolName,\n  Brush: BrushTool.toolName,\n  PaintFill: PaintFillTool.toolName,\n  ReferenceLines: ReferenceLinesTool.toolName,\n  CalibrationLine: CalibrationLineTool.toolName,\n  TrackballRotateTool: TrackballRotateTool.toolName,\n  CircleScissors: CircleScissorsTool.toolName,\n  RectangleScissors: RectangleScissorsTool.toolName,\n  SphereScissors: SphereScissorsTool.toolName,\n  ImageOverlayViewer: ImageOverlayViewerTool.toolName,\n  AdvancedMagnify: AdvancedMagnifyTool.toolName,\n  UltrasoundDirectional: UltrasoundDirectionalTool.toolName,\n  SplineROI: SplineROITool.toolName,\n  LivewireContour: LivewireContourTool.toolName,\n  PlanarFreehandROI: PlanarFreehandROITool.toolName,\n  OrientationMarker: OrientationMarkerTool.toolName,\n};\n\nexport { toolNames };\n","export default [\n  'Length',\n  'EllipticalROI',\n  'CircleROI',\n  'Bidirectional',\n  'ArrowAnnotate',\n  'Angle',\n  'CobbAngle',\n  'Probe',\n  'RectangleROI',\n  'PlanarFreehandROI',\n  'SplineROI',\n  'LivewireContour',\n  'Probe',\n  'UltrasoundDirectionalTool',\n];\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\n\nconst Length = {\n  toAnnotation: measurement => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} cornerstone Cornerstone event data\n   * @return {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    displaySetService,\n    cornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Length tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } = getSOPInstanceAttributes(\n      referencedImageId,\n      cornerstoneViewportService,\n      viewportId\n    );\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points, textBox } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, displaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n    const getReport = () =>\n      _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      textBox,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport,\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, displaySetService) {\n  const { metadata, data } = annotation;\n  const { cachedStats } = data;\n  const { referencedImageId } = metadata;\n  const targets = Object.keys(cachedStats);\n\n  if (!targets.length) {\n    return [];\n  }\n\n  const annotations = [];\n  Object.keys(cachedStats).forEach(targetId => {\n    const targetStats = cachedStats[targetId];\n\n    if (!referencedImageId) {\n      throw new Error('Non-acquisition plane measurement mapping not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    const displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      frameNumber\n    );\n\n    const { SeriesNumber } = displaySet;\n    const { length, unit = 'mm' } = targetStats;\n\n    annotations.push({\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      SeriesNumber,\n      frameNumber,\n      unit,\n      length,\n    });\n  });\n\n  return annotations;\n}\n\n/*\nThis function is used to convert the measurement data to a format that is\nsuitable for the report generation (e.g. for the csv report). The report\nreturns a list of columns and corresponding values.\n*/\nfunction _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService) {\n  const columns = [];\n  const values = [];\n\n  // Add Type\n  columns.push('AnnotationType');\n  values.push('Cornerstone:Length');\n\n  mappedAnnotations.forEach(annotation => {\n    const { length, unit } = annotation;\n    columns.push(`Length`);\n    values.push(length);\n    columns.push('Unit');\n    values.push(unit);\n  });\n\n  if (FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(FrameOfReferenceUID);\n  }\n\n  if (points) {\n    columns.push('points');\n    // points has the form of [[x1, y1, z1], [x2, y2, z2], ...]\n    // convert it to string of [[x1 y1 z1];[x2 y2 z2];...]\n    // so that it can be used in the csv report\n    values.push(points.map(p => p.join(' ')).join(';'));\n  }\n\n  return {\n    columns,\n    values,\n  };\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations || !mappedAnnotations.length) {\n    return '';\n  }\n\n  const displayText = [];\n\n  // Area is the same for all series\n  const { length, SeriesNumber, SOPInstanceUID, frameNumber, unit } = mappedAnnotations[0];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n\n  if (length === null || length === undefined) {\n    return displayText;\n  }\n  const roundedLength = utils.roundNumber(length, 2);\n  displayText.push(`${roundedLength} ${unit} (S: ${SeriesNumber}${instanceText}${frameText})`);\n\n  return displayText;\n}\n\nexport default Length;\n","export default function getHandlesFromPoints(points) {\n  if (points.longAxis && points.shortAxis) {\n    const handles = {};\n    handles.start = points.longAxis[0];\n    handles.end = points.longAxis[1];\n    handles.perpendicularStart = points.longAxis[0];\n    handles.perpendicularEnd = points.longAxis[1];\n    return handles;\n  }\n\n  return points\n    .map((p, i) => (i % 10 === 0 ? { start: p } : { end: p }))\n    .reduce((obj, item) => Object.assign(obj, { ...item }), {});\n}\n","import { annotation as cs3dToolAnnotationUtils } from '@cornerstonejs/tools';\n\n/**\n * Check whether an annotation from imaging library is selected or not.\n * @param {string} annotationUID uid of imaging library annotation\n * @returns boolean\n */\nfunction isAnnotationSelected(annotationUID: string): boolean {\n  return cs3dToolAnnotationUtils.selection.isAnnotationSelected(annotationUID);\n}\n\n/**\n * Change an annotation from imaging library's selected property.\n * @param annotationUID - uid of imaging library annotation\n * @param selected - new value for selected\n */\nfunction setAnnotationSelected(annotationUID: string, selected: boolean): void {\n  const isCurrentSelected = isAnnotationSelected(annotationUID);\n  // branch cut, avoid invoking imaging library unnecessarily.\n  if (isCurrentSelected !== selected) {\n    cs3dToolAnnotationUtils.selection.setAnnotationSelected(annotationUID, selected);\n  }\n}\n\nfunction getFirstAnnotationSelected(element) {\n  const [selectedAnnotationUID] = cs3dToolAnnotationUtils.selection.getAnnotationsSelected() || [];\n\n  if (selectedAnnotationUID) {\n    return cs3dToolAnnotationUtils.state.getAnnotation(selectedAnnotationUID);\n  }\n}\n\nexport { isAnnotationSelected, setAnnotationSelected, getFirstAnnotationSelected };\n","const getDisplayUnit = unit => (unit == null ? '' : unit);\n\nexport default getDisplayUnit;\n","import { annotation } from '@cornerstonejs/tools';\n\nimport SUPPORTED_TOOLS from './constants/supportedTools';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\nimport { getDisplayUnit } from './utils';\n\nconst Bidirectional = {\n  toAnnotation: measurement => {},\n  toMeasurement: (\n    csToolsEventDetail,\n    displaySetService,\n    cornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Length tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } = getSOPInstanceAttributes(\n      referencedImageId,\n      cornerstoneViewportService,\n      viewportId\n    );\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points, textBox } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, displaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n    const getReport = () =>\n      _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      textBox,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport,\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, displaySetService) {\n  const { metadata, data } = annotation;\n  const { cachedStats } = data;\n  const { referencedImageId, referencedSeriesInstanceUID } = metadata;\n  const targets = Object.keys(cachedStats);\n\n  if (!targets.length) {\n    return [];\n  }\n\n  const annotations = [];\n  Object.keys(cachedStats).forEach(targetId => {\n    const targetStats = cachedStats[targetId];\n\n    if (!referencedImageId) {\n      throw new Error('Non-acquisition plane measurement mapping not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    const displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      frameNumber\n    );\n\n    const { SeriesNumber } = displaySet;\n    const { length, width, unit } = targetStats;\n\n    annotations.push({\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      SeriesNumber,\n      frameNumber,\n      unit,\n      length,\n      width,\n    });\n  });\n\n  return annotations;\n}\n\n/*\nThis function is used to convert the measurement data to a format that is\nsuitable for the report generation (e.g. for the csv report). The report\nreturns a list of columns and corresponding values.\n*/\nfunction _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService) {\n  const columns = [];\n  const values = [];\n\n  // Add Type\n  columns.push('AnnotationType');\n  values.push('Cornerstone:Bidirectional');\n\n  mappedAnnotations.forEach(annotation => {\n    const { length, width, unit } = annotation;\n    columns.push(`Length`, `Width`, 'Unit');\n    values.push(length, width, unit);\n  });\n\n  if (FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(FrameOfReferenceUID);\n  }\n\n  if (points) {\n    columns.push('points');\n    // points has the form of [[x1, y1, z1], [x2, y2, z2], ...]\n    // convert it to string of [[x1 y1 z1];[x2 y2 z2];...]\n    // so that it can be used in the csv report\n    values.push(points.map(p => p.join(' ')).join(';'));\n  }\n\n  return {\n    columns,\n    values,\n  };\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations || !mappedAnnotations.length) {\n    return '';\n  }\n\n  const displayText = [];\n\n  // Area is the same for all series\n  const { length, width, unit, SeriesNumber, SOPInstanceUID, frameNumber } = mappedAnnotations[0];\n  const roundedLength = utils.roundNumber(length, 2);\n  const roundedWidth = utils.roundNumber(width, 2);\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n\n  displayText.push(\n    `L: ${roundedLength} ${getDisplayUnit(unit)} (S: ${SeriesNumber}${instanceText}${frameText})`\n  );\n  displayText.push(`W: ${roundedWidth} ${getDisplayUnit(unit)}`);\n\n  return displayText;\n}\n\nexport default Bidirectional;\n","import { utils } from '@ohif/core';\nimport getDisplayUnit from './getDisplayUnit';\n\nexport const getStatisticDisplayString = (numbers, unit, key) => {\n  if (Array.isArray(numbers) && numbers.length > 0) {\n    const results = numbers.map(number => utils.roundNumber(number, 2));\n    return `${key.charAt(0).toUpperCase() + key.slice(1)}: ${results.join(', ')} <small>${getDisplayUnit(unit)}</small>`;\n  }\n\n  const result = utils.roundNumber(numbers, 2);\n  return `${key.charAt(0).toUpperCase() + key.slice(1)}: ${result} <small>${getDisplayUnit(unit)}</small>`;\n};\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport { getDisplayUnit } from './utils';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\nimport { getStatisticDisplayString } from './utils/getValueDisplayString';\n\nconst EllipticalROI = {\n  toAnnotation: measurement => {},\n  toMeasurement: (\n    csToolsEventDetail,\n    displaySetService,\n    cornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Length tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } = getSOPInstanceAttributes(\n      referencedImageId,\n      cornerstoneViewportService,\n      viewportId\n    );\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points, textBox } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, displaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n    const getReport = () =>\n      _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      textBox,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport,\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, displaySetService) {\n  const { metadata, data } = annotation;\n  const { cachedStats } = data;\n  const { referencedImageId } = metadata;\n  const targets = Object.keys(cachedStats);\n\n  if (!targets.length) {\n    return [];\n  }\n\n  const annotations = [];\n  Object.keys(cachedStats).forEach(targetId => {\n    const targetStats = cachedStats[targetId];\n\n    if (!referencedImageId) {\n      // Todo: Non-acquisition plane measurement mapping not supported yet\n      throw new Error('Non-acquisition plane measurement mapping not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    const displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      frameNumber\n    );\n\n    const { SeriesNumber } = displaySet;\n    const { mean, stdDev, max, area, Modality, areaUnit, modalityUnit } = targetStats;\n\n    annotations.push({\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      SeriesNumber,\n      frameNumber,\n      Modality,\n      unit: modalityUnit,\n      areaUnit,\n      mean,\n      stdDev,\n      max,\n      area,\n    });\n  });\n\n  return annotations;\n}\n\n/*\nThis function is used to convert the measurement data to a format that is\nsuitable for the report generation (e.g. for the csv report). The report\nreturns a list of columns and corresponding values.\n*/\nfunction _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService) {\n  const columns = [];\n  const values = [];\n\n  // Add Type\n  columns.push('AnnotationType');\n  values.push('Cornerstone:EllipticalROI');\n\n  mappedAnnotations.forEach(annotation => {\n    const { mean, stdDev, max, area, unit, areaUnit } = annotation;\n\n    if (!mean || !unit || !max || !area) {\n      return;\n    }\n\n    columns.push(`max (${unit})`, `mean (${unit})`, `std (${unit})`, 'Area', 'Unit');\n    values.push(max, mean, stdDev, area, areaUnit);\n  });\n\n  if (FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(FrameOfReferenceUID);\n  }\n\n  if (points) {\n    columns.push('points');\n    // points has the form of [[x1, y1, z1], [x2, y2, z2], ...]\n    // convert it to string of [[x1 y1 z1];[x2 y2 z2];...]\n    // so that it can be used in the csv report\n    values.push(points.map(p => p.join(' ')).join(';'));\n  }\n\n  return {\n    columns,\n    values,\n  };\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations || !mappedAnnotations.length) {\n    return '';\n  }\n\n  const displayText = [];\n\n  // Area is the same for all series\n  const { area, SOPInstanceUID, frameNumber, areaUnit } = mappedAnnotations[0];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n\n  const roundedArea = utils.roundNumber(area, 2);\n  displayText.push(`${roundedArea} ${getDisplayUnit(areaUnit)}`);\n\n  // Todo: we need a better UI for displaying all these information\n  mappedAnnotations.forEach(mappedAnnotation => {\n    const { unit, max, SeriesNumber } = mappedAnnotation;\n\n    const maxStr = getStatisticDisplayString(max, unit, 'max');\n    const str = `${maxStr}(S:${SeriesNumber}${instanceText}${frameText})`;\n    if (!displayText.includes(str)) {\n      displayText.push(str);\n    }\n  });\n\n  return displayText;\n}\n\nexport default EllipticalROI;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport { getDisplayUnit } from './utils';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\nimport { getStatisticDisplayString } from './utils/getValueDisplayString';\n\nconst CircleROI = {\n  toAnnotation: measurement => {},\n  toMeasurement: (\n    csToolsEventDetail,\n    DisplaySetService,\n    CornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Length tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } = getSOPInstanceAttributes(\n      referencedImageId,\n      CornerstoneViewportService,\n      viewportId\n    );\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = DisplaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points, textBox } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, DisplaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n    const getReport = () =>\n      _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      textBox,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport,\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, DisplaySetService) {\n  const { metadata, data } = annotation;\n  const { cachedStats } = data;\n  const { referencedImageId } = metadata;\n  const targets = Object.keys(cachedStats);\n\n  if (!targets.length) {\n    return [];\n  }\n\n  const annotations = [];\n  Object.keys(cachedStats).forEach(targetId => {\n    const targetStats = cachedStats[targetId];\n\n    if (!referencedImageId) {\n      // Todo: Non-acquisition plane measurement mapping not supported yet\n      throw new Error('Non-acquisition plane measurement mapping not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    const displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      frameNumber\n    );\n\n    const { SeriesNumber } = displaySet;\n    const { mean, stdDev, max, area, Modality, areaUnit, modalityUnit } = targetStats;\n\n    annotations.push({\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      SeriesNumber,\n      frameNumber,\n      Modality,\n      unit: modalityUnit,\n      mean,\n      stdDev,\n      max,\n      area,\n      areaUnit,\n    });\n  });\n\n  return annotations;\n}\n\n/*\nThis function is used to convert the measurement data to a format that is\nsuitable for the report generation (e.g. for the csv report). The report\nreturns a list of columns and corresponding values.\n*/\nfunction _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService) {\n  const columns = [];\n  const values = [];\n\n  // Add Type\n  columns.push('AnnotationType');\n  values.push('Cornerstone:CircleROI');\n\n  mappedAnnotations.forEach(annotation => {\n    const { mean, stdDev, max, area, unit, areaUnit } = annotation;\n\n    if (!mean || !unit || !max || !area) {\n      return;\n    }\n\n    columns.push(`max (${unit})`, `mean (${unit})`, `std (${unit})`, 'Area', 'Unit');\n    values.push(max, mean, stdDev, area, areaUnit);\n  });\n\n  if (FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(FrameOfReferenceUID);\n  }\n\n  if (points) {\n    columns.push('points');\n    // points has the form of [[x1, y1, z1], [x2, y2, z2], ...]\n    // convert it to string of [[x1 y1 z1];[x2 y2 z2];...]\n    // so that it can be used in the csv report\n    values.push(points.map(p => p.join(' ')).join(';'));\n  }\n\n  return {\n    columns,\n    values,\n  };\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations || !mappedAnnotations.length) {\n    return '';\n  }\n\n  const displayText = [];\n\n  // Area is the same for all series\n  const { area, SOPInstanceUID, frameNumber, areaUnit } = mappedAnnotations[0];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n\n  // Area sometimes becomes undefined if `preventHandleOutsideImage` is off.\n  const roundedArea = utils.roundNumber(area || 0, 2);\n  displayText.push(`${roundedArea} ${getDisplayUnit(areaUnit)}`);\n\n  // Todo: we need a better UI for displaying all these information\n  mappedAnnotations.forEach(mappedAnnotation => {\n    const { unit, max, SeriesNumber } = mappedAnnotation;\n\n    const maxStr = getStatisticDisplayString(max, unit, 'max');\n\n    const str = `${maxStr}(S:${SeriesNumber}${instanceText}${frameText})`;\n    if (!displayText.includes(str)) {\n      displayText.push(str);\n    }\n  });\n\n  return displayText;\n}\n\nexport default CircleROI;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\n\nconst Length = {\n  toAnnotation: measurement => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} cornerstone Cornerstone event data\n   * @return {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    displaySetService,\n    cornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Length tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } = getSOPInstanceAttributes(\n      referencedImageId,\n      cornerstoneViewportService,\n      viewportId\n    );\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points, textBox } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, displaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      textBox,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.text,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport: () => {\n        throw new Error('Not implemented');\n      },\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, displaySetService) {\n  const { metadata, data } = annotation;\n  const { text } = data;\n  const { referencedImageId } = metadata;\n\n  const annotations = [];\n\n  const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n    getSOPInstanceAttributes(referencedImageId);\n\n  const displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n    SOPInstanceUID,\n    SeriesInstanceUID,\n    frameNumber\n  );\n\n  const { SeriesNumber } = displaySet;\n\n  annotations.push({\n    SeriesInstanceUID,\n    SOPInstanceUID,\n    SeriesNumber,\n    frameNumber,\n    text,\n  });\n\n  return annotations;\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations) {\n    return '';\n  }\n\n  const displayText = [];\n\n  // Area is the same for all series\n  const { SeriesNumber, SOPInstanceUID, frameNumber } = mappedAnnotations[0];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n\n  displayText.push(`(S: ${SeriesNumber}${instanceText}${frameText})`);\n\n  return displayText;\n}\n\nexport default Length;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport { getDisplayUnit } from './utils';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\n\nconst CobbAngle = {\n  toAnnotation: measurement => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} cornerstone Cornerstone event data\n   * @return {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    displaySetService,\n    CornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Cobb Angle tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } = getSOPInstanceAttributes(\n      referencedImageId,\n      CornerstoneViewportService,\n      viewportId\n    );\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points, textBox } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, displaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n    const getReport = () =>\n      _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      textBox,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations?.[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport,\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, DisplaySetService) {\n  const { metadata, data } = annotation;\n  const { cachedStats } = data;\n  const { referencedImageId } = metadata;\n  const targets = Object.keys(cachedStats);\n\n  if (!targets.length) {\n    return;\n  }\n\n  const annotations = [];\n  Object.keys(cachedStats).forEach(targetId => {\n    const targetStats = cachedStats[targetId];\n\n    if (!referencedImageId) {\n      throw new Error('Non-acquisition plane measurement mapping not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    const displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      frameNumber\n    );\n\n    const { SeriesNumber } = displaySet;\n    const { angle } = targetStats;\n    const unit = '\\u00B0';\n\n    annotations.push({\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      SeriesNumber,\n      frameNumber,\n      unit,\n      angle,\n    });\n  });\n\n  return annotations;\n}\n\n/*\nThis function is used to convert the measurement data to a format that is\nsuitable for the report generation (e.g. for the csv report). The report\nreturns a list of columns and corresponding values.\n*/\nfunction _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService) {\n  const columns = [];\n  const values = [];\n\n  // Add Type\n  columns.push('AnnotationType');\n  values.push('Cornerstone:CobbAngle');\n\n  mappedAnnotations.forEach(annotation => {\n    const { angle, unit } = annotation;\n    columns.push(`Angle (${unit})`);\n    values.push(angle);\n  });\n\n  if (FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(FrameOfReferenceUID);\n  }\n\n  if (points) {\n    columns.push('points');\n    // points has the form of [[x1, y1, z1], [x2, y2, z2], ...]\n    // convert it to string of [[x1 y1 z1];[x2 y2 z2];...]\n    // so that it can be used in the csv report\n    values.push(points.map(p => p.join(' ')).join(';'));\n  }\n\n  return {\n    columns,\n    values,\n  };\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations || !mappedAnnotations.length) {\n    return '';\n  }\n\n  const displayText = [];\n\n  // Area is the same for all series\n  const { angle, unit, SeriesNumber, SOPInstanceUID, frameNumber } = mappedAnnotations[0];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n  if (angle === undefined) {\n    return displayText;\n  }\n  const roundedAngle = utils.roundNumber(angle, 2);\n  displayText.push(\n    `${roundedAngle} ${getDisplayUnit(unit)} (S: ${SeriesNumber}${instanceText}${frameText})`\n  );\n\n  return displayText;\n}\n\nexport default CobbAngle;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport { getDisplayUnit } from './utils';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\n\nconst Angle = {\n  toAnnotation: measurement => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} cornerstone Cornerstone event data\n   * @return {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    displaySetService,\n    CornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Length tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } = getSOPInstanceAttributes(\n      referencedImageId,\n      CornerstoneViewportService,\n      viewportId\n    );\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points, textBox } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, displaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n    const getReport = () =>\n      _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      textBox,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations?.[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport,\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, DisplaySetService) {\n  const { metadata, data } = annotation;\n  const { cachedStats } = data;\n  const { referencedImageId } = metadata;\n  const targets = Object.keys(cachedStats);\n\n  if (!targets.length) {\n    return;\n  }\n\n  const annotations = [];\n  Object.keys(cachedStats).forEach(targetId => {\n    const targetStats = cachedStats[targetId];\n\n    if (!referencedImageId) {\n      throw new Error('Non-acquisition plane measurement mapping not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    const displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      frameNumber\n    );\n\n    const { SeriesNumber } = displaySet;\n    const { angle } = targetStats;\n    const unit = '\\u00B0';\n\n    annotations.push({\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      SeriesNumber,\n      frameNumber,\n      unit,\n      angle,\n    });\n  });\n\n  return annotations;\n}\n\n/*\nThis function is used to convert the measurement data to a format that is\nsuitable for the report generation (e.g. for the csv report). The report\nreturns a list of columns and corresponding values.\n*/\nfunction _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService) {\n  const columns = [];\n  const values = [];\n\n  // Add Type\n  columns.push('AnnotationType');\n  values.push('Cornerstone:Angle');\n\n  mappedAnnotations.forEach(annotation => {\n    const { angle, unit } = annotation;\n    columns.push(`Angle (${unit})`);\n    values.push(angle);\n  });\n\n  if (FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(FrameOfReferenceUID);\n  }\n\n  if (points) {\n    columns.push('points');\n    // points has the form of [[x1, y1, z1], [x2, y2, z2], ...]\n    // convert it to string of [[x1 y1 z1];[x2 y2 z2];...]\n    // so that it can be used in the csv report\n    values.push(points.map(p => p.join(' ')).join(';'));\n  }\n\n  return {\n    columns,\n    values,\n  };\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations || !mappedAnnotations.length) {\n    return '';\n  }\n\n  const displayText = [];\n\n  // Area is the same for all series\n  const { angle, unit, SeriesNumber, SOPInstanceUID, frameNumber } = mappedAnnotations[0];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n  if (angle === undefined) {\n    return displayText;\n  }\n  const roundedAngle = utils.roundNumber(angle, 2);\n  displayText.push(\n    `${roundedAngle} ${getDisplayUnit(unit)} (S: ${SeriesNumber}${instanceText}${frameText})`\n  );\n\n  return displayText;\n}\n\nexport default Angle;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { getDisplayUnit } from './utils';\nimport { utils } from '@ohif/core';\n\n/**\n * Represents a mapping utility for Planar Freehand ROI measurements.\n */\nconst PlanarFreehandROI = {\n  toAnnotation: measurement => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} csToolsEventDetail Cornerstone event data\n   * @param {DisplaySetService} DisplaySetService Service for managing display sets\n   * @param {CornerstoneViewportService} CornerstoneViewportService Service for managing viewports\n   * @param {Function} getValueTypeFromToolType Function to get value type from tool type\n   * @returns {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    DisplaySetService,\n    CornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('PlanarFreehandROI tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n    if (!validToolType) {\n      throw new Error(`Tool ${toolName} not supported`);\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber, StudyInstanceUID } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    let displaySet;\n    if (SOPInstanceUID) {\n      displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = DisplaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points: data.contour.polyline,\n      textBox: data.handles.textBox,\n      metadata,\n      frameNumber,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: getDisplayText(annotation, displaySet, customizationService),\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport: () => getColumnValueReport(annotation, customizationService),\n    };\n  },\n};\n\n/**\n * This function is used to convert the measurement data to a\n * format that is suitable for report generation (e.g. for the csv report).\n * The report returns a list of columns and corresponding values.\n *\n * @param {object} annotation\n * @returns {object} Report's content from this tool\n */\nfunction getColumnValueReport(annotation, customizationService) {\n  const { PlanarFreehandROI } = customizationService.get('cornerstone.measurements');\n  const { report } = PlanarFreehandROI;\n  const columns = [];\n  const values = [];\n\n  /** Add type */\n  columns.push('AnnotationType');\n  values.push('Cornerstone:PlanarFreehandROI');\n\n  /** Add cachedStats */\n  const { metadata, data } = annotation;\n  const stats = data.cachedStats[`imageId:${metadata.referencedImageId}`];\n\n  report.forEach(({ name, value }) => {\n    columns.push(name);\n    stats[value] ? values.push(stats[value]) : values.push('not available');\n  });\n\n  /** Add FOR */\n  if (metadata.FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(metadata.FrameOfReferenceUID);\n  }\n\n  /** Add points */\n  if (data.contour.polyline) {\n    columns.push('points');\n    values.push(data.contour.polyline.map(p => p.join(' ')).join(';'));\n  }\n\n  return { columns, values };\n}\n\n/**\n * Retrieves the display text for an annotation in a display set.\n *\n * @param {Object} annotation - The annotation object.\n * @param {Object} displaySet - The display set object.\n * @returns {string[]} - An array of display text.\n */\nfunction getDisplayText(annotation, displaySet, customizationService) {\n  const { PlanarFreehandROI } = customizationService.get('cornerstone.measurements');\n  const { displayText } = PlanarFreehandROI;\n\n  const { metadata, data } = annotation;\n\n  if (!data.cachedStats || !data.cachedStats[`imageId:${metadata.referencedImageId}`]) {\n    return [];\n  }\n\n  const { SOPInstanceUID, frameNumber } = getSOPInstanceAttributes(metadata.referencedImageId);\n\n  const displayTextArray = [];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n\n  const { SeriesNumber } = displaySet;\n  if (SeriesNumber) {\n    displayTextArray.push(`S: ${SeriesNumber}${instanceText}${frameText}`);\n  }\n\n  const stats = data.cachedStats[`imageId:${metadata.referencedImageId}`];\n\n  const roundValues = values => {\n    if (Array.isArray(values)) {\n      return values.map(value => {\n        if (isNaN(value)) {\n          return value;\n        }\n        return utils.roundNumber(value);\n      });\n    }\n    return isNaN(values) ? values : utils.roundNumber(values);\n  };\n\n  const findUnitForValue = (displayTextItems, value) =>\n    displayTextItems.find(({ type, for: filter }) => type === 'unit' && filter.includes(value))\n      ?.value;\n\n  const formatDisplayText = (displayName, result, unit) =>\n    `${displayName}: ${Array.isArray(result) ? roundValues(result).join(', ') : roundValues(result)} ${unit}`;\n\n  displayText.forEach(({ displayName, value, type }) => {\n    if (type === 'value') {\n      const result = stats[value];\n      const unit = stats[findUnitForValue(displayText, value)] || '';\n      displayTextArray.push(formatDisplayText(displayName, result, unit));\n    }\n  });\n\n  return displayTextArray;\n}\n\nexport default PlanarFreehandROI;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport { getDisplayUnit } from './utils';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\nimport { getStatisticDisplayString } from './utils/getValueDisplayString';\n\nconst RectangleROI = {\n  toAnnotation: measurement => {},\n  toMeasurement: (\n    csToolsEventDetail,\n    DisplaySetService,\n    CornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Rectangle ROI tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } = getSOPInstanceAttributes(\n      referencedImageId,\n      CornerstoneViewportService,\n      viewportId\n    );\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = DisplaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points, textBox } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, DisplaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n    const getReport = () =>\n      _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      textBox,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport,\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, DisplaySetService) {\n  const { metadata, data } = annotation;\n  const { cachedStats } = data;\n  const { referencedImageId } = metadata;\n  const targets = Object.keys(cachedStats);\n\n  if (!targets.length) {\n    return [];\n  }\n\n  const annotations = [];\n  Object.keys(cachedStats).forEach(targetId => {\n    const targetStats = cachedStats[targetId];\n\n    if (!referencedImageId) {\n      // Todo: Non-acquisition plane measurement mapping not supported yet\n      throw new Error('Non-acquisition plane measurement mapping not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    const displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      frameNumber\n    );\n\n    const { SeriesNumber } = displaySet;\n    const { mean, stdDev, max, area, Modality, modalityUnit, areaUnit } = targetStats;\n\n    annotations.push({\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      SeriesNumber,\n      frameNumber,\n      Modality,\n      unit: modalityUnit,\n      mean,\n      stdDev,\n      metadata,\n      max,\n      area,\n      areaUnit,\n    });\n  });\n\n  return annotations;\n}\n\n/*\nThis function is used to convert the measurement data to a format that is\nsuitable for the report generation (e.g. for the csv report). The report\nreturns a list of columns and corresponding values.\n*/\nfunction _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService) {\n  const columns = [];\n  const values = [];\n\n  // Add Type\n  columns.push('AnnotationType');\n  values.push('Cornerstone:RectangleROI');\n\n  mappedAnnotations.forEach(annotation => {\n    const { mean, stdDev, max, area, unit, areaUnit } = annotation;\n\n    if (!mean || !unit || !max || !area) {\n      return;\n    }\n\n    columns.push(`Maximum`, `Mean`, `Std Dev`, 'Pixel Unit', `Area`, 'Unit');\n    values.push(max, mean, stdDev, unit, area, areaUnit);\n  });\n\n  if (FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(FrameOfReferenceUID);\n  }\n\n  if (points) {\n    columns.push('points');\n    // points has the form of [[x1, y1, z1], [x2, y2, z2], ...]\n    // convert it to string of [[x1 y1 z1];[x2 y2 z2];...]\n    // so that it can be used in the csv report\n    values.push(points.map(p => p.join(' ')).join(';'));\n  }\n\n  return {\n    columns,\n    values,\n  };\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations || !mappedAnnotations.length) {\n    return '';\n  }\n\n  const displayText = [];\n\n  // Area is the same for all series\n  const { area, SOPInstanceUID, frameNumber, areaUnit } = mappedAnnotations[0];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n\n  // Area sometimes becomes undefined if `preventHandleOutsideImage` is off.\n  const roundedArea = utils.roundNumber(area || 0, 2);\n  displayText.push(`${roundedArea} ${getDisplayUnit(areaUnit)}`);\n\n  // Todo: we need a better UI for displaying all these information\n  mappedAnnotations.forEach(mappedAnnotation => {\n    const { unit, max, SeriesNumber } = mappedAnnotation;\n\n    const maxStr = getStatisticDisplayString(max, unit, 'max');\n\n    const str = `${maxStr}(S:${SeriesNumber}${instanceText}${frameText})`;\n    if (!displayText.includes(str)) {\n      displayText.push(str);\n    }\n  });\n\n  return displayText;\n}\n\nexport default RectangleROI;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\n\n/**\n * Represents a mapping utility for Spline ROI measurements.\n */\nconst SplineROI = {\n  toAnnotation: measurement => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} csToolsEventDetail Cornerstone event data\n   * @param {DisplaySetService} DisplaySetService Service for managing display sets\n   * @param {CornerstoneViewportService} CornerstoneViewportService Service for managing viewports\n   * @param {Function} getValueTypeFromToolType Function to get value type from tool type\n   * @returns {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    DisplaySetService,\n    CornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('SplineROI tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n    if (!validToolType) {\n      throw new Error(`Tool ${toolName} not supported`);\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber, StudyInstanceUID } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    let displaySet;\n    if (SOPInstanceUID) {\n      displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = DisplaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points: data.contour.polyline,\n      textBox: data.handles.textBox,\n      metadata,\n      frameNumber,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: getDisplayText(annotation, displaySet, customizationService),\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport: () => getColumnValueReport(annotation, customizationService),\n    };\n  },\n};\n\n/**\n * This function is used to convert the measurement data to a\n * format that is suitable for report generation (e.g. for the csv report).\n * The report returns a list of columns and corresponding values.\n *\n * @param {object} annotation\n * @returns {object} Report's content from this tool\n */\nfunction getColumnValueReport(annotation, customizationService) {\n  const { SplineROI } = customizationService.get('cornerstone.measurements');\n  const { report } = SplineROI;\n  const columns = [];\n  const values = [];\n\n  /** Add type */\n  columns.push('AnnotationType');\n  values.push('Cornerstone:SplineROI');\n\n  /** Add cachedStats */\n  const { metadata, data } = annotation;\n  const stats = data.cachedStats[`imageId:${metadata.referencedImageId}`];\n\n  report.forEach(({ name, value }) => {\n    columns.push(name);\n    stats[value] ? values.push(stats[value]) : values.push('not available');\n  });\n\n  /** Add FOR */\n  if (metadata.FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(metadata.FrameOfReferenceUID);\n  }\n\n  /** Add points */\n  if (data.contour.polyline) {\n    /**\n     * Points has the form of [[x1, y1, z1], [x2, y2, z2], ...]\n     * convert it to string of [[x1 y1 z1];[x2 y2 z2];...]\n     * so that it can be used in the CSV report\n     */\n    columns.push('points');\n    values.push(data.contour.polyline.map(p => p.join(' ')).join(';'));\n  }\n\n  return { columns, values };\n}\n\n/**\n * Retrieves the display text for an annotation in a display set.\n *\n * @param {Object} annotation - The annotation object.\n * @param {Object} displaySet - The display set object.\n * @returns {string[]} - An array of display text.\n */\nfunction getDisplayText(annotation, displaySet, customizationService) {\n  const { SplineROI } = customizationService.get('cornerstone.measurements');\n  const { displayText } = SplineROI;\n  const { metadata, data } = annotation;\n\n  if (!data.cachedStats || !data.cachedStats[`imageId:${metadata.referencedImageId}`]) {\n    return [];\n  }\n  const { SOPInstanceUID, frameNumber } = getSOPInstanceAttributes(metadata.referencedImageId);\n\n  const displayTextArray = [];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n\n  const { SeriesNumber } = displaySet;\n  if (SeriesNumber) {\n    displayTextArray.push(`S: ${SeriesNumber}${instanceText}${frameText}`);\n  }\n\n  const stats = data.cachedStats[`imageId:${metadata.referencedImageId}`];\n\n  const roundValues = values => {\n    if (Array.isArray(values)) {\n      return values.map(value => {\n        if (isNaN(value)) {\n          return value;\n        }\n        return utils.roundNumber(value);\n      });\n    }\n    return isNaN(values) ? values : utils.roundNumber(values);\n  };\n\n  const findUnitForValue = (displayTextItems, value) =>\n    displayTextItems.find(({ type, for: filter }) => type === 'unit' && filter.includes(value))\n      ?.value;\n\n  const formatDisplayText = (displayName, result, unit) =>\n    `${displayName}: ${Array.isArray(result) ? roundValues(result).join(', ') : roundValues(result)} ${unit}`;\n\n  displayText.forEach(({ displayName, value, type }) => {\n    if (type === 'value') {\n      const result = stats[value];\n      const unit = stats[findUnitForValue(displayText, value)] || '';\n      displayTextArray.push(formatDisplayText(displayName, result, unit));\n    }\n  });\n\n  return displayTextArray;\n}\n\nexport default SplineROI;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { getDisplayUnit } from './utils';\nimport { utils } from '@ohif/core';\n\n/**\n * Represents a mapping utility for Livewire measurements.\n */\nconst LivewireContour = {\n  toAnnotation: measurement => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} csToolsEventDetail Cornerstone event data\n   * @param {DisplaySetService} DisplaySetService Service for managing display sets\n   * @param {CornerstoneViewportService} CornerstoneViewportService Service for managing viewports\n   * @param {Function} getValueTypeFromToolType Function to get value type from tool type\n   * @returns {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    DisplaySetService,\n    CornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Livewire tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n    if (!validToolType) {\n      throw new Error(`Tool ${toolName} not supported`);\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber, StudyInstanceUID } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    let displaySet;\n    if (SOPInstanceUID) {\n      displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = DisplaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points: data.contour.polyline,\n      textBox: data.handles.textBox,\n      metadata,\n      frameNumber,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: getDisplayText(annotation, displaySet, customizationService),\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport: () => getColumnValueReport(annotation, customizationService),\n    };\n  },\n};\n\n/**\n * This function is used to convert the measurement data to a\n * format that is suitable for report generation (e.g. for the csv report).\n * The report returns a list of columns and corresponding values.\n *\n * @param {object} annotation\n * @returns {object} Report's content from this tool\n */\nfunction getColumnValueReport(annotation, customizationService) {\n  const columns = [];\n  const values = [];\n\n  /** Add type */\n  columns.push('AnnotationType');\n  values.push('Cornerstone:Livewire');\n\n  /** Add cachedStats */\n  const { metadata, data } = annotation;\n\n  /** Add FOR */\n  if (metadata.FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(metadata.FrameOfReferenceUID);\n  }\n\n  /** Add points */\n  if (data.contour.polyline) {\n    /**\n     * Points has the form of [[x1, y1, z1], [x2, y2, z2], ...]\n     * convert it to string of [[x1 y1 z1];[x2 y2 z2];...]\n     * so that it can be used in the CSV report\n     */\n    columns.push('points');\n    values.push(data.contour.polyline.map(p => p.join(' ')).join(';'));\n  }\n\n  return { columns, values };\n}\n\n/**\n * Retrieves the display text for an annotation in a display set.\n *\n * @param {Object} annotation - The annotation object.\n * @param {Object} displaySet - The display set object.\n * @returns {string[]} - An array of display text.\n */\nfunction getDisplayText(annotation, displaySet, customizationService) {\n  const { metadata, data } = annotation;\n\n  if (!data.cachedStats || !data.cachedStats[`imageId:${metadata.referencedImageId}`]) {\n    return [];\n  }\n\n  const { area, areaUnit } = data.cachedStats[`imageId:${metadata.referencedImageId}`];\n\n  const { SOPInstanceUID, frameNumber } = getSOPInstanceAttributes(metadata.referencedImageId);\n\n  const displayText = [];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n\n  const { SeriesNumber } = displaySet;\n  if (SeriesNumber) {\n    displayText.push(`S: ${SeriesNumber}${instanceText}${frameText}`);\n  }\n\n  if (area) {\n    /**\n     * Add Area\n     * Area sometimes becomes undefined if `preventHandleOutsideImage` is off\n     */\n    const roundedArea = utils.roundNumber(area || 0, 2);\n    displayText.push(`${roundedArea} ${getDisplayUnit(areaUnit)}`);\n  }\n\n  return displayText;\n}\n\nexport default LivewireContour;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport { getDisplayUnit } from './utils';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\n\nconst Probe = {\n  toAnnotation: measurement => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} cornerstone Cornerstone event data\n   * @return {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    displaySetService,\n    CornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Length tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, displaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n    const getReport = () =>\n      _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations?.[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport,\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, DisplaySetService) {\n  const { metadata, data } = annotation;\n  const { cachedStats } = data;\n  const { referencedImageId } = metadata;\n  const targets = Object.keys(cachedStats);\n\n  if (!targets.length) {\n    return;\n  }\n\n  const annotations = [];\n  Object.keys(cachedStats).forEach(targetId => {\n    const targetStats = cachedStats[targetId];\n\n    if (!referencedImageId) {\n      throw new Error('Non-acquisition plane measurement mapping not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    const displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      frameNumber\n    );\n\n    const { SeriesNumber } = displaySet;\n    const { value } = targetStats;\n    const unit = 'HU';\n\n    annotations.push({\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      SeriesNumber,\n      frameNumber,\n      unit,\n      value,\n    });\n  });\n\n  return annotations;\n}\n\n/*\nThis function is used to convert the measurement data to a format that is\nsuitable for the report generation (e.g. for the csv report). The report\nreturns a list of columns and corresponding values.\n*/\nfunction _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService) {\n  const columns = [];\n  const values = [];\n\n  // Add Type\n  columns.push('AnnotationType');\n  values.push('Cornerstone:Probe');\n\n  mappedAnnotations.forEach(annotation => {\n    const { value, unit } = annotation;\n    columns.push(`Probe (${unit})`);\n    values.push(value);\n  });\n\n  if (FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(FrameOfReferenceUID);\n  }\n\n  if (points) {\n    columns.push('points');\n    values.push(points.map(p => p.join(' ')).join(';'));\n  }\n\n  return {\n    columns,\n    values,\n  };\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations || !mappedAnnotations.length) {\n    return '';\n  }\n\n  const displayText = [];\n\n  const { value, unit, SeriesNumber, SOPInstanceUID, frameNumber } = mappedAnnotations[0];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n  if (value === undefined) {\n    return displayText;\n  }\n  const roundedValue = utils.roundNumber(value, 2);\n  displayText.push(\n    `${roundedValue} ${getDisplayUnit(unit)} (S: ${SeriesNumber}${instanceText}${frameText})`\n  );\n\n  return displayText;\n}\n\nexport default Probe;\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport { getDisplayUnit } from './utils';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\nimport { utils } from '@ohif/core';\n\nconst UltrasoundDirectional = {\n  toAnnotation: measurement => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} cornerstone Cornerstone event data\n   * @return {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    displaySetService,\n    CornerstoneViewportService,\n    getValueTypeFromToolType,\n    customizationService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Length tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, StudyInstanceUID } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { points } = data.handles;\n\n    const mappedAnnotations = getMappedAnnotations(annotation, displaySetService);\n\n    const displayText = getDisplayText(mappedAnnotations, displaySet, customizationService);\n    const getReport = () =>\n      _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService);\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      points,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      frameNumber: mappedAnnotations?.[0]?.frameNumber || 1,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: data.label,\n      displayText: displayText,\n      data: data.cachedStats,\n      type: getValueTypeFromToolType(toolName),\n      getReport,\n    };\n  },\n};\n\nfunction getMappedAnnotations(annotation, DisplaySetService) {\n  const { metadata, data } = annotation;\n  const { cachedStats } = data;\n  const { referencedImageId } = metadata;\n  const targets = Object.keys(cachedStats);\n\n  if (!targets.length) {\n    return;\n  }\n\n  const annotations = [];\n  Object.keys(cachedStats).forEach(targetId => {\n    const targetStats = cachedStats[targetId];\n\n    if (!referencedImageId) {\n      throw new Error('Non-acquisition plane measurement mapping not supported');\n    }\n\n    const { SOPInstanceUID, SeriesInstanceUID, frameNumber } =\n      getSOPInstanceAttributes(referencedImageId);\n\n    const displaySet = DisplaySetService.getDisplaySetForSOPInstanceUID(\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      frameNumber\n    );\n\n    const { SeriesNumber } = displaySet;\n    const { xValues, yValues, units, isUnitless, isHorizontal } = targetStats;\n\n    annotations.push({\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      SeriesNumber,\n      frameNumber,\n      xValues,\n      yValues,\n      units,\n      isUnitless,\n      isHorizontal,\n    });\n  });\n\n  return annotations;\n}\n\n/*\nThis function is used to convert the measurement data to a format that is\nsuitable for the report generation (e.g. for the csv report). The report\nreturns a list of columns and corresponding values.\n*/\nfunction _getReport(mappedAnnotations, points, FrameOfReferenceUID, customizationService) {\n  const columns = [];\n  const values = [];\n\n  // Add Type\n  columns.push('AnnotationType');\n  values.push('Cornerstone:UltrasoundDirectional');\n\n  mappedAnnotations.forEach(annotation => {\n    const { xValues, yValues, units, isUnitless } = annotation;\n    if (isUnitless) {\n      columns.push('Length' + units[0]);\n      values.push(utils.roundNumber(xValues[0], 2));\n    } else {\n      const dist1 = Math.abs(xValues[1] - xValues[0]);\n      const dist2 = Math.abs(yValues[1] - yValues[0]);\n      columns.push('Time' + units[0]);\n      values.push(utils.roundNumber(dist1, 2));\n      columns.push('Length' + units[1]);\n      values.push(utils.roundNumber(dist2, 2));\n    }\n  });\n\n  if (FrameOfReferenceUID) {\n    columns.push('FrameOfReferenceUID');\n    values.push(FrameOfReferenceUID);\n  }\n\n  if (points) {\n    columns.push('points');\n    values.push(points.map(p => p.join(' ')).join(';'));\n  }\n\n  return {\n    columns,\n    values,\n  };\n}\n\nfunction getDisplayText(mappedAnnotations, displaySet, customizationService) {\n  if (!mappedAnnotations || !mappedAnnotations.length) {\n    return '';\n  }\n\n  const displayText = [];\n\n  const { xValues, yValues, units, isUnitless, SeriesNumber, SOPInstanceUID, frameNumber } =\n    mappedAnnotations[0];\n\n  const instance = displaySet.images.find(image => image.SOPInstanceUID === SOPInstanceUID);\n\n  let InstanceNumber;\n  if (instance) {\n    InstanceNumber = instance.InstanceNumber;\n  }\n\n  const instanceText = InstanceNumber ? ` I: ${InstanceNumber}` : '';\n  const frameText = displaySet.isMultiFrame ? ` F: ${frameNumber}` : '';\n  const seriesText = `(S: ${SeriesNumber}${instanceText}${frameText})`;\n\n  if (xValues === undefined || yValues === undefined) {\n    return displayText;\n  }\n\n  if (isUnitless) {\n    displayText.push(`${utils.roundNumber(xValues[0], 2)} ${units[0]} ${seriesText}`);\n  } else {\n    const dist1 = Math.abs(xValues[1] - xValues[0]);\n    const dist2 = Math.abs(yValues[1] - yValues[0]);\n    displayText.push(`${utils.roundNumber(dist1)} ${units[0]} ${seriesText}`);\n    displayText.push(`${utils.roundNumber(dist2)} ${units[1]} ${seriesText}`);\n  }\n\n  return displayText;\n}\n\nexport default UltrasoundDirectional;\n","import { MeasurementService } from '@ohif/core';\nimport Length from './Length';\nimport Bidirectional from './Bidirectional';\nimport EllipticalROI from './EllipticalROI';\nimport CircleROI from './CircleROI';\nimport ArrowAnnotate from './ArrowAnnotate';\nimport CobbAngle from './CobbAngle';\nimport Angle from './Angle';\nimport PlanarFreehandROI from './PlanarFreehandROI';\nimport RectangleROI from './RectangleROI';\nimport SplineROI from './SplineROI';\nimport LivewireContour from './LivewireContour';\nimport Probe from './Probe';\nimport UltrasoundDirectional from './UltrasoundDirectional';\n\nconst measurementServiceMappingsFactory = (\n  measurementService: MeasurementService,\n  displaySetService,\n  cornerstoneViewportService,\n  customizationService\n) => {\n  /**\n   * Maps measurement service format object to cornerstone annotation object.\n   *\n   * @param measurement The measurement instance\n   * @param definition The source definition\n   * @return Cornerstone annotation data\n   */\n\n  const _getValueTypeFromToolType = toolType => {\n    const { POLYLINE, ELLIPSE, CIRCLE, RECTANGLE, BIDIRECTIONAL, POINT, ANGLE } =\n      MeasurementService.VALUE_TYPES;\n\n    // TODO -> I get why this was attempted, but its not nearly flexible enough.\n    // A single measurement may have an ellipse + a bidirectional measurement, for instances.\n    // You can't define a bidirectional tool as a single type..\n    const TOOL_TYPE_TO_VALUE_TYPE = {\n      Length: POLYLINE,\n      EllipticalROI: ELLIPSE,\n      CircleROI: CIRCLE,\n      RectangleROI: RECTANGLE,\n      PlanarFreehandROI: POLYLINE,\n      Bidirectional: BIDIRECTIONAL,\n      ArrowAnnotate: POINT,\n      CobbAngle: ANGLE,\n      Angle: ANGLE,\n      SplineROI: POLYLINE,\n      LivewireContour: POLYLINE,\n      Probe: POINT,\n      UltrasoundDirectional: POLYLINE,\n    };\n\n    return TOOL_TYPE_TO_VALUE_TYPE[toolType];\n  };\n\n  const factories = {\n    Length: {\n      toAnnotation: Length.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        Length.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.POLYLINE,\n          points: 2,\n        },\n      ],\n    },\n    Bidirectional: {\n      toAnnotation: Bidirectional.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        Bidirectional.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        // TODO -> We should eventually do something like shortAxis + longAxis,\n        // But its still a little unclear how these automatic interpretations will work.\n        {\n          valueType: MeasurementService.VALUE_TYPES.POLYLINE,\n          points: 2,\n        },\n        {\n          valueType: MeasurementService.VALUE_TYPES.POLYLINE,\n          points: 2,\n        },\n      ],\n    },\n\n    EllipticalROI: {\n      toAnnotation: EllipticalROI.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        EllipticalROI.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.ELLIPSE,\n        },\n      ],\n    },\n\n    CircleROI: {\n      toAnnotation: CircleROI.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        CircleROI.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.CIRCLE,\n        },\n      ],\n    },\n\n    RectangleROI: {\n      toAnnotation: RectangleROI.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        RectangleROI.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.POLYLINE,\n        },\n      ],\n    },\n\n    PlanarFreehandROI: {\n      toAnnotation: PlanarFreehandROI.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        PlanarFreehandROI.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.POLYLINE,\n        },\n      ],\n    },\n\n    SplineROI: {\n      toAnnotation: SplineROI.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        SplineROI.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.POLYLINE,\n        },\n      ],\n    },\n\n    LivewireContour: {\n      toAnnotation: LivewireContour.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        LivewireContour.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.POLYLINE,\n        },\n      ],\n    },\n\n    ArrowAnnotate: {\n      toAnnotation: ArrowAnnotate.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        ArrowAnnotate.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.POINT,\n          points: 1,\n        },\n      ],\n    },\n\n    Probe: {\n      toAnnotation: Probe.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        Probe.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.POINT,\n          points: 1,\n        },\n      ],\n    },\n\n    CobbAngle: {\n      toAnnotation: CobbAngle.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        CobbAngle.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.ANGLE,\n        },\n      ],\n    },\n\n    Angle: {\n      toAnnotation: Angle.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        Angle.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.ANGLE,\n        },\n      ],\n    },\n    UltrasoundDirectional: {\n      toAnnotation: UltrasoundDirectional.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        UltrasoundDirectional.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService,\n          _getValueTypeFromToolType,\n          customizationService\n        ),\n      matchingCriteria: [\n        {\n          valueType: MeasurementService.VALUE_TYPES.POLYLINE,\n          points: 2,\n        },\n      ],\n    },\n  };\n\n  return factories;\n};\n\nexport default measurementServiceMappingsFactory;\n","import { eventTarget } from '@cornerstonejs/core';\nimport { Enums, annotation } from '@cornerstonejs/tools';\nimport { DicomMetadataStore } from '@ohif/core';\nimport { toolNames } from './initCornerstoneTools';\nimport { onCompletedCalibrationLine } from './tools/CalibrationLineTool';\n\nimport measurementServiceMappingsFactory from './utils/measurementServiceMappings/measurementServiceMappingsFactory';\nimport getSOPInstanceAttributes from './utils/measurementServiceMappings/utils/getSOPInstanceAttributes';\n\nconst { removeAnnotation } = annotation.state;\n\nconst csToolsEvents = Enums.Events;\n\nconst CORNERSTONE_3D_TOOLS_SOURCE_NAME = 'Cornerstone3DTools';\nconst CORNERSTONE_3D_TOOLS_SOURCE_VERSION = '0.1';\n\nconst initMeasurementService = (\n  measurementService,\n  displaySetService,\n  cornerstoneViewportService,\n  customizationService\n) => {\n  /* Initialization */\n  const {\n    Length,\n    Bidirectional,\n    EllipticalROI,\n    CircleROI,\n    ArrowAnnotate,\n    Angle,\n    CobbAngle,\n    RectangleROI,\n    PlanarFreehandROI,\n    SplineROI,\n    LivewireContour,\n    Probe,\n    UltrasoundDirectional,\n  } = measurementServiceMappingsFactory(\n    measurementService,\n    displaySetService,\n    cornerstoneViewportService,\n    customizationService\n  );\n  const csTools3DVer1MeasurementSource = measurementService.createSource(\n    CORNERSTONE_3D_TOOLS_SOURCE_NAME,\n    CORNERSTONE_3D_TOOLS_SOURCE_VERSION\n  );\n\n  /* Mappings */\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'Length',\n    Length.matchingCriteria,\n    Length.toAnnotation,\n    Length.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'Crosshairs',\n    Length.matchingCriteria,\n    () => {\n      console.warn('Crosshairs mapping not implemented.');\n      return {};\n    },\n    () => {\n      console.warn('Crosshairs mapping not implemented.');\n      return {};\n    }\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'Bidirectional',\n    Bidirectional.matchingCriteria,\n    Bidirectional.toAnnotation,\n    Bidirectional.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'EllipticalROI',\n    EllipticalROI.matchingCriteria,\n    EllipticalROI.toAnnotation,\n    EllipticalROI.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'CircleROI',\n    CircleROI.matchingCriteria,\n    CircleROI.toAnnotation,\n    CircleROI.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'ArrowAnnotate',\n    ArrowAnnotate.matchingCriteria,\n    ArrowAnnotate.toAnnotation,\n    ArrowAnnotate.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'CobbAngle',\n    CobbAngle.matchingCriteria,\n    CobbAngle.toAnnotation,\n    CobbAngle.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'Angle',\n    Angle.matchingCriteria,\n    Angle.toAnnotation,\n    Angle.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'RectangleROI',\n    RectangleROI.matchingCriteria,\n    RectangleROI.toAnnotation,\n    RectangleROI.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'PlanarFreehandROI',\n    PlanarFreehandROI.matchingCriteria,\n    PlanarFreehandROI.toAnnotation,\n    PlanarFreehandROI.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'SplineROI',\n    SplineROI.matchingCriteria,\n    SplineROI.toAnnotation,\n    SplineROI.toMeasurement\n  );\n\n  // On the UI side, the Calibration Line tool will work almost the same as the\n  // Length tool\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'CalibrationLine',\n    Length.matchingCriteria,\n    Length.toAnnotation,\n    Length.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'LivewireContour',\n    LivewireContour.matchingCriteria,\n    LivewireContour.toAnnotation,\n    LivewireContour.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'Probe',\n    Probe.matchingCriteria,\n    Probe.toAnnotation,\n    Probe.toMeasurement\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'UltrasoundDirectionalTool',\n    UltrasoundDirectional.matchingCriteria,\n    UltrasoundDirectional.toAnnotation,\n    UltrasoundDirectional.toMeasurement\n  );\n\n  return csTools3DVer1MeasurementSource;\n};\n\nconst connectToolsToMeasurementService = servicesManager => {\n  const {\n    measurementService,\n    displaySetService,\n    cornerstoneViewportService,\n    customizationService,\n  } = servicesManager.services;\n  const csTools3DVer1MeasurementSource = initMeasurementService(\n    measurementService,\n    displaySetService,\n    cornerstoneViewportService,\n    customizationService\n  );\n  connectMeasurementServiceToTools(\n    measurementService,\n    cornerstoneViewportService,\n    csTools3DVer1MeasurementSource\n  );\n  const { annotationToMeasurement, remove } = csTools3DVer1MeasurementSource;\n\n  //\n  function addMeasurement(csToolsEvent) {\n    try {\n      const annotationAddedEventDetail = csToolsEvent.detail;\n      const {\n        annotation: { metadata, annotationUID },\n      } = annotationAddedEventDetail;\n      const { toolName } = metadata;\n\n      if (csToolsEvent.type === completedEvt && toolName === toolNames.CalibrationLine) {\n        // show modal to input the measurement (mm)\n        onCompletedCalibrationLine(servicesManager, csToolsEvent)\n          .then(\n            () => {\n              console.log('calibration applied');\n            },\n            () => true\n          )\n          .finally(() => {\n            // we don't need the calibration line lingering around, remove the\n            // annotation from the display\n            removeAnnotation(annotationUID);\n            removeMeasurement(csToolsEvent);\n            // this will ensure redrawing of annotations\n            cornerstoneViewportService.resize();\n          });\n      } else {\n        // To force the measurementUID be the same as the annotationUID\n        // Todo: this should be changed when a measurement can include multiple annotations\n        // in the future\n        annotationAddedEventDetail.uid = annotationUID;\n        annotationToMeasurement(toolName, annotationAddedEventDetail);\n      }\n    } catch (error) {\n      console.warn('Failed to update measurement:', error);\n    }\n  }\n\n  function updateMeasurement(csToolsEvent) {\n    try {\n      const annotationModifiedEventDetail = csToolsEvent.detail;\n\n      const {\n        annotation: { metadata, annotationUID },\n      } = annotationModifiedEventDetail;\n\n      // If the measurement hasn't been added, don't modify it\n      const measurement = measurementService.getMeasurement(annotationUID);\n\n      if (!measurement) {\n        return;\n      }\n      const { toolName } = metadata;\n\n      annotationModifiedEventDetail.uid = annotationUID;\n      // Passing true to indicate this is an update and NOT a annotation (start) completion.\n      annotationToMeasurement(toolName, annotationModifiedEventDetail, true);\n    } catch (error) {\n      console.warn('Failed to update measurement:', error);\n    }\n  }\n  function selectMeasurement(csToolsEvent) {\n    try {\n      const annotationSelectionEventDetail = csToolsEvent.detail;\n\n      const { added: addedSelectedAnnotationUIDs, removed: removedSelectedAnnotationUIDs } =\n        annotationSelectionEventDetail;\n\n      if (removedSelectedAnnotationUIDs) {\n        removedSelectedAnnotationUIDs.forEach(annotationUID =>\n          measurementService.setMeasurementSelected(annotationUID, false)\n        );\n      }\n\n      if (addedSelectedAnnotationUIDs) {\n        addedSelectedAnnotationUIDs.forEach(annotationUID =>\n          measurementService.setMeasurementSelected(annotationUID, true)\n        );\n      }\n    } catch (error) {\n      console.warn('Failed to select and unselect measurements:', error);\n    }\n  }\n\n  /**\n   * When csTools fires a removed event, remove the same measurement\n   * from the measurement service\n   *\n   * @param {*} csToolsEvent\n   */\n  function removeMeasurement(csToolsEvent) {\n    try {\n      try {\n        const annotationRemovedEventDetail = csToolsEvent.detail;\n        const {\n          annotation: { annotationUID },\n        } = annotationRemovedEventDetail;\n\n        const measurement = measurementService.getMeasurement(annotationUID);\n\n        if (measurement) {\n          console.log('~~ removeEvt', csToolsEvent);\n          remove(annotationUID, annotationRemovedEventDetail);\n        }\n      } catch (error) {\n        console.warn('Failed to update measurement:', error);\n      }\n    } catch (error) {\n      console.warn('Failed to remove measurement:', error);\n    }\n  }\n\n  // on display sets added, check if there are any measurements in measurement service that need to be\n  // put into cornerstone tools\n  const addedEvt = csToolsEvents.ANNOTATION_ADDED;\n  const completedEvt = csToolsEvents.ANNOTATION_COMPLETED;\n  const updatedEvt = csToolsEvents.ANNOTATION_MODIFIED;\n  const removedEvt = csToolsEvents.ANNOTATION_REMOVED;\n  const selectionEvt = csToolsEvents.ANNOTATION_SELECTION_CHANGE;\n\n  eventTarget.addEventListener(addedEvt, addMeasurement);\n  eventTarget.addEventListener(completedEvt, addMeasurement);\n  eventTarget.addEventListener(updatedEvt, updateMeasurement);\n  eventTarget.addEventListener(removedEvt, removeMeasurement);\n  eventTarget.addEventListener(selectionEvt, selectMeasurement);\n\n  return csTools3DVer1MeasurementSource;\n};\n\nconst connectMeasurementServiceToTools = (\n  measurementService,\n  cornerstoneViewportService,\n  measurementSource\n) => {\n  const { MEASUREMENT_REMOVED, MEASUREMENTS_CLEARED, MEASUREMENT_UPDATED, RAW_MEASUREMENT_ADDED } =\n    measurementService.EVENTS;\n\n  const csTools3DVer1MeasurementSource = measurementService.getSource(\n    CORNERSTONE_3D_TOOLS_SOURCE_NAME,\n    CORNERSTONE_3D_TOOLS_SOURCE_VERSION\n  );\n\n  measurementService.subscribe(MEASUREMENTS_CLEARED, ({ measurements }) => {\n    if (!Object.keys(measurements).length) {\n      return;\n    }\n\n    for (const measurement of Object.values(measurements)) {\n      const { uid, source } = measurement;\n      if (source.name !== CORNERSTONE_3D_TOOLS_SOURCE_NAME) {\n        continue;\n      }\n\n      removeAnnotation(uid);\n    }\n  });\n\n  measurementService.subscribe(\n    MEASUREMENT_UPDATED,\n    ({ source, measurement, notYetUpdatedAtSource }) => {\n      if (source.name !== CORNERSTONE_3D_TOOLS_SOURCE_NAME) {\n        return;\n      }\n\n      if (notYetUpdatedAtSource === false) {\n        // This event was fired by cornerstone telling the measurement service to sync.\n        // Already in sync.\n        return;\n      }\n\n      const { uid, label } = measurement;\n\n      const sourceAnnotation = annotation.state.getAnnotation(uid);\n      const { data, metadata } = sourceAnnotation;\n\n      if (!data) {\n        return;\n      }\n\n      if (data.label !== label) {\n        data.label = label;\n      }\n\n      if (metadata.toolName === 'ArrowAnnotate') {\n        data.text = label;\n      }\n\n      // Todo: trigger render for annotation\n    }\n  );\n\n  measurementService.subscribe(\n    RAW_MEASUREMENT_ADDED,\n    ({ source, measurement, data, dataSource }) => {\n      if (source.name !== CORNERSTONE_3D_TOOLS_SOURCE_NAME) {\n        return;\n      }\n\n      const { referenceSeriesUID, referenceStudyUID, SOPInstanceUID } = measurement;\n\n      const instance = DicomMetadataStore.getInstance(\n        referenceStudyUID,\n        referenceSeriesUID,\n        SOPInstanceUID\n      );\n\n      let imageId;\n      let frameNumber = 1;\n\n      if (measurement?.metadata?.referencedImageId) {\n        imageId = measurement.metadata.referencedImageId;\n        frameNumber = getSOPInstanceAttributes(measurement.metadata.referencedImageId).frameNumber;\n      } else {\n        imageId = dataSource.getImageIdsForInstance({ instance });\n      }\n\n      /**\n       * This annotation is used by the cornerstone viewport.\n       * This is not the read-only annotation rendered by the SR viewport.\n       */\n      const annotationManager = annotation.state.getAnnotationManager();\n      annotationManager.addAnnotation({\n        annotationUID: measurement.uid,\n        highlighted: false,\n        isLocked: false,\n        invalidated: false,\n        metadata: {\n          toolName: measurement.toolName,\n          FrameOfReferenceUID: measurement.FrameOfReferenceUID,\n          referencedImageId: imageId,\n        },\n        data: {\n          /**\n           * Don't remove this destructuring of data here.\n           * This is used to pass annotation specific data forward e.g. contour\n           */\n          ...(data.annotation.data || {}),\n          text: data.annotation.data.text,\n          handles: { ...data.annotation.data.handles },\n          cachedStats: { ...data.annotation.data.cachedStats },\n          label: data.annotation.data.label,\n          frameNumber,\n        },\n      });\n    }\n  );\n\n  measurementService.subscribe(\n    MEASUREMENT_REMOVED,\n    ({ source, measurement: removedMeasurementId }) => {\n      if (source?.name && source.name !== CORNERSTONE_3D_TOOLS_SOURCE_NAME) {\n        return;\n      }\n      removeAnnotation(removedMeasurementId);\n      const renderingEngine = cornerstoneViewportService.getRenderingEngine();\n      // Note: We could do a better job by triggering the render on the\n      // viewport itself, but the removeAnnotation does not include that info...\n      renderingEngine.render();\n    }\n  );\n};\n\nexport {\n  initMeasurementService,\n  connectToolsToMeasurementService,\n  connectMeasurementServiceToTools,\n};\n","import { cache } from '@cornerstonejs/core';\nimport { utilities } from '@cornerstonejs/tools';\n\nfunction _getVolumesFromViewport(viewport) {\n  return viewport ? viewport.getActors().map(actor => cache.getVolume(actor.uid)) : [];\n}\n\nfunction _getVolumeFromViewport(viewport) {\n  const volumes = _getVolumesFromViewport(viewport);\n  const dynamicVolume = volumes.find(volume => volume.isDynamicVolume());\n\n  return dynamicVolume ?? volumes[0];\n}\n\n/**\n * Return all viewports that needs to be synchronized with the source\n * viewport passed as parameter when cine is updated.\n * @param servicesManager ServiceManager\n * @param srcViewportIndex Source viewport index\n * @returns array with viewport information.\n */\nfunction _getSyncedViewports(servicesManager, srcViewportId) {\n  const { viewportGridService, cornerstoneViewportService } = servicesManager.services;\n\n  const { viewports: viewportsStates } = viewportGridService.getState();\n  const srcViewportState = viewportsStates.get(srcViewportId);\n\n  if (srcViewportState?.viewportOptions?.viewportType !== 'volume') {\n    return [];\n  }\n\n  const srcViewport = cornerstoneViewportService.getCornerstoneViewport(srcViewportId);\n\n  const srcVolume = srcViewport ? _getVolumeFromViewport(srcViewport) : null;\n\n  if (!srcVolume?.isDynamicVolume()) {\n    return [];\n  }\n\n  const { volumeId: srcVolumeId } = srcVolume;\n\n  return Array.from(viewportsStates.values())\n    .filter(({ viewportId }) => {\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n\n      return viewportId !== srcViewportId && viewport?.hasVolumeId(srcVolumeId);\n    })\n    .map(({ viewportId }) => ({ viewportId }));\n}\n\nfunction initCineService(servicesManager) {\n  const { cineService } = servicesManager.services;\n\n  const getSyncedViewports = viewportId => {\n    return _getSyncedViewports(servicesManager, viewportId);\n  };\n\n  const playClip = (element, playClipOptions) => {\n    return utilities.cine.playClip(element, playClipOptions);\n  };\n\n  const stopClip = (element, stopClipOptions) => {\n    return utilities.cine.stopClip(element, stopClipOptions);\n  };\n\n  cineService.setServiceImplementation({\n    getSyncedViewports,\n    playClip,\n    stopClip,\n  });\n}\n\nexport default initCineService;\n","import { cache, imageLoadPoolManager, Enums } from '@cornerstonejs/core';\nimport getInterleavedFrames from './getInterleavedFrames';\nimport { compact, flatten, zip } from 'lodash';\n\n// Map of volumeId and SeriesInstanceId\nconst volumeIdMapsToLoad = new Map<string, string>();\nconst viewportIdVolumeInputArrayMap = new Map<string, unknown[]>();\n\n/**\n * This function caches the volumeUIDs until all the volumes inside the\n * hanging protocol are initialized. Then it goes through the imageIds\n * of the volumes, and interleave them, in order for the volumes to be loaded\n * together from middle to the start and the end.\n * @param {Object} props image loading properties from Cornerstone ViewportService\n * @returns\n */\nexport default function interleaveCenterLoader({\n  data: { viewportId, volumeInputArray },\n  displaySetsMatchDetails,\n  viewportMatchDetails: matchDetails,\n}) {\n  viewportIdVolumeInputArrayMap.set(viewportId, volumeInputArray);\n\n  // Based on the volumeInputs store the volumeIds and SeriesInstanceIds\n  // to keep track of the volumes being loaded\n  for (const volumeInput of volumeInputArray) {\n    const { volumeId } = volumeInput;\n    const volume = cache.getVolume(volumeId);\n\n    if (!volume) {\n      return;\n    }\n\n    // if the volumeUID is not in the volumeUIDs array, add it\n    if (!volumeIdMapsToLoad.has(volumeId)) {\n      const { metadata } = volume;\n      volumeIdMapsToLoad.set(volumeId, metadata.SeriesInstanceUID);\n    }\n  }\n\n  /**\n   * The following is checking if all the viewports that were matched in the HP has been\n   * successfully created their cornerstone viewport or not. Todo: This can be\n   * improved by not checking it, and as soon as the matched DisplaySets have their\n   * volume loaded, we start the loading, but that comes at the cost of viewports\n   * not being created yet (e.g., in a 10 viewport ptCT fusion, when one ct viewport and one\n   * pt viewport are created we have a guarantee that the volumes are created in the cache\n   * but the rest of the viewports (fusion, mip etc.) are not created yet. So\n   * we can't initiate setting the volumes for those viewports. One solution can be\n   * to add an event when a viewport is created (not enabled element event) and then\n   * listen to it and as the other viewports are created we can set the volumes for them\n   * since volumes are already started loading.\n   */\n  const uniqueViewportVolumeDisplaySetUIDs = new Set();\n  viewportIdVolumeInputArrayMap.forEach((volumeInputArray, viewportId) => {\n    volumeInputArray.forEach(volumeInput => {\n      const { volumeId } = volumeInput;\n      uniqueViewportVolumeDisplaySetUIDs.add(volumeId);\n    });\n  });\n\n  const uniqueMatchedDisplaySetUIDs = new Set();\n\n  matchDetails.forEach(matchDetail => {\n    const { displaySetsInfo } = matchDetail;\n    displaySetsInfo.forEach(({ displaySetInstanceUID }) => {\n      uniqueMatchedDisplaySetUIDs.add(displaySetInstanceUID);\n    });\n  });\n\n  if (uniqueViewportVolumeDisplaySetUIDs.size !== uniqueMatchedDisplaySetUIDs.size) {\n    return;\n  }\n\n  const volumeIds = Array.from(volumeIdMapsToLoad.keys()).slice();\n  // get volumes from cache\n  const volumes = volumeIds.map(volumeId => {\n    return cache.getVolume(volumeId);\n  });\n\n  // iterate over all volumes, and get their imageIds, and interleave\n  // the imageIds and save them in AllRequests for later use\n  const AllRequests = [];\n  volumes.forEach(volume => {\n    const requests = volume.getImageLoadRequests();\n\n    if (!requests.length || !requests[0] || !requests[0].imageId) {\n      return;\n    }\n\n    const requestImageIds = requests.map(request => {\n      return request.imageId;\n    });\n\n    const imageIds = getInterleavedFrames(requestImageIds);\n\n    const reOrderedRequests = imageIds.map(({ imageId }) => {\n      const request = requests.find(req => req.imageId === imageId);\n      return request;\n    });\n\n    AllRequests.push(reOrderedRequests);\n  });\n\n  // flatten the AllRequests array, which will result in a list of all the\n  // imageIds for all the volumes but interleaved\n  const interleavedRequests = compact(flatten(zip(...AllRequests)));\n\n  // set the finalRequests to the imageLoadPoolManager\n  const finalRequests = [];\n  interleavedRequests.forEach(request => {\n    const { imageId } = request;\n\n    AllRequests.forEach(volumeRequests => {\n      const volumeImageIdRequest = volumeRequests.find(req => req.imageId === imageId);\n      if (volumeImageIdRequest) {\n        finalRequests.push(volumeImageIdRequest);\n      }\n    });\n  });\n\n  const requestType = Enums.RequestType.Prefetch;\n  const priority = 0;\n\n  finalRequests.forEach(({ callLoadImage, additionalDetails, imageId, imageIdIndex, options }) => {\n    const callLoadImageBound = callLoadImage.bind(null, imageId, imageIdIndex, options);\n\n    imageLoadPoolManager.addRequest(callLoadImageBound, requestType, additionalDetails, priority);\n  });\n\n  // clear the volumeIdMapsToLoad\n  volumeIdMapsToLoad.clear();\n\n  // copy the viewportIdVolumeInputArrayMap\n  const viewportIdVolumeInputArrayMapCopy = new Map(viewportIdVolumeInputArrayMap);\n\n  // reset the viewportIdVolumeInputArrayMap\n  viewportIdVolumeInputArrayMap.clear();\n\n  return viewportIdVolumeInputArrayMapCopy;\n}\n","export default function getInterleavedFrames(imageIds) {\n  const minImageIdIndex = 0;\n  const maxImageIdIndex = imageIds.length - 1;\n\n  const middleImageIdIndex = Math.floor(imageIds.length / 2);\n\n  let lowerImageIdIndex = middleImageIdIndex;\n  let upperImageIdIndex = middleImageIdIndex;\n\n  // Build up an array of images to prefetch, starting with the current image.\n  const imageIdsToPrefetch = [\n    { imageId: imageIds[middleImageIdIndex], imageIdIndex: middleImageIdIndex },\n  ];\n\n  const prefetchQueuedFilled = {\n    currentPositionDownToMinimum: false,\n    currentPositionUpToMaximum: false,\n  };\n\n  // Check if on edges and some criteria is already fulfilled\n\n  if (middleImageIdIndex === minImageIdIndex) {\n    prefetchQueuedFilled.currentPositionDownToMinimum = true;\n  } else if (middleImageIdIndex === maxImageIdIndex) {\n    prefetchQueuedFilled.currentPositionUpToMaximum = true;\n  }\n\n  while (\n    !prefetchQueuedFilled.currentPositionDownToMinimum ||\n    !prefetchQueuedFilled.currentPositionUpToMaximum\n  ) {\n    if (!prefetchQueuedFilled.currentPositionDownToMinimum) {\n      // Add imageId below\n      lowerImageIdIndex--;\n      imageIdsToPrefetch.push({\n        imageId: imageIds[lowerImageIdIndex],\n        imageIdIndex: lowerImageIdIndex,\n      });\n\n      if (lowerImageIdIndex === minImageIdIndex) {\n        prefetchQueuedFilled.currentPositionDownToMinimum = true;\n      }\n    }\n\n    if (!prefetchQueuedFilled.currentPositionUpToMaximum) {\n      // Add imageId above\n      upperImageIdIndex++;\n      imageIdsToPrefetch.push({\n        imageId: imageIds[upperImageIdIndex],\n        imageIdIndex: upperImageIdIndex,\n      });\n\n      if (upperImageIdIndex === maxImageIdIndex) {\n        prefetchQueuedFilled.currentPositionUpToMaximum = true;\n      }\n    }\n  }\n\n  return imageIdsToPrefetch;\n}\n","import { cache, imageLoadPoolManager, Enums } from '@cornerstonejs/core';\nimport getNthFrames from './getNthFrames';\nimport interleave from './interleave';\n\n// Map of volumeId and SeriesInstanceId\nconst volumeIdMapsToLoad = new Map<string, string>();\nconst viewportIdVolumeInputArrayMap = new Map<string, unknown[]>();\n\n/**\n * This function caches the volumeUIDs until all the volumes inside the\n * hanging protocol are initialized. Then it goes through the requests and\n * chooses a sub-selection starting the the first few objects, center objects\n * and last objects, and then the remaining nth images until all instances are\n * retrieved.  This causes the image to have a progressive load order and looks\n * visually much better.\n * @param {Object} props image loading properties from Cornerstone ViewportService\n */\nexport default function interleaveNthLoader({\n  data: { viewportId, volumeInputArray },\n  displaySetsMatchDetails,\n}) {\n  viewportIdVolumeInputArrayMap.set(viewportId, volumeInputArray);\n\n  // Based on the volumeInputs store the volumeIds and SeriesInstanceIds\n  // to keep track of the volumes being loaded\n  for (const volumeInput of volumeInputArray) {\n    const { volumeId } = volumeInput;\n    const volume = cache.getVolume(volumeId);\n\n    if (!volume) {\n      console.log(\"interleaveNthLoader::No volume, can't load it\");\n      return;\n    }\n\n    // if the volumeUID is not in the volumeUIDs array, add it\n    if (!volumeIdMapsToLoad.has(volumeId)) {\n      const { metadata } = volume;\n      volumeIdMapsToLoad.set(volumeId, metadata.SeriesInstanceUID);\n    }\n  }\n\n  const volumeIds = Array.from(volumeIdMapsToLoad.keys()).slice();\n  // get volumes from cache\n  const volumes = volumeIds.map(volumeId => {\n    return cache.getVolume(volumeId);\n  });\n\n  // iterate over all volumes, and get their imageIds, and interleave\n  // the imageIds and save them in AllRequests for later use\n  const originalRequests = volumes\n    .map(volume => volume.getImageLoadRequests())\n    .filter(requests => requests?.[0]?.imageId);\n\n  const orderedRequests = originalRequests.map(request => getNthFrames(request));\n\n  // set the finalRequests to the imageLoadPoolManager\n  const finalRequests = interleave(orderedRequests);\n\n  const requestType = Enums.RequestType.Prefetch;\n  const priority = 0;\n\n  finalRequests.forEach(({ callLoadImage, additionalDetails, imageId, imageIdIndex, options }) => {\n    const callLoadImageBound = callLoadImage.bind(null, imageId, imageIdIndex, options);\n\n    imageLoadPoolManager.addRequest(callLoadImageBound, requestType, additionalDetails, priority);\n  });\n\n  // clear the volumeIdMapsToLoad\n  volumeIdMapsToLoad.clear();\n\n  // copy the viewportIdVolumeInputArrayMap\n  const viewportIdVolumeInputArrayMapCopy = new Map(viewportIdVolumeInputArrayMap);\n\n  // reset the viewportIdVolumeInputArrayMap\n  viewportIdVolumeInputArrayMap.clear();\n\n  return viewportIdVolumeInputArrayMapCopy;\n}\n","/**\n * Interleave the items from all the lists so that the first items are first\n * in the returned list, the second items are next etc.\n * Does this in a O(n) fashion, and return lists[0] if there is only one list.\n *\n * @param {[]} lists\n * @returns [] reordered to be breadth first traversal of lists\n */\nexport default function interleave(lists) {\n  if (!lists || !lists.length) {\n    return [];\n  }\n  if (lists.length === 1) {\n    return lists[0];\n  }\n  console.time('interleave');\n  const useLists = [...lists];\n  const ret = [];\n  for (let i = 0; useLists.length > 0; i++) {\n    for (const list of useLists) {\n      if (i >= list.length) {\n        useLists.splice(useLists.indexOf(list), 1);\n        continue;\n      }\n      ret.push(list[i]);\n    }\n  }\n  console.timeEnd('interleave');\n  return ret;\n}\n","/**\n * Returns a re-ordered array consisting of, in order:\n *    1. First few objects\n *    2. Center objects\n *    3. Last few objects\n *    4. nth Objects (n=7), set 2\n *    5. nth Objects set 5,\n *    6. Remaining objects\n * What this does is return the first/center/start objects, as those\n * are often used first, then a selection of objects scattered over the\n * instances in order to allow making requests over a set of image instances.\n *\n * @param {[]} imageIds\n * @returns [] reordered to be an nth selection\n */\nexport default function getNthFrames(imageIds) {\n  const frames = [[], [], [], [], []];\n  const centerStart = imageIds.length / 2 - 3;\n  const centerEnd = centerStart + 6;\n\n  for (let i = 0; i < imageIds.length; i++) {\n    if (i < 2 || i > imageIds.length - 4 || (i > centerStart && i < centerEnd)) {\n      frames[0].push(imageIds[i]);\n    } else if (i % 7 === 2) {\n      frames[1].push(imageIds[i]);\n    } else if (i % 7 === 5) {\n      frames[2].push(imageIds[i]);\n    } else {\n      frames[(i % 2) + 3].push(imageIds[i]);\n    }\n  }\n  const ret = [...frames[0], ...frames[1], ...frames[2], ...frames[3], ...frames[4]];\n  return ret;\n}\n","import { cache, imageLoadPoolManager, Enums } from '@cornerstonejs/core';\nimport { compact, flatten, zip } from 'lodash';\n\n// Map of volumeId and SeriesInstanceId\nconst volumeIdMapsToLoad = new Map<string, string>();\nconst viewportIdVolumeInputArrayMap = new Map<string, unknown[]>();\n\n/**\n * This function caches the volumeIds until all the volumes inside the\n * hanging protocol are initialized. Then it goes through the imageIds\n * of the volumes, and interleave them, in order for the volumes to be loaded\n * together from middle to the start and the end.\n * @param {Object} {viewportData, displaySetMatchDetails}\n * @returns\n */\nexport default function interleaveTopToBottom({\n  data: { viewportId, volumeInputArray },\n  displaySetsMatchDetails,\n  viewportMatchDetails: matchDetails,\n}) {\n  viewportIdVolumeInputArrayMap.set(viewportId, volumeInputArray);\n\n  // Based on the volumeInputs store the volumeIds and SeriesInstanceIds\n  // to keep track of the volumes being loaded\n  for (const volumeInput of volumeInputArray) {\n    const { volumeId } = volumeInput;\n    const volume = cache.getVolume(volumeId);\n\n    if (!volume) {\n      return;\n    }\n\n    // if the volumeUID is not in the volumeUIDs array, add it\n    if (!volumeIdMapsToLoad.has(volumeId)) {\n      const { metadata } = volume;\n      volumeIdMapsToLoad.set(volumeId, metadata.SeriesInstanceUID);\n    }\n  }\n\n  const filteredMatchDetails = [];\n  const displaySetsToLoad = new Set();\n\n  // Check all viewports that have a displaySet to be loaded. In some cases\n  // (eg: line chart viewports which is not a Cornerstone viewport) the\n  // displaySet is created on the client and there are no instances to be\n  // downloaded. For those viewports the displaySet may have the `skipLoading`\n  // option set to true otherwise it may block the download of all other\n  // instances resulting in blank viewports.\n  Array.from(matchDetails.values()).forEach(curMatchDetails => {\n    const { displaySetsInfo } = curMatchDetails;\n    let numDisplaySetsToLoad = 0;\n\n    displaySetsInfo.forEach(({ displaySetInstanceUID, displaySetOptions }) => {\n      if (!displaySetOptions?.options?.skipLoading) {\n        numDisplaySetsToLoad++;\n        displaySetsToLoad.add(displaySetInstanceUID);\n      }\n    });\n\n    if (numDisplaySetsToLoad) {\n      filteredMatchDetails.push(curMatchDetails);\n    }\n  });\n\n  /**\n   * The following is checking if all the viewports that were matched in the HP has been\n   * successfully created their cornerstone viewport or not. Todo: This can be\n   * improved by not checking it, and as soon as the matched DisplaySets have their\n   * volume loaded, we start the loading, but that comes at the cost of viewports\n   * not being created yet (e.g., in a 10 viewport ptCT fusion, when one ct viewport and one\n   * pt viewport are created we have a guarantee that the volumes are created in the cache\n   * but the rest of the viewports (fusion, mip etc.) are not created yet. So\n   * we can't initiate setting the volumes for those viewports. One solution can be\n   * to add an event when a viewport is created (not enabled element event) and then\n   * listen to it and as the other viewports are created we can set the volumes for them\n   * since volumes are already started loading.\n   */\n  const uniqueViewportVolumeDisplaySetUIDs = new Set();\n  viewportIdVolumeInputArrayMap.forEach((volumeInputArray, viewportId) => {\n    volumeInputArray.forEach(volumeInput => {\n      const { volumeId } = volumeInput;\n      uniqueViewportVolumeDisplaySetUIDs.add(volumeId);\n    });\n  });\n\n  const uniqueMatchedDisplaySetUIDs = new Set();\n\n  matchDetails.forEach(matchDetail => {\n    const { displaySetsInfo } = matchDetail;\n    displaySetsInfo.forEach(({ displaySetInstanceUID }) => {\n      uniqueMatchedDisplaySetUIDs.add(displaySetInstanceUID);\n    });\n  });\n\n  if (uniqueViewportVolumeDisplaySetUIDs.size !== uniqueMatchedDisplaySetUIDs.size) {\n    return;\n  }\n\n  const volumeIds = Array.from(volumeIdMapsToLoad.keys()).slice();\n  // get volumes from cache\n  const volumes = volumeIds.map(volumeId => {\n    return cache.getVolume(volumeId);\n  });\n\n  // iterate over all volumes, and get their imageIds, and interleave\n  // the imageIds and save them in AllRequests for later use\n  const AllRequests = [];\n  volumes.forEach(volume => {\n    const requests = volume.getImageLoadRequests();\n\n    if (!requests.length || !requests[0] || !requests[0].imageId) {\n      return;\n    }\n\n    // reverse the requests\n    AllRequests.push(requests.reverse());\n  });\n\n  // flatten the AllRequests array, which will result in a list of all the\n  // imageIds for all the volumes but interleaved\n  const interleavedRequests = compact(flatten(zip(...AllRequests)));\n\n  // set the finalRequests to the imageLoadPoolManager\n  const finalRequests = [];\n  interleavedRequests.forEach(request => {\n    const { imageId } = request;\n\n    AllRequests.forEach(volumeRequests => {\n      const volumeImageIdRequest = volumeRequests.find(req => req.imageId === imageId);\n      if (volumeImageIdRequest) {\n        finalRequests.push(volumeImageIdRequest);\n      }\n    });\n  });\n\n  const requestType = Enums.RequestType.Prefetch;\n  const priority = 0;\n\n  finalRequests.forEach(({ callLoadImage, additionalDetails, imageId, imageIdIndex, options }) => {\n    const callLoadImageBound = callLoadImage.bind(null, imageId, imageIdIndex, options);\n\n    imageLoadPoolManager.addRequest(callLoadImageBound, requestType, additionalDetails, priority);\n  });\n\n  // clear the volumeIdMapsToLoad\n  volumeIdMapsToLoad.clear();\n\n  // copy the viewportIdVolumeInputArrayMap\n  const viewportIdVolumeInputArrayMapCopy = new Map(viewportIdVolumeInputArrayMap);\n\n  // reset the viewportIdVolumeInputArrayMap\n  viewportIdVolumeInputArrayMap.clear();\n\n  return viewportIdVolumeInputArrayMapCopy;\n}\n","/**\n * Finds tool nearby event position triggered.\n *\n * @param {Object} commandsManager mannager of commands\n * @param {Object} event that has being triggered\n * @returns cs toolData or undefined if not found.\n */\nexport const findNearbyToolData = (commandsManager, evt) => {\n  if (!evt?.detail) {\n    return;\n  }\n  const { element, currentPoints } = evt.detail;\n  return commandsManager.runCommand(\n    'getNearbyAnnotation',\n    {\n      element,\n      canvasCoordinates: currentPoints?.canvas,\n    },\n    'CORNERSTONE'\n  );\n};\n","import { eventTarget, EVENTS } from '@cornerstonejs/core';\nimport { Enums } from '@cornerstonejs/tools';\nimport { setEnabledElement } from './state';\nimport { findNearbyToolData } from './utils/findNearbyToolData';\n\nconst cs3DToolsEvents = Enums.Events;\n\nconst DEFAULT_CONTEXT_MENU_CLICKS = {\n  button1: {\n    commands: [\n      {\n        commandName: 'closeContextMenu',\n      },\n    ],\n  },\n  button3: {\n    commands: [\n      {\n        commandName: 'showCornerstoneContextMenu',\n        commandOptions: {\n          requireNearbyToolData: true,\n          menuId: 'measurementsContextMenu',\n        },\n      },\n    ],\n  },\n};\n\n/**\n * Generates a name, consisting of:\n *    * alt when the alt key is down\n *    * ctrl when the cctrl key is down\n *    * shift when the shift key is down\n *    * 'button' followed by the button number (1 left, 3 right etc)\n */\nfunction getEventName(evt) {\n  const button = evt.detail.event.which;\n  const nameArr = [];\n  if (evt.detail.event.altKey) {\n    nameArr.push('alt');\n  }\n  if (evt.detail.event.ctrlKey) {\n    nameArr.push('ctrl');\n  }\n  if (evt.detail.event.shiftKey) {\n    nameArr.push('shift');\n  }\n  nameArr.push('button');\n  nameArr.push(button);\n  return nameArr.join('');\n}\n\nfunction initContextMenu({\n  cornerstoneViewportService,\n  customizationService,\n  commandsManager,\n}): void {\n  /*\n   * Run the commands associated with the given button press,\n   * defaults on button1 and button2\n   */\n  const cornerstoneViewportHandleEvent = (name, evt) => {\n    const customizations =\n      customizationService.get('cornerstoneViewportClickCommands') || DEFAULT_CONTEXT_MENU_CLICKS;\n    const toRun = customizations[name];\n\n    if (!toRun) {\n      return;\n    }\n\n    // only find nearbyToolData if required, for the click (which closes the context menu\n    // we don't need to find nearbyToolData)\n    let nearbyToolData = null;\n    if (toRun.commands.some(command => command.commandOptions?.requireNearbyToolData)) {\n      nearbyToolData = findNearbyToolData(commandsManager, evt);\n    }\n\n    const options = {\n      nearbyToolData,\n      event: evt,\n    };\n    commandsManager.run(toRun, options);\n  };\n\n  const cornerstoneViewportHandleClick = evt => {\n    const name = getEventName(evt);\n    cornerstoneViewportHandleEvent(name, evt);\n  };\n\n  function elementEnabledHandler(evt) {\n    const { viewportId, element } = evt.detail;\n    const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\n    if (!viewportInfo) {\n      return;\n    }\n    // TODO check update upstream\n    setEnabledElement(viewportId, element);\n\n    element.addEventListener(cs3DToolsEvents.MOUSE_CLICK, cornerstoneViewportHandleClick);\n  }\n\n  function elementDisabledHandler(evt) {\n    const { element } = evt.detail;\n\n    element.removeEventListener(cs3DToolsEvents.MOUSE_CLICK, cornerstoneViewportHandleClick);\n  }\n\n  eventTarget.addEventListener(EVENTS.ELEMENT_ENABLED, elementEnabledHandler.bind(null));\n\n  eventTarget.addEventListener(EVENTS.ELEMENT_DISABLED, elementDisabledHandler.bind(null));\n}\n\nexport default initContextMenu;\n","import { eventTarget, EVENTS } from '@cornerstonejs/core';\nimport { Enums } from '@cornerstonejs/tools';\nimport { CommandsManager, CustomizationService, Types } from '@ohif/core';\nimport { findNearbyToolData } from './utils/findNearbyToolData';\n\nconst cs3DToolsEvents = Enums.Events;\n\nconst DEFAULT_DOUBLE_CLICK = {\n  doubleClick: {\n    commandName: 'toggleOneUp',\n    commandOptions: {},\n  },\n};\n\n/**\n * Generates a double click event name, consisting of:\n *    * alt when the alt key is down\n *    * ctrl when the cctrl key is down\n *    * shift when the shift key is down\n *    * 'doubleClick'\n */\nfunction getDoubleClickEventName(evt: CustomEvent) {\n  const nameArr = [];\n  if (evt.detail.event.altKey) {\n    nameArr.push('alt');\n  }\n  if (evt.detail.event.ctrlKey) {\n    nameArr.push('ctrl');\n  }\n  if (evt.detail.event.shiftKey) {\n    nameArr.push('shift');\n  }\n  nameArr.push('doubleClick');\n  return nameArr.join('');\n}\n\nexport type initDoubleClickArgs = {\n  customizationService: CustomizationService;\n  commandsManager: CommandsManager;\n};\n\nfunction initDoubleClick({ customizationService, commandsManager }: initDoubleClickArgs): void {\n  const cornerstoneViewportHandleDoubleClick = (evt: CustomEvent) => {\n    // Do not allow double click on a tool.\n    const nearbyToolData = findNearbyToolData(commandsManager, evt);\n    if (nearbyToolData) {\n      return;\n    }\n\n    const eventName = getDoubleClickEventName(evt);\n\n    // Allows for the customization of the double click on a viewport.\n    const customizations =\n      customizationService.get('cornerstoneViewportClickCommands') || DEFAULT_DOUBLE_CLICK;\n\n    const toRun = customizations[eventName];\n\n    if (!toRun) {\n      return;\n    }\n\n    commandsManager.run(toRun);\n  };\n\n  function elementEnabledHandler(evt: CustomEvent) {\n    const { element } = evt.detail;\n\n    element.addEventListener(\n      cs3DToolsEvents.MOUSE_DOUBLE_CLICK,\n      cornerstoneViewportHandleDoubleClick\n    );\n  }\n\n  function elementDisabledHandler(evt: CustomEvent) {\n    const { element } = evt.detail;\n\n    element.removeEventListener(\n      cs3DToolsEvents.MOUSE_DOUBLE_CLICK,\n      cornerstoneViewportHandleDoubleClick\n    );\n  }\n\n  eventTarget.addEventListener(EVENTS.ELEMENT_ENABLED, elementEnabledHandler.bind(null));\n\n  eventTarget.addEventListener(EVENTS.ELEMENT_DISABLED, elementDisabledHandler.bind(null));\n}\n\nexport default initDoubleClick;\n","import { log, Enums } from '@ohif/core';\nimport { EVENTS } from '@cornerstonejs/core';\n\nconst IMAGE_TIMING_KEYS = [];\n\nconst imageTiming = {\n  viewportsWaiting: 0,\n};\n\n/**\n * Defines the initial view timing reporting.\n * This allows knowing how many viewports are waiting for initial views and\n * when the IMAGE_RENDERED gets sent out.\n * The first image rendered will fire the FIRST_IMAGE timeEnd logs, while\n * the last of the enabled viewport will fire the ALL_IMAGES timeEnd logs.\n *\n */\n\nexport default function initViewTiming({ element }) {\n  if (!IMAGE_TIMING_KEYS.length) {\n    // Work around a bug in WebPack that doesn't getting the enums initialized\n    // quite fast enough to be declared statically.\n    const { TimingEnum } = Enums;\n\n    IMAGE_TIMING_KEYS.push(\n      TimingEnum.DISPLAY_SETS_TO_ALL_IMAGES,\n      TimingEnum.DISPLAY_SETS_TO_FIRST_IMAGE,\n      TimingEnum.STUDY_TO_FIRST_IMAGE,\n    );\n  }\n\n  if (!IMAGE_TIMING_KEYS.find(key => log.timingKeys[key])) {\n    return;\n  }\n  imageTiming.viewportsWaiting += 1;\n  element.addEventListener(EVENTS.IMAGE_RENDERED, imageRenderedListener);\n}\n\nfunction imageRenderedListener(evt) {\n  if (evt.detail.viewportStatus === 'preRender') {\n    return;\n  }\n  const { TimingEnum } = Enums;\n  log.timeEnd(TimingEnum.DISPLAY_SETS_TO_FIRST_IMAGE);\n  log.timeEnd(TimingEnum.STUDY_TO_FIRST_IMAGE);\n  log.timeEnd(TimingEnum.SCRIPT_TO_VIEW);\n  imageTiming.viewportsWaiting -= 1;\n  evt.detail.element.removeEventListener(EVENTS.IMAGE_RENDERED, imageRenderedListener);\n  if (!imageTiming.viewportsWaiting) {\n    log.timeEnd(TimingEnum.DISPLAY_SETS_TO_ALL_IMAGES);\n  }\n}\n","const colormaps = [\n  {\n    ColorSpace: 'RGB',\n    Name: 'Grayscale',\n    name: 'Grayscale',\n    NanColor: [1, 0, 0],\n    RGBPoints: [0, 0, 0, 0, 1, 1, 1, 1],\n    description: 'Grayscale',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'X Ray',\n    name: 'X Ray',\n    NanColor: [1, 0, 0],\n    RGBPoints: [0, 1, 1, 1, 1, 0, 0, 0],\n    description: 'X Ray',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'hsv',\n    name: 'hsv',\n    RGBPoints: [\n      -1, 1, 0, 0, -0.666666, 1, 0, 1, -0.333333, 0, 0, 1, 0, 0, 1, 1, 0.33333, 0, 1, 0, 0.66666, 1,\n      1, 0, 1, 1, 0, 0,\n    ],\n    description: 'HSV',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'hot_iron',\n    name: 'hot_iron',\n    RGBPoints: [\n      0.0, 0.0039215686, 0.0039215686, 0.0156862745, 0.00392156862745098, 0.0039215686,\n      0.0039215686, 0.0156862745, 0.00784313725490196, 0.0039215686, 0.0039215686, 0.031372549,\n      0.011764705882352941, 0.0039215686, 0.0039215686, 0.0470588235, 0.01568627450980392,\n      0.0039215686, 0.0039215686, 0.062745098, 0.0196078431372549, 0.0039215686, 0.0039215686,\n      0.0784313725, 0.023529411764705882, 0.0039215686, 0.0039215686, 0.0941176471,\n      0.027450980392156862, 0.0039215686, 0.0039215686, 0.1098039216, 0.03137254901960784,\n      0.0039215686, 0.0039215686, 0.1254901961, 0.03529411764705882, 0.0039215686, 0.0039215686,\n      0.1411764706, 0.0392156862745098, 0.0039215686, 0.0039215686, 0.1568627451,\n      0.043137254901960784, 0.0039215686, 0.0039215686, 0.1725490196, 0.047058823529411764,\n      0.0039215686, 0.0039215686, 0.1882352941, 0.050980392156862744, 0.0039215686, 0.0039215686,\n      0.2039215686, 0.054901960784313725, 0.0039215686, 0.0039215686, 0.2196078431,\n      0.05882352941176471, 0.0039215686, 0.0039215686, 0.2352941176, 0.06274509803921569,\n      0.0039215686, 0.0039215686, 0.2509803922, 0.06666666666666667, 0.0039215686, 0.0039215686,\n      0.262745098, 0.07058823529411765, 0.0039215686, 0.0039215686, 0.2784313725,\n      0.07450980392156863, 0.0039215686, 0.0039215686, 0.2941176471, 0.0784313725490196,\n      0.0039215686, 0.0039215686, 0.3098039216, 0.08235294117647059, 0.0039215686, 0.0039215686,\n      0.3254901961, 0.08627450980392157, 0.0039215686, 0.0039215686, 0.3411764706,\n      0.09019607843137255, 0.0039215686, 0.0039215686, 0.3568627451, 0.09411764705882353,\n      0.0039215686, 0.0039215686, 0.3725490196, 0.09803921568627451, 0.0039215686, 0.0039215686,\n      0.3882352941, 0.10196078431372549, 0.0039215686, 0.0039215686, 0.4039215686,\n      0.10588235294117647, 0.0039215686, 0.0039215686, 0.4196078431, 0.10980392156862745,\n      0.0039215686, 0.0039215686, 0.4352941176, 0.11372549019607843, 0.0039215686, 0.0039215686,\n      0.4509803922, 0.11764705882352942, 0.0039215686, 0.0039215686, 0.4666666667,\n      0.12156862745098039, 0.0039215686, 0.0039215686, 0.4823529412, 0.12549019607843137,\n      0.0039215686, 0.0039215686, 0.4980392157, 0.12941176470588237, 0.0039215686, 0.0039215686,\n      0.5137254902, 0.13333333333333333, 0.0039215686, 0.0039215686, 0.5294117647,\n      0.13725490196078433, 0.0039215686, 0.0039215686, 0.5450980392, 0.1411764705882353,\n      0.0039215686, 0.0039215686, 0.5607843137, 0.1450980392156863, 0.0039215686, 0.0039215686,\n      0.5764705882, 0.14901960784313725, 0.0039215686, 0.0039215686, 0.5921568627,\n      0.15294117647058825, 0.0039215686, 0.0039215686, 0.6078431373, 0.1568627450980392,\n      0.0039215686, 0.0039215686, 0.6235294118, 0.1607843137254902, 0.0039215686, 0.0039215686,\n      0.6392156863, 0.16470588235294117, 0.0039215686, 0.0039215686, 0.6549019608,\n      0.16862745098039217, 0.0039215686, 0.0039215686, 0.6705882353, 0.17254901960784313,\n      0.0039215686, 0.0039215686, 0.6862745098, 0.17647058823529413, 0.0039215686, 0.0039215686,\n      0.7019607843, 0.1803921568627451, 0.0039215686, 0.0039215686, 0.7176470588,\n      0.1843137254901961, 0.0039215686, 0.0039215686, 0.7333333333, 0.18823529411764706,\n      0.0039215686, 0.0039215686, 0.7490196078, 0.19215686274509805, 0.0039215686, 0.0039215686,\n      0.7607843137, 0.19607843137254902, 0.0039215686, 0.0039215686, 0.7764705882, 0.2,\n      0.0039215686, 0.0039215686, 0.7921568627, 0.20392156862745098, 0.0039215686, 0.0039215686,\n      0.8078431373, 0.20784313725490197, 0.0039215686, 0.0039215686, 0.8235294118,\n      0.21176470588235294, 0.0039215686, 0.0039215686, 0.8392156863, 0.21568627450980393,\n      0.0039215686, 0.0039215686, 0.8549019608, 0.2196078431372549, 0.0039215686, 0.0039215686,\n      0.8705882353, 0.2235294117647059, 0.0039215686, 0.0039215686, 0.8862745098,\n      0.22745098039215686, 0.0039215686, 0.0039215686, 0.9019607843, 0.23137254901960785,\n      0.0039215686, 0.0039215686, 0.9176470588, 0.23529411764705885, 0.0039215686, 0.0039215686,\n      0.9333333333, 0.23921568627450984, 0.0039215686, 0.0039215686, 0.9490196078,\n      0.24313725490196078, 0.0039215686, 0.0039215686, 0.9647058824, 0.24705882352941178,\n      0.0039215686, 0.0039215686, 0.9803921569, 0.25098039215686274, 0.0039215686, 0.0039215686,\n      0.9960784314, 0.2549019607843137, 0.0039215686, 0.0039215686, 0.9960784314,\n      0.25882352941176473, 0.0156862745, 0.0039215686, 0.9803921569, 0.2627450980392157,\n      0.031372549, 0.0039215686, 0.9647058824, 0.26666666666666666, 0.0470588235, 0.0039215686,\n      0.9490196078, 0.27058823529411763, 0.062745098, 0.0039215686, 0.9333333333,\n      0.27450980392156865, 0.0784313725, 0.0039215686, 0.9176470588, 0.2784313725490196,\n      0.0941176471, 0.0039215686, 0.9019607843, 0.2823529411764706, 0.1098039216, 0.0039215686,\n      0.8862745098, 0.28627450980392155, 0.1254901961, 0.0039215686, 0.8705882353,\n      0.2901960784313726, 0.1411764706, 0.0039215686, 0.8549019608, 0.29411764705882354,\n      0.1568627451, 0.0039215686, 0.8392156863, 0.2980392156862745, 0.1725490196, 0.0039215686,\n      0.8235294118, 0.30196078431372547, 0.1882352941, 0.0039215686, 0.8078431373,\n      0.3058823529411765, 0.2039215686, 0.0039215686, 0.7921568627, 0.30980392156862746,\n      0.2196078431, 0.0039215686, 0.7764705882, 0.3137254901960784, 0.2352941176, 0.0039215686,\n      0.7607843137, 0.3176470588235294, 0.2509803922, 0.0039215686, 0.7490196078,\n      0.3215686274509804, 0.262745098, 0.0039215686, 0.7333333333, 0.3254901960784314, 0.2784313725,\n      0.0039215686, 0.7176470588, 0.32941176470588235, 0.2941176471, 0.0039215686, 0.7019607843,\n      0.3333333333333333, 0.3098039216, 0.0039215686, 0.6862745098, 0.33725490196078434,\n      0.3254901961, 0.0039215686, 0.6705882353, 0.3411764705882353, 0.3411764706, 0.0039215686,\n      0.6549019608, 0.34509803921568627, 0.3568627451, 0.0039215686, 0.6392156863,\n      0.34901960784313724, 0.3725490196, 0.0039215686, 0.6235294118, 0.35294117647058826,\n      0.3882352941, 0.0039215686, 0.6078431373, 0.3568627450980392, 0.4039215686, 0.0039215686,\n      0.5921568627, 0.3607843137254902, 0.4196078431, 0.0039215686, 0.5764705882,\n      0.36470588235294116, 0.4352941176, 0.0039215686, 0.5607843137, 0.3686274509803922,\n      0.4509803922, 0.0039215686, 0.5450980392, 0.37254901960784315, 0.4666666667, 0.0039215686,\n      0.5294117647, 0.3764705882352941, 0.4823529412, 0.0039215686, 0.5137254902,\n      0.3803921568627451, 0.4980392157, 0.0039215686, 0.4980392157, 0.3843137254901961,\n      0.5137254902, 0.0039215686, 0.4823529412, 0.38823529411764707, 0.5294117647, 0.0039215686,\n      0.4666666667, 0.39215686274509803, 0.5450980392, 0.0039215686, 0.4509803922,\n      0.396078431372549, 0.5607843137, 0.0039215686, 0.4352941176, 0.4, 0.5764705882, 0.0039215686,\n      0.4196078431, 0.403921568627451, 0.5921568627, 0.0039215686, 0.4039215686,\n      0.40784313725490196, 0.6078431373, 0.0039215686, 0.3882352941, 0.4117647058823529,\n      0.6235294118, 0.0039215686, 0.3725490196, 0.41568627450980394, 0.6392156863, 0.0039215686,\n      0.3568627451, 0.4196078431372549, 0.6549019608, 0.0039215686, 0.3411764706,\n      0.4235294117647059, 0.6705882353, 0.0039215686, 0.3254901961, 0.42745098039215684,\n      0.6862745098, 0.0039215686, 0.3098039216, 0.43137254901960786, 0.7019607843, 0.0039215686,\n      0.2941176471, 0.43529411764705883, 0.7176470588, 0.0039215686, 0.2784313725,\n      0.4392156862745098, 0.7333333333, 0.0039215686, 0.262745098, 0.44313725490196076,\n      0.7490196078, 0.0039215686, 0.2509803922, 0.4470588235294118, 0.7607843137, 0.0039215686,\n      0.2352941176, 0.45098039215686275, 0.7764705882, 0.0039215686, 0.2196078431,\n      0.4549019607843137, 0.7921568627, 0.0039215686, 0.2039215686, 0.4588235294117647,\n      0.8078431373, 0.0039215686, 0.1882352941, 0.4627450980392157, 0.8235294118, 0.0039215686,\n      0.1725490196, 0.4666666666666667, 0.8392156863, 0.0039215686, 0.1568627451,\n      0.4705882352941177, 0.8549019608, 0.0039215686, 0.1411764706, 0.4745098039215686,\n      0.8705882353, 0.0039215686, 0.1254901961, 0.4784313725490197, 0.8862745098, 0.0039215686,\n      0.1098039216, 0.48235294117647065, 0.9019607843, 0.0039215686, 0.0941176471,\n      0.48627450980392156, 0.9176470588, 0.0039215686, 0.0784313725, 0.49019607843137253,\n      0.9333333333, 0.0039215686, 0.062745098, 0.49411764705882355, 0.9490196078, 0.0039215686,\n      0.0470588235, 0.4980392156862745, 0.9647058824, 0.0039215686, 0.031372549, 0.5019607843137255,\n      0.9803921569, 0.0039215686, 0.0156862745, 0.5058823529411764, 0.9960784314, 0.0039215686,\n      0.0039215686, 0.5098039215686274, 0.9960784314, 0.0156862745, 0.0039215686,\n      0.5137254901960784, 0.9960784314, 0.031372549, 0.0039215686, 0.5176470588235295, 0.9960784314,\n      0.0470588235, 0.0039215686, 0.5215686274509804, 0.9960784314, 0.062745098, 0.0039215686,\n      0.5254901960784314, 0.9960784314, 0.0784313725, 0.0039215686, 0.5294117647058824,\n      0.9960784314, 0.0941176471, 0.0039215686, 0.5333333333333333, 0.9960784314, 0.1098039216,\n      0.0039215686, 0.5372549019607843, 0.9960784314, 0.1254901961, 0.0039215686,\n      0.5411764705882353, 0.9960784314, 0.1411764706, 0.0039215686, 0.5450980392156862,\n      0.9960784314, 0.1568627451, 0.0039215686, 0.5490196078431373, 0.9960784314, 0.1725490196,\n      0.0039215686, 0.5529411764705883, 0.9960784314, 0.1882352941, 0.0039215686,\n      0.5568627450980392, 0.9960784314, 0.2039215686, 0.0039215686, 0.5607843137254902,\n      0.9960784314, 0.2196078431, 0.0039215686, 0.5647058823529412, 0.9960784314, 0.2352941176,\n      0.0039215686, 0.5686274509803921, 0.9960784314, 0.2509803922, 0.0039215686,\n      0.5725490196078431, 0.9960784314, 0.262745098, 0.0039215686, 0.5764705882352941, 0.9960784314,\n      0.2784313725, 0.0039215686, 0.5803921568627451, 0.9960784314, 0.2941176471, 0.0039215686,\n      0.5843137254901961, 0.9960784314, 0.3098039216, 0.0039215686, 0.5882352941176471,\n      0.9960784314, 0.3254901961, 0.0039215686, 0.592156862745098, 0.9960784314, 0.3411764706,\n      0.0039215686, 0.596078431372549, 0.9960784314, 0.3568627451, 0.0039215686, 0.6, 0.9960784314,\n      0.3725490196, 0.0039215686, 0.6039215686274509, 0.9960784314, 0.3882352941, 0.0039215686,\n      0.6078431372549019, 0.9960784314, 0.4039215686, 0.0039215686, 0.611764705882353, 0.9960784314,\n      0.4196078431, 0.0039215686, 0.615686274509804, 0.9960784314, 0.4352941176, 0.0039215686,\n      0.6196078431372549, 0.9960784314, 0.4509803922, 0.0039215686, 0.6235294117647059,\n      0.9960784314, 0.4666666667, 0.0039215686, 0.6274509803921569, 0.9960784314, 0.4823529412,\n      0.0039215686, 0.6313725490196078, 0.9960784314, 0.4980392157, 0.0039215686,\n      0.6352941176470588, 0.9960784314, 0.5137254902, 0.0039215686, 0.6392156862745098,\n      0.9960784314, 0.5294117647, 0.0039215686, 0.6431372549019608, 0.9960784314, 0.5450980392,\n      0.0039215686, 0.6470588235294118, 0.9960784314, 0.5607843137, 0.0039215686,\n      0.6509803921568628, 0.9960784314, 0.5764705882, 0.0039215686, 0.6549019607843137,\n      0.9960784314, 0.5921568627, 0.0039215686, 0.6588235294117647, 0.9960784314, 0.6078431373,\n      0.0039215686, 0.6627450980392157, 0.9960784314, 0.6235294118, 0.0039215686,\n      0.6666666666666666, 0.9960784314, 0.6392156863, 0.0039215686, 0.6705882352941176,\n      0.9960784314, 0.6549019608, 0.0039215686, 0.6745098039215687, 0.9960784314, 0.6705882353,\n      0.0039215686, 0.6784313725490196, 0.9960784314, 0.6862745098, 0.0039215686,\n      0.6823529411764706, 0.9960784314, 0.7019607843, 0.0039215686, 0.6862745098039216,\n      0.9960784314, 0.7176470588, 0.0039215686, 0.6901960784313725, 0.9960784314, 0.7333333333,\n      0.0039215686, 0.6941176470588235, 0.9960784314, 0.7490196078, 0.0039215686,\n      0.6980392156862745, 0.9960784314, 0.7607843137, 0.0039215686, 0.7019607843137254,\n      0.9960784314, 0.7764705882, 0.0039215686, 0.7058823529411765, 0.9960784314, 0.7921568627,\n      0.0039215686, 0.7098039215686275, 0.9960784314, 0.8078431373, 0.0039215686,\n      0.7137254901960784, 0.9960784314, 0.8235294118, 0.0039215686, 0.7176470588235294,\n      0.9960784314, 0.8392156863, 0.0039215686, 0.7215686274509804, 0.9960784314, 0.8549019608,\n      0.0039215686, 0.7254901960784313, 0.9960784314, 0.8705882353, 0.0039215686,\n      0.7294117647058823, 0.9960784314, 0.8862745098, 0.0039215686, 0.7333333333333333,\n      0.9960784314, 0.9019607843, 0.0039215686, 0.7372549019607844, 0.9960784314, 0.9176470588,\n      0.0039215686, 0.7411764705882353, 0.9960784314, 0.9333333333, 0.0039215686,\n      0.7450980392156863, 0.9960784314, 0.9490196078, 0.0039215686, 0.7490196078431373,\n      0.9960784314, 0.9647058824, 0.0039215686, 0.7529411764705882, 0.9960784314, 0.9803921569,\n      0.0039215686, 0.7568627450980392, 0.9960784314, 0.9960784314, 0.0039215686,\n      0.7607843137254902, 0.9960784314, 0.9960784314, 0.0196078431, 0.7647058823529411,\n      0.9960784314, 0.9960784314, 0.0352941176, 0.7686274509803922, 0.9960784314, 0.9960784314,\n      0.0509803922, 0.7725490196078432, 0.9960784314, 0.9960784314, 0.0666666667,\n      0.7764705882352941, 0.9960784314, 0.9960784314, 0.0823529412, 0.7803921568627451,\n      0.9960784314, 0.9960784314, 0.0980392157, 0.7843137254901961, 0.9960784314, 0.9960784314,\n      0.1137254902, 0.788235294117647, 0.9960784314, 0.9960784314, 0.1294117647, 0.792156862745098,\n      0.9960784314, 0.9960784314, 0.1450980392, 0.796078431372549, 0.9960784314, 0.9960784314,\n      0.1607843137, 0.8, 0.9960784314, 0.9960784314, 0.1764705882, 0.803921568627451, 0.9960784314,\n      0.9960784314, 0.1921568627, 0.807843137254902, 0.9960784314, 0.9960784314, 0.2078431373,\n      0.8117647058823529, 0.9960784314, 0.9960784314, 0.2235294118, 0.8156862745098039,\n      0.9960784314, 0.9960784314, 0.2392156863, 0.8196078431372549, 0.9960784314, 0.9960784314,\n      0.2509803922, 0.8235294117647058, 0.9960784314, 0.9960784314, 0.2666666667,\n      0.8274509803921568, 0.9960784314, 0.9960784314, 0.2823529412, 0.8313725490196079,\n      0.9960784314, 0.9960784314, 0.2980392157, 0.8352941176470589, 0.9960784314, 0.9960784314,\n      0.3137254902, 0.8392156862745098, 0.9960784314, 0.9960784314, 0.3333333333,\n      0.8431372549019608, 0.9960784314, 0.9960784314, 0.3490196078, 0.8470588235294118,\n      0.9960784314, 0.9960784314, 0.3647058824, 0.8509803921568627, 0.9960784314, 0.9960784314,\n      0.3803921569, 0.8549019607843137, 0.9960784314, 0.9960784314, 0.3960784314,\n      0.8588235294117647, 0.9960784314, 0.9960784314, 0.4117647059, 0.8627450980392157,\n      0.9960784314, 0.9960784314, 0.4274509804, 0.8666666666666667, 0.9960784314, 0.9960784314,\n      0.4431372549, 0.8705882352941177, 0.9960784314, 0.9960784314, 0.4588235294,\n      0.8745098039215686, 0.9960784314, 0.9960784314, 0.4745098039, 0.8784313725490196,\n      0.9960784314, 0.9960784314, 0.4901960784, 0.8823529411764706, 0.9960784314, 0.9960784314,\n      0.5058823529, 0.8862745098039215, 0.9960784314, 0.9960784314, 0.5215686275,\n      0.8901960784313725, 0.9960784314, 0.9960784314, 0.537254902, 0.8941176470588236, 0.9960784314,\n      0.9960784314, 0.5529411765, 0.8980392156862745, 0.9960784314, 0.9960784314, 0.568627451,\n      0.9019607843137255, 0.9960784314, 0.9960784314, 0.5843137255, 0.9058823529411765,\n      0.9960784314, 0.9960784314, 0.6, 0.9098039215686274, 0.9960784314, 0.9960784314, 0.6156862745,\n      0.9137254901960784, 0.9960784314, 0.9960784314, 0.631372549, 0.9176470588235294, 0.9960784314,\n      0.9960784314, 0.6470588235, 0.9215686274509803, 0.9960784314, 0.9960784314, 0.6666666667,\n      0.9254901960784314, 0.9960784314, 0.9960784314, 0.6823529412, 0.9294117647058824,\n      0.9960784314, 0.9960784314, 0.6980392157, 0.9333333333333333, 0.9960784314, 0.9960784314,\n      0.7137254902, 0.9372549019607843, 0.9960784314, 0.9960784314, 0.7294117647,\n      0.9411764705882354, 0.9960784314, 0.9960784314, 0.7450980392, 0.9450980392156864,\n      0.9960784314, 0.9960784314, 0.7568627451, 0.9490196078431372, 0.9960784314, 0.9960784314,\n      0.7725490196, 0.9529411764705882, 0.9960784314, 0.9960784314, 0.7882352941,\n      0.9568627450980394, 0.9960784314, 0.9960784314, 0.8039215686, 0.9607843137254903,\n      0.9960784314, 0.9960784314, 0.8196078431, 0.9647058823529413, 0.9960784314, 0.9960784314,\n      0.8352941176, 0.9686274509803922, 0.9960784314, 0.9960784314, 0.8509803922,\n      0.9725490196078431, 0.9960784314, 0.9960784314, 0.8666666667, 0.9764705882352941,\n      0.9960784314, 0.9960784314, 0.8823529412, 0.9803921568627451, 0.9960784314, 0.9960784314,\n      0.8980392157, 0.984313725490196, 0.9960784314, 0.9960784314, 0.9137254902, 0.9882352941176471,\n      0.9960784314, 0.9960784314, 0.9294117647, 0.9921568627450981, 0.9960784314, 0.9960784314,\n      0.9450980392, 0.996078431372549, 0.9960784314, 0.9960784314, 0.9607843137, 1.0, 0.9960784314,\n      0.9960784314, 0.9607843137,\n    ],\n    description: 'Hot Iron',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'red_hot',\n    name: 'red_hot',\n    RGBPoints: [\n      0.0, 0.0, 0.0, 0.0, 0.00392156862745098, 0.0, 0.0, 0.0, 0.00784313725490196, 0.0, 0.0, 0.0,\n      0.011764705882352941, 0.0, 0.0, 0.0, 0.01568627450980392, 0.0039215686, 0.0039215686,\n      0.0039215686, 0.0196078431372549, 0.0039215686, 0.0039215686, 0.0039215686,\n      0.023529411764705882, 0.0039215686, 0.0039215686, 0.0039215686, 0.027450980392156862,\n      0.0039215686, 0.0039215686, 0.0039215686, 0.03137254901960784, 0.0039215686, 0.0039215686,\n      0.0039215686, 0.03529411764705882, 0.0156862745, 0.0, 0.0, 0.0392156862745098, 0.0274509804,\n      0.0, 0.0, 0.043137254901960784, 0.0392156863, 0.0, 0.0, 0.047058823529411764, 0.0509803922,\n      0.0, 0.0, 0.050980392156862744, 0.062745098, 0.0, 0.0, 0.054901960784313725, 0.0784313725,\n      0.0, 0.0, 0.05882352941176471, 0.0901960784, 0.0, 0.0, 0.06274509803921569, 0.1058823529, 0.0,\n      0.0, 0.06666666666666667, 0.1176470588, 0.0, 0.0, 0.07058823529411765, 0.1294117647, 0.0, 0.0,\n      0.07450980392156863, 0.1411764706, 0.0, 0.0, 0.0784313725490196, 0.1529411765, 0.0, 0.0,\n      0.08235294117647059, 0.1647058824, 0.0, 0.0, 0.08627450980392157, 0.1764705882, 0.0, 0.0,\n      0.09019607843137255, 0.1882352941, 0.0, 0.0, 0.09411764705882353, 0.2039215686, 0.0, 0.0,\n      0.09803921568627451, 0.2156862745, 0.0, 0.0, 0.10196078431372549, 0.2274509804, 0.0, 0.0,\n      0.10588235294117647, 0.2392156863, 0.0, 0.0, 0.10980392156862745, 0.2549019608, 0.0, 0.0,\n      0.11372549019607843, 0.2666666667, 0.0, 0.0, 0.11764705882352942, 0.2784313725, 0.0, 0.0,\n      0.12156862745098039, 0.2901960784, 0.0, 0.0, 0.12549019607843137, 0.3058823529, 0.0, 0.0,\n      0.12941176470588237, 0.3176470588, 0.0, 0.0, 0.13333333333333333, 0.3294117647, 0.0, 0.0,\n      0.13725490196078433, 0.3411764706, 0.0, 0.0, 0.1411764705882353, 0.3529411765, 0.0, 0.0,\n      0.1450980392156863, 0.3647058824, 0.0, 0.0, 0.14901960784313725, 0.3764705882, 0.0, 0.0,\n      0.15294117647058825, 0.3882352941, 0.0, 0.0, 0.1568627450980392, 0.4039215686, 0.0, 0.0,\n      0.1607843137254902, 0.4156862745, 0.0, 0.0, 0.16470588235294117, 0.431372549, 0.0, 0.0,\n      0.16862745098039217, 0.4431372549, 0.0, 0.0, 0.17254901960784313, 0.4588235294, 0.0, 0.0,\n      0.17647058823529413, 0.4705882353, 0.0, 0.0, 0.1803921568627451, 0.4823529412, 0.0, 0.0,\n      0.1843137254901961, 0.4941176471, 0.0, 0.0, 0.18823529411764706, 0.5098039216, 0.0, 0.0,\n      0.19215686274509805, 0.5215686275, 0.0, 0.0, 0.19607843137254902, 0.5333333333, 0.0, 0.0, 0.2,\n      0.5450980392, 0.0, 0.0, 0.20392156862745098, 0.5568627451, 0.0, 0.0, 0.20784313725490197,\n      0.568627451, 0.0, 0.0, 0.21176470588235294, 0.5803921569, 0.0, 0.0, 0.21568627450980393,\n      0.5921568627, 0.0, 0.0, 0.2196078431372549, 0.6078431373, 0.0, 0.0, 0.2235294117647059,\n      0.6196078431, 0.0, 0.0, 0.22745098039215686, 0.631372549, 0.0, 0.0, 0.23137254901960785,\n      0.6431372549, 0.0, 0.0, 0.23529411764705885, 0.6588235294, 0.0, 0.0, 0.23921568627450984,\n      0.6705882353, 0.0, 0.0, 0.24313725490196078, 0.6823529412, 0.0, 0.0, 0.24705882352941178,\n      0.6941176471, 0.0, 0.0, 0.25098039215686274, 0.7098039216, 0.0, 0.0, 0.2549019607843137,\n      0.7215686275, 0.0, 0.0, 0.25882352941176473, 0.7333333333, 0.0, 0.0, 0.2627450980392157,\n      0.7450980392, 0.0, 0.0, 0.26666666666666666, 0.7568627451, 0.0, 0.0, 0.27058823529411763,\n      0.768627451, 0.0, 0.0, 0.27450980392156865, 0.7843137255, 0.0, 0.0, 0.2784313725490196,\n      0.7960784314, 0.0, 0.0, 0.2823529411764706, 0.8117647059, 0.0, 0.0, 0.28627450980392155,\n      0.8235294118, 0.0, 0.0, 0.2901960784313726, 0.8352941176, 0.0, 0.0, 0.29411764705882354,\n      0.8470588235, 0.0, 0.0, 0.2980392156862745, 0.862745098, 0.0, 0.0, 0.30196078431372547,\n      0.8745098039, 0.0, 0.0, 0.3058823529411765, 0.8862745098, 0.0, 0.0, 0.30980392156862746,\n      0.8980392157, 0.0, 0.0, 0.3137254901960784, 0.9137254902, 0.0, 0.0, 0.3176470588235294,\n      0.9254901961, 0.0, 0.0, 0.3215686274509804, 0.937254902, 0.0, 0.0, 0.3254901960784314,\n      0.9490196078, 0.0, 0.0, 0.32941176470588235, 0.9607843137, 0.0, 0.0, 0.3333333333333333,\n      0.968627451, 0.0, 0.0, 0.33725490196078434, 0.9803921569, 0.0039215686, 0.0,\n      0.3411764705882353, 0.9882352941, 0.0078431373, 0.0, 0.34509803921568627, 1.0, 0.0117647059,\n      0.0, 0.34901960784313724, 1.0, 0.0235294118, 0.0, 0.35294117647058826, 1.0, 0.0352941176, 0.0,\n      0.3568627450980392, 1.0, 0.0470588235, 0.0, 0.3607843137254902, 1.0, 0.062745098, 0.0,\n      0.36470588235294116, 1.0, 0.0745098039, 0.0, 0.3686274509803922, 1.0, 0.0862745098, 0.0,\n      0.37254901960784315, 1.0, 0.0980392157, 0.0, 0.3764705882352941, 1.0, 0.1137254902, 0.0,\n      0.3803921568627451, 1.0, 0.1254901961, 0.0, 0.3843137254901961, 1.0, 0.137254902, 0.0,\n      0.38823529411764707, 1.0, 0.1490196078, 0.0, 0.39215686274509803, 1.0, 0.1647058824, 0.0,\n      0.396078431372549, 1.0, 0.1764705882, 0.0, 0.4, 1.0, 0.1882352941, 0.0, 0.403921568627451,\n      1.0, 0.2, 0.0, 0.40784313725490196, 1.0, 0.2156862745, 0.0, 0.4117647058823529, 1.0,\n      0.2274509804, 0.0, 0.41568627450980394, 1.0, 0.2392156863, 0.0, 0.4196078431372549, 1.0,\n      0.2509803922, 0.0, 0.4235294117647059, 1.0, 0.2666666667, 0.0, 0.42745098039215684, 1.0,\n      0.2784313725, 0.0, 0.43137254901960786, 1.0, 0.2901960784, 0.0, 0.43529411764705883, 1.0,\n      0.3019607843, 0.0, 0.4392156862745098, 1.0, 0.3176470588, 0.0, 0.44313725490196076, 1.0,\n      0.3294117647, 0.0, 0.4470588235294118, 1.0, 0.3411764706, 0.0, 0.45098039215686275, 1.0,\n      0.3529411765, 0.0, 0.4549019607843137, 1.0, 0.368627451, 0.0, 0.4588235294117647, 1.0,\n      0.3803921569, 0.0, 0.4627450980392157, 1.0, 0.3921568627, 0.0, 0.4666666666666667, 1.0,\n      0.4039215686, 0.0, 0.4705882352941177, 1.0, 0.4156862745, 0.0, 0.4745098039215686, 1.0,\n      0.4274509804, 0.0, 0.4784313725490197, 1.0, 0.4392156863, 0.0, 0.48235294117647065, 1.0,\n      0.4509803922, 0.0, 0.48627450980392156, 1.0, 0.4666666667, 0.0, 0.49019607843137253, 1.0,\n      0.4784313725, 0.0, 0.49411764705882355, 1.0, 0.4941176471, 0.0, 0.4980392156862745, 1.0,\n      0.5058823529, 0.0, 0.5019607843137255, 1.0, 0.5215686275, 0.0, 0.5058823529411764, 1.0,\n      0.5333333333, 0.0, 0.5098039215686274, 1.0, 0.5450980392, 0.0, 0.5137254901960784, 1.0,\n      0.5568627451, 0.0, 0.5176470588235295, 1.0, 0.568627451, 0.0, 0.5215686274509804, 1.0,\n      0.5803921569, 0.0, 0.5254901960784314, 1.0, 0.5921568627, 0.0, 0.5294117647058824, 1.0,\n      0.6039215686, 0.0, 0.5333333333333333, 1.0, 0.6196078431, 0.0, 0.5372549019607843, 1.0,\n      0.631372549, 0.0, 0.5411764705882353, 1.0, 0.6431372549, 0.0, 0.5450980392156862, 1.0,\n      0.6549019608, 0.0, 0.5490196078431373, 1.0, 0.6705882353, 0.0, 0.5529411764705883, 1.0,\n      0.6823529412, 0.0, 0.5568627450980392, 1.0, 0.6941176471, 0.0, 0.5607843137254902, 1.0,\n      0.7058823529, 0.0, 0.5647058823529412, 1.0, 0.7215686275, 0.0, 0.5686274509803921, 1.0,\n      0.7333333333, 0.0, 0.5725490196078431, 1.0, 0.7450980392, 0.0, 0.5764705882352941, 1.0,\n      0.7568627451, 0.0, 0.5803921568627451, 1.0, 0.7725490196, 0.0, 0.5843137254901961, 1.0,\n      0.7843137255, 0.0, 0.5882352941176471, 1.0, 0.7960784314, 0.0, 0.592156862745098, 1.0,\n      0.8078431373, 0.0, 0.596078431372549, 1.0, 0.8196078431, 0.0, 0.6, 1.0, 0.831372549, 0.0,\n      0.6039215686274509, 1.0, 0.8470588235, 0.0, 0.6078431372549019, 1.0, 0.8588235294, 0.0,\n      0.611764705882353, 1.0, 0.8745098039, 0.0, 0.615686274509804, 1.0, 0.8862745098, 0.0,\n      0.6196078431372549, 1.0, 0.8980392157, 0.0, 0.6235294117647059, 1.0, 0.9098039216, 0.0,\n      0.6274509803921569, 1.0, 0.9254901961, 0.0, 0.6313725490196078, 1.0, 0.937254902, 0.0,\n      0.6352941176470588, 1.0, 0.9490196078, 0.0, 0.6392156862745098, 1.0, 0.9607843137, 0.0,\n      0.6431372549019608, 1.0, 0.9764705882, 0.0, 0.6470588235294118, 1.0, 0.9803921569,\n      0.0039215686, 0.6509803921568628, 1.0, 0.9882352941, 0.0117647059, 0.6549019607843137, 1.0,\n      0.9921568627, 0.0156862745, 0.6588235294117647, 1.0, 1.0, 0.0235294118, 0.6627450980392157,\n      1.0, 1.0, 0.0352941176, 0.6666666666666666, 1.0, 1.0, 0.0470588235, 0.6705882352941176, 1.0,\n      1.0, 0.0588235294, 0.6745098039215687, 1.0, 1.0, 0.0745098039, 0.6784313725490196, 1.0, 1.0,\n      0.0862745098, 0.6823529411764706, 1.0, 1.0, 0.0980392157, 0.6862745098039216, 1.0, 1.0,\n      0.1098039216, 0.6901960784313725, 1.0, 1.0, 0.1254901961, 0.6941176470588235, 1.0, 1.0,\n      0.137254902, 0.6980392156862745, 1.0, 1.0, 0.1490196078, 0.7019607843137254, 1.0, 1.0,\n      0.1607843137, 0.7058823529411765, 1.0, 1.0, 0.1764705882, 0.7098039215686275, 1.0, 1.0,\n      0.1882352941, 0.7137254901960784, 1.0, 1.0, 0.2, 0.7176470588235294, 1.0, 1.0, 0.2117647059,\n      0.7215686274509804, 1.0, 1.0, 0.2274509804, 0.7254901960784313, 1.0, 1.0, 0.2392156863,\n      0.7294117647058823, 1.0, 1.0, 0.2509803922, 0.7333333333333333, 1.0, 1.0, 0.262745098,\n      0.7372549019607844, 1.0, 1.0, 0.2784313725, 0.7411764705882353, 1.0, 1.0, 0.2901960784,\n      0.7450980392156863, 1.0, 1.0, 0.3019607843, 0.7490196078431373, 1.0, 1.0, 0.3137254902,\n      0.7529411764705882, 1.0, 1.0, 0.3294117647, 0.7568627450980392, 1.0, 1.0, 0.3411764706,\n      0.7607843137254902, 1.0, 1.0, 0.3529411765, 0.7647058823529411, 1.0, 1.0, 0.3647058824,\n      0.7686274509803922, 1.0, 1.0, 0.3803921569, 0.7725490196078432, 1.0, 1.0, 0.3921568627,\n      0.7764705882352941, 1.0, 1.0, 0.4039215686, 0.7803921568627451, 1.0, 1.0, 0.4156862745,\n      0.7843137254901961, 1.0, 1.0, 0.431372549, 0.788235294117647, 1.0, 1.0, 0.4431372549,\n      0.792156862745098, 1.0, 1.0, 0.4549019608, 0.796078431372549, 1.0, 1.0, 0.4666666667, 0.8,\n      1.0, 1.0, 0.4784313725, 0.803921568627451, 1.0, 1.0, 0.4901960784, 0.807843137254902, 1.0,\n      1.0, 0.5019607843, 0.8117647058823529, 1.0, 1.0, 0.5137254902, 0.8156862745098039, 1.0, 1.0,\n      0.5294117647, 0.8196078431372549, 1.0, 1.0, 0.5411764706, 0.8235294117647058, 1.0, 1.0,\n      0.5568627451, 0.8274509803921568, 1.0, 1.0, 0.568627451, 0.8313725490196079, 1.0, 1.0,\n      0.5843137255, 0.8352941176470589, 1.0, 1.0, 0.5960784314, 0.8392156862745098, 1.0, 1.0,\n      0.6078431373, 0.8431372549019608, 1.0, 1.0, 0.6196078431, 0.8470588235294118, 1.0, 1.0,\n      0.631372549, 0.8509803921568627, 1.0, 1.0, 0.6431372549, 0.8549019607843137, 1.0, 1.0,\n      0.6549019608, 0.8588235294117647, 1.0, 1.0, 0.6666666667, 0.8627450980392157, 1.0, 1.0,\n      0.6823529412, 0.8666666666666667, 1.0, 1.0, 0.6941176471, 0.8705882352941177, 1.0, 1.0,\n      0.7058823529, 0.8745098039215686, 1.0, 1.0, 0.7176470588, 0.8784313725490196, 1.0, 1.0,\n      0.7333333333, 0.8823529411764706, 1.0, 1.0, 0.7450980392, 0.8862745098039215, 1.0, 1.0,\n      0.7568627451, 0.8901960784313725, 1.0, 1.0, 0.768627451, 0.8941176470588236, 1.0, 1.0,\n      0.7843137255, 0.8980392156862745, 1.0, 1.0, 0.7960784314, 0.9019607843137255, 1.0, 1.0,\n      0.8078431373, 0.9058823529411765, 1.0, 1.0, 0.8196078431, 0.9098039215686274, 1.0, 1.0,\n      0.8352941176, 0.9137254901960784, 1.0, 1.0, 0.8470588235, 0.9176470588235294, 1.0, 1.0,\n      0.8588235294, 0.9215686274509803, 1.0, 1.0, 0.8705882353, 0.9254901960784314, 1.0, 1.0,\n      0.8823529412, 0.9294117647058824, 1.0, 1.0, 0.8941176471, 0.9333333333333333, 1.0, 1.0,\n      0.9098039216, 0.9372549019607843, 1.0, 1.0, 0.9215686275, 0.9411764705882354, 1.0, 1.0,\n      0.937254902, 0.9450980392156864, 1.0, 1.0, 0.9490196078, 0.9490196078431372, 1.0, 1.0,\n      0.9607843137, 0.9529411764705882, 1.0, 1.0, 0.9725490196, 0.9568627450980394, 1.0, 1.0,\n      0.9882352941, 0.9607843137254903, 1.0, 1.0, 0.9882352941, 0.9647058823529413, 1.0, 1.0,\n      0.9921568627, 0.9686274509803922, 1.0, 1.0, 0.9960784314, 0.9725490196078431, 1.0, 1.0, 1.0,\n      0.9764705882352941, 1.0, 1.0, 1.0, 0.9803921568627451, 1.0, 1.0, 1.0, 0.984313725490196, 1.0,\n      1.0, 1.0, 0.9882352941176471, 1.0, 1.0, 1.0, 0.9921568627450981, 1.0, 1.0, 1.0,\n      0.996078431372549, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n    ],\n    description: 'Red Hot',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 's_pet',\n    name: 's_pet',\n    RGBPoints: [\n      0.0, 0.0156862745, 0.0039215686, 0.0156862745, 0.00392156862745098, 0.0156862745,\n      0.0039215686, 0.0156862745, 0.00784313725490196, 0.0274509804, 0.0039215686, 0.031372549,\n      0.011764705882352941, 0.0352941176, 0.0039215686, 0.0509803922, 0.01568627450980392,\n      0.0392156863, 0.0039215686, 0.0666666667, 0.0196078431372549, 0.0509803922, 0.0039215686,\n      0.0823529412, 0.023529411764705882, 0.062745098, 0.0039215686, 0.0980392157,\n      0.027450980392156862, 0.0705882353, 0.0039215686, 0.1176470588, 0.03137254901960784,\n      0.0745098039, 0.0039215686, 0.1333333333, 0.03529411764705882, 0.0862745098, 0.0039215686,\n      0.1490196078, 0.0392156862745098, 0.0980392157, 0.0039215686, 0.1647058824,\n      0.043137254901960784, 0.1058823529, 0.0039215686, 0.1843137255, 0.047058823529411764,\n      0.1098039216, 0.0039215686, 0.2, 0.050980392156862744, 0.1215686275, 0.0039215686,\n      0.2156862745, 0.054901960784313725, 0.1333333333, 0.0039215686, 0.231372549,\n      0.05882352941176471, 0.137254902, 0.0039215686, 0.2509803922, 0.06274509803921569,\n      0.1490196078, 0.0039215686, 0.262745098, 0.06666666666666667, 0.1607843137, 0.0039215686,\n      0.2784313725, 0.07058823529411765, 0.168627451, 0.0039215686, 0.2941176471,\n      0.07450980392156863, 0.1725490196, 0.0039215686, 0.3137254902, 0.0784313725490196,\n      0.1843137255, 0.0039215686, 0.3294117647, 0.08235294117647059, 0.1960784314, 0.0039215686,\n      0.3450980392, 0.08627450980392157, 0.2039215686, 0.0039215686, 0.3607843137,\n      0.09019607843137255, 0.2078431373, 0.0039215686, 0.3803921569, 0.09411764705882353,\n      0.2196078431, 0.0039215686, 0.3960784314, 0.09803921568627451, 0.231372549, 0.0039215686,\n      0.4117647059, 0.10196078431372549, 0.2392156863, 0.0039215686, 0.4274509804,\n      0.10588235294117647, 0.2431372549, 0.0039215686, 0.4470588235, 0.10980392156862745,\n      0.2509803922, 0.0039215686, 0.462745098, 0.11372549019607843, 0.262745098, 0.0039215686,\n      0.4784313725, 0.11764705882352942, 0.2666666667, 0.0039215686, 0.4980392157,\n      0.12156862745098039, 0.2666666667, 0.0039215686, 0.4980392157, 0.12549019607843137,\n      0.262745098, 0.0039215686, 0.5137254902, 0.12941176470588237, 0.2509803922, 0.0039215686,\n      0.5294117647, 0.13333333333333333, 0.2431372549, 0.0039215686, 0.5450980392,\n      0.13725490196078433, 0.2392156863, 0.0039215686, 0.5607843137, 0.1411764705882353,\n      0.231372549, 0.0039215686, 0.5764705882, 0.1450980392156863, 0.2196078431, 0.0039215686,\n      0.5921568627, 0.14901960784313725, 0.2078431373, 0.0039215686, 0.6078431373,\n      0.15294117647058825, 0.2039215686, 0.0039215686, 0.6235294118, 0.1568627450980392,\n      0.1960784314, 0.0039215686, 0.6392156863, 0.1607843137254902, 0.1843137255, 0.0039215686,\n      0.6549019608, 0.16470588235294117, 0.1725490196, 0.0039215686, 0.6705882353,\n      0.16862745098039217, 0.168627451, 0.0039215686, 0.6862745098, 0.17254901960784313,\n      0.1607843137, 0.0039215686, 0.7019607843, 0.17647058823529413, 0.1490196078, 0.0039215686,\n      0.7176470588, 0.1803921568627451, 0.137254902, 0.0039215686, 0.7333333333, 0.1843137254901961,\n      0.1333333333, 0.0039215686, 0.7490196078, 0.18823529411764706, 0.1215686275, 0.0039215686,\n      0.7607843137, 0.19215686274509805, 0.1098039216, 0.0039215686, 0.7764705882,\n      0.19607843137254902, 0.1058823529, 0.0039215686, 0.7921568627, 0.2, 0.0980392157,\n      0.0039215686, 0.8078431373, 0.20392156862745098, 0.0862745098, 0.0039215686, 0.8235294118,\n      0.20784313725490197, 0.0745098039, 0.0039215686, 0.8392156863, 0.21176470588235294,\n      0.0705882353, 0.0039215686, 0.8549019608, 0.21568627450980393, 0.062745098, 0.0039215686,\n      0.8705882353, 0.2196078431372549, 0.0509803922, 0.0039215686, 0.8862745098,\n      0.2235294117647059, 0.0392156863, 0.0039215686, 0.9019607843, 0.22745098039215686,\n      0.0352941176, 0.0039215686, 0.9176470588, 0.23137254901960785, 0.0274509804, 0.0039215686,\n      0.9333333333, 0.23529411764705885, 0.0156862745, 0.0039215686, 0.9490196078,\n      0.23921568627450984, 0.0078431373, 0.0039215686, 0.9647058824, 0.24313725490196078,\n      0.0039215686, 0.0039215686, 0.9960784314, 0.24705882352941178, 0.0039215686, 0.0039215686,\n      0.9960784314, 0.25098039215686274, 0.0039215686, 0.0196078431, 0.9647058824,\n      0.2549019607843137, 0.0039215686, 0.0392156863, 0.9490196078, 0.25882352941176473,\n      0.0039215686, 0.0549019608, 0.9333333333, 0.2627450980392157, 0.0039215686, 0.0745098039,\n      0.9176470588, 0.26666666666666666, 0.0039215686, 0.0901960784, 0.9019607843,\n      0.27058823529411763, 0.0039215686, 0.1098039216, 0.8862745098, 0.27450980392156865,\n      0.0039215686, 0.1254901961, 0.8705882353, 0.2784313725490196, 0.0039215686, 0.1450980392,\n      0.8549019608, 0.2823529411764706, 0.0039215686, 0.1607843137, 0.8392156863,\n      0.28627450980392155, 0.0039215686, 0.1803921569, 0.8235294118, 0.2901960784313726,\n      0.0039215686, 0.1960784314, 0.8078431373, 0.29411764705882354, 0.0039215686, 0.2156862745,\n      0.7921568627, 0.2980392156862745, 0.0039215686, 0.231372549, 0.7764705882,\n      0.30196078431372547, 0.0039215686, 0.2509803922, 0.7607843137, 0.3058823529411765,\n      0.0039215686, 0.262745098, 0.7490196078, 0.30980392156862746, 0.0039215686, 0.2823529412,\n      0.7333333333, 0.3137254901960784, 0.0039215686, 0.2980392157, 0.7176470588,\n      0.3176470588235294, 0.0039215686, 0.3176470588, 0.7019607843, 0.3215686274509804,\n      0.0039215686, 0.3333333333, 0.6862745098, 0.3254901960784314, 0.0039215686, 0.3529411765,\n      0.6705882353, 0.32941176470588235, 0.0039215686, 0.368627451, 0.6549019608,\n      0.3333333333333333, 0.0039215686, 0.3882352941, 0.6392156863, 0.33725490196078434,\n      0.0039215686, 0.4039215686, 0.6235294118, 0.3411764705882353, 0.0039215686, 0.4235294118,\n      0.6078431373, 0.34509803921568627, 0.0039215686, 0.4392156863, 0.5921568627,\n      0.34901960784313724, 0.0039215686, 0.4588235294, 0.5764705882, 0.35294117647058826,\n      0.0039215686, 0.4745098039, 0.5607843137, 0.3568627450980392, 0.0039215686, 0.4941176471,\n      0.5450980392, 0.3607843137254902, 0.0039215686, 0.5098039216, 0.5294117647,\n      0.36470588235294116, 0.0039215686, 0.5294117647, 0.5137254902, 0.3686274509803922,\n      0.0039215686, 0.5450980392, 0.4980392157, 0.37254901960784315, 0.0039215686, 0.5647058824,\n      0.4784313725, 0.3764705882352941, 0.0039215686, 0.5803921569, 0.462745098, 0.3803921568627451,\n      0.0039215686, 0.6, 0.4470588235, 0.3843137254901961, 0.0039215686, 0.6156862745, 0.4274509804,\n      0.38823529411764707, 0.0039215686, 0.6352941176, 0.4117647059, 0.39215686274509803,\n      0.0039215686, 0.6509803922, 0.3960784314, 0.396078431372549, 0.0039215686, 0.6705882353,\n      0.3803921569, 0.4, 0.0039215686, 0.6862745098, 0.3607843137, 0.403921568627451, 0.0039215686,\n      0.7058823529, 0.3450980392, 0.40784313725490196, 0.0039215686, 0.7215686275, 0.3294117647,\n      0.4117647058823529, 0.0039215686, 0.7411764706, 0.3137254902, 0.41568627450980394,\n      0.0039215686, 0.7529411765, 0.2941176471, 0.4196078431372549, 0.0039215686, 0.7960784314,\n      0.2784313725, 0.4235294117647059, 0.0039215686, 0.7960784314, 0.262745098,\n      0.42745098039215684, 0.0392156863, 0.8039215686, 0.2509803922, 0.43137254901960786,\n      0.0745098039, 0.8117647059, 0.231372549, 0.43529411764705883, 0.1098039216, 0.8196078431,\n      0.2156862745, 0.4392156862745098, 0.1450980392, 0.8274509804, 0.2, 0.44313725490196076,\n      0.1803921569, 0.8352941176, 0.1843137255, 0.4470588235294118, 0.2156862745, 0.8431372549,\n      0.1647058824, 0.45098039215686275, 0.2509803922, 0.8509803922, 0.1490196078,\n      0.4549019607843137, 0.2823529412, 0.8588235294, 0.1333333333, 0.4588235294117647,\n      0.3176470588, 0.8666666667, 0.1176470588, 0.4627450980392157, 0.3529411765, 0.8745098039,\n      0.0980392157, 0.4666666666666667, 0.3882352941, 0.8823529412, 0.0823529412,\n      0.4705882352941177, 0.4235294118, 0.8901960784, 0.0666666667, 0.4745098039215686,\n      0.4588235294, 0.8980392157, 0.0509803922, 0.4784313725490197, 0.4941176471, 0.9058823529,\n      0.0431372549, 0.48235294117647065, 0.5294117647, 0.9137254902, 0.031372549,\n      0.48627450980392156, 0.5647058824, 0.9215686275, 0.0196078431, 0.49019607843137253, 0.6,\n      0.9294117647, 0.0078431373, 0.49411764705882355, 0.6352941176, 0.937254902, 0.0039215686,\n      0.4980392156862745, 0.6705882353, 0.9450980392, 0.0039215686, 0.5019607843137255,\n      0.7058823529, 0.9490196078, 0.0039215686, 0.5058823529411764, 0.7411764706, 0.9568627451,\n      0.0039215686, 0.5098039215686274, 0.7725490196, 0.9607843137, 0.0039215686,\n      0.5137254901960784, 0.8078431373, 0.968627451, 0.0039215686, 0.5176470588235295, 0.8431372549,\n      0.9725490196, 0.0039215686, 0.5215686274509804, 0.8784313725, 0.9803921569, 0.0039215686,\n      0.5254901960784314, 0.9137254902, 0.9843137255, 0.0039215686, 0.5294117647058824,\n      0.9490196078, 0.9921568627, 0.0039215686, 0.5333333333333333, 0.9960784314, 0.9960784314,\n      0.0039215686, 0.5372549019607843, 0.9960784314, 0.9960784314, 0.0039215686,\n      0.5411764705882353, 0.9960784314, 0.9921568627, 0.0039215686, 0.5450980392156862,\n      0.9960784314, 0.9843137255, 0.0039215686, 0.5490196078431373, 0.9960784314, 0.9764705882,\n      0.0039215686, 0.5529411764705883, 0.9960784314, 0.968627451, 0.0039215686, 0.5568627450980392,\n      0.9960784314, 0.9607843137, 0.0039215686, 0.5607843137254902, 0.9960784314, 0.9529411765,\n      0.0039215686, 0.5647058823529412, 0.9960784314, 0.9450980392, 0.0039215686,\n      0.5686274509803921, 0.9960784314, 0.937254902, 0.0039215686, 0.5725490196078431, 0.9960784314,\n      0.9294117647, 0.0039215686, 0.5764705882352941, 0.9960784314, 0.9215686275, 0.0039215686,\n      0.5803921568627451, 0.9960784314, 0.9137254902, 0.0039215686, 0.5843137254901961,\n      0.9960784314, 0.9058823529, 0.0039215686, 0.5882352941176471, 0.9960784314, 0.8980392157,\n      0.0039215686, 0.592156862745098, 0.9960784314, 0.8901960784, 0.0039215686, 0.596078431372549,\n      0.9960784314, 0.8823529412, 0.0039215686, 0.6, 0.9960784314, 0.8745098039, 0.0039215686,\n      0.6039215686274509, 0.9960784314, 0.8666666667, 0.0039215686, 0.6078431372549019,\n      0.9960784314, 0.8588235294, 0.0039215686, 0.611764705882353, 0.9960784314, 0.8509803922,\n      0.0039215686, 0.615686274509804, 0.9960784314, 0.8431372549, 0.0039215686, 0.6196078431372549,\n      0.9960784314, 0.8352941176, 0.0039215686, 0.6235294117647059, 0.9960784314, 0.8274509804,\n      0.0039215686, 0.6274509803921569, 0.9960784314, 0.8196078431, 0.0039215686,\n      0.6313725490196078, 0.9960784314, 0.8117647059, 0.0039215686, 0.6352941176470588,\n      0.9960784314, 0.8039215686, 0.0039215686, 0.6392156862745098, 0.9960784314, 0.7960784314,\n      0.0039215686, 0.6431372549019608, 0.9960784314, 0.7882352941, 0.0039215686,\n      0.6470588235294118, 0.9960784314, 0.7803921569, 0.0039215686, 0.6509803921568628,\n      0.9960784314, 0.7725490196, 0.0039215686, 0.6549019607843137, 0.9960784314, 0.7647058824,\n      0.0039215686, 0.6588235294117647, 0.9960784314, 0.7568627451, 0.0039215686,\n      0.6627450980392157, 0.9960784314, 0.7490196078, 0.0039215686, 0.6666666666666666,\n      0.9960784314, 0.7450980392, 0.0039215686, 0.6705882352941176, 0.9960784314, 0.737254902,\n      0.0039215686, 0.6745098039215687, 0.9960784314, 0.7294117647, 0.0039215686,\n      0.6784313725490196, 0.9960784314, 0.7215686275, 0.0039215686, 0.6823529411764706,\n      0.9960784314, 0.7137254902, 0.0039215686, 0.6862745098039216, 0.9960784314, 0.7058823529,\n      0.0039215686, 0.6901960784313725, 0.9960784314, 0.6980392157, 0.0039215686,\n      0.6941176470588235, 0.9960784314, 0.6901960784, 0.0039215686, 0.6980392156862745,\n      0.9960784314, 0.6823529412, 0.0039215686, 0.7019607843137254, 0.9960784314, 0.6745098039,\n      0.0039215686, 0.7058823529411765, 0.9960784314, 0.6666666667, 0.0039215686,\n      0.7098039215686275, 0.9960784314, 0.6588235294, 0.0039215686, 0.7137254901960784,\n      0.9960784314, 0.6509803922, 0.0039215686, 0.7176470588235294, 0.9960784314, 0.6431372549,\n      0.0039215686, 0.7215686274509804, 0.9960784314, 0.6352941176, 0.0039215686,\n      0.7254901960784313, 0.9960784314, 0.6274509804, 0.0039215686, 0.7294117647058823,\n      0.9960784314, 0.6196078431, 0.0039215686, 0.7333333333333333, 0.9960784314, 0.6117647059,\n      0.0039215686, 0.7372549019607844, 0.9960784314, 0.6039215686, 0.0039215686,\n      0.7411764705882353, 0.9960784314, 0.5960784314, 0.0039215686, 0.7450980392156863,\n      0.9960784314, 0.5882352941, 0.0039215686, 0.7490196078431373, 0.9960784314, 0.5803921569,\n      0.0039215686, 0.7529411764705882, 0.9960784314, 0.5725490196, 0.0039215686,\n      0.7568627450980392, 0.9960784314, 0.5647058824, 0.0039215686, 0.7607843137254902,\n      0.9960784314, 0.5568627451, 0.0039215686, 0.7647058823529411, 0.9960784314, 0.5490196078,\n      0.0039215686, 0.7686274509803922, 0.9960784314, 0.5411764706, 0.0039215686,\n      0.7725490196078432, 0.9960784314, 0.5333333333, 0.0039215686, 0.7764705882352941,\n      0.9960784314, 0.5254901961, 0.0039215686, 0.7803921568627451, 0.9960784314, 0.5176470588,\n      0.0039215686, 0.7843137254901961, 0.9960784314, 0.5098039216, 0.0039215686, 0.788235294117647,\n      0.9960784314, 0.5019607843, 0.0039215686, 0.792156862745098, 0.9960784314, 0.4941176471,\n      0.0039215686, 0.796078431372549, 0.9960784314, 0.4862745098, 0.0039215686, 0.8, 0.9960784314,\n      0.4784313725, 0.0039215686, 0.803921568627451, 0.9960784314, 0.4705882353, 0.0039215686,\n      0.807843137254902, 0.9960784314, 0.462745098, 0.0039215686, 0.8117647058823529, 0.9960784314,\n      0.4549019608, 0.0039215686, 0.8156862745098039, 0.9960784314, 0.4470588235, 0.0039215686,\n      0.8196078431372549, 0.9960784314, 0.4392156863, 0.0039215686, 0.8235294117647058,\n      0.9960784314, 0.431372549, 0.0039215686, 0.8274509803921568, 0.9960784314, 0.4235294118,\n      0.0039215686, 0.8313725490196079, 0.9960784314, 0.4156862745, 0.0039215686,\n      0.8352941176470589, 0.9960784314, 0.4078431373, 0.0039215686, 0.8392156862745098,\n      0.9960784314, 0.4, 0.0039215686, 0.8431372549019608, 0.9960784314, 0.3921568627, 0.0039215686,\n      0.8470588235294118, 0.9960784314, 0.3843137255, 0.0039215686, 0.8509803921568627,\n      0.9960784314, 0.3764705882, 0.0039215686, 0.8549019607843137, 0.9960784314, 0.368627451,\n      0.0039215686, 0.8588235294117647, 0.9960784314, 0.3607843137, 0.0039215686,\n      0.8627450980392157, 0.9960784314, 0.3529411765, 0.0039215686, 0.8666666666666667,\n      0.9960784314, 0.3450980392, 0.0039215686, 0.8705882352941177, 0.9960784314, 0.337254902,\n      0.0039215686, 0.8745098039215686, 0.9960784314, 0.3294117647, 0.0039215686,\n      0.8784313725490196, 0.9960784314, 0.3215686275, 0.0039215686, 0.8823529411764706,\n      0.9960784314, 0.3137254902, 0.0039215686, 0.8862745098039215, 0.9960784314, 0.3058823529,\n      0.0039215686, 0.8901960784313725, 0.9960784314, 0.2980392157, 0.0039215686,\n      0.8941176470588236, 0.9960784314, 0.2901960784, 0.0039215686, 0.8980392156862745,\n      0.9960784314, 0.2823529412, 0.0039215686, 0.9019607843137255, 0.9960784314, 0.2705882353,\n      0.0039215686, 0.9058823529411765, 0.9960784314, 0.2588235294, 0.0039215686,\n      0.9098039215686274, 0.9960784314, 0.2509803922, 0.0039215686, 0.9137254901960784,\n      0.9960784314, 0.2431372549, 0.0039215686, 0.9176470588235294, 0.9960784314, 0.231372549,\n      0.0039215686, 0.9215686274509803, 0.9960784314, 0.2196078431, 0.0039215686,\n      0.9254901960784314, 0.9960784314, 0.2117647059, 0.0039215686, 0.9294117647058824,\n      0.9960784314, 0.2, 0.0039215686, 0.9333333333333333, 0.9960784314, 0.1882352941, 0.0039215686,\n      0.9372549019607843, 0.9960784314, 0.1764705882, 0.0039215686, 0.9411764705882354,\n      0.9960784314, 0.168627451, 0.0039215686, 0.9450980392156864, 0.9960784314, 0.1568627451,\n      0.0039215686, 0.9490196078431372, 0.9960784314, 0.1450980392, 0.0039215686,\n      0.9529411764705882, 0.9960784314, 0.1333333333, 0.0039215686, 0.9568627450980394,\n      0.9960784314, 0.1254901961, 0.0039215686, 0.9607843137254903, 0.9960784314, 0.1137254902,\n      0.0039215686, 0.9647058823529413, 0.9960784314, 0.1019607843, 0.0039215686,\n      0.9686274509803922, 0.9960784314, 0.0901960784, 0.0039215686, 0.9725490196078431,\n      0.9960784314, 0.0823529412, 0.0039215686, 0.9764705882352941, 0.9960784314, 0.0705882353,\n      0.0039215686, 0.9803921568627451, 0.9960784314, 0.0588235294, 0.0039215686, 0.984313725490196,\n      0.9960784314, 0.0470588235, 0.0039215686, 0.9882352941176471, 0.9960784314, 0.0392156863,\n      0.0039215686, 0.9921568627450981, 0.9960784314, 0.0274509804, 0.0039215686, 0.996078431372549,\n      0.9960784314, 0.0156862745, 0.0039215686, 1.0, 0.9960784314, 0.0156862745, 0.0039215686,\n    ],\n    description: 'S PET',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'perfusion',\n    name: 'perfusion',\n    RGBPoints: [\n      0.0, 0.0, 0.0, 0.0, 0.00392156862745098, 0.0078431373, 0.0235294118, 0.0235294118,\n      0.00784313725490196, 0.0078431373, 0.031372549, 0.0470588235, 0.011764705882352941,\n      0.0078431373, 0.0392156863, 0.062745098, 0.01568627450980392, 0.0078431373, 0.0470588235,\n      0.0862745098, 0.0196078431372549, 0.0078431373, 0.0549019608, 0.1019607843,\n      0.023529411764705882, 0.0078431373, 0.0549019608, 0.1254901961, 0.027450980392156862,\n      0.0078431373, 0.062745098, 0.1411764706, 0.03137254901960784, 0.0078431373, 0.0705882353,\n      0.1647058824, 0.03529411764705882, 0.0078431373, 0.0784313725, 0.1803921569,\n      0.0392156862745098, 0.0078431373, 0.0862745098, 0.2039215686, 0.043137254901960784,\n      0.0078431373, 0.0862745098, 0.2196078431, 0.047058823529411764, 0.0078431373, 0.0941176471,\n      0.2431372549, 0.050980392156862744, 0.0078431373, 0.1019607843, 0.2666666667,\n      0.054901960784313725, 0.0078431373, 0.1098039216, 0.2823529412, 0.05882352941176471,\n      0.0078431373, 0.1176470588, 0.3058823529, 0.06274509803921569, 0.0078431373, 0.1176470588,\n      0.3215686275, 0.06666666666666667, 0.0078431373, 0.1254901961, 0.3450980392,\n      0.07058823529411765, 0.0078431373, 0.1333333333, 0.3607843137, 0.07450980392156863,\n      0.0078431373, 0.1411764706, 0.3843137255, 0.0784313725490196, 0.0078431373, 0.1490196078, 0.4,\n      0.08235294117647059, 0.0078431373, 0.1490196078, 0.4235294118, 0.08627450980392157,\n      0.0078431373, 0.1568627451, 0.4392156863, 0.09019607843137255, 0.0078431373, 0.1647058824,\n      0.462745098, 0.09411764705882353, 0.0078431373, 0.1725490196, 0.4784313725,\n      0.09803921568627451, 0.0078431373, 0.1803921569, 0.5019607843, 0.10196078431372549,\n      0.0078431373, 0.1803921569, 0.5254901961, 0.10588235294117647, 0.0078431373, 0.1882352941,\n      0.5411764706, 0.10980392156862745, 0.0078431373, 0.1960784314, 0.5647058824,\n      0.11372549019607843, 0.0078431373, 0.2039215686, 0.5803921569, 0.11764705882352942,\n      0.0078431373, 0.2117647059, 0.6039215686, 0.12156862745098039, 0.0078431373, 0.2117647059,\n      0.6196078431, 0.12549019607843137, 0.0078431373, 0.2196078431, 0.6431372549,\n      0.12941176470588237, 0.0078431373, 0.2274509804, 0.6588235294, 0.13333333333333333,\n      0.0078431373, 0.2352941176, 0.6823529412, 0.13725490196078433, 0.0078431373, 0.2431372549,\n      0.6980392157, 0.1411764705882353, 0.0078431373, 0.2431372549, 0.7215686275,\n      0.1450980392156863, 0.0078431373, 0.2509803922, 0.737254902, 0.14901960784313725,\n      0.0078431373, 0.2588235294, 0.7607843137, 0.15294117647058825, 0.0078431373, 0.2666666667,\n      0.7843137255, 0.1568627450980392, 0.0078431373, 0.2745098039, 0.8, 0.1607843137254902,\n      0.0078431373, 0.2745098039, 0.8235294118, 0.16470588235294117, 0.0078431373, 0.2823529412,\n      0.8392156863, 0.16862745098039217, 0.0078431373, 0.2901960784, 0.862745098,\n      0.17254901960784313, 0.0078431373, 0.2980392157, 0.8784313725, 0.17647058823529413,\n      0.0078431373, 0.3058823529, 0.9019607843, 0.1803921568627451, 0.0078431373, 0.3058823529,\n      0.9176470588, 0.1843137254901961, 0.0078431373, 0.2980392157, 0.9411764706,\n      0.18823529411764706, 0.0078431373, 0.3058823529, 0.9568627451, 0.19215686274509805,\n      0.0078431373, 0.2980392157, 0.9803921569, 0.19607843137254902, 0.0078431373, 0.2980392157,\n      0.9882352941, 0.2, 0.0078431373, 0.2901960784, 0.9803921569, 0.20392156862745098,\n      0.0078431373, 0.2901960784, 0.9647058824, 0.20784313725490197, 0.0078431373, 0.2823529412,\n      0.9568627451, 0.21176470588235294, 0.0078431373, 0.2823529412, 0.9411764706,\n      0.21568627450980393, 0.0078431373, 0.2745098039, 0.9333333333, 0.2196078431372549,\n      0.0078431373, 0.2666666667, 0.9176470588, 0.2235294117647059, 0.0078431373, 0.2666666667,\n      0.9098039216, 0.22745098039215686, 0.0078431373, 0.2588235294, 0.9019607843,\n      0.23137254901960785, 0.0078431373, 0.2588235294, 0.8862745098, 0.23529411764705885,\n      0.0078431373, 0.2509803922, 0.8784313725, 0.23921568627450984, 0.0078431373, 0.2509803922,\n      0.862745098, 0.24313725490196078, 0.0078431373, 0.2431372549, 0.8549019608,\n      0.24705882352941178, 0.0078431373, 0.2352941176, 0.8392156863, 0.25098039215686274,\n      0.0078431373, 0.2352941176, 0.831372549, 0.2549019607843137, 0.0078431373, 0.2274509804,\n      0.8235294118, 0.25882352941176473, 0.0078431373, 0.2274509804, 0.8078431373,\n      0.2627450980392157, 0.0078431373, 0.2196078431, 0.8, 0.26666666666666666, 0.0078431373,\n      0.2196078431, 0.7843137255, 0.27058823529411763, 0.0078431373, 0.2117647059, 0.7764705882,\n      0.27450980392156865, 0.0078431373, 0.2039215686, 0.7607843137, 0.2784313725490196,\n      0.0078431373, 0.2039215686, 0.7529411765, 0.2823529411764706, 0.0078431373, 0.1960784314,\n      0.7450980392, 0.28627450980392155, 0.0078431373, 0.1960784314, 0.7294117647,\n      0.2901960784313726, 0.0078431373, 0.1882352941, 0.7215686275, 0.29411764705882354,\n      0.0078431373, 0.1882352941, 0.7058823529, 0.2980392156862745, 0.0078431373, 0.1803921569,\n      0.6980392157, 0.30196078431372547, 0.0078431373, 0.1803921569, 0.6823529412,\n      0.3058823529411765, 0.0078431373, 0.1725490196, 0.6745098039, 0.30980392156862746,\n      0.0078431373, 0.1647058824, 0.6666666667, 0.3137254901960784, 0.0078431373, 0.1647058824,\n      0.6509803922, 0.3176470588235294, 0.0078431373, 0.1568627451, 0.6431372549,\n      0.3215686274509804, 0.0078431373, 0.1568627451, 0.6274509804, 0.3254901960784314,\n      0.0078431373, 0.1490196078, 0.6196078431, 0.32941176470588235, 0.0078431373, 0.1490196078,\n      0.6039215686, 0.3333333333333333, 0.0078431373, 0.1411764706, 0.5960784314,\n      0.33725490196078434, 0.0078431373, 0.1333333333, 0.5882352941, 0.3411764705882353,\n      0.0078431373, 0.1333333333, 0.5725490196, 0.34509803921568627, 0.0078431373, 0.1254901961,\n      0.5647058824, 0.34901960784313724, 0.0078431373, 0.1254901961, 0.5490196078,\n      0.35294117647058826, 0.0078431373, 0.1176470588, 0.5411764706, 0.3568627450980392,\n      0.0078431373, 0.1176470588, 0.5254901961, 0.3607843137254902, 0.0078431373, 0.1098039216,\n      0.5176470588, 0.36470588235294116, 0.0078431373, 0.1019607843, 0.5098039216,\n      0.3686274509803922, 0.0078431373, 0.1019607843, 0.4941176471, 0.37254901960784315,\n      0.0078431373, 0.0941176471, 0.4862745098, 0.3764705882352941, 0.0078431373, 0.0941176471,\n      0.4705882353, 0.3803921568627451, 0.0078431373, 0.0862745098, 0.462745098, 0.3843137254901961,\n      0.0078431373, 0.0862745098, 0.4470588235, 0.38823529411764707, 0.0078431373, 0.0784313725,\n      0.4392156863, 0.39215686274509803, 0.0078431373, 0.0705882353, 0.431372549, 0.396078431372549,\n      0.0078431373, 0.0705882353, 0.4156862745, 0.4, 0.0078431373, 0.062745098, 0.4078431373,\n      0.403921568627451, 0.0078431373, 0.062745098, 0.3921568627, 0.40784313725490196, 0.0078431373,\n      0.0549019608, 0.3843137255, 0.4117647058823529, 0.0078431373, 0.0549019608, 0.368627451,\n      0.41568627450980394, 0.0078431373, 0.0470588235, 0.3607843137, 0.4196078431372549,\n      0.0078431373, 0.0470588235, 0.3529411765, 0.4235294117647059, 0.0078431373, 0.0392156863,\n      0.337254902, 0.42745098039215684, 0.0078431373, 0.031372549, 0.3294117647,\n      0.43137254901960786, 0.0078431373, 0.031372549, 0.3137254902, 0.43529411764705883,\n      0.0078431373, 0.0235294118, 0.3058823529, 0.4392156862745098, 0.0078431373, 0.0235294118,\n      0.2901960784, 0.44313725490196076, 0.0078431373, 0.0156862745, 0.2823529412,\n      0.4470588235294118, 0.0078431373, 0.0156862745, 0.2745098039, 0.45098039215686275,\n      0.0078431373, 0.0078431373, 0.2588235294, 0.4549019607843137, 0.0235294118, 0.0078431373,\n      0.2509803922, 0.4588235294117647, 0.0078431373, 0.0078431373, 0.2352941176,\n      0.4627450980392157, 0.0078431373, 0.0078431373, 0.2274509804, 0.4666666666666667,\n      0.0078431373, 0.0078431373, 0.2117647059, 0.4705882352941177, 0.0078431373, 0.0078431373,\n      0.2039215686, 0.4745098039215686, 0.0078431373, 0.0078431373, 0.1960784314,\n      0.4784313725490197, 0.0078431373, 0.0078431373, 0.1803921569, 0.48235294117647065,\n      0.0078431373, 0.0078431373, 0.1725490196, 0.48627450980392156, 0.0078431373, 0.0078431373,\n      0.1568627451, 0.49019607843137253, 0.0078431373, 0.0078431373, 0.1490196078,\n      0.49411764705882355, 0.0078431373, 0.0078431373, 0.1333333333, 0.4980392156862745,\n      0.0078431373, 0.0078431373, 0.1254901961, 0.5019607843137255, 0.0078431373, 0.0078431373,\n      0.1176470588, 0.5058823529411764, 0.0078431373, 0.0078431373, 0.1019607843,\n      0.5098039215686274, 0.0078431373, 0.0078431373, 0.0941176471, 0.5137254901960784,\n      0.0078431373, 0.0078431373, 0.0784313725, 0.5176470588235295, 0.0078431373, 0.0078431373,\n      0.0705882353, 0.5215686274509804, 0.0078431373, 0.0078431373, 0.0549019608,\n      0.5254901960784314, 0.0078431373, 0.0078431373, 0.0470588235, 0.5294117647058824,\n      0.0235294118, 0.0078431373, 0.0392156863, 0.5333333333333333, 0.031372549, 0.0078431373,\n      0.0235294118, 0.5372549019607843, 0.0392156863, 0.0078431373, 0.0156862745,\n      0.5411764705882353, 0.0549019608, 0.0078431373, 0.0, 0.5450980392156862, 0.062745098,\n      0.0078431373, 0.0, 0.5490196078431373, 0.0705882353, 0.0078431373, 0.0, 0.5529411764705883,\n      0.0862745098, 0.0078431373, 0.0, 0.5568627450980392, 0.0941176471, 0.0078431373, 0.0,\n      0.5607843137254902, 0.1019607843, 0.0078431373, 0.0, 0.5647058823529412, 0.1098039216,\n      0.0078431373, 0.0, 0.5686274509803921, 0.1254901961, 0.0078431373, 0.0, 0.5725490196078431,\n      0.1333333333, 0.0078431373, 0.0, 0.5764705882352941, 0.1411764706, 0.0078431373, 0.0,\n      0.5803921568627451, 0.1568627451, 0.0078431373, 0.0, 0.5843137254901961, 0.1647058824,\n      0.0078431373, 0.0, 0.5882352941176471, 0.1725490196, 0.0078431373, 0.0, 0.592156862745098,\n      0.1882352941, 0.0078431373, 0.0, 0.596078431372549, 0.1960784314, 0.0078431373, 0.0, 0.6,\n      0.2039215686, 0.0078431373, 0.0, 0.6039215686274509, 0.2117647059, 0.0078431373, 0.0,\n      0.6078431372549019, 0.2274509804, 0.0078431373, 0.0, 0.611764705882353, 0.2352941176,\n      0.0078431373, 0.0, 0.615686274509804, 0.2431372549, 0.0078431373, 0.0, 0.6196078431372549,\n      0.2588235294, 0.0078431373, 0.0, 0.6235294117647059, 0.2666666667, 0.0078431373, 0.0,\n      0.6274509803921569, 0.2745098039, 0.0, 0.0, 0.6313725490196078, 0.2901960784, 0.0156862745,\n      0.0, 0.6352941176470588, 0.2980392157, 0.0235294118, 0.0, 0.6392156862745098, 0.3058823529,\n      0.0392156863, 0.0, 0.6431372549019608, 0.3137254902, 0.0470588235, 0.0, 0.6470588235294118,\n      0.3294117647, 0.0549019608, 0.0, 0.6509803921568628, 0.337254902, 0.0705882353, 0.0,\n      0.6549019607843137, 0.3450980392, 0.0784313725, 0.0, 0.6588235294117647, 0.3607843137,\n      0.0862745098, 0.0, 0.6627450980392157, 0.368627451, 0.1019607843, 0.0, 0.6666666666666666,\n      0.3764705882, 0.1098039216, 0.0, 0.6705882352941176, 0.3843137255, 0.1176470588, 0.0,\n      0.6745098039215687, 0.4, 0.1333333333, 0.0, 0.6784313725490196, 0.4078431373, 0.1411764706,\n      0.0, 0.6823529411764706, 0.4156862745, 0.1490196078, 0.0, 0.6862745098039216, 0.431372549,\n      0.1647058824, 0.0, 0.6901960784313725, 0.4392156863, 0.1725490196, 0.0, 0.6941176470588235,\n      0.4470588235, 0.1803921569, 0.0, 0.6980392156862745, 0.462745098, 0.1960784314, 0.0,\n      0.7019607843137254, 0.4705882353, 0.2039215686, 0.0, 0.7058823529411765, 0.4784313725,\n      0.2117647059, 0.0, 0.7098039215686275, 0.4862745098, 0.2274509804, 0.0, 0.7137254901960784,\n      0.5019607843, 0.2352941176, 0.0, 0.7176470588235294, 0.5098039216, 0.2431372549, 0.0,\n      0.7215686274509804, 0.5176470588, 0.2588235294, 0.0, 0.7254901960784313, 0.5333333333,\n      0.2666666667, 0.0, 0.7294117647058823, 0.5411764706, 0.2745098039, 0.0, 0.7333333333333333,\n      0.5490196078, 0.2901960784, 0.0, 0.7372549019607844, 0.5647058824, 0.2980392157, 0.0,\n      0.7411764705882353, 0.5725490196, 0.3058823529, 0.0, 0.7450980392156863, 0.5803921569,\n      0.3215686275, 0.0, 0.7490196078431373, 0.5882352941, 0.3294117647, 0.0, 0.7529411764705882,\n      0.6039215686, 0.337254902, 0.0, 0.7568627450980392, 0.6117647059, 0.3529411765, 0.0,\n      0.7607843137254902, 0.6196078431, 0.3607843137, 0.0, 0.7647058823529411, 0.6352941176,\n      0.368627451, 0.0, 0.7686274509803922, 0.6431372549, 0.3843137255, 0.0, 0.7725490196078432,\n      0.6509803922, 0.3921568627, 0.0, 0.7764705882352941, 0.6588235294, 0.4, 0.0,\n      0.7803921568627451, 0.6745098039, 0.4156862745, 0.0, 0.7843137254901961, 0.6823529412,\n      0.4235294118, 0.0, 0.788235294117647, 0.6901960784, 0.431372549, 0.0, 0.792156862745098,\n      0.7058823529, 0.4470588235, 0.0, 0.796078431372549, 0.7137254902, 0.4549019608, 0.0, 0.8,\n      0.7215686275, 0.462745098, 0.0, 0.803921568627451, 0.737254902, 0.4784313725, 0.0,\n      0.807843137254902, 0.7450980392, 0.4862745098, 0.0, 0.8117647058823529, 0.7529411765,\n      0.4941176471, 0.0, 0.8156862745098039, 0.7607843137, 0.5098039216, 0.0, 0.8196078431372549,\n      0.7764705882, 0.5176470588, 0.0, 0.8235294117647058, 0.7843137255, 0.5254901961, 0.0,\n      0.8274509803921568, 0.7921568627, 0.5411764706, 0.0, 0.8313725490196079, 0.8078431373,\n      0.5490196078, 0.0, 0.8352941176470589, 0.8156862745, 0.5568627451, 0.0, 0.8392156862745098,\n      0.8235294118, 0.5725490196, 0.0, 0.8431372549019608, 0.8392156863, 0.5803921569, 0.0,\n      0.8470588235294118, 0.8470588235, 0.5882352941, 0.0, 0.8509803921568627, 0.8549019608,\n      0.6039215686, 0.0, 0.8549019607843137, 0.862745098, 0.6117647059, 0.0, 0.8588235294117647,\n      0.8784313725, 0.6196078431, 0.0, 0.8627450980392157, 0.8862745098, 0.6352941176, 0.0,\n      0.8666666666666667, 0.8941176471, 0.6431372549, 0.0, 0.8705882352941177, 0.9098039216,\n      0.6509803922, 0.0, 0.8745098039215686, 0.9176470588, 0.6666666667, 0.0, 0.8784313725490196,\n      0.9254901961, 0.6745098039, 0.0, 0.8823529411764706, 0.9411764706, 0.6823529412, 0.0,\n      0.8862745098039215, 0.9490196078, 0.6980392157, 0.0, 0.8901960784313725, 0.9568627451,\n      0.7058823529, 0.0, 0.8941176470588236, 0.9647058824, 0.7137254902, 0.0, 0.8980392156862745,\n      0.9803921569, 0.7294117647, 0.0, 0.9019607843137255, 0.9882352941, 0.737254902, 0.0,\n      0.9058823529411765, 0.9960784314, 0.7450980392, 0.0, 0.9098039215686274, 0.9960784314,\n      0.7607843137, 0.0, 0.9137254901960784, 0.9960784314, 0.768627451, 0.0, 0.9176470588235294,\n      0.9960784314, 0.7764705882, 0.0, 0.9215686274509803, 0.9960784314, 0.7921568627, 0.0,\n      0.9254901960784314, 0.9960784314, 0.8, 0.0, 0.9294117647058824, 0.9960784314, 0.8078431373,\n      0.0, 0.9333333333333333, 0.9960784314, 0.8235294118, 0.0, 0.9372549019607843, 0.9960784314,\n      0.831372549, 0.0, 0.9411764705882354, 0.9960784314, 0.8392156863, 0.0, 0.9450980392156864,\n      0.9960784314, 0.8549019608, 0.0, 0.9490196078431372, 0.9960784314, 0.862745098, 0.0549019608,\n      0.9529411764705882, 0.9960784314, 0.8705882353, 0.1098039216, 0.9568627450980394,\n      0.9960784314, 0.8862745098, 0.1647058824, 0.9607843137254903, 0.9960784314, 0.8941176471,\n      0.2196078431, 0.9647058823529413, 0.9960784314, 0.9019607843, 0.2666666667,\n      0.9686274509803922, 0.9960784314, 0.9176470588, 0.3215686275, 0.9725490196078431,\n      0.9960784314, 0.9254901961, 0.3764705882, 0.9764705882352941, 0.9960784314, 0.9333333333,\n      0.431372549, 0.9803921568627451, 0.9960784314, 0.9490196078, 0.4862745098, 0.984313725490196,\n      0.9960784314, 0.9568627451, 0.5333333333, 0.9882352941176471, 0.9960784314, 0.9647058824,\n      0.5882352941, 0.9921568627450981, 0.9960784314, 0.9803921569, 0.6431372549, 0.996078431372549,\n      0.9960784314, 0.9882352941, 0.6980392157, 1.0, 0.9960784314, 0.9960784314, 0.7450980392,\n    ],\n    description: 'Perfusion',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'rainbow_2',\n    name: 'rainbow_2',\n    RGBPoints: [\n      0.0, 0.0, 0.0, 0.0, 0.00392156862745098, 0.0156862745, 0.0, 0.0117647059, 0.00784313725490196,\n      0.0352941176, 0.0, 0.0274509804, 0.011764705882352941, 0.0509803922, 0.0, 0.0392156863,\n      0.01568627450980392, 0.0705882353, 0.0, 0.0549019608, 0.0196078431372549, 0.0862745098, 0.0,\n      0.0745098039, 0.023529411764705882, 0.1058823529, 0.0, 0.0901960784, 0.027450980392156862,\n      0.1215686275, 0.0, 0.1098039216, 0.03137254901960784, 0.1411764706, 0.0, 0.1254901961,\n      0.03529411764705882, 0.1568627451, 0.0, 0.1490196078, 0.0392156862745098, 0.1764705882, 0.0,\n      0.168627451, 0.043137254901960784, 0.1960784314, 0.0, 0.1882352941, 0.047058823529411764,\n      0.2117647059, 0.0, 0.2078431373, 0.050980392156862744, 0.2274509804, 0.0, 0.231372549,\n      0.054901960784313725, 0.2392156863, 0.0, 0.2470588235, 0.05882352941176471, 0.2509803922, 0.0,\n      0.2666666667, 0.06274509803921569, 0.2666666667, 0.0, 0.2823529412, 0.06666666666666667,\n      0.2705882353, 0.0, 0.3019607843, 0.07058823529411765, 0.2823529412, 0.0, 0.3176470588,\n      0.07450980392156863, 0.2901960784, 0.0, 0.337254902, 0.0784313725490196, 0.3019607843, 0.0,\n      0.3568627451, 0.08235294117647059, 0.3098039216, 0.0, 0.3725490196, 0.08627450980392157,\n      0.3137254902, 0.0, 0.3921568627, 0.09019607843137255, 0.3215686275, 0.0, 0.4078431373,\n      0.09411764705882353, 0.3254901961, 0.0, 0.4274509804, 0.09803921568627451, 0.3333333333, 0.0,\n      0.4431372549, 0.10196078431372549, 0.3294117647, 0.0, 0.462745098, 0.10588235294117647,\n      0.337254902, 0.0, 0.4784313725, 0.10980392156862745, 0.3411764706, 0.0, 0.4980392157,\n      0.11372549019607843, 0.3450980392, 0.0, 0.5176470588, 0.11764705882352942, 0.337254902, 0.0,\n      0.5333333333, 0.12156862745098039, 0.3411764706, 0.0, 0.5529411765, 0.12549019607843137,\n      0.3411764706, 0.0, 0.568627451, 0.12941176470588237, 0.3411764706, 0.0, 0.5882352941,\n      0.13333333333333333, 0.3333333333, 0.0, 0.6039215686, 0.13725490196078433, 0.3294117647, 0.0,\n      0.6235294118, 0.1411764705882353, 0.3294117647, 0.0, 0.6392156863, 0.1450980392156863,\n      0.3294117647, 0.0, 0.6588235294, 0.14901960784313725, 0.3254901961, 0.0, 0.6784313725,\n      0.15294117647058825, 0.3098039216, 0.0, 0.6941176471, 0.1568627450980392, 0.3058823529, 0.0,\n      0.7137254902, 0.1607843137254902, 0.3019607843, 0.0, 0.7294117647, 0.16470588235294117,\n      0.2980392157, 0.0, 0.7490196078, 0.16862745098039217, 0.2784313725, 0.0, 0.7647058824,\n      0.17254901960784313, 0.2745098039, 0.0, 0.7843137255, 0.17647058823529413, 0.2666666667, 0.0,\n      0.8, 0.1803921568627451, 0.2588235294, 0.0, 0.8196078431, 0.1843137254901961, 0.2352941176,\n      0.0, 0.8392156863, 0.18823529411764706, 0.2274509804, 0.0, 0.8549019608, 0.19215686274509805,\n      0.2156862745, 0.0, 0.8745098039, 0.19607843137254902, 0.2078431373, 0.0, 0.8901960784, 0.2,\n      0.1803921569, 0.0, 0.9098039216, 0.20392156862745098, 0.168627451, 0.0, 0.9254901961,\n      0.20784313725490197, 0.1568627451, 0.0, 0.9450980392, 0.21176470588235294, 0.1411764706, 0.0,\n      0.9607843137, 0.21568627450980393, 0.1294117647, 0.0, 0.9803921569, 0.2196078431372549,\n      0.0980392157, 0.0, 1.0, 0.2235294117647059, 0.0823529412, 0.0, 1.0, 0.22745098039215686,\n      0.062745098, 0.0, 1.0, 0.23137254901960785, 0.0470588235, 0.0, 1.0, 0.23529411764705885,\n      0.0156862745, 0.0, 1.0, 0.23921568627450984, 0.0, 0.0, 1.0, 0.24313725490196078, 0.0,\n      0.0156862745, 1.0, 0.24705882352941178, 0.0, 0.031372549, 1.0, 0.25098039215686274, 0.0,\n      0.062745098, 1.0, 0.2549019607843137, 0.0, 0.0823529412, 1.0, 0.25882352941176473, 0.0,\n      0.0980392157, 1.0, 0.2627450980392157, 0.0, 0.1137254902, 1.0, 0.26666666666666666, 0.0,\n      0.1490196078, 1.0, 0.27058823529411763, 0.0, 0.1647058824, 1.0, 0.27450980392156865, 0.0,\n      0.1803921569, 1.0, 0.2784313725490196, 0.0, 0.2, 1.0, 0.2823529411764706, 0.0, 0.2156862745,\n      1.0, 0.28627450980392155, 0.0, 0.2470588235, 1.0, 0.2901960784313726, 0.0, 0.262745098, 1.0,\n      0.29411764705882354, 0.0, 0.2823529412, 1.0, 0.2980392156862745, 0.0, 0.2980392157, 1.0,\n      0.30196078431372547, 0.0, 0.3294117647, 1.0, 0.3058823529411765, 0.0, 0.3490196078, 1.0,\n      0.30980392156862746, 0.0, 0.3647058824, 1.0, 0.3137254901960784, 0.0, 0.3803921569, 1.0,\n      0.3176470588235294, 0.0, 0.4156862745, 1.0, 0.3215686274509804, 0.0, 0.431372549, 1.0,\n      0.3254901960784314, 0.0, 0.4470588235, 1.0, 0.32941176470588235, 0.0, 0.4666666667, 1.0,\n      0.3333333333333333, 0.0, 0.4980392157, 1.0, 0.33725490196078434, 0.0, 0.5137254902, 1.0,\n      0.3411764705882353, 0.0, 0.5294117647, 1.0, 0.34509803921568627, 0.0, 0.5490196078, 1.0,\n      0.34901960784313724, 0.0, 0.5647058824, 1.0, 0.35294117647058826, 0.0, 0.5960784314, 1.0,\n      0.3568627450980392, 0.0, 0.6156862745, 1.0, 0.3607843137254902, 0.0, 0.631372549, 1.0,\n      0.36470588235294116, 0.0, 0.6470588235, 1.0, 0.3686274509803922, 0.0, 0.6823529412, 1.0,\n      0.37254901960784315, 0.0, 0.6980392157, 1.0, 0.3764705882352941, 0.0, 0.7137254902, 1.0,\n      0.3803921568627451, 0.0, 0.7333333333, 1.0, 0.3843137254901961, 0.0, 0.7647058824, 1.0,\n      0.38823529411764707, 0.0, 0.7803921569, 1.0, 0.39215686274509803, 0.0, 0.7960784314, 1.0,\n      0.396078431372549, 0.0, 0.8156862745, 1.0, 0.4, 0.0, 0.8470588235, 1.0, 0.403921568627451,\n      0.0, 0.862745098, 1.0, 0.40784313725490196, 0.0, 0.8823529412, 1.0, 0.4117647058823529, 0.0,\n      0.8980392157, 1.0, 0.41568627450980394, 0.0, 0.9137254902, 1.0, 0.4196078431372549, 0.0,\n      0.9490196078, 1.0, 0.4235294117647059, 0.0, 0.9647058824, 1.0, 0.42745098039215684, 0.0,\n      0.9803921569, 1.0, 0.43137254901960786, 0.0, 1.0, 1.0, 0.43529411764705883, 0.0, 1.0,\n      0.9647058824, 0.4392156862745098, 0.0, 1.0, 0.9490196078, 0.44313725490196076, 0.0, 1.0,\n      0.9333333333, 0.4470588235294118, 0.0, 1.0, 0.9137254902, 0.45098039215686275, 0.0, 1.0,\n      0.8823529412, 0.4549019607843137, 0.0, 1.0, 0.862745098, 0.4588235294117647, 0.0, 1.0,\n      0.8470588235, 0.4627450980392157, 0.0, 1.0, 0.831372549, 0.4666666666666667, 0.0, 1.0,\n      0.7960784314, 0.4705882352941177, 0.0, 1.0, 0.7803921569, 0.4745098039215686, 0.0, 1.0,\n      0.7647058824, 0.4784313725490197, 0.0, 1.0, 0.7490196078, 0.48235294117647065, 0.0, 1.0,\n      0.7333333333, 0.48627450980392156, 0.0, 1.0, 0.6980392157, 0.49019607843137253, 0.0, 1.0,\n      0.6823529412, 0.49411764705882355, 0.0, 1.0, 0.6666666667, 0.4980392156862745, 0.0, 1.0,\n      0.6470588235, 0.5019607843137255, 0.0, 1.0, 0.6156862745, 0.5058823529411764, 0.0, 1.0,\n      0.5960784314, 0.5098039215686274, 0.0, 1.0, 0.5803921569, 0.5137254901960784, 0.0, 1.0,\n      0.5647058824, 0.5176470588235295, 0.0, 1.0, 0.5294117647, 0.5215686274509804, 0.0, 1.0,\n      0.5137254902, 0.5254901960784314, 0.0, 1.0, 0.4980392157, 0.5294117647058824, 0.0, 1.0,\n      0.4823529412, 0.5333333333333333, 0.0, 1.0, 0.4470588235, 0.5372549019607843, 0.0, 1.0,\n      0.431372549, 0.5411764705882353, 0.0, 1.0, 0.4156862745, 0.5450980392156862, 0.0, 1.0, 0.4,\n      0.5490196078431373, 0.0, 1.0, 0.3803921569, 0.5529411764705883, 0.0, 1.0, 0.3490196078,\n      0.5568627450980392, 0.0, 1.0, 0.3294117647, 0.5607843137254902, 0.0, 1.0, 0.3137254902,\n      0.5647058823529412, 0.0, 1.0, 0.2980392157, 0.5686274509803921, 0.0, 1.0, 0.262745098,\n      0.5725490196078431, 0.0, 1.0, 0.2470588235, 0.5764705882352941, 0.0, 1.0, 0.231372549,\n      0.5803921568627451, 0.0, 1.0, 0.2156862745, 0.5843137254901961, 0.0, 1.0, 0.1803921569,\n      0.5882352941176471, 0.0, 1.0, 0.1647058824, 0.592156862745098, 0.0, 1.0, 0.1490196078,\n      0.596078431372549, 0.0, 1.0, 0.1333333333, 0.6, 0.0, 1.0, 0.0980392157, 0.6039215686274509,\n      0.0, 1.0, 0.0823529412, 0.6078431372549019, 0.0, 1.0, 0.062745098, 0.611764705882353, 0.0,\n      1.0, 0.0470588235, 0.615686274509804, 0.0, 1.0, 0.031372549, 0.6196078431372549, 0.0, 1.0,\n      0.0, 0.6235294117647059, 0.0156862745, 1.0, 0.0, 0.6274509803921569, 0.031372549, 1.0, 0.0,\n      0.6313725490196078, 0.0470588235, 1.0, 0.0, 0.6352941176470588, 0.0823529412, 1.0, 0.0,\n      0.6392156862745098, 0.0980392157, 1.0, 0.0, 0.6431372549019608, 0.1137254902, 1.0, 0.0,\n      0.6470588235294118, 0.1294117647, 1.0, 0.0, 0.6509803921568628, 0.1647058824, 1.0, 0.0,\n      0.6549019607843137, 0.1803921569, 1.0, 0.0, 0.6588235294117647, 0.2, 1.0, 0.0,\n      0.6627450980392157, 0.2156862745, 1.0, 0.0, 0.6666666666666666, 0.2470588235, 1.0, 0.0,\n      0.6705882352941176, 0.262745098, 1.0, 0.0, 0.6745098039215687, 0.2823529412, 1.0, 0.0,\n      0.6784313725490196, 0.2980392157, 1.0, 0.0, 0.6823529411764706, 0.3137254902, 1.0, 0.0,\n      0.6862745098039216, 0.3490196078, 1.0, 0.0, 0.6901960784313725, 0.3647058824, 1.0, 0.0,\n      0.6941176470588235, 0.3803921569, 1.0, 0.0, 0.6980392156862745, 0.3960784314, 1.0, 0.0,\n      0.7019607843137254, 0.431372549, 1.0, 0.0, 0.7058823529411765, 0.4470588235, 1.0, 0.0,\n      0.7098039215686275, 0.4666666667, 1.0, 0.0, 0.7137254901960784, 0.4823529412, 1.0, 0.0,\n      0.7176470588235294, 0.5137254902, 1.0, 0.0, 0.7215686274509804, 0.5294117647, 1.0, 0.0,\n      0.7254901960784313, 0.5490196078, 1.0, 0.0, 0.7294117647058823, 0.5647058824, 1.0, 0.0,\n      0.7333333333333333, 0.6, 1.0, 0.0, 0.7372549019607844, 0.6156862745, 1.0, 0.0,\n      0.7411764705882353, 0.631372549, 1.0, 0.0, 0.7450980392156863, 0.6470588235, 1.0, 0.0,\n      0.7490196078431373, 0.662745098, 1.0, 0.0, 0.7529411764705882, 0.6980392157, 1.0, 0.0,\n      0.7568627450980392, 0.7137254902, 1.0, 0.0, 0.7607843137254902, 0.7333333333, 1.0, 0.0,\n      0.7647058823529411, 0.7490196078, 1.0, 0.0, 0.7686274509803922, 0.7803921569, 1.0, 0.0,\n      0.7725490196078432, 0.7960784314, 1.0, 0.0, 0.7764705882352941, 0.8156862745, 1.0, 0.0,\n      0.7803921568627451, 0.831372549, 1.0, 0.0, 0.7843137254901961, 0.8666666667, 1.0, 0.0,\n      0.788235294117647, 0.8823529412, 1.0, 0.0, 0.792156862745098, 0.8980392157, 1.0, 0.0,\n      0.796078431372549, 0.9137254902, 1.0, 0.0, 0.8, 0.9490196078, 1.0, 0.0, 0.803921568627451,\n      0.9647058824, 1.0, 0.0, 0.807843137254902, 0.9803921569, 1.0, 0.0, 0.8117647058823529, 1.0,\n      1.0, 0.0, 0.8156862745098039, 1.0, 0.9803921569, 0.0, 0.8196078431372549, 1.0, 0.9490196078,\n      0.0, 0.8235294117647058, 1.0, 0.9333333333, 0.0, 0.8274509803921568, 1.0, 0.9137254902, 0.0,\n      0.8313725490196079, 1.0, 0.8980392157, 0.0, 0.8352941176470589, 1.0, 0.8666666667, 0.0,\n      0.8392156862745098, 1.0, 0.8470588235, 0.0, 0.8431372549019608, 1.0, 0.831372549, 0.0,\n      0.8470588235294118, 1.0, 0.8156862745, 0.0, 0.8509803921568627, 1.0, 0.7803921569, 0.0,\n      0.8549019607843137, 1.0, 0.7647058824, 0.0, 0.8588235294117647, 1.0, 0.7490196078, 0.0,\n      0.8627450980392157, 1.0, 0.7333333333, 0.0, 0.8666666666666667, 1.0, 0.6980392157, 0.0,\n      0.8705882352941177, 1.0, 0.6823529412, 0.0, 0.8745098039215686, 1.0, 0.6666666667, 0.0,\n      0.8784313725490196, 1.0, 0.6470588235, 0.0, 0.8823529411764706, 1.0, 0.631372549, 0.0,\n      0.8862745098039215, 1.0, 0.6, 0.0, 0.8901960784313725, 1.0, 0.5803921569, 0.0,\n      0.8941176470588236, 1.0, 0.5647058824, 0.0, 0.8980392156862745, 1.0, 0.5490196078, 0.0,\n      0.9019607843137255, 1.0, 0.5137254902, 0.0, 0.9058823529411765, 1.0, 0.4980392157, 0.0,\n      0.9098039215686274, 1.0, 0.4823529412, 0.0, 0.9137254901960784, 1.0, 0.4666666667, 0.0,\n      0.9176470588235294, 1.0, 0.431372549, 0.0, 0.9215686274509803, 1.0, 0.4156862745, 0.0,\n      0.9254901960784314, 1.0, 0.4, 0.0, 0.9294117647058824, 1.0, 0.3803921569, 0.0,\n      0.9333333333333333, 1.0, 0.3490196078, 0.0, 0.9372549019607843, 1.0, 0.3333333333, 0.0,\n      0.9411764705882354, 1.0, 0.3137254902, 0.0, 0.9450980392156864, 1.0, 0.2980392157, 0.0,\n      0.9490196078431372, 1.0, 0.2823529412, 0.0, 0.9529411764705882, 1.0, 0.2470588235, 0.0,\n      0.9568627450980394, 1.0, 0.231372549, 0.0, 0.9607843137254903, 1.0, 0.2156862745, 0.0,\n      0.9647058823529413, 1.0, 0.2, 0.0, 0.9686274509803922, 1.0, 0.1647058824, 0.0,\n      0.9725490196078431, 1.0, 0.1490196078, 0.0, 0.9764705882352941, 1.0, 0.1333333333, 0.0,\n      0.9803921568627451, 1.0, 0.1137254902, 0.0, 0.984313725490196, 1.0, 0.0823529412, 0.0,\n      0.9882352941176471, 1.0, 0.0666666667, 0.0, 0.9921568627450981, 1.0, 0.0470588235, 0.0,\n      0.996078431372549, 1.0, 0.031372549, 0.0, 1.0, 1.0, 0.0, 0.0,\n    ],\n    description: 'Rainbow',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'suv',\n    name: 'suv',\n    RGBPoints: [\n      0.0, 1.0, 1.0, 1.0, 0.00392156862745098, 1.0, 1.0, 1.0, 0.00784313725490196, 1.0, 1.0, 1.0,\n      0.011764705882352941, 1.0, 1.0, 1.0, 0.01568627450980392, 1.0, 1.0, 1.0, 0.0196078431372549,\n      1.0, 1.0, 1.0, 0.023529411764705882, 1.0, 1.0, 1.0, 0.027450980392156862, 1.0, 1.0, 1.0,\n      0.03137254901960784, 1.0, 1.0, 1.0, 0.03529411764705882, 1.0, 1.0, 1.0, 0.0392156862745098,\n      1.0, 1.0, 1.0, 0.043137254901960784, 1.0, 1.0, 1.0, 0.047058823529411764, 1.0, 1.0, 1.0,\n      0.050980392156862744, 1.0, 1.0, 1.0, 0.054901960784313725, 1.0, 1.0, 1.0, 0.05882352941176471,\n      1.0, 1.0, 1.0, 0.06274509803921569, 1.0, 1.0, 1.0, 0.06666666666666667, 1.0, 1.0, 1.0,\n      0.07058823529411765, 1.0, 1.0, 1.0, 0.07450980392156863, 1.0, 1.0, 1.0, 0.0784313725490196,\n      1.0, 1.0, 1.0, 0.08235294117647059, 1.0, 1.0, 1.0, 0.08627450980392157, 1.0, 1.0, 1.0,\n      0.09019607843137255, 1.0, 1.0, 1.0, 0.09411764705882353, 1.0, 1.0, 1.0, 0.09803921568627451,\n      1.0, 1.0, 1.0, 0.10196078431372549, 0.737254902, 0.737254902, 0.737254902,\n      0.10588235294117647, 0.737254902, 0.737254902, 0.737254902, 0.10980392156862745, 0.737254902,\n      0.737254902, 0.737254902, 0.11372549019607843, 0.737254902, 0.737254902, 0.737254902,\n      0.11764705882352942, 0.737254902, 0.737254902, 0.737254902, 0.12156862745098039, 0.737254902,\n      0.737254902, 0.737254902, 0.12549019607843137, 0.737254902, 0.737254902, 0.737254902,\n      0.12941176470588237, 0.737254902, 0.737254902, 0.737254902, 0.13333333333333333, 0.737254902,\n      0.737254902, 0.737254902, 0.13725490196078433, 0.737254902, 0.737254902, 0.737254902,\n      0.1411764705882353, 0.737254902, 0.737254902, 0.737254902, 0.1450980392156863, 0.737254902,\n      0.737254902, 0.737254902, 0.14901960784313725, 0.737254902, 0.737254902, 0.737254902,\n      0.15294117647058825, 0.737254902, 0.737254902, 0.737254902, 0.1568627450980392, 0.737254902,\n      0.737254902, 0.737254902, 0.1607843137254902, 0.737254902, 0.737254902, 0.737254902,\n      0.16470588235294117, 0.737254902, 0.737254902, 0.737254902, 0.16862745098039217, 0.737254902,\n      0.737254902, 0.737254902, 0.17254901960784313, 0.737254902, 0.737254902, 0.737254902,\n      0.17647058823529413, 0.737254902, 0.737254902, 0.737254902, 0.1803921568627451, 0.737254902,\n      0.737254902, 0.737254902, 0.1843137254901961, 0.737254902, 0.737254902, 0.737254902,\n      0.18823529411764706, 0.737254902, 0.737254902, 0.737254902, 0.19215686274509805, 0.737254902,\n      0.737254902, 0.737254902, 0.19607843137254902, 0.737254902, 0.737254902, 0.737254902, 0.2,\n      0.737254902, 0.737254902, 0.737254902, 0.20392156862745098, 0.431372549, 0.0, 0.568627451,\n      0.20784313725490197, 0.431372549, 0.0, 0.568627451, 0.21176470588235294, 0.431372549, 0.0,\n      0.568627451, 0.21568627450980393, 0.431372549, 0.0, 0.568627451, 0.2196078431372549,\n      0.431372549, 0.0, 0.568627451, 0.2235294117647059, 0.431372549, 0.0, 0.568627451,\n      0.22745098039215686, 0.431372549, 0.0, 0.568627451, 0.23137254901960785, 0.431372549, 0.0,\n      0.568627451, 0.23529411764705885, 0.431372549, 0.0, 0.568627451, 0.23921568627450984,\n      0.431372549, 0.0, 0.568627451, 0.24313725490196078, 0.431372549, 0.0, 0.568627451,\n      0.24705882352941178, 0.431372549, 0.0, 0.568627451, 0.25098039215686274, 0.431372549, 0.0,\n      0.568627451, 0.2549019607843137, 0.431372549, 0.0, 0.568627451, 0.25882352941176473,\n      0.431372549, 0.0, 0.568627451, 0.2627450980392157, 0.431372549, 0.0, 0.568627451,\n      0.26666666666666666, 0.431372549, 0.0, 0.568627451, 0.27058823529411763, 0.431372549, 0.0,\n      0.568627451, 0.27450980392156865, 0.431372549, 0.0, 0.568627451, 0.2784313725490196,\n      0.431372549, 0.0, 0.568627451, 0.2823529411764706, 0.431372549, 0.0, 0.568627451,\n      0.28627450980392155, 0.431372549, 0.0, 0.568627451, 0.2901960784313726, 0.431372549, 0.0,\n      0.568627451, 0.29411764705882354, 0.431372549, 0.0, 0.568627451, 0.2980392156862745,\n      0.431372549, 0.0, 0.568627451, 0.30196078431372547, 0.431372549, 0.0, 0.568627451,\n      0.3058823529411765, 0.2509803922, 0.3333333333, 0.6509803922, 0.30980392156862746,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.3137254901960784, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.3176470588235294, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.3215686274509804, 0.2509803922, 0.3333333333, 0.6509803922, 0.3254901960784314,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.32941176470588235, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.3333333333333333, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.33725490196078434, 0.2509803922, 0.3333333333, 0.6509803922, 0.3411764705882353,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.34509803921568627, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.34901960784313724, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.35294117647058826, 0.2509803922, 0.3333333333, 0.6509803922, 0.3568627450980392,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.3607843137254902, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.36470588235294116, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.3686274509803922, 0.2509803922, 0.3333333333, 0.6509803922, 0.37254901960784315,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.3764705882352941, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.3803921568627451, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.3843137254901961, 0.2509803922, 0.3333333333, 0.6509803922, 0.38823529411764707,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.39215686274509803, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.396078431372549, 0.2509803922, 0.3333333333, 0.6509803922, 0.4, 0.2509803922,\n      0.3333333333, 0.6509803922, 0.403921568627451, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.40784313725490196, 0.0, 0.8, 1.0, 0.4117647058823529, 0.0, 0.8, 1.0, 0.41568627450980394,\n      0.0, 0.8, 1.0, 0.4196078431372549, 0.0, 0.8, 1.0, 0.4235294117647059, 0.0, 0.8, 1.0,\n      0.42745098039215684, 0.0, 0.8, 1.0, 0.43137254901960786, 0.0, 0.8, 1.0, 0.43529411764705883,\n      0.0, 0.8, 1.0, 0.4392156862745098, 0.0, 0.8, 1.0, 0.44313725490196076, 0.0, 0.8, 1.0,\n      0.4470588235294118, 0.0, 0.8, 1.0, 0.45098039215686275, 0.0, 0.8, 1.0, 0.4549019607843137,\n      0.0, 0.8, 1.0, 0.4588235294117647, 0.0, 0.8, 1.0, 0.4627450980392157, 0.0, 0.8, 1.0,\n      0.4666666666666667, 0.0, 0.8, 1.0, 0.4705882352941177, 0.0, 0.8, 1.0, 0.4745098039215686, 0.0,\n      0.8, 1.0, 0.4784313725490197, 0.0, 0.8, 1.0, 0.48235294117647065, 0.0, 0.8, 1.0,\n      0.48627450980392156, 0.0, 0.8, 1.0, 0.49019607843137253, 0.0, 0.8, 1.0, 0.49411764705882355,\n      0.0, 0.8, 1.0, 0.4980392156862745, 0.0, 0.8, 1.0, 0.5019607843137255, 0.0, 0.8, 1.0,\n      0.5058823529411764, 0.0, 0.6666666667, 0.5333333333, 0.5098039215686274, 0.0, 0.6666666667,\n      0.5333333333, 0.5137254901960784, 0.0, 0.6666666667, 0.5333333333, 0.5176470588235295, 0.0,\n      0.6666666667, 0.5333333333, 0.5215686274509804, 0.0, 0.6666666667, 0.5333333333,\n      0.5254901960784314, 0.0, 0.6666666667, 0.5333333333, 0.5294117647058824, 0.0, 0.6666666667,\n      0.5333333333, 0.5333333333333333, 0.0, 0.6666666667, 0.5333333333, 0.5372549019607843, 0.0,\n      0.6666666667, 0.5333333333, 0.5411764705882353, 0.0, 0.6666666667, 0.5333333333,\n      0.5450980392156862, 0.0, 0.6666666667, 0.5333333333, 0.5490196078431373, 0.0, 0.6666666667,\n      0.5333333333, 0.5529411764705883, 0.0, 0.6666666667, 0.5333333333, 0.5568627450980392, 0.0,\n      0.6666666667, 0.5333333333, 0.5607843137254902, 0.0, 0.6666666667, 0.5333333333,\n      0.5647058823529412, 0.0, 0.6666666667, 0.5333333333, 0.5686274509803921, 0.0, 0.6666666667,\n      0.5333333333, 0.5725490196078431, 0.0, 0.6666666667, 0.5333333333, 0.5764705882352941, 0.0,\n      0.6666666667, 0.5333333333, 0.5803921568627451, 0.0, 0.6666666667, 0.5333333333,\n      0.5843137254901961, 0.0, 0.6666666667, 0.5333333333, 0.5882352941176471, 0.0, 0.6666666667,\n      0.5333333333, 0.592156862745098, 0.0, 0.6666666667, 0.5333333333, 0.596078431372549, 0.0,\n      0.6666666667, 0.5333333333, 0.6, 0.0, 0.6666666667, 0.5333333333, 0.6039215686274509, 0.0,\n      0.6666666667, 0.5333333333, 0.6078431372549019, 0.4, 1.0, 0.4, 0.611764705882353, 0.4, 1.0,\n      0.4, 0.615686274509804, 0.4, 1.0, 0.4, 0.6196078431372549, 0.4, 1.0, 0.4, 0.6235294117647059,\n      0.4, 1.0, 0.4, 0.6274509803921569, 0.4, 1.0, 0.4, 0.6313725490196078, 0.4, 1.0, 0.4,\n      0.6352941176470588, 0.4, 1.0, 0.4, 0.6392156862745098, 0.4, 1.0, 0.4, 0.6431372549019608, 0.4,\n      1.0, 0.4, 0.6470588235294118, 0.4, 1.0, 0.4, 0.6509803921568628, 0.4, 1.0, 0.4,\n      0.6549019607843137, 0.4, 1.0, 0.4, 0.6588235294117647, 0.4, 1.0, 0.4, 0.6627450980392157, 0.4,\n      1.0, 0.4, 0.6666666666666666, 0.4, 1.0, 0.4, 0.6705882352941176, 0.4, 1.0, 0.4,\n      0.6745098039215687, 0.4, 1.0, 0.4, 0.6784313725490196, 0.4, 1.0, 0.4, 0.6823529411764706, 0.4,\n      1.0, 0.4, 0.6862745098039216, 0.4, 1.0, 0.4, 0.6901960784313725, 0.4, 1.0, 0.4,\n      0.6941176470588235, 0.4, 1.0, 0.4, 0.6980392156862745, 0.4, 1.0, 0.4, 0.7019607843137254, 0.4,\n      1.0, 0.4, 0.7058823529411765, 1.0, 0.9490196078, 0.0, 0.7098039215686275, 1.0, 0.9490196078,\n      0.0, 0.7137254901960784, 1.0, 0.9490196078, 0.0, 0.7176470588235294, 1.0, 0.9490196078, 0.0,\n      0.7215686274509804, 1.0, 0.9490196078, 0.0, 0.7254901960784313, 1.0, 0.9490196078, 0.0,\n      0.7294117647058823, 1.0, 0.9490196078, 0.0, 0.7333333333333333, 1.0, 0.9490196078, 0.0,\n      0.7372549019607844, 1.0, 0.9490196078, 0.0, 0.7411764705882353, 1.0, 0.9490196078, 0.0,\n      0.7450980392156863, 1.0, 0.9490196078, 0.0, 0.7490196078431373, 1.0, 0.9490196078, 0.0,\n      0.7529411764705882, 1.0, 0.9490196078, 0.0, 0.7568627450980392, 1.0, 0.9490196078, 0.0,\n      0.7607843137254902, 1.0, 0.9490196078, 0.0, 0.7647058823529411, 1.0, 0.9490196078, 0.0,\n      0.7686274509803922, 1.0, 0.9490196078, 0.0, 0.7725490196078432, 1.0, 0.9490196078, 0.0,\n      0.7764705882352941, 1.0, 0.9490196078, 0.0, 0.7803921568627451, 1.0, 0.9490196078, 0.0,\n      0.7843137254901961, 1.0, 0.9490196078, 0.0, 0.788235294117647, 1.0, 0.9490196078, 0.0,\n      0.792156862745098, 1.0, 0.9490196078, 0.0, 0.796078431372549, 1.0, 0.9490196078, 0.0, 0.8,\n      1.0, 0.9490196078, 0.0, 0.803921568627451, 1.0, 0.9490196078, 0.0, 0.807843137254902,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8117647058823529, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8156862745098039, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8196078431372549, 0.9490196078, 0.6509803922, 0.2509803922, 0.8235294117647058,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8274509803921568, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8313725490196079, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8352941176470589, 0.9490196078, 0.6509803922, 0.2509803922, 0.8392156862745098,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8431372549019608, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8470588235294118, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8509803921568627, 0.9490196078, 0.6509803922, 0.2509803922, 0.8549019607843137,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8588235294117647, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8627450980392157, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8666666666666667, 0.9490196078, 0.6509803922, 0.2509803922, 0.8705882352941177,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8745098039215686, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8784313725490196, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8823529411764706, 0.9490196078, 0.6509803922, 0.2509803922, 0.8862745098039215,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8901960784313725, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8941176470588236, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8980392156862745, 0.9490196078, 0.6509803922, 0.2509803922, 0.9019607843137255,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.9058823529411765, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.9098039215686274, 1.0, 0.0, 0.0, 0.9137254901960784, 1.0, 0.0, 0.0,\n      0.9176470588235294, 1.0, 0.0, 0.0, 0.9215686274509803, 1.0, 0.0, 0.0, 0.9254901960784314, 1.0,\n      0.0, 0.0, 0.9294117647058824, 1.0, 0.0, 0.0, 0.9333333333333333, 1.0, 0.0, 0.0,\n      0.9372549019607843, 1.0, 0.0, 0.0, 0.9411764705882354, 1.0, 0.0, 0.0, 0.9450980392156864, 1.0,\n      0.0, 0.0, 0.9490196078431372, 1.0, 0.0, 0.0, 0.9529411764705882, 1.0, 0.0, 0.0,\n      0.9568627450980394, 1.0, 0.0, 0.0, 0.9607843137254903, 1.0, 0.0, 0.0, 0.9647058823529413, 1.0,\n      0.0, 0.0, 0.9686274509803922, 1.0, 0.0, 0.0, 0.9725490196078431, 1.0, 0.0, 0.0,\n      0.9764705882352941, 1.0, 0.0, 0.0, 0.9803921568627451, 1.0, 0.0, 0.0, 0.984313725490196, 1.0,\n      0.0, 0.0, 0.9882352941176471, 1.0, 0.0, 0.0, 0.9921568627450981, 1.0, 0.0, 0.0,\n      0.996078431372549, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0,\n    ],\n    description: 'SUV',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'ge_256',\n    name: 'ge_256',\n    RGBPoints: [\n      0.0, 0.0039215686, 0.0078431373, 0.0078431373, 0.00392156862745098, 0.0039215686,\n      0.0078431373, 0.0078431373, 0.00784313725490196, 0.0039215686, 0.0078431373, 0.0117647059,\n      0.011764705882352941, 0.0039215686, 0.0117647059, 0.0156862745, 0.01568627450980392,\n      0.0039215686, 0.0117647059, 0.0196078431, 0.0196078431372549, 0.0039215686, 0.0156862745,\n      0.0235294118, 0.023529411764705882, 0.0039215686, 0.0156862745, 0.0274509804,\n      0.027450980392156862, 0.0039215686, 0.0196078431, 0.031372549, 0.03137254901960784,\n      0.0039215686, 0.0196078431, 0.0352941176, 0.03529411764705882, 0.0039215686, 0.0235294118,\n      0.0392156863, 0.0392156862745098, 0.0039215686, 0.0235294118, 0.0431372549,\n      0.043137254901960784, 0.0039215686, 0.0274509804, 0.0470588235, 0.047058823529411764,\n      0.0039215686, 0.0274509804, 0.0509803922, 0.050980392156862744, 0.0039215686, 0.031372549,\n      0.0549019608, 0.054901960784313725, 0.0039215686, 0.031372549, 0.0588235294,\n      0.05882352941176471, 0.0039215686, 0.0352941176, 0.062745098, 0.06274509803921569,\n      0.0039215686, 0.0352941176, 0.0666666667, 0.06666666666666667, 0.0039215686, 0.0392156863,\n      0.0705882353, 0.07058823529411765, 0.0039215686, 0.0392156863, 0.0745098039,\n      0.07450980392156863, 0.0039215686, 0.0431372549, 0.0784313725, 0.0784313725490196,\n      0.0039215686, 0.0431372549, 0.0823529412, 0.08235294117647059, 0.0039215686, 0.0470588235,\n      0.0862745098, 0.08627450980392157, 0.0039215686, 0.0470588235, 0.0901960784,\n      0.09019607843137255, 0.0039215686, 0.0509803922, 0.0941176471, 0.09411764705882353,\n      0.0039215686, 0.0509803922, 0.0980392157, 0.09803921568627451, 0.0039215686, 0.0549019608,\n      0.1019607843, 0.10196078431372549, 0.0039215686, 0.0549019608, 0.1058823529,\n      0.10588235294117647, 0.0039215686, 0.0588235294, 0.1098039216, 0.10980392156862745,\n      0.0039215686, 0.0588235294, 0.1137254902, 0.11372549019607843, 0.0039215686, 0.062745098,\n      0.1176470588, 0.11764705882352942, 0.0039215686, 0.062745098, 0.1215686275,\n      0.12156862745098039, 0.0039215686, 0.0666666667, 0.1254901961, 0.12549019607843137,\n      0.0039215686, 0.0666666667, 0.1294117647, 0.12941176470588237, 0.0039215686, 0.0705882353,\n      0.1333333333, 0.13333333333333333, 0.0039215686, 0.0705882353, 0.137254902,\n      0.13725490196078433, 0.0039215686, 0.0745098039, 0.1411764706, 0.1411764705882353,\n      0.0039215686, 0.0745098039, 0.1450980392, 0.1450980392156863, 0.0039215686, 0.0784313725,\n      0.1490196078, 0.14901960784313725, 0.0039215686, 0.0784313725, 0.1529411765,\n      0.15294117647058825, 0.0039215686, 0.0823529412, 0.1568627451, 0.1568627450980392,\n      0.0039215686, 0.0823529412, 0.1607843137, 0.1607843137254902, 0.0039215686, 0.0862745098,\n      0.1647058824, 0.16470588235294117, 0.0039215686, 0.0862745098, 0.168627451,\n      0.16862745098039217, 0.0039215686, 0.0901960784, 0.1725490196, 0.17254901960784313,\n      0.0039215686, 0.0901960784, 0.1764705882, 0.17647058823529413, 0.0039215686, 0.0941176471,\n      0.1803921569, 0.1803921568627451, 0.0039215686, 0.0941176471, 0.1843137255,\n      0.1843137254901961, 0.0039215686, 0.0980392157, 0.1882352941, 0.18823529411764706,\n      0.0039215686, 0.0980392157, 0.1921568627, 0.19215686274509805, 0.0039215686, 0.1019607843,\n      0.1960784314, 0.19607843137254902, 0.0039215686, 0.1019607843, 0.2, 0.2, 0.0039215686,\n      0.1058823529, 0.2039215686, 0.20392156862745098, 0.0039215686, 0.1058823529, 0.2078431373,\n      0.20784313725490197, 0.0039215686, 0.1098039216, 0.2117647059, 0.21176470588235294,\n      0.0039215686, 0.1098039216, 0.2156862745, 0.21568627450980393, 0.0039215686, 0.1137254902,\n      0.2196078431, 0.2196078431372549, 0.0039215686, 0.1137254902, 0.2235294118,\n      0.2235294117647059, 0.0039215686, 0.1176470588, 0.2274509804, 0.22745098039215686,\n      0.0039215686, 0.1176470588, 0.231372549, 0.23137254901960785, 0.0039215686, 0.1215686275,\n      0.2352941176, 0.23529411764705885, 0.0039215686, 0.1215686275, 0.2392156863,\n      0.23921568627450984, 0.0039215686, 0.1254901961, 0.2431372549, 0.24313725490196078,\n      0.0039215686, 0.1254901961, 0.2470588235, 0.24705882352941178, 0.0039215686, 0.1294117647,\n      0.2509803922, 0.25098039215686274, 0.0039215686, 0.1294117647, 0.2509803922,\n      0.2549019607843137, 0.0078431373, 0.1254901961, 0.2549019608, 0.25882352941176473,\n      0.0156862745, 0.1254901961, 0.2588235294, 0.2627450980392157, 0.0235294118, 0.1215686275,\n      0.262745098, 0.26666666666666666, 0.031372549, 0.1215686275, 0.2666666667,\n      0.27058823529411763, 0.0392156863, 0.1176470588, 0.2705882353, 0.27450980392156865,\n      0.0470588235, 0.1176470588, 0.2745098039, 0.2784313725490196, 0.0549019608, 0.1137254902,\n      0.2784313725, 0.2823529411764706, 0.062745098, 0.1137254902, 0.2823529412,\n      0.28627450980392155, 0.0705882353, 0.1098039216, 0.2862745098, 0.2901960784313726,\n      0.0784313725, 0.1098039216, 0.2901960784, 0.29411764705882354, 0.0862745098, 0.1058823529,\n      0.2941176471, 0.2980392156862745, 0.0941176471, 0.1058823529, 0.2980392157,\n      0.30196078431372547, 0.1019607843, 0.1019607843, 0.3019607843, 0.3058823529411765,\n      0.1098039216, 0.1019607843, 0.3058823529, 0.30980392156862746, 0.1176470588, 0.0980392157,\n      0.3098039216, 0.3137254901960784, 0.1254901961, 0.0980392157, 0.3137254902,\n      0.3176470588235294, 0.1333333333, 0.0941176471, 0.3176470588, 0.3215686274509804,\n      0.1411764706, 0.0941176471, 0.3215686275, 0.3254901960784314, 0.1490196078, 0.0901960784,\n      0.3254901961, 0.32941176470588235, 0.1568627451, 0.0901960784, 0.3294117647,\n      0.3333333333333333, 0.1647058824, 0.0862745098, 0.3333333333, 0.33725490196078434,\n      0.1725490196, 0.0862745098, 0.337254902, 0.3411764705882353, 0.1803921569, 0.0823529412,\n      0.3411764706, 0.34509803921568627, 0.1882352941, 0.0823529412, 0.3450980392,\n      0.34901960784313724, 0.1960784314, 0.0784313725, 0.3490196078, 0.35294117647058826,\n      0.2039215686, 0.0784313725, 0.3529411765, 0.3568627450980392, 0.2117647059, 0.0745098039,\n      0.3568627451, 0.3607843137254902, 0.2196078431, 0.0745098039, 0.3607843137,\n      0.36470588235294116, 0.2274509804, 0.0705882353, 0.3647058824, 0.3686274509803922,\n      0.2352941176, 0.0705882353, 0.368627451, 0.37254901960784315, 0.2431372549, 0.0666666667,\n      0.3725490196, 0.3764705882352941, 0.2509803922, 0.0666666667, 0.3764705882,\n      0.3803921568627451, 0.2549019608, 0.062745098, 0.3803921569, 0.3843137254901961, 0.262745098,\n      0.062745098, 0.3843137255, 0.38823529411764707, 0.2705882353, 0.0588235294, 0.3882352941,\n      0.39215686274509803, 0.2784313725, 0.0588235294, 0.3921568627, 0.396078431372549,\n      0.2862745098, 0.0549019608, 0.3960784314, 0.4, 0.2941176471, 0.0549019608, 0.4,\n      0.403921568627451, 0.3019607843, 0.0509803922, 0.4039215686, 0.40784313725490196,\n      0.3098039216, 0.0509803922, 0.4078431373, 0.4117647058823529, 0.3176470588, 0.0470588235,\n      0.4117647059, 0.41568627450980394, 0.3254901961, 0.0470588235, 0.4156862745,\n      0.4196078431372549, 0.3333333333, 0.0431372549, 0.4196078431, 0.4235294117647059,\n      0.3411764706, 0.0431372549, 0.4235294118, 0.42745098039215684, 0.3490196078, 0.0392156863,\n      0.4274509804, 0.43137254901960786, 0.3568627451, 0.0392156863, 0.431372549,\n      0.43529411764705883, 0.3647058824, 0.0352941176, 0.4352941176, 0.4392156862745098,\n      0.3725490196, 0.0352941176, 0.4392156863, 0.44313725490196076, 0.3803921569, 0.031372549,\n      0.4431372549, 0.4470588235294118, 0.3882352941, 0.031372549, 0.4470588235,\n      0.45098039215686275, 0.3960784314, 0.0274509804, 0.4509803922, 0.4549019607843137,\n      0.4039215686, 0.0274509804, 0.4549019608, 0.4588235294117647, 0.4117647059, 0.0235294118,\n      0.4588235294, 0.4627450980392157, 0.4196078431, 0.0235294118, 0.462745098, 0.4666666666666667,\n      0.4274509804, 0.0196078431, 0.4666666667, 0.4705882352941177, 0.4352941176, 0.0196078431,\n      0.4705882353, 0.4745098039215686, 0.4431372549, 0.0156862745, 0.4745098039,\n      0.4784313725490197, 0.4509803922, 0.0156862745, 0.4784313725, 0.48235294117647065,\n      0.4588235294, 0.0117647059, 0.4823529412, 0.48627450980392156, 0.4666666667, 0.0117647059,\n      0.4862745098, 0.49019607843137253, 0.4745098039, 0.0078431373, 0.4901960784,\n      0.49411764705882355, 0.4823529412, 0.0078431373, 0.4941176471, 0.4980392156862745,\n      0.4901960784, 0.0039215686, 0.4980392157, 0.5019607843137255, 0.4980392157, 0.0117647059,\n      0.4980392157, 0.5058823529411764, 0.5058823529, 0.0156862745, 0.4901960784,\n      0.5098039215686274, 0.5137254902, 0.0235294118, 0.4823529412, 0.5137254901960784,\n      0.5215686275, 0.0274509804, 0.4745098039, 0.5176470588235295, 0.5294117647, 0.0352941176,\n      0.4666666667, 0.5215686274509804, 0.537254902, 0.0392156863, 0.4588235294, 0.5254901960784314,\n      0.5450980392, 0.0470588235, 0.4509803922, 0.5294117647058824, 0.5529411765, 0.0509803922,\n      0.4431372549, 0.5333333333333333, 0.5607843137, 0.0588235294, 0.4352941176,\n      0.5372549019607843, 0.568627451, 0.062745098, 0.4274509804, 0.5411764705882353, 0.5764705882,\n      0.0705882353, 0.4196078431, 0.5450980392156862, 0.5843137255, 0.0745098039, 0.4117647059,\n      0.5490196078431373, 0.5921568627, 0.0823529412, 0.4039215686, 0.5529411764705883, 0.6,\n      0.0862745098, 0.3960784314, 0.5568627450980392, 0.6078431373, 0.0941176471, 0.3882352941,\n      0.5607843137254902, 0.6156862745, 0.0980392157, 0.3803921569, 0.5647058823529412,\n      0.6235294118, 0.1058823529, 0.3725490196, 0.5686274509803921, 0.631372549, 0.1098039216,\n      0.3647058824, 0.5725490196078431, 0.6392156863, 0.1176470588, 0.3568627451,\n      0.5764705882352941, 0.6470588235, 0.1215686275, 0.3490196078, 0.5803921568627451,\n      0.6549019608, 0.1294117647, 0.3411764706, 0.5843137254901961, 0.662745098, 0.1333333333,\n      0.3333333333, 0.5882352941176471, 0.6705882353, 0.1411764706, 0.3254901961, 0.592156862745098,\n      0.6784313725, 0.1450980392, 0.3176470588, 0.596078431372549, 0.6862745098, 0.1529411765,\n      0.3098039216, 0.6, 0.6941176471, 0.1568627451, 0.3019607843, 0.6039215686274509, 0.7019607843,\n      0.1647058824, 0.2941176471, 0.6078431372549019, 0.7098039216, 0.168627451, 0.2862745098,\n      0.611764705882353, 0.7176470588, 0.1764705882, 0.2784313725, 0.615686274509804, 0.7254901961,\n      0.1803921569, 0.2705882353, 0.6196078431372549, 0.7333333333, 0.1882352941, 0.262745098,\n      0.6235294117647059, 0.7411764706, 0.1921568627, 0.2549019608, 0.6274509803921569,\n      0.7490196078, 0.2, 0.2509803922, 0.6313725490196078, 0.7529411765, 0.2039215686, 0.2431372549,\n      0.6352941176470588, 0.7607843137, 0.2117647059, 0.2352941176, 0.6392156862745098, 0.768627451,\n      0.2156862745, 0.2274509804, 0.6431372549019608, 0.7764705882, 0.2235294118, 0.2196078431,\n      0.6470588235294118, 0.7843137255, 0.2274509804, 0.2117647059, 0.6509803921568628,\n      0.7921568627, 0.2352941176, 0.2039215686, 0.6549019607843137, 0.8, 0.2392156863, 0.1960784314,\n      0.6588235294117647, 0.8078431373, 0.2470588235, 0.1882352941, 0.6627450980392157,\n      0.8156862745, 0.2509803922, 0.1803921569, 0.6666666666666666, 0.8235294118, 0.2549019608,\n      0.1725490196, 0.6705882352941176, 0.831372549, 0.2588235294, 0.1647058824, 0.6745098039215687,\n      0.8392156863, 0.2666666667, 0.1568627451, 0.6784313725490196, 0.8470588235, 0.2705882353,\n      0.1490196078, 0.6823529411764706, 0.8549019608, 0.2784313725, 0.1411764706,\n      0.6862745098039216, 0.862745098, 0.2823529412, 0.1333333333, 0.6901960784313725, 0.8705882353,\n      0.2901960784, 0.1254901961, 0.6941176470588235, 0.8784313725, 0.2941176471, 0.1176470588,\n      0.6980392156862745, 0.8862745098, 0.3019607843, 0.1098039216, 0.7019607843137254,\n      0.8941176471, 0.3058823529, 0.1019607843, 0.7058823529411765, 0.9019607843, 0.3137254902,\n      0.0941176471, 0.7098039215686275, 0.9098039216, 0.3176470588, 0.0862745098,\n      0.7137254901960784, 0.9176470588, 0.3254901961, 0.0784313725, 0.7176470588235294,\n      0.9254901961, 0.3294117647, 0.0705882353, 0.7215686274509804, 0.9333333333, 0.337254902,\n      0.062745098, 0.7254901960784313, 0.9411764706, 0.3411764706, 0.0549019608, 0.7294117647058823,\n      0.9490196078, 0.3490196078, 0.0470588235, 0.7333333333333333, 0.9568627451, 0.3529411765,\n      0.0392156863, 0.7372549019607844, 0.9647058824, 0.3607843137, 0.031372549, 0.7411764705882353,\n      0.9725490196, 0.3647058824, 0.0235294118, 0.7450980392156863, 0.9803921569, 0.3725490196,\n      0.0156862745, 0.7490196078431373, 0.9882352941, 0.3725490196, 0.0039215686,\n      0.7529411764705882, 0.9960784314, 0.3843137255, 0.0156862745, 0.7568627450980392,\n      0.9960784314, 0.3921568627, 0.031372549, 0.7607843137254902, 0.9960784314, 0.4039215686,\n      0.0470588235, 0.7647058823529411, 0.9960784314, 0.4117647059, 0.062745098, 0.7686274509803922,\n      0.9960784314, 0.4235294118, 0.0784313725, 0.7725490196078432, 0.9960784314, 0.431372549,\n      0.0941176471, 0.7764705882352941, 0.9960784314, 0.4431372549, 0.1098039216,\n      0.7803921568627451, 0.9960784314, 0.4509803922, 0.1254901961, 0.7843137254901961,\n      0.9960784314, 0.462745098, 0.1411764706, 0.788235294117647, 0.9960784314, 0.4705882353,\n      0.1568627451, 0.792156862745098, 0.9960784314, 0.4823529412, 0.1725490196, 0.796078431372549,\n      0.9960784314, 0.4901960784, 0.1882352941, 0.8, 0.9960784314, 0.5019607843, 0.2039215686,\n      0.803921568627451, 0.9960784314, 0.5098039216, 0.2196078431, 0.807843137254902, 0.9960784314,\n      0.5215686275, 0.2352941176, 0.8117647058823529, 0.9960784314, 0.5294117647, 0.2509803922,\n      0.8156862745098039, 0.9960784314, 0.5411764706, 0.262745098, 0.8196078431372549, 0.9960784314,\n      0.5490196078, 0.2784313725, 0.8235294117647058, 0.9960784314, 0.5607843137, 0.2941176471,\n      0.8274509803921568, 0.9960784314, 0.568627451, 0.3098039216, 0.8313725490196079, 0.9960784314,\n      0.5803921569, 0.3254901961, 0.8352941176470589, 0.9960784314, 0.5882352941, 0.3411764706,\n      0.8392156862745098, 0.9960784314, 0.6, 0.3568627451, 0.8431372549019608, 0.9960784314,\n      0.6078431373, 0.3725490196, 0.8470588235294118, 0.9960784314, 0.6196078431, 0.3882352941,\n      0.8509803921568627, 0.9960784314, 0.6274509804, 0.4039215686, 0.8549019607843137,\n      0.9960784314, 0.6392156863, 0.4196078431, 0.8588235294117647, 0.9960784314, 0.6470588235,\n      0.4352941176, 0.8627450980392157, 0.9960784314, 0.6588235294, 0.4509803922,\n      0.8666666666666667, 0.9960784314, 0.6666666667, 0.4666666667, 0.8705882352941177,\n      0.9960784314, 0.6784313725, 0.4823529412, 0.8745098039215686, 0.9960784314, 0.6862745098,\n      0.4980392157, 0.8784313725490196, 0.9960784314, 0.6980392157, 0.5137254902,\n      0.8823529411764706, 0.9960784314, 0.7058823529, 0.5294117647, 0.8862745098039215,\n      0.9960784314, 0.7176470588, 0.5450980392, 0.8901960784313725, 0.9960784314, 0.7254901961,\n      0.5607843137, 0.8941176470588236, 0.9960784314, 0.737254902, 0.5764705882, 0.8980392156862745,\n      0.9960784314, 0.7450980392, 0.5921568627, 0.9019607843137255, 0.9960784314, 0.7529411765,\n      0.6078431373, 0.9058823529411765, 0.9960784314, 0.7607843137, 0.6235294118,\n      0.9098039215686274, 0.9960784314, 0.7725490196, 0.6392156863, 0.9137254901960784,\n      0.9960784314, 0.7803921569, 0.6549019608, 0.9176470588235294, 0.9960784314, 0.7921568627,\n      0.6705882353, 0.9215686274509803, 0.9960784314, 0.8, 0.6862745098, 0.9254901960784314,\n      0.9960784314, 0.8117647059, 0.7019607843, 0.9294117647058824, 0.9960784314, 0.8196078431,\n      0.7176470588, 0.9333333333333333, 0.9960784314, 0.831372549, 0.7333333333, 0.9372549019607843,\n      0.9960784314, 0.8392156863, 0.7490196078, 0.9411764705882354, 0.9960784314, 0.8509803922,\n      0.7607843137, 0.9450980392156864, 0.9960784314, 0.8588235294, 0.7764705882,\n      0.9490196078431372, 0.9960784314, 0.8705882353, 0.7921568627, 0.9529411764705882,\n      0.9960784314, 0.8784313725, 0.8078431373, 0.9568627450980394, 0.9960784314, 0.8901960784,\n      0.8235294118, 0.9607843137254903, 0.9960784314, 0.8980392157, 0.8392156863,\n      0.9647058823529413, 0.9960784314, 0.9098039216, 0.8549019608, 0.9686274509803922,\n      0.9960784314, 0.9176470588, 0.8705882353, 0.9725490196078431, 0.9960784314, 0.9294117647,\n      0.8862745098, 0.9764705882352941, 0.9960784314, 0.937254902, 0.9019607843, 0.9803921568627451,\n      0.9960784314, 0.9490196078, 0.9176470588, 0.984313725490196, 0.9960784314, 0.9568627451,\n      0.9333333333, 0.9882352941176471, 0.9960784314, 0.968627451, 0.9490196078, 0.9921568627450981,\n      0.9960784314, 0.9764705882, 0.9647058824, 0.996078431372549, 0.9960784314, 0.9882352941,\n      0.9803921569, 1.0, 0.9960784314, 0.9882352941, 0.9803921569,\n    ],\n    description: 'GE 256',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'ge',\n    name: 'ge',\n    RGBPoints: [\n      0.0, 0.0078431373, 0.0078431373, 0.0078431373, 0.00392156862745098, 0.0078431373,\n      0.0078431373, 0.0078431373, 0.00784313725490196, 0.0078431373, 0.0078431373, 0.0078431373,\n      0.011764705882352941, 0.0078431373, 0.0078431373, 0.0078431373, 0.01568627450980392,\n      0.0078431373, 0.0078431373, 0.0078431373, 0.0196078431372549, 0.0078431373, 0.0078431373,\n      0.0078431373, 0.023529411764705882, 0.0078431373, 0.0078431373, 0.0078431373,\n      0.027450980392156862, 0.0078431373, 0.0078431373, 0.0078431373, 0.03137254901960784,\n      0.0078431373, 0.0078431373, 0.0078431373, 0.03529411764705882, 0.0078431373, 0.0078431373,\n      0.0078431373, 0.0392156862745098, 0.0078431373, 0.0078431373, 0.0078431373,\n      0.043137254901960784, 0.0078431373, 0.0078431373, 0.0078431373, 0.047058823529411764,\n      0.0078431373, 0.0078431373, 0.0078431373, 0.050980392156862744, 0.0078431373, 0.0078431373,\n      0.0078431373, 0.054901960784313725, 0.0078431373, 0.0078431373, 0.0078431373,\n      0.05882352941176471, 0.0117647059, 0.0078431373, 0.0078431373, 0.06274509803921569,\n      0.0078431373, 0.0156862745, 0.0156862745, 0.06666666666666667, 0.0078431373, 0.0235294118,\n      0.0235294118, 0.07058823529411765, 0.0078431373, 0.031372549, 0.031372549,\n      0.07450980392156863, 0.0078431373, 0.0392156863, 0.0392156863, 0.0784313725490196,\n      0.0078431373, 0.0470588235, 0.0470588235, 0.08235294117647059, 0.0078431373, 0.0549019608,\n      0.0549019608, 0.08627450980392157, 0.0078431373, 0.062745098, 0.062745098,\n      0.09019607843137255, 0.0078431373, 0.0705882353, 0.0705882353, 0.09411764705882353,\n      0.0078431373, 0.0784313725, 0.0784313725, 0.09803921568627451, 0.0078431373, 0.0901960784,\n      0.0862745098, 0.10196078431372549, 0.0078431373, 0.0980392157, 0.0941176471,\n      0.10588235294117647, 0.0078431373, 0.1058823529, 0.1019607843, 0.10980392156862745,\n      0.0078431373, 0.1137254902, 0.1098039216, 0.11372549019607843, 0.0078431373, 0.1215686275,\n      0.1176470588, 0.11764705882352942, 0.0078431373, 0.1294117647, 0.1254901961,\n      0.12156862745098039, 0.0078431373, 0.137254902, 0.1333333333, 0.12549019607843137,\n      0.0078431373, 0.1450980392, 0.1411764706, 0.12941176470588237, 0.0078431373, 0.1529411765,\n      0.1490196078, 0.13333333333333333, 0.0078431373, 0.1647058824, 0.1568627451,\n      0.13725490196078433, 0.0078431373, 0.1725490196, 0.1647058824, 0.1411764705882353,\n      0.0078431373, 0.1803921569, 0.1725490196, 0.1450980392156863, 0.0078431373, 0.1882352941,\n      0.1803921569, 0.14901960784313725, 0.0078431373, 0.1960784314, 0.1882352941,\n      0.15294117647058825, 0.0078431373, 0.2039215686, 0.1960784314, 0.1568627450980392,\n      0.0078431373, 0.2117647059, 0.2039215686, 0.1607843137254902, 0.0078431373, 0.2196078431,\n      0.2117647059, 0.16470588235294117, 0.0078431373, 0.2274509804, 0.2196078431,\n      0.16862745098039217, 0.0078431373, 0.2352941176, 0.2274509804, 0.17254901960784313,\n      0.0078431373, 0.2470588235, 0.2352941176, 0.17647058823529413, 0.0078431373, 0.2509803922,\n      0.2431372549, 0.1803921568627451, 0.0078431373, 0.2549019608, 0.2509803922,\n      0.1843137254901961, 0.0078431373, 0.262745098, 0.2509803922, 0.18823529411764706,\n      0.0078431373, 0.2705882353, 0.2588235294, 0.19215686274509805, 0.0078431373, 0.2784313725,\n      0.2666666667, 0.19607843137254902, 0.0078431373, 0.2862745098, 0.2745098039, 0.2,\n      0.0078431373, 0.2941176471, 0.2823529412, 0.20392156862745098, 0.0078431373, 0.3019607843,\n      0.2901960784, 0.20784313725490197, 0.0078431373, 0.3137254902, 0.2980392157,\n      0.21176470588235294, 0.0078431373, 0.3215686275, 0.3058823529, 0.21568627450980393,\n      0.0078431373, 0.3294117647, 0.3137254902, 0.2196078431372549, 0.0078431373, 0.337254902,\n      0.3215686275, 0.2235294117647059, 0.0078431373, 0.3450980392, 0.3294117647,\n      0.22745098039215686, 0.0078431373, 0.3529411765, 0.337254902, 0.23137254901960785,\n      0.0078431373, 0.3607843137, 0.3450980392, 0.23529411764705885, 0.0078431373, 0.368627451,\n      0.3529411765, 0.23921568627450984, 0.0078431373, 0.3764705882, 0.3607843137,\n      0.24313725490196078, 0.0078431373, 0.3843137255, 0.368627451, 0.24705882352941178,\n      0.0078431373, 0.3960784314, 0.3764705882, 0.25098039215686274, 0.0078431373, 0.4039215686,\n      0.3843137255, 0.2549019607843137, 0.0078431373, 0.4117647059, 0.3921568627,\n      0.25882352941176473, 0.0078431373, 0.4196078431, 0.4, 0.2627450980392157, 0.0078431373,\n      0.4274509804, 0.4078431373, 0.26666666666666666, 0.0078431373, 0.4352941176, 0.4156862745,\n      0.27058823529411763, 0.0078431373, 0.4431372549, 0.4235294118, 0.27450980392156865,\n      0.0078431373, 0.4509803922, 0.431372549, 0.2784313725490196, 0.0078431373, 0.4588235294,\n      0.4392156863, 0.2823529411764706, 0.0078431373, 0.4705882353, 0.4470588235,\n      0.28627450980392155, 0.0078431373, 0.4784313725, 0.4549019608, 0.2901960784313726,\n      0.0078431373, 0.4862745098, 0.462745098, 0.29411764705882354, 0.0078431373, 0.4941176471,\n      0.4705882353, 0.2980392156862745, 0.0078431373, 0.5019607843, 0.4784313725,\n      0.30196078431372547, 0.0117647059, 0.5098039216, 0.4862745098, 0.3058823529411765,\n      0.0196078431, 0.5019607843, 0.4941176471, 0.30980392156862746, 0.0274509804, 0.4941176471,\n      0.5058823529, 0.3137254901960784, 0.0352941176, 0.4862745098, 0.5137254902,\n      0.3176470588235294, 0.0431372549, 0.4784313725, 0.5215686275, 0.3215686274509804,\n      0.0509803922, 0.4705882353, 0.5294117647, 0.3254901960784314, 0.0588235294, 0.462745098,\n      0.537254902, 0.32941176470588235, 0.0666666667, 0.4549019608, 0.5450980392,\n      0.3333333333333333, 0.0745098039, 0.4470588235, 0.5529411765, 0.33725490196078434,\n      0.0823529412, 0.4392156863, 0.5607843137, 0.3411764705882353, 0.0901960784, 0.431372549,\n      0.568627451, 0.34509803921568627, 0.0980392157, 0.4235294118, 0.5764705882,\n      0.34901960784313724, 0.1058823529, 0.4156862745, 0.5843137255, 0.35294117647058826,\n      0.1137254902, 0.4078431373, 0.5921568627, 0.3568627450980392, 0.1215686275, 0.4, 0.6,\n      0.3607843137254902, 0.1294117647, 0.3921568627, 0.6078431373, 0.36470588235294116,\n      0.137254902, 0.3843137255, 0.6156862745, 0.3686274509803922, 0.1450980392, 0.3764705882,\n      0.6235294118, 0.37254901960784315, 0.1529411765, 0.368627451, 0.631372549, 0.3764705882352941,\n      0.1607843137, 0.3607843137, 0.6392156863, 0.3803921568627451, 0.168627451, 0.3529411765,\n      0.6470588235, 0.3843137254901961, 0.1764705882, 0.3450980392, 0.6549019608,\n      0.38823529411764707, 0.1843137255, 0.337254902, 0.662745098, 0.39215686274509803,\n      0.1921568627, 0.3294117647, 0.6705882353, 0.396078431372549, 0.2, 0.3215686275, 0.6784313725,\n      0.4, 0.2078431373, 0.3137254902, 0.6862745098, 0.403921568627451, 0.2156862745, 0.3058823529,\n      0.6941176471, 0.40784313725490196, 0.2235294118, 0.2980392157, 0.7019607843,\n      0.4117647058823529, 0.231372549, 0.2901960784, 0.7098039216, 0.41568627450980394,\n      0.2392156863, 0.2823529412, 0.7176470588, 0.4196078431372549, 0.2470588235, 0.2745098039,\n      0.7254901961, 0.4235294117647059, 0.2509803922, 0.2666666667, 0.7333333333,\n      0.42745098039215684, 0.2509803922, 0.2588235294, 0.7411764706, 0.43137254901960786,\n      0.2588235294, 0.2509803922, 0.7490196078, 0.43529411764705883, 0.2666666667, 0.2509803922,\n      0.7490196078, 0.4392156862745098, 0.2745098039, 0.2431372549, 0.7568627451,\n      0.44313725490196076, 0.2823529412, 0.2352941176, 0.7647058824, 0.4470588235294118,\n      0.2901960784, 0.2274509804, 0.7725490196, 0.45098039215686275, 0.2980392157, 0.2196078431,\n      0.7803921569, 0.4549019607843137, 0.3058823529, 0.2117647059, 0.7882352941,\n      0.4588235294117647, 0.3137254902, 0.2039215686, 0.7960784314, 0.4627450980392157,\n      0.3215686275, 0.1960784314, 0.8039215686, 0.4666666666666667, 0.3294117647, 0.1882352941,\n      0.8117647059, 0.4705882352941177, 0.337254902, 0.1803921569, 0.8196078431, 0.4745098039215686,\n      0.3450980392, 0.1725490196, 0.8274509804, 0.4784313725490197, 0.3529411765, 0.1647058824,\n      0.8352941176, 0.48235294117647065, 0.3607843137, 0.1568627451, 0.8431372549,\n      0.48627450980392156, 0.368627451, 0.1490196078, 0.8509803922, 0.49019607843137253,\n      0.3764705882, 0.1411764706, 0.8588235294, 0.49411764705882355, 0.3843137255, 0.1333333333,\n      0.8666666667, 0.4980392156862745, 0.3921568627, 0.1254901961, 0.8745098039,\n      0.5019607843137255, 0.4, 0.1176470588, 0.8823529412, 0.5058823529411764, 0.4078431373,\n      0.1098039216, 0.8901960784, 0.5098039215686274, 0.4156862745, 0.1019607843, 0.8980392157,\n      0.5137254901960784, 0.4235294118, 0.0941176471, 0.9058823529, 0.5176470588235295, 0.431372549,\n      0.0862745098, 0.9137254902, 0.5215686274509804, 0.4392156863, 0.0784313725, 0.9215686275,\n      0.5254901960784314, 0.4470588235, 0.0705882353, 0.9294117647, 0.5294117647058824,\n      0.4549019608, 0.062745098, 0.937254902, 0.5333333333333333, 0.462745098, 0.0549019608,\n      0.9450980392, 0.5372549019607843, 0.4705882353, 0.0470588235, 0.9529411765,\n      0.5411764705882353, 0.4784313725, 0.0392156863, 0.9607843137, 0.5450980392156862,\n      0.4862745098, 0.031372549, 0.968627451, 0.5490196078431373, 0.4941176471, 0.0235294118,\n      0.9764705882, 0.5529411764705883, 0.4980392157, 0.0156862745, 0.9843137255,\n      0.5568627450980392, 0.5058823529, 0.0078431373, 0.9921568627, 0.5607843137254902,\n      0.5137254902, 0.0156862745, 0.9803921569, 0.5647058823529412, 0.5215686275, 0.0235294118,\n      0.9647058824, 0.5686274509803921, 0.5294117647, 0.0352941176, 0.9490196078,\n      0.5725490196078431, 0.537254902, 0.0431372549, 0.9333333333, 0.5764705882352941, 0.5450980392,\n      0.0509803922, 0.9176470588, 0.5803921568627451, 0.5529411765, 0.062745098, 0.9019607843,\n      0.5843137254901961, 0.5607843137, 0.0705882353, 0.8862745098, 0.5882352941176471, 0.568627451,\n      0.0784313725, 0.8705882353, 0.592156862745098, 0.5764705882, 0.0901960784, 0.8549019608,\n      0.596078431372549, 0.5843137255, 0.0980392157, 0.8392156863, 0.6, 0.5921568627, 0.1098039216,\n      0.8235294118, 0.6039215686274509, 0.6, 0.1176470588, 0.8078431373, 0.6078431372549019,\n      0.6078431373, 0.1254901961, 0.7921568627, 0.611764705882353, 0.6156862745, 0.137254902,\n      0.7764705882, 0.615686274509804, 0.6235294118, 0.1450980392, 0.7607843137, 0.6196078431372549,\n      0.631372549, 0.1529411765, 0.7490196078, 0.6235294117647059, 0.6392156863, 0.1647058824,\n      0.737254902, 0.6274509803921569, 0.6470588235, 0.1725490196, 0.7215686275, 0.6313725490196078,\n      0.6549019608, 0.1843137255, 0.7058823529, 0.6352941176470588, 0.662745098, 0.1921568627,\n      0.6901960784, 0.6392156862745098, 0.6705882353, 0.2, 0.6745098039, 0.6431372549019608,\n      0.6784313725, 0.2117647059, 0.6588235294, 0.6470588235294118, 0.6862745098, 0.2196078431,\n      0.6431372549, 0.6509803921568628, 0.6941176471, 0.2274509804, 0.6274509804,\n      0.6549019607843137, 0.7019607843, 0.2392156863, 0.6117647059, 0.6588235294117647,\n      0.7098039216, 0.2470588235, 0.5960784314, 0.6627450980392157, 0.7176470588, 0.2509803922,\n      0.5803921569, 0.6666666666666666, 0.7254901961, 0.2588235294, 0.5647058824,\n      0.6705882352941176, 0.7333333333, 0.2666666667, 0.5490196078, 0.6745098039215687,\n      0.7411764706, 0.2784313725, 0.5333333333, 0.6784313725490196, 0.7490196078, 0.2862745098,\n      0.5176470588, 0.6823529411764706, 0.7490196078, 0.2941176471, 0.5019607843,\n      0.6862745098039216, 0.7529411765, 0.3058823529, 0.4862745098, 0.6901960784313725,\n      0.7607843137, 0.3137254902, 0.4705882353, 0.6941176470588235, 0.768627451, 0.3215686275,\n      0.4549019608, 0.6980392156862745, 0.7764705882, 0.3333333333, 0.4392156863,\n      0.7019607843137254, 0.7843137255, 0.3411764706, 0.4235294118, 0.7058823529411765,\n      0.7921568627, 0.3529411765, 0.4078431373, 0.7098039215686275, 0.8, 0.3607843137, 0.3921568627,\n      0.7137254901960784, 0.8078431373, 0.368627451, 0.3764705882, 0.7176470588235294, 0.8156862745,\n      0.3803921569, 0.3607843137, 0.7215686274509804, 0.8235294118, 0.3882352941, 0.3450980392,\n      0.7254901960784313, 0.831372549, 0.3960784314, 0.3294117647, 0.7294117647058823, 0.8392156863,\n      0.4078431373, 0.3137254902, 0.7333333333333333, 0.8470588235, 0.4156862745, 0.2980392157,\n      0.7372549019607844, 0.8549019608, 0.4274509804, 0.2823529412, 0.7411764705882353, 0.862745098,\n      0.4352941176, 0.2666666667, 0.7450980392156863, 0.8705882353, 0.4431372549, 0.2509803922,\n      0.7490196078431373, 0.8784313725, 0.4549019608, 0.2431372549, 0.7529411764705882,\n      0.8862745098, 0.462745098, 0.2274509804, 0.7568627450980392, 0.8941176471, 0.4705882353,\n      0.2117647059, 0.7607843137254902, 0.9019607843, 0.4823529412, 0.1960784314,\n      0.7647058823529411, 0.9098039216, 0.4901960784, 0.1803921569, 0.7686274509803922,\n      0.9176470588, 0.4980392157, 0.1647058824, 0.7725490196078432, 0.9254901961, 0.5098039216,\n      0.1490196078, 0.7764705882352941, 0.9333333333, 0.5176470588, 0.1333333333,\n      0.7803921568627451, 0.9411764706, 0.5294117647, 0.1176470588, 0.7843137254901961,\n      0.9490196078, 0.537254902, 0.1019607843, 0.788235294117647, 0.9568627451, 0.5450980392,\n      0.0862745098, 0.792156862745098, 0.9647058824, 0.5568627451, 0.0705882353, 0.796078431372549,\n      0.9725490196, 0.5647058824, 0.0549019608, 0.8, 0.9803921569, 0.5725490196, 0.0392156863,\n      0.803921568627451, 0.9882352941, 0.5843137255, 0.0235294118, 0.807843137254902, 0.9921568627,\n      0.5921568627, 0.0078431373, 0.8117647058823529, 0.9921568627, 0.6039215686, 0.0274509804,\n      0.8156862745098039, 0.9921568627, 0.6117647059, 0.0509803922, 0.8196078431372549,\n      0.9921568627, 0.6196078431, 0.0745098039, 0.8235294117647058, 0.9921568627, 0.631372549,\n      0.0980392157, 0.8274509803921568, 0.9921568627, 0.6392156863, 0.1215686275,\n      0.8313725490196079, 0.9921568627, 0.6470588235, 0.1411764706, 0.8352941176470589,\n      0.9921568627, 0.6588235294, 0.1647058824, 0.8392156862745098, 0.9921568627, 0.6666666667,\n      0.1882352941, 0.8431372549019608, 0.9921568627, 0.6784313725, 0.2117647059,\n      0.8470588235294118, 0.9921568627, 0.6862745098, 0.2352941176, 0.8509803921568627,\n      0.9921568627, 0.6941176471, 0.2509803922, 0.8549019607843137, 0.9921568627, 0.7058823529,\n      0.2705882353, 0.8588235294117647, 0.9921568627, 0.7137254902, 0.2941176471,\n      0.8627450980392157, 0.9921568627, 0.7215686275, 0.3176470588, 0.8666666666666667,\n      0.9921568627, 0.7333333333, 0.3411764706, 0.8705882352941177, 0.9921568627, 0.7411764706,\n      0.3647058824, 0.8745098039215686, 0.9921568627, 0.7490196078, 0.3843137255,\n      0.8784313725490196, 0.9921568627, 0.7529411765, 0.4078431373, 0.8823529411764706,\n      0.9921568627, 0.7607843137, 0.431372549, 0.8862745098039215, 0.9921568627, 0.7725490196,\n      0.4549019608, 0.8901960784313725, 0.9921568627, 0.7803921569, 0.4784313725,\n      0.8941176470588236, 0.9921568627, 0.7882352941, 0.4980392157, 0.8980392156862745,\n      0.9921568627, 0.8, 0.5215686275, 0.9019607843137255, 0.9921568627, 0.8078431373, 0.5450980392,\n      0.9058823529411765, 0.9921568627, 0.8156862745, 0.568627451, 0.9098039215686274, 0.9921568627,\n      0.8274509804, 0.5921568627, 0.9137254901960784, 0.9921568627, 0.8352941176, 0.6156862745,\n      0.9176470588235294, 0.9921568627, 0.8470588235, 0.6352941176, 0.9215686274509803,\n      0.9921568627, 0.8549019608, 0.6588235294, 0.9254901960784314, 0.9921568627, 0.862745098,\n      0.6823529412, 0.9294117647058824, 0.9921568627, 0.8745098039, 0.7058823529,\n      0.9333333333333333, 0.9921568627, 0.8823529412, 0.7294117647, 0.9372549019607843,\n      0.9921568627, 0.8901960784, 0.7490196078, 0.9411764705882354, 0.9921568627, 0.9019607843,\n      0.7647058824, 0.9450980392156864, 0.9921568627, 0.9098039216, 0.7882352941,\n      0.9490196078431372, 0.9921568627, 0.9215686275, 0.8117647059, 0.9529411764705882,\n      0.9921568627, 0.9294117647, 0.8352941176, 0.9568627450980394, 0.9921568627, 0.937254902,\n      0.8588235294, 0.9607843137254903, 0.9921568627, 0.9490196078, 0.8784313725,\n      0.9647058823529413, 0.9921568627, 0.9568627451, 0.9019607843, 0.9686274509803922,\n      0.9921568627, 0.9647058824, 0.9254901961, 0.9725490196078431, 0.9921568627, 0.9764705882,\n      0.9490196078, 0.9764705882352941, 0.9921568627, 0.9843137255, 0.9725490196,\n      0.9803921568627451, 0.9921568627, 0.9921568627, 0.9921568627, 0.984313725490196, 0.9921568627,\n      0.9921568627, 0.9921568627, 0.9882352941176471, 0.9921568627, 0.9921568627, 0.9921568627,\n      0.9921568627450981, 0.9921568627, 0.9921568627, 0.9921568627, 0.996078431372549, 0.9921568627,\n      0.9921568627, 0.9921568627, 1.0, 0.9921568627, 0.9921568627, 0.9921568627,\n    ],\n    description: 'GE',\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'siemens',\n    name: 'siemens',\n    RGBPoints: [\n      0.0, 0.0078431373, 0.0039215686, 0.1254901961, 0.00392156862745098, 0.0078431373,\n      0.0039215686, 0.1254901961, 0.00784313725490196, 0.0078431373, 0.0039215686, 0.1882352941,\n      0.011764705882352941, 0.0117647059, 0.0039215686, 0.2509803922, 0.01568627450980392,\n      0.0117647059, 0.0039215686, 0.3098039216, 0.0196078431372549, 0.0156862745, 0.0039215686,\n      0.3725490196, 0.023529411764705882, 0.0156862745, 0.0039215686, 0.3725490196,\n      0.027450980392156862, 0.0156862745, 0.0039215686, 0.3725490196, 0.03137254901960784,\n      0.0156862745, 0.0039215686, 0.3725490196, 0.03529411764705882, 0.0156862745, 0.0039215686,\n      0.3725490196, 0.0392156862745098, 0.0156862745, 0.0039215686, 0.3725490196,\n      0.043137254901960784, 0.0156862745, 0.0039215686, 0.3725490196, 0.047058823529411764,\n      0.0156862745, 0.0039215686, 0.3725490196, 0.050980392156862744, 0.0156862745, 0.0039215686,\n      0.3725490196, 0.054901960784313725, 0.0156862745, 0.0039215686, 0.3725490196,\n      0.05882352941176471, 0.0156862745, 0.0039215686, 0.3725490196, 0.06274509803921569,\n      0.0156862745, 0.0039215686, 0.3882352941, 0.06666666666666667, 0.0156862745, 0.0039215686,\n      0.4078431373, 0.07058823529411765, 0.0156862745, 0.0039215686, 0.4235294118,\n      0.07450980392156863, 0.0156862745, 0.0039215686, 0.4431372549, 0.0784313725490196,\n      0.0156862745, 0.0039215686, 0.462745098, 0.08235294117647059, 0.0156862745, 0.0039215686,\n      0.4784313725, 0.08627450980392157, 0.0156862745, 0.0039215686, 0.4980392157,\n      0.09019607843137255, 0.0196078431, 0.0039215686, 0.5137254902, 0.09411764705882353,\n      0.0196078431, 0.0039215686, 0.5333333333, 0.09803921568627451, 0.0196078431, 0.0039215686,\n      0.5529411765, 0.10196078431372549, 0.0196078431, 0.0039215686, 0.568627451,\n      0.10588235294117647, 0.0196078431, 0.0039215686, 0.5882352941, 0.10980392156862745,\n      0.0196078431, 0.0039215686, 0.6039215686, 0.11372549019607843, 0.0196078431, 0.0039215686,\n      0.6235294118, 0.11764705882352942, 0.0196078431, 0.0039215686, 0.6431372549,\n      0.12156862745098039, 0.0235294118, 0.0039215686, 0.6588235294, 0.12549019607843137,\n      0.0235294118, 0.0039215686, 0.6784313725, 0.12941176470588237, 0.0235294118, 0.0039215686,\n      0.6980392157, 0.13333333333333333, 0.0235294118, 0.0039215686, 0.7137254902,\n      0.13725490196078433, 0.0235294118, 0.0039215686, 0.7333333333, 0.1411764705882353,\n      0.0235294118, 0.0039215686, 0.7490196078, 0.1450980392156863, 0.0235294118, 0.0039215686,\n      0.7647058824, 0.14901960784313725, 0.0235294118, 0.0039215686, 0.7843137255,\n      0.15294117647058825, 0.0274509804, 0.0039215686, 0.8, 0.1568627450980392, 0.0274509804,\n      0.0039215686, 0.8196078431, 0.1607843137254902, 0.0274509804, 0.0039215686, 0.8352941176,\n      0.16470588235294117, 0.0274509804, 0.0039215686, 0.8549019608, 0.16862745098039217,\n      0.0274509804, 0.0039215686, 0.8745098039, 0.17254901960784313, 0.0274509804, 0.0039215686,\n      0.8901960784, 0.17647058823529413, 0.0274509804, 0.0039215686, 0.9098039216,\n      0.1803921568627451, 0.031372549, 0.0039215686, 0.9294117647, 0.1843137254901961, 0.031372549,\n      0.0039215686, 0.9254901961, 0.18823529411764706, 0.0509803922, 0.0039215686, 0.9098039216,\n      0.19215686274509805, 0.0705882353, 0.0039215686, 0.8901960784, 0.19607843137254902,\n      0.0901960784, 0.0039215686, 0.8705882353, 0.2, 0.1137254902, 0.0039215686, 0.8509803922,\n      0.20392156862745098, 0.1333333333, 0.0039215686, 0.831372549, 0.20784313725490197,\n      0.1529411765, 0.0039215686, 0.8117647059, 0.21176470588235294, 0.1725490196, 0.0039215686,\n      0.7921568627, 0.21568627450980393, 0.1960784314, 0.0039215686, 0.7725490196,\n      0.2196078431372549, 0.2156862745, 0.0039215686, 0.7529411765, 0.2235294117647059,\n      0.2352941176, 0.0039215686, 0.737254902, 0.22745098039215686, 0.2509803922, 0.0039215686,\n      0.7176470588, 0.23137254901960785, 0.2745098039, 0.0039215686, 0.6980392157,\n      0.23529411764705885, 0.2941176471, 0.0039215686, 0.6784313725, 0.23921568627450984,\n      0.3137254902, 0.0039215686, 0.6588235294, 0.24313725490196078, 0.3333333333, 0.0039215686,\n      0.6392156863, 0.24705882352941178, 0.3568627451, 0.0039215686, 0.6196078431,\n      0.25098039215686274, 0.3764705882, 0.0039215686, 0.6, 0.2549019607843137, 0.3960784314,\n      0.0039215686, 0.5803921569, 0.25882352941176473, 0.4156862745, 0.0039215686, 0.5607843137,\n      0.2627450980392157, 0.4392156863, 0.0039215686, 0.5411764706, 0.26666666666666666,\n      0.4588235294, 0.0039215686, 0.5215686275, 0.27058823529411763, 0.4784313725, 0.0039215686,\n      0.5019607843, 0.27450980392156865, 0.4980392157, 0.0039215686, 0.4823529412,\n      0.2784313725490196, 0.5215686275, 0.0039215686, 0.4666666667, 0.2823529411764706,\n      0.5411764706, 0.0039215686, 0.4470588235, 0.28627450980392155, 0.5607843137, 0.0039215686,\n      0.4274509804, 0.2901960784313726, 0.5803921569, 0.0039215686, 0.4078431373,\n      0.29411764705882354, 0.6039215686, 0.0039215686, 0.3882352941, 0.2980392156862745,\n      0.6235294118, 0.0039215686, 0.368627451, 0.30196078431372547, 0.6431372549, 0.0039215686,\n      0.3490196078, 0.3058823529411765, 0.662745098, 0.0039215686, 0.3294117647,\n      0.30980392156862746, 0.6862745098, 0.0039215686, 0.3098039216, 0.3137254901960784,\n      0.7058823529, 0.0039215686, 0.2901960784, 0.3176470588235294, 0.7254901961, 0.0039215686,\n      0.2705882353, 0.3215686274509804, 0.7450980392, 0.0039215686, 0.2509803922,\n      0.3254901960784314, 0.7647058824, 0.0039215686, 0.2352941176, 0.32941176470588235,\n      0.7843137255, 0.0039215686, 0.2156862745, 0.3333333333333333, 0.8039215686, 0.0039215686,\n      0.1960784314, 0.33725490196078434, 0.8235294118, 0.0039215686, 0.1764705882,\n      0.3411764705882353, 0.8470588235, 0.0039215686, 0.1568627451, 0.34509803921568627,\n      0.8666666667, 0.0039215686, 0.137254902, 0.34901960784313724, 0.8862745098, 0.0039215686,\n      0.1176470588, 0.35294117647058826, 0.9058823529, 0.0039215686, 0.0980392157,\n      0.3568627450980392, 0.9294117647, 0.0039215686, 0.0784313725, 0.3607843137254902,\n      0.9490196078, 0.0039215686, 0.0588235294, 0.36470588235294116, 0.968627451, 0.0039215686,\n      0.0392156863, 0.3686274509803922, 0.9921568627, 0.0039215686, 0.0235294118,\n      0.37254901960784315, 0.9529411765, 0.0039215686, 0.0588235294, 0.3764705882352941,\n      0.9529411765, 0.0078431373, 0.0549019608, 0.3803921568627451, 0.9529411765, 0.0156862745,\n      0.0549019608, 0.3843137254901961, 0.9529411765, 0.0235294118, 0.0549019608,\n      0.38823529411764707, 0.9529411765, 0.031372549, 0.0549019608, 0.39215686274509803,\n      0.9529411765, 0.0352941176, 0.0549019608, 0.396078431372549, 0.9529411765, 0.0431372549,\n      0.0549019608, 0.4, 0.9529411765, 0.0509803922, 0.0549019608, 0.403921568627451, 0.9529411765,\n      0.0588235294, 0.0549019608, 0.40784313725490196, 0.9529411765, 0.062745098, 0.0549019608,\n      0.4117647058823529, 0.9529411765, 0.0705882353, 0.0549019608, 0.41568627450980394,\n      0.9529411765, 0.0784313725, 0.0509803922, 0.4196078431372549, 0.9529411765, 0.0862745098,\n      0.0509803922, 0.4235294117647059, 0.9568627451, 0.0941176471, 0.0509803922,\n      0.42745098039215684, 0.9568627451, 0.0980392157, 0.0509803922, 0.43137254901960786,\n      0.9568627451, 0.1058823529, 0.0509803922, 0.43529411764705883, 0.9568627451, 0.1137254902,\n      0.0509803922, 0.4392156862745098, 0.9568627451, 0.1215686275, 0.0509803922,\n      0.44313725490196076, 0.9568627451, 0.1254901961, 0.0509803922, 0.4470588235294118,\n      0.9568627451, 0.1333333333, 0.0509803922, 0.45098039215686275, 0.9568627451, 0.1411764706,\n      0.0509803922, 0.4549019607843137, 0.9568627451, 0.1490196078, 0.0470588235,\n      0.4588235294117647, 0.9568627451, 0.1568627451, 0.0470588235, 0.4627450980392157,\n      0.9568627451, 0.1607843137, 0.0470588235, 0.4666666666666667, 0.9568627451, 0.168627451,\n      0.0470588235, 0.4705882352941177, 0.9607843137, 0.1764705882, 0.0470588235,\n      0.4745098039215686, 0.9607843137, 0.1843137255, 0.0470588235, 0.4784313725490197,\n      0.9607843137, 0.1882352941, 0.0470588235, 0.48235294117647065, 0.9607843137, 0.1960784314,\n      0.0470588235, 0.48627450980392156, 0.9607843137, 0.2039215686, 0.0470588235,\n      0.49019607843137253, 0.9607843137, 0.2117647059, 0.0470588235, 0.49411764705882355,\n      0.9607843137, 0.2196078431, 0.0431372549, 0.4980392156862745, 0.9607843137, 0.2235294118,\n      0.0431372549, 0.5019607843137255, 0.9607843137, 0.231372549, 0.0431372549, 0.5058823529411764,\n      0.9607843137, 0.2392156863, 0.0431372549, 0.5098039215686274, 0.9607843137, 0.2470588235,\n      0.0431372549, 0.5137254901960784, 0.9607843137, 0.2509803922, 0.0431372549,\n      0.5176470588235295, 0.9647058824, 0.2549019608, 0.0431372549, 0.5215686274509804,\n      0.9647058824, 0.262745098, 0.0431372549, 0.5254901960784314, 0.9647058824, 0.2705882353,\n      0.0431372549, 0.5294117647058824, 0.9647058824, 0.2745098039, 0.0431372549,\n      0.5333333333333333, 0.9647058824, 0.2823529412, 0.0392156863, 0.5372549019607843,\n      0.9647058824, 0.2901960784, 0.0392156863, 0.5411764705882353, 0.9647058824, 0.2980392157,\n      0.0392156863, 0.5450980392156862, 0.9647058824, 0.3058823529, 0.0392156863,\n      0.5490196078431373, 0.9647058824, 0.3098039216, 0.0392156863, 0.5529411764705883,\n      0.9647058824, 0.3176470588, 0.0392156863, 0.5568627450980392, 0.9647058824, 0.3254901961,\n      0.0392156863, 0.5607843137254902, 0.9647058824, 0.3333333333, 0.0392156863,\n      0.5647058823529412, 0.9647058824, 0.337254902, 0.0392156863, 0.5686274509803921, 0.968627451,\n      0.3450980392, 0.0392156863, 0.5725490196078431, 0.968627451, 0.3529411765, 0.0352941176,\n      0.5764705882352941, 0.968627451, 0.3607843137, 0.0352941176, 0.5803921568627451, 0.968627451,\n      0.368627451, 0.0352941176, 0.5843137254901961, 0.968627451, 0.3725490196, 0.0352941176,\n      0.5882352941176471, 0.968627451, 0.3803921569, 0.0352941176, 0.592156862745098, 0.968627451,\n      0.3882352941, 0.0352941176, 0.596078431372549, 0.968627451, 0.3960784314, 0.0352941176, 0.6,\n      0.968627451, 0.4, 0.0352941176, 0.6039215686274509, 0.968627451, 0.4078431373, 0.0352941176,\n      0.6078431372549019, 0.968627451, 0.4156862745, 0.0352941176, 0.611764705882353, 0.968627451,\n      0.4235294118, 0.031372549, 0.615686274509804, 0.9725490196, 0.431372549, 0.031372549,\n      0.6196078431372549, 0.9725490196, 0.4352941176, 0.031372549, 0.6235294117647059, 0.9725490196,\n      0.4431372549, 0.031372549, 0.6274509803921569, 0.9725490196, 0.4509803922, 0.031372549,\n      0.6313725490196078, 0.9725490196, 0.4588235294, 0.031372549, 0.6352941176470588, 0.9725490196,\n      0.462745098, 0.031372549, 0.6392156862745098, 0.9725490196, 0.4705882353, 0.031372549,\n      0.6431372549019608, 0.9725490196, 0.4784313725, 0.031372549, 0.6470588235294118, 0.9725490196,\n      0.4862745098, 0.031372549, 0.6509803921568628, 0.9725490196, 0.4941176471, 0.0274509804,\n      0.6549019607843137, 0.9725490196, 0.4980392157, 0.0274509804, 0.6588235294117647,\n      0.9725490196, 0.5058823529, 0.0274509804, 0.6627450980392157, 0.9764705882, 0.5137254902,\n      0.0274509804, 0.6666666666666666, 0.9764705882, 0.5215686275, 0.0274509804,\n      0.6705882352941176, 0.9764705882, 0.5254901961, 0.0274509804, 0.6745098039215687,\n      0.9764705882, 0.5333333333, 0.0274509804, 0.6784313725490196, 0.9764705882, 0.5411764706,\n      0.0274509804, 0.6823529411764706, 0.9764705882, 0.5490196078, 0.0274509804,\n      0.6862745098039216, 0.9764705882, 0.5529411765, 0.0274509804, 0.6901960784313725,\n      0.9764705882, 0.5607843137, 0.0235294118, 0.6941176470588235, 0.9764705882, 0.568627451,\n      0.0235294118, 0.6980392156862745, 0.9764705882, 0.5764705882, 0.0235294118,\n      0.7019607843137254, 0.9764705882, 0.5843137255, 0.0235294118, 0.7058823529411765,\n      0.9764705882, 0.5882352941, 0.0235294118, 0.7098039215686275, 0.9764705882, 0.5960784314,\n      0.0235294118, 0.7137254901960784, 0.9803921569, 0.6039215686, 0.0235294118,\n      0.7176470588235294, 0.9803921569, 0.6117647059, 0.0235294118, 0.7215686274509804,\n      0.9803921569, 0.6156862745, 0.0235294118, 0.7254901960784313, 0.9803921569, 0.6235294118,\n      0.0235294118, 0.7294117647058823, 0.9803921569, 0.631372549, 0.0196078431, 0.7333333333333333,\n      0.9803921569, 0.6392156863, 0.0196078431, 0.7372549019607844, 0.9803921569, 0.6470588235,\n      0.0196078431, 0.7411764705882353, 0.9803921569, 0.6509803922, 0.0196078431,\n      0.7450980392156863, 0.9803921569, 0.6588235294, 0.0196078431, 0.7490196078431373,\n      0.9803921569, 0.6666666667, 0.0196078431, 0.7529411764705882, 0.9803921569, 0.6745098039,\n      0.0196078431, 0.7568627450980392, 0.9803921569, 0.6784313725, 0.0196078431,\n      0.7607843137254902, 0.9843137255, 0.6862745098, 0.0196078431, 0.7647058823529411,\n      0.9843137255, 0.6941176471, 0.0196078431, 0.7686274509803922, 0.9843137255, 0.7019607843,\n      0.0156862745, 0.7725490196078432, 0.9843137255, 0.7098039216, 0.0156862745,\n      0.7764705882352941, 0.9843137255, 0.7137254902, 0.0156862745, 0.7803921568627451,\n      0.9843137255, 0.7215686275, 0.0156862745, 0.7843137254901961, 0.9843137255, 0.7294117647,\n      0.0156862745, 0.788235294117647, 0.9843137255, 0.737254902, 0.0156862745, 0.792156862745098,\n      0.9843137255, 0.7411764706, 0.0156862745, 0.796078431372549, 0.9843137255, 0.7490196078,\n      0.0156862745, 0.8, 0.9843137255, 0.7529411765, 0.0156862745, 0.803921568627451, 0.9843137255,\n      0.7607843137, 0.0156862745, 0.807843137254902, 0.9882352941, 0.768627451, 0.0156862745,\n      0.8117647058823529, 0.9882352941, 0.768627451, 0.0156862745, 0.8156862745098039, 0.9843137255,\n      0.7843137255, 0.0117647059, 0.8196078431372549, 0.9843137255, 0.8, 0.0117647059,\n      0.8235294117647058, 0.9843137255, 0.8156862745, 0.0117647059, 0.8274509803921568,\n      0.9803921569, 0.831372549, 0.0117647059, 0.8313725490196079, 0.9803921569, 0.8431372549,\n      0.0117647059, 0.8352941176470589, 0.9803921569, 0.8588235294, 0.0078431373,\n      0.8392156862745098, 0.9803921569, 0.8745098039, 0.0078431373, 0.8431372549019608,\n      0.9764705882, 0.8901960784, 0.0078431373, 0.8470588235294118, 0.9764705882, 0.9058823529,\n      0.0078431373, 0.8509803921568627, 0.9764705882, 0.9176470588, 0.0078431373,\n      0.8549019607843137, 0.9764705882, 0.9333333333, 0.0039215686, 0.8588235294117647,\n      0.9725490196, 0.9490196078, 0.0039215686, 0.8627450980392157, 0.9725490196, 0.9647058824,\n      0.0039215686, 0.8666666666666667, 0.9725490196, 0.9803921569, 0.0039215686,\n      0.8705882352941177, 0.9725490196, 0.9960784314, 0.0039215686, 0.8745098039215686,\n      0.9725490196, 0.9960784314, 0.0039215686, 0.8784313725490196, 0.9725490196, 0.9960784314,\n      0.0352941176, 0.8823529411764706, 0.9725490196, 0.9960784314, 0.0666666667,\n      0.8862745098039215, 0.9725490196, 0.9960784314, 0.0980392157, 0.8901960784313725,\n      0.9725490196, 0.9960784314, 0.1294117647, 0.8941176470588236, 0.9725490196, 0.9960784314,\n      0.1647058824, 0.8980392156862745, 0.9764705882, 0.9960784314, 0.1960784314,\n      0.9019607843137255, 0.9764705882, 0.9960784314, 0.2274509804, 0.9058823529411765,\n      0.9764705882, 0.9960784314, 0.2549019608, 0.9098039215686274, 0.9764705882, 0.9960784314,\n      0.2901960784, 0.9137254901960784, 0.9764705882, 0.9960784314, 0.3215686275,\n      0.9176470588235294, 0.9803921569, 0.9960784314, 0.3529411765, 0.9215686274509803,\n      0.9803921569, 0.9960784314, 0.3843137255, 0.9254901960784314, 0.9803921569, 0.9960784314,\n      0.4156862745, 0.9294117647058824, 0.9803921569, 0.9960784314, 0.4509803922,\n      0.9333333333333333, 0.9803921569, 0.9960784314, 0.4823529412, 0.9372549019607843,\n      0.9843137255, 0.9960784314, 0.5137254902, 0.9411764705882354, 0.9843137255, 0.9960784314,\n      0.5450980392, 0.9450980392156864, 0.9843137255, 0.9960784314, 0.5803921569,\n      0.9490196078431372, 0.9843137255, 0.9960784314, 0.6117647059, 0.9529411764705882,\n      0.9843137255, 0.9960784314, 0.6431372549, 0.9568627450980394, 0.9882352941, 0.9960784314,\n      0.6745098039, 0.9607843137254903, 0.9882352941, 0.9960784314, 0.7058823529,\n      0.9647058823529413, 0.9882352941, 0.9960784314, 0.7411764706, 0.9686274509803922,\n      0.9882352941, 0.9960784314, 0.768627451, 0.9725490196078431, 0.9882352941, 0.9960784314, 0.8,\n      0.9764705882352941, 0.9921568627, 0.9960784314, 0.831372549, 0.9803921568627451, 0.9921568627,\n      0.9960784314, 0.8666666667, 0.984313725490196, 0.9921568627, 0.9960784314, 0.8980392157,\n      0.9882352941176471, 0.9921568627, 0.9960784314, 0.9294117647, 0.9921568627450981,\n      0.9921568627, 0.9960784314, 0.9607843137, 0.996078431372549, 0.9960784314, 0.9960784314,\n      0.9607843137, 1.0, 0.9960784314, 0.9960784314, 0.9607843137,\n    ],\n    description: 'Siemens',\n  },\n];\n\nexport { colormaps };\n","import OHIF, { Types, errorHandler } from '@ohif/core';\nimport React from 'react';\n\nimport * as cornerstone from '@cornerstonejs/core';\nimport * as cornerstoneTools from '@cornerstonejs/tools';\nimport {\n  init as cs3DInit,\n  eventTarget,\n  EVENTS,\n  metaData,\n  volumeLoader,\n  imageLoadPoolManager,\n  getEnabledElement,\n  Settings,\n  utilities as csUtilities,\n  Enums as csEnums,\n} from '@cornerstonejs/core';\nimport {\n  cornerstoneStreamingImageVolumeLoader,\n  cornerstoneStreamingDynamicImageVolumeLoader,\n} from '@cornerstonejs/streaming-image-volume-loader';\n\nimport initWADOImageLoader from './initWADOImageLoader';\nimport initCornerstoneTools from './initCornerstoneTools';\n\nimport { connectToolsToMeasurementService } from './initMeasurementService';\nimport initCineService from './initCineService';\nimport interleaveCenterLoader from './utils/interleaveCenterLoader';\nimport nthLoader from './utils/nthLoader';\nimport interleaveTopToBottom from './utils/interleaveTopToBottom';\nimport initContextMenu from './initContextMenu';\nimport initDoubleClick from './initDoubleClick';\nimport { CornerstoneServices } from './types';\nimport initViewTiming from './utils/initViewTiming';\nimport { colormaps } from './utils/colormaps';\n\nimport { debounce } from 'lodash';\n\nconst { registerColormap } = csUtilities.colormap;\n\n// TODO: Cypress tests are currently grabbing this from the window?\nwindow.cornerstone = cornerstone;\nwindow.cornerstoneTools = cornerstoneTools;\n/**\n *\n */\nexport default async function init({\n  servicesManager,\n  commandsManager,\n  extensionManager,\n  appConfig,\n}: Types.Extensions.ExtensionParams): Promise<void> {\n  // Note: this should run first before initializing the cornerstone\n  // DO NOT CHANGE THE ORDER\n  const value = appConfig.useSharedArrayBuffer;\n  let sharedArrayBufferDisabled = false;\n\n  if (value === 'AUTO') {\n    cornerstone.setUseSharedArrayBuffer(csEnums.SharedArrayBufferModes.AUTO);\n  } else if (value === 'FALSE' || value === false) {\n    cornerstone.setUseSharedArrayBuffer(csEnums.SharedArrayBufferModes.FALSE);\n    sharedArrayBufferDisabled = true;\n  } else {\n    cornerstone.setUseSharedArrayBuffer(csEnums.SharedArrayBufferModes.TRUE);\n  }\n\n  await cs3DInit({\n    rendering: {\n      preferSizeOverAccuracy: Boolean(appConfig.preferSizeOverAccuracy),\n      useNorm16Texture: Boolean(appConfig.useNorm16Texture),\n    },\n  });\n\n  // For debugging e2e tests that are failing on CI\n  cornerstone.setUseCPURendering(Boolean(appConfig.useCPURendering));\n\n  cornerstone.setConfiguration({\n    ...cornerstone.getConfiguration(),\n    rendering: {\n      ...cornerstone.getConfiguration().rendering,\n      strictZSpacingForVolumeViewport: appConfig.strictZSpacingForVolumeViewport,\n    },\n  });\n\n  // For debugging large datasets, otherwise prefer the defaults\n  const { maxCacheSize } = appConfig;\n  if (maxCacheSize) {\n    cornerstone.cache.setMaxCacheSize(maxCacheSize);\n  }\n\n  initCornerstoneTools();\n\n  Settings.getRuntimeSettings().set('useCursors', Boolean(appConfig.useCursors));\n\n  const {\n    userAuthenticationService,\n    customizationService,\n    uiModalService,\n    uiNotificationService,\n    cornerstoneViewportService,\n    hangingProtocolService,\n    viewportGridService,\n    stateSyncService,\n  } = servicesManager.services as CornerstoneServices;\n\n  window.services = servicesManager.services;\n  window.extensionManager = extensionManager;\n  window.commandsManager = commandsManager;\n\n  if (\n    appConfig.showWarningMessageForCrossOrigin &&\n    !window.crossOriginIsolated &&\n    !sharedArrayBufferDisabled\n  ) {\n    uiNotificationService.show({\n      title: 'Cross Origin Isolation',\n      message:\n        'Cross Origin Isolation is not enabled, read more about it here: https://docs.ohif.org/faq/',\n      type: 'warning',\n    });\n  }\n\n  if (appConfig.showCPUFallbackMessage && cornerstone.getShouldUseCPURendering()) {\n    _showCPURenderingModal(uiModalService, hangingProtocolService);\n  }\n\n  // Stores a map from `lutPresentationId` to a Presentation object so that\n  // an OHIFCornerstoneViewport can be redisplayed with the same LUT\n  stateSyncService.register('lutPresentationStore', { clearOnModeExit: true });\n\n  // Stores synchronizers state to be restored\n  stateSyncService.register('synchronizersStore', { clearOnModeExit: true });\n\n  // Stores a map from `positionPresentationId` to a Presentation object so that\n  // an OHIFCornerstoneViewport can be redisplayed with the same position\n  stateSyncService.register('positionPresentationStore', {\n    clearOnModeExit: true,\n  });\n\n  // Stores the entire ViewportGridService getState when toggling to one up\n  // (e.g. via a double click) so that it can be restored when toggling back.\n  stateSyncService.register('toggleOneUpViewportGridStore', {\n    clearOnModeExit: true,\n  });\n\n  const labelmapRepresentation = cornerstoneTools.Enums.SegmentationRepresentations.Labelmap;\n\n  cornerstoneTools.segmentation.config.setGlobalRepresentationConfig(labelmapRepresentation, {\n    fillAlpha: 0.5,\n    fillAlphaInactive: 0.2,\n    outlineOpacity: 1,\n    outlineOpacityInactive: 0.65,\n  });\n\n  const metadataProvider = OHIF.classes.MetadataProvider;\n\n  volumeLoader.registerVolumeLoader(\n    'cornerstoneStreamingImageVolume',\n    cornerstoneStreamingImageVolumeLoader\n  );\n\n  volumeLoader.registerVolumeLoader(\n    'cornerstoneStreamingDynamicImageVolume',\n    cornerstoneStreamingDynamicImageVolumeLoader\n  );\n\n  hangingProtocolService.registerImageLoadStrategy('interleaveCenter', interleaveCenterLoader);\n  hangingProtocolService.registerImageLoadStrategy('interleaveTopToBottom', interleaveTopToBottom);\n  hangingProtocolService.registerImageLoadStrategy('nth', nthLoader);\n\n  // add metadata providers\n  metaData.addProvider(\n    csUtilities.calibratedPixelSpacingMetadataProvider.get.bind(\n      csUtilities.calibratedPixelSpacingMetadataProvider\n    )\n  ); // this provider is required for Calibration tool\n  metaData.addProvider(metadataProvider.get.bind(metadataProvider), 9999);\n\n  imageLoadPoolManager.maxNumRequests = {\n    interaction: appConfig?.maxNumRequests?.interaction || 100,\n    thumbnail: appConfig?.maxNumRequests?.thumbnail || 75,\n    prefetch: appConfig?.maxNumRequests?.prefetch || 10,\n  };\n\n  initWADOImageLoader(userAuthenticationService, appConfig, extensionManager);\n\n  /* Measurement Service */\n  this.measurementServiceSource = connectToolsToMeasurementService(servicesManager);\n\n  initCineService(servicesManager);\n\n  // When a custom image load is performed, update the relevant viewports\n  hangingProtocolService.subscribe(\n    hangingProtocolService.EVENTS.CUSTOM_IMAGE_LOAD_PERFORMED,\n    volumeInputArrayMap => {\n      for (const entry of volumeInputArrayMap.entries()) {\n        const [viewportId, volumeInputArray] = entry;\n        const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n\n        const ohifViewport = cornerstoneViewportService.getViewportInfo(viewportId);\n\n        const { lutPresentationStore, positionPresentationStore } = stateSyncService.getState();\n        const { presentationIds } = ohifViewport.getViewportOptions();\n        const presentations = {\n          positionPresentation: positionPresentationStore[presentationIds?.positionPresentationId],\n          lutPresentation: lutPresentationStore[presentationIds?.lutPresentationId],\n        };\n\n        cornerstoneViewportService.setVolumesForViewport(viewport, volumeInputArray, presentations);\n      }\n    }\n  );\n\n  // resize the cornerstone viewport service when the grid size changes\n  // IMPORTANT: this should happen outside of the OHIFCornerstoneViewport\n  // since it will trigger a rerender of each viewport and each resizing\n  // the offscreen canvas which would result in a performance hit, this should\n  // done only once per grid resize here. Doing it once here, allows us to reduce\n  // the refreshRage(in ms) to 10 from 50. I tried with even 1 or 5 ms it worked fine\n  viewportGridService.subscribe(viewportGridService.EVENTS.GRID_SIZE_CHANGED, () => {\n    cornerstoneViewportService.resize(true);\n  });\n\n  initContextMenu({\n    cornerstoneViewportService,\n    customizationService,\n    commandsManager,\n  });\n\n  initDoubleClick({\n    customizationService,\n    commandsManager,\n  });\n\n  /**\n   * Runs error handler for failed requests.\n   * @param event\n   */\n  const imageLoadFailedHandler = ({ detail }) => {\n    const handler = errorHandler.getHTTPErrorHandler();\n    handler(detail.error);\n  };\n\n  eventTarget.addEventListener(EVENTS.STACK_VIEWPORT_NEW_STACK, evt => {\n    const { element } = evt.detail;\n    cornerstoneTools.utilities.stackContextPrefetch.enable(element);\n  });\n  eventTarget.addEventListener(EVENTS.IMAGE_LOAD_FAILED, imageLoadFailedHandler);\n  eventTarget.addEventListener(EVENTS.IMAGE_LOAD_ERROR, imageLoadFailedHandler);\n\n  function elementEnabledHandler(evt) {\n    const { element } = evt.detail;\n\n    element.addEventListener(EVENTS.CAMERA_RESET, evt => {\n      const { element } = evt.detail;\n      const { viewportId } = getEnabledElement(element);\n      commandsManager.runCommand('resetCrosshairs', { viewportId });\n    });\n\n    // eventTarget.addEventListener(EVENTS.STACK_VIEWPORT_NEW_STACK, toolbarEventListener);\n\n    initViewTiming({ element });\n  }\n\n  function elementDisabledHandler(evt) {\n    const { element } = evt.detail;\n\n    // element.removeEventListener(EVENTS.CAMERA_RESET, resetCrosshairs);\n\n    // TODO - consider removing the callback when all elements are gone\n    // eventTarget.removeEventListener(\n    //   EVENTS.STACK_VIEWPORT_NEW_STACK,\n    //   newStackCallback\n    // );\n  }\n\n  eventTarget.addEventListener(EVENTS.ELEMENT_ENABLED, elementEnabledHandler.bind(null));\n\n  eventTarget.addEventListener(EVENTS.ELEMENT_DISABLED, elementDisabledHandler.bind(null));\n  colormaps.forEach(registerColormap);\n\n  // Event listener\n  eventTarget.addEventListenerDebounced(\n    EVENTS.ERROR_EVENT,\n    ({ detail }) => {\n      uiNotificationService.show({\n        title: detail.type,\n        message: detail.message,\n        type: 'error',\n      });\n    },\n    1000\n  );\n}\n\nfunction CPUModal() {\n  return (\n    <div>\n      <p>\n        Your computer does not have enough GPU power to support the default GPU rendering mode. OHIF\n        has switched to CPU rendering mode. Please note that CPU rendering does not support all\n        features such as Volume Rendering, Multiplanar Reconstruction, and Segmentation Overlays.\n      </p>\n    </div>\n  );\n}\n\nfunction _showCPURenderingModal(uiModalService, hangingProtocolService) {\n  const callback = progress => {\n    if (progress === 100) {\n      uiModalService.show({\n        content: CPUModal,\n        title: 'OHIF Fell Back to CPU Rendering',\n      });\n\n      return true;\n    }\n  };\n\n  const { unsubscribe } = hangingProtocolService.subscribe(\n    hangingProtocolService.EVENTS.PROTOCOL_CHANGED,\n    () => {\n      const done = callback(100);\n\n      if (done) {\n        unsubscribe();\n      }\n    }\n  );\n}\n","import dicomImageLoader from '@cornerstonejs/dicom-image-loader';\n\nimport { PubSubService } from '@ohif/core';\n\nexport const EVENTS = {\n  PROGRESS: 'event:DicomFileUploader:progress',\n};\n\nexport interface DicomFileUploaderEvent {\n  fileId: number;\n}\n\nexport interface DicomFileUploaderProgressEvent extends DicomFileUploaderEvent {\n  percentComplete: number;\n}\n\nexport enum UploadStatus {\n  NotStarted,\n  InProgress,\n  Success,\n  Failed,\n  Cancelled,\n}\n\ntype CancelOrFailed = UploadStatus.Cancelled | UploadStatus.Failed;\n\nexport class UploadRejection {\n  message: string;\n  status: CancelOrFailed;\n\n  constructor(status: CancelOrFailed, message: string) {\n    this.message = message;\n    this.status = status;\n  }\n}\n\nexport default class DicomFileUploader extends PubSubService {\n  private _file;\n  private _fileId;\n  private _dataSource;\n  private _loadPromise;\n  private _abortController = new AbortController();\n  private _status: UploadStatus = UploadStatus.NotStarted;\n  private _percentComplete = 0;\n\n  constructor(file, dataSource) {\n    super(EVENTS);\n    this._file = file;\n    this._fileId = dicomImageLoader.wadouri.fileManager.add(file);\n    this._dataSource = dataSource;\n  }\n\n  getFileId(): string {\n    return this._fileId;\n  }\n\n  getFileName(): string {\n    return this._file.name;\n  }\n\n  getFileSize(): number {\n    return this._file.size;\n  }\n\n  cancel(): void {\n    this._abortController.abort();\n  }\n\n  getStatus(): UploadStatus {\n    return this._status;\n  }\n\n  getPercentComplete(): number {\n    return this._percentComplete;\n  }\n\n  async load(): Promise<void> {\n    if (this._loadPromise) {\n      // Already started loading, return the load promise.\n      return this._loadPromise;\n    }\n\n    this._loadPromise = new Promise<void>((resolve, reject) => {\n      // The upload listeners: fire progress events and/or settle the promise.\n      const uploadCallbacks = {\n        progress: evt => {\n          if (!evt.lengthComputable) {\n            // Progress computation is not possible.\n            return;\n          }\n\n          this._status = UploadStatus.InProgress;\n\n          this._percentComplete = Math.round((100 * evt.loaded) / evt.total);\n          this._broadcastEvent(EVENTS.PROGRESS, {\n            fileId: this._fileId,\n            percentComplete: this._percentComplete,\n          });\n        },\n        timeout: () => {\n          this._reject(reject, new UploadRejection(UploadStatus.Failed, 'The request timed out.'));\n        },\n        abort: () => {\n          this._reject(reject, new UploadRejection(UploadStatus.Cancelled, 'Cancelled'));\n        },\n        error: () => {\n          this._reject(reject, new UploadRejection(UploadStatus.Failed, 'The request failed.'));\n        },\n      };\n\n      // First try to load the file.\n      dicomImageLoader.wadouri\n        .loadFileRequest(this._fileId)\n        .then(dicomFile => {\n          if (this._abortController.signal.aborted) {\n            this._reject(reject, new UploadRejection(UploadStatus.Cancelled, 'Cancelled'));\n            return;\n          }\n\n          if (!this._checkDicomFile(dicomFile)) {\n            // The file is not DICOM\n            this._reject(\n              reject,\n              new UploadRejection(UploadStatus.Failed, 'Not a valid DICOM file.')\n            );\n            return;\n          }\n\n          const request = new XMLHttpRequest();\n          this._addRequestCallbacks(request, uploadCallbacks);\n\n          // Do the actual upload by supplying the DICOM file and upload callbacks/listeners.\n          return this._dataSource.store\n            .dicom(dicomFile, request)\n            .then(() => {\n              this._status = UploadStatus.Success;\n              resolve();\n            })\n            .catch(reason => {\n              this._reject(reject, reason);\n            });\n        })\n        .catch(reason => {\n          this._reject(reject, reason);\n        });\n    });\n\n    return this._loadPromise;\n  }\n\n  private _isRejected(): boolean {\n    return this._status === UploadStatus.Failed || this._status === UploadStatus.Cancelled;\n  }\n\n  private _reject(reject: (reason?: any) => void, reason: any) {\n    if (this._isRejected()) {\n      return;\n    }\n\n    if (reason instanceof UploadRejection) {\n      this._status = reason.status;\n      reject(reason);\n      return;\n    }\n\n    this._status = UploadStatus.Failed;\n\n    if (reason.message) {\n      reject(new UploadRejection(UploadStatus.Failed, reason.message));\n      return;\n    }\n\n    reject(new UploadRejection(UploadStatus.Failed, reason));\n  }\n\n  private _addRequestCallbacks(request: XMLHttpRequest, uploadCallbacks) {\n    const abortCallback = () => request.abort();\n    this._abortController.signal.addEventListener('abort', abortCallback);\n\n    for (const [eventName, callback] of Object.entries(uploadCallbacks)) {\n      request.upload.addEventListener(eventName, callback);\n    }\n\n    const cleanUpCallback = () => {\n      this._abortController.signal.removeEventListener('abort', abortCallback);\n\n      for (const [eventName, callback] of Object.entries(uploadCallbacks)) {\n        request.upload.removeEventListener(eventName, callback);\n      }\n\n      request.removeEventListener('loadend', cleanUpCallback);\n    };\n    request.addEventListener('loadend', cleanUpCallback);\n  }\n\n  private _checkDicomFile(arrayBuffer: ArrayBuffer) {\n    if (arrayBuffer.length <= 132) {\n      return false;\n    }\n    const arr = new Uint8Array(arrayBuffer.slice(128, 132));\n    // bytes from 128 to 132 must be \"DICM\"\n    return Array.from('DICM').every((char, i) => char.charCodeAt(0) === arr[i]);\n  }\n}\n","import React, { ReactElement, memo, useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DicomFileUploader, {\n  DicomFileUploaderProgressEvent,\n  EVENTS,\n  UploadRejection,\n  UploadStatus,\n} from '../../utils/DicomFileUploader';\nimport { Icon } from '@ohif/ui';\n\ntype DicomUploadProgressItemProps = {\n  dicomFileUploader: DicomFileUploader;\n};\n\n// eslint-disable-next-line react/display-name\nconst DicomUploadProgressItem = memo(\n  ({ dicomFileUploader }: DicomUploadProgressItemProps): ReactElement => {\n    const [percentComplete, setPercentComplete] = useState(dicomFileUploader.getPercentComplete());\n    const [failedReason, setFailedReason] = useState('');\n    const [status, setStatus] = useState(dicomFileUploader.getStatus());\n\n    const isComplete = useCallback(() => {\n      return (\n        status === UploadStatus.Failed ||\n        status === UploadStatus.Cancelled ||\n        status === UploadStatus.Success\n      );\n    }, [status]);\n\n    useEffect(() => {\n      const progressSubscription = dicomFileUploader.subscribe(\n        EVENTS.PROGRESS,\n        (dicomFileUploaderProgressEvent: DicomFileUploaderProgressEvent) => {\n          setPercentComplete(dicomFileUploaderProgressEvent.percentComplete);\n        }\n      );\n\n      dicomFileUploader\n        .load()\n        .catch((reason: UploadRejection) => {\n          setStatus(reason.status);\n          setFailedReason(reason.message ?? '');\n        })\n        .finally(() => setStatus(dicomFileUploader.getStatus()));\n\n      return () => progressSubscription.unsubscribe();\n    }, []);\n\n    const cancelUpload = useCallback(() => {\n      dicomFileUploader.cancel();\n    }, []);\n\n    const getStatusIcon = (): ReactElement => {\n      switch (dicomFileUploader.getStatus()) {\n        case UploadStatus.Success:\n          return (\n            <Icon\n              name=\"status-tracked\"\n              className=\"text-primary-light\"\n            ></Icon>\n          );\n        case UploadStatus.InProgress:\n          return <Icon name=\"icon-transferring\"></Icon>;\n        case UploadStatus.Failed:\n          return <Icon name=\"icon-alert-small\"></Icon>;\n        case UploadStatus.Cancelled:\n          return <Icon name=\"icon-alert-outline\"></Icon>;\n        default:\n          return <></>;\n      }\n    };\n\n    return (\n      <div className=\"min-h-14 border-secondary-light flex w-full items-center overflow-hidden border-b p-2.5 text-lg\">\n        <div className=\"self-top flex w-0 shrink grow flex-col gap-1\">\n          <div className=\"flex gap-4\">\n            <div className=\"flex w-6 shrink-0 items-center justify-center\">{getStatusIcon()}</div>\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              {dicomFileUploader.getFileName()}\n            </div>\n          </div>\n          {failedReason && <div className=\"pl-10\">{failedReason}</div>}\n        </div>\n        <div className=\"flex w-24 items-center\">\n          {!isComplete() && (\n            <>\n              {dicomFileUploader.getStatus() === UploadStatus.InProgress && (\n                <div className=\"w-10 text-right\">{percentComplete}%</div>\n              )}\n              <div className=\"ml-auto flex cursor-pointer\">\n                <Icon\n                  className=\"text-primary-active self-center\"\n                  name=\"close\"\n                  onClick={cancelUpload}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nDicomUploadProgressItem.propTypes = {\n  dicomFileUploader: PropTypes.instanceOf(DicomFileUploader).isRequired,\n};\n\nexport default DicomUploadProgressItem;\n","import React, { useCallback, useEffect, useRef, useState, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon, ProgressLoadingBar } from '@ohif/ui';\nimport DicomFileUploader, {\n  EVENTS,\n  UploadStatus,\n  DicomFileUploaderProgressEvent,\n  UploadRejection,\n} from '../../utils/DicomFileUploader';\nimport DicomUploadProgressItem from './DicomUploadProgressItem';\nimport classNames from 'classnames';\n\ntype DicomUploadProgressProps = {\n  dicomFileUploaderArr: DicomFileUploader[];\n  onComplete: () => void;\n};\n\nconst ONE_SECOND = 1000;\nconst ONE_MINUTE = ONE_SECOND * 60;\nconst ONE_HOUR = ONE_MINUTE * 60;\n\n// The base/initial interval time length used to calculate the\n// rate of the upload and in turn estimate the\n// the amount of time remaining for the upload. This is the length\n// of the very first interval to get a reasonable estimate on screen in\n// a reasonable amount of time. The length of each interval after the first\n// is based on the upload rate calculated. Faster rates use this base interval\n// length. Slower rates below UPLOAD_RATE_THRESHOLD get longer interval times\n// to obtain more accurate upload rates.\nconst BASE_INTERVAL_TIME = 15000;\n\n// The upload rate threshold to determine the length of the interval to\n// calculate the upload rate.\nconst UPLOAD_RATE_THRESHOLD = 75;\n\nconst NO_WRAP_ELLIPSIS_CLASS_NAMES = 'text-ellipsis whitespace-nowrap overflow-hidden';\n\nfunction DicomUploadProgress({\n  dicomFileUploaderArr,\n  onComplete,\n}: DicomUploadProgressProps): ReactElement {\n  const [totalUploadSize] = useState(\n    dicomFileUploaderArr.reduce((acc, fileUploader) => acc + fileUploader.getFileSize(), 0)\n  );\n\n  const currentUploadSizeRef = useRef<number>(0);\n\n  const uploadRateRef = useRef(0);\n\n  const [timeRemaining, setTimeRemaining] = useState<number>(null);\n\n  const [percentComplete, setPercentComplete] = useState(0);\n\n  const [numFilesCompleted, setNumFilesCompleted] = useState(0);\n\n  const [numFails, setNumFails] = useState(0);\n\n  const [showFailedOnly, setShowFailedOnly] = useState(false);\n\n  const progressBarContainerRef = useRef<HTMLElement>();\n\n  /**\n   * The effect for measuring and setting the current upload rate. This is\n   * done by measuring the amount of data uploaded in a set interval time.\n   */\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    // The amount of data already uploaded at the start of the interval.\n    let intervalStartUploadSize = 0;\n\n    // The starting time of the interval.\n    let intervalStartTime = Date.now();\n\n    const setUploadRateRef = () => {\n      const uploadSizeFromStartOfInterval = currentUploadSizeRef.current - intervalStartUploadSize;\n\n      const now = Date.now();\n      const timeSinceStartOfInterval = now - intervalStartTime;\n\n      // Calculate and set the upload rate (ref)\n      uploadRateRef.current = uploadSizeFromStartOfInterval / timeSinceStartOfInterval;\n\n      // Reset the interval starting values.\n      intervalStartUploadSize = currentUploadSizeRef.current;\n      intervalStartTime = now;\n\n      // Only start a new interval if there is more to upload.\n      if (totalUploadSize - currentUploadSizeRef.current > 0) {\n        if (uploadRateRef.current >= UPLOAD_RATE_THRESHOLD) {\n          timeoutId = setTimeout(setUploadRateRef, BASE_INTERVAL_TIME);\n        } else {\n          // The current upload rate is relatively slow, so use a larger\n          // time interval to get a better upload rate estimate.\n          timeoutId = setTimeout(setUploadRateRef, BASE_INTERVAL_TIME * 2);\n        }\n      }\n    };\n\n    // The very first interval is just the base time interval length.\n    timeoutId = setTimeout(setUploadRateRef, BASE_INTERVAL_TIME);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, []);\n\n  /**\n   * The effect for: updating the overall percentage complete; setting the\n   * estimated time remaining; updating the number of files uploaded; and\n   * detecting if any error has occurred.\n   */\n  useEffect(() => {\n    let currentTimeRemaining = null;\n\n    // For each uploader, listen for the progress percentage complete and\n    // add promise catch/finally callbacks to detect errors and count number\n    // of uploads complete.\n    const subscriptions = dicomFileUploaderArr.map(fileUploader => {\n      let currentFileUploadSize = 0;\n\n      const updateProgress = (percentComplete: number) => {\n        const previousFileUploadSize = currentFileUploadSize;\n\n        currentFileUploadSize = Math.round((percentComplete / 100) * fileUploader.getFileSize());\n\n        currentUploadSizeRef.current = Math.min(\n          totalUploadSize,\n          currentUploadSizeRef.current - previousFileUploadSize + currentFileUploadSize\n        );\n\n        setPercentComplete((currentUploadSizeRef.current / totalUploadSize) * 100);\n\n        if (uploadRateRef.current !== 0) {\n          const uploadSizeRemaining = totalUploadSize - currentUploadSizeRef.current;\n\n          const timeRemaining = Math.round(uploadSizeRemaining / uploadRateRef.current);\n\n          if (currentTimeRemaining === null) {\n            currentTimeRemaining = timeRemaining;\n            setTimeRemaining(currentTimeRemaining);\n            return;\n          }\n\n          // Do not show an increase in the time remaining by two seconds or minutes\n          // so as to prevent jumping the time remaining up and down constantly\n          // due to rounding, inaccuracies in the estimate and slight variations\n          // in upload rates over time.\n          if (timeRemaining < ONE_MINUTE) {\n            const currentSecondsRemaining = Math.ceil(currentTimeRemaining / ONE_SECOND);\n            const secondsRemaining = Math.ceil(timeRemaining / ONE_SECOND);\n            const delta = secondsRemaining - currentSecondsRemaining;\n            if (delta < 0 || delta > 2) {\n              currentTimeRemaining = timeRemaining;\n              setTimeRemaining(currentTimeRemaining);\n            }\n            return;\n          }\n\n          if (timeRemaining < ONE_HOUR) {\n            const currentMinutesRemaining = Math.ceil(currentTimeRemaining / ONE_MINUTE);\n            const minutesRemaining = Math.ceil(timeRemaining / ONE_MINUTE);\n            const delta = minutesRemaining - currentMinutesRemaining;\n            if (delta < 0 || delta > 2) {\n              currentTimeRemaining = timeRemaining;\n              setTimeRemaining(currentTimeRemaining);\n            }\n            return;\n          }\n\n          // Hours remaining...\n          currentTimeRemaining = timeRemaining;\n          setTimeRemaining(currentTimeRemaining);\n        }\n      };\n\n      const progressCallback = (progressEvent: DicomFileUploaderProgressEvent) => {\n        updateProgress(progressEvent.percentComplete);\n      };\n\n      // Use the uploader promise to flag any error and count the number of\n      // uploads completed.\n      fileUploader\n        .load()\n        .catch((rejection: UploadRejection) => {\n          if (rejection.status === UploadStatus.Failed) {\n            setNumFails(numFails => numFails + 1);\n          }\n        })\n        .finally(() => {\n          // If any error occurred, the percent complete progress stops firing\n          // but this call to updateProgress nicely puts all finished uploads at 100%.\n          updateProgress(100);\n          setNumFilesCompleted(numCompleted => numCompleted + 1);\n        });\n\n      return fileUploader.subscribe(EVENTS.PROGRESS, progressCallback);\n    });\n    return () => {\n      subscriptions.forEach(subscription => subscription.unsubscribe());\n    };\n  }, []);\n\n  const cancelAllUploads = useCallback(async () => {\n    for (const dicomFileUploader of dicomFileUploaderArr) {\n      // Important: we need a non-blocking way to cancel every upload,\n      // otherwise the UI will freeze and the user will not be able\n      // to interact with the app and progress will not be updated.\n      const promise = new Promise<void>((resolve, reject) => {\n        setTimeout(() => {\n          dicomFileUploader.cancel();\n          resolve();\n        }, 0);\n      });\n    }\n  }, []);\n\n  const getFormattedTimeRemaining = useCallback((): string => {\n    if (timeRemaining == null) {\n      return '';\n    }\n\n    if (timeRemaining < ONE_MINUTE) {\n      const secondsRemaining = Math.ceil(timeRemaining / ONE_SECOND);\n      return `${secondsRemaining} ${secondsRemaining === 1 ? 'second' : 'seconds'}`;\n    }\n\n    if (timeRemaining < ONE_HOUR) {\n      const minutesRemaining = Math.ceil(timeRemaining / ONE_MINUTE);\n      return `${minutesRemaining} ${minutesRemaining === 1 ? 'minute' : 'minutes'}`;\n    }\n\n    const hoursRemaining = Math.ceil(timeRemaining / ONE_HOUR);\n    return `${hoursRemaining} ${hoursRemaining === 1 ? 'hour' : 'hours'}`;\n  }, [timeRemaining]);\n\n  const getPercentCompleteRounded = useCallback(\n    () => Math.min(100, Math.round(percentComplete)),\n    [percentComplete]\n  );\n\n  /**\n   * Determines if the progress bar should show the infinite animation or not.\n   * Show the infinite animation for progress less than 1% AND if less than\n   * one pixel of the progress bar would be displayed.\n   */\n  const showInfiniteProgressBar = useCallback((): boolean => {\n    return (\n      getPercentCompleteRounded() < 1 &&\n      (progressBarContainerRef?.current?.offsetWidth ?? 0) * (percentComplete / 100) < 1\n    );\n  }, [getPercentCompleteRounded, percentComplete]);\n\n  /**\n   * Gets the css style for the 'n of m' (files completed) text. The only css attribute\n   * of the style is width such that the 'n of m' is always a fixed width and thus\n   * as each file completes uploading the text on screen does not constantly shift\n   * left and right.\n   */\n  const getNofMFilesStyle = useCallback(() => {\n    // the number of digits accounts for the digits being on each side of the ' of '\n    const numDigits = 2 * dicomFileUploaderArr.length.toString().length;\n    // the number of digits + 2 spaces and 2 characters for ' of '\n    const numChars = numDigits + 4;\n    return { width: `${numChars}ch` };\n  }, []);\n\n  const getNumCompletedAndTimeRemainingComponent = (): ReactElement => {\n    return (\n      <div className=\"bg-primary-dark flex h-14 items-center px-1 pb-4 text-lg\">\n        {numFilesCompleted === dicomFileUploaderArr.length ? (\n          <>\n            <span className={NO_WRAP_ELLIPSIS_CLASS_NAMES}>{`${dicomFileUploaderArr.length} ${\n              dicomFileUploaderArr.length > 1 ? 'files' : 'file'\n            } completed.`}</span>\n            <Button\n              disabled={false}\n              className=\"ml-auto\"\n              onClick={onComplete}\n            >\n              {'Close'}\n            </Button>\n          </>\n        ) : (\n          <>\n            <span\n              style={getNofMFilesStyle()}\n              className={classNames(NO_WRAP_ELLIPSIS_CLASS_NAMES, 'text-end')}\n            >\n              {`${numFilesCompleted} of ${dicomFileUploaderArr.length}`}&nbsp;\n            </span>\n            <span className={NO_WRAP_ELLIPSIS_CLASS_NAMES}>{' files completed.'}&nbsp;</span>\n            <span className={NO_WRAP_ELLIPSIS_CLASS_NAMES}>\n              {timeRemaining ? `Less than ${getFormattedTimeRemaining()} remaining. ` : ''}\n            </span>\n            <span\n              className={classNames(\n                NO_WRAP_ELLIPSIS_CLASS_NAMES,\n                'text-primary-active hover:text-primary-light active:text-aqua-pale ml-auto cursor-pointer'\n              )}\n              onClick={cancelAllUploads}\n            >\n              Cancel All Uploads\n            </span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  const getShowFailedOnlyIconComponent = (): ReactElement => {\n    return (\n      <div className=\"ml-auto flex w-6 justify-center\">\n        {numFails > 0 && (\n          <div onClick={() => setShowFailedOnly(currentShowFailedOnly => !currentShowFailedOnly)}>\n            <Icon\n              className=\"cursor-pointer\"\n              name=\"icon-status-alert\"\n            ></Icon>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const getPercentCompleteComponent = (): ReactElement => {\n    return (\n      <div className=\"ohif-scrollbar border-secondary-light overflow-y-scroll border-b px-2\">\n        <div className=\"min-h-14 flex w-full items-center p-2.5\">\n          {numFilesCompleted === dicomFileUploaderArr.length ? (\n            <>\n              <div className=\"text-primary-light text-xl\">\n                {numFails > 0\n                  ? `Completed with ${numFails} ${numFails > 1 ? 'errors' : 'error'}!`\n                  : 'Completed!'}\n              </div>\n              {getShowFailedOnlyIconComponent()}\n            </>\n          ) : (\n            <>\n              <div\n                ref={progressBarContainerRef}\n                className=\"flex-grow\"\n              >\n                <ProgressLoadingBar\n                  progress={showInfiniteProgressBar() ? undefined : Math.min(100, percentComplete)}\n                ></ProgressLoadingBar>\n              </div>\n              <div className=\"ml-1 flex w-24 items-center\">\n                <div className=\"w-10 text-right\">{`${getPercentCompleteRounded()}%`}</div>\n                {getShowFailedOnlyIconComponent()}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"flex grow flex-col\">\n      {getNumCompletedAndTimeRemainingComponent()}\n      <div className=\"flex grow flex-col overflow-hidden bg-black text-lg\">\n        {getPercentCompleteComponent()}\n        <div className=\"ohif-scrollbar h-1 grow overflow-y-scroll px-2\">\n          {dicomFileUploaderArr\n            .filter(\n              dicomFileUploader =>\n                !showFailedOnly || dicomFileUploader.getStatus() === UploadStatus.Failed\n            )\n            .map(dicomFileUploader => (\n              <DicomUploadProgressItem\n                key={dicomFileUploader.getFileId()}\n                dicomFileUploader={dicomFileUploader}\n              />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nDicomUploadProgress.propTypes = {\n  dicomFileUploaderArr: PropTypes.arrayOf(PropTypes.instanceOf(DicomFileUploader)).isRequired,\n  onComplete: PropTypes.func.isRequired,\n};\n\nexport default DicomUploadProgress;\n","import React, { useCallback, useState } from 'react';\nimport { ReactElement } from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DicomFileUploader from '../../utils/DicomFileUploader';\nimport DicomUploadProgress from './DicomUploadProgress';\nimport { Button, ButtonEnums } from '@ohif/ui';\nimport './DicomUpload.css';\n\ntype DicomUploadProps = {\n  dataSource;\n  onComplete: () => void;\n  onStarted: () => void;\n};\n\nfunction DicomUpload({ dataSource, onComplete, onStarted }: DicomUploadProps): ReactElement {\n  const baseClassNames = 'min-h-[480px] flex flex-col bg-black select-none';\n  const [dicomFileUploaderArr, setDicomFileUploaderArr] = useState([]);\n\n  const onDrop = useCallback(async acceptedFiles => {\n    onStarted();\n    setDicomFileUploaderArr(acceptedFiles.map(file => new DicomFileUploader(file, dataSource)));\n  }, []);\n\n  const getDropZoneComponent = (): ReactElement => {\n    return (\n      <Dropzone\n        onDrop={acceptedFiles => {\n          onDrop(acceptedFiles);\n        }}\n        noClick\n      >\n        {({ getRootProps }) => (\n          <div\n            {...getRootProps()}\n            className=\"dicom-upload-drop-area-border-dash m-5 flex h-full flex-col items-center justify-center\"\n          >\n            <div className=\"flex gap-3\">\n              <Dropzone\n                onDrop={onDrop}\n                noDrag\n              >\n                {({ getRootProps, getInputProps }) => (\n                  <div {...getRootProps()}>\n                    <Button\n                      disabled={false}\n                      onClick={() => {}}\n                    >\n                      {'Add files'}\n                      <input {...getInputProps()} />\n                    </Button>\n                  </div>\n                )}\n              </Dropzone>\n              <Dropzone\n                onDrop={onDrop}\n                noDrag\n              >\n                {({ getRootProps, getInputProps }) => (\n                  <div {...getRootProps()}>\n                    <Button\n                      type={ButtonEnums.type.secondary}\n                      disabled={false}\n                      onClick={() => {}}\n                    >\n                      {'Add folder'}\n                      <input\n                        {...getInputProps()}\n                        webkitdirectory=\"true\"\n                        mozdirectory=\"true\"\n                      />\n                    </Button>\n                  </div>\n                )}\n              </Dropzone>\n            </div>\n            <div className=\"pt-5\">or drag images or folders here</div>\n            <div className=\"text-aqua-pale pt-3 text-lg\">(DICOM files supported)</div>\n          </div>\n        )}\n      </Dropzone>\n    );\n  };\n\n  return (\n    <>\n      {dicomFileUploaderArr.length ? (\n        <div className={classNames('h-[calc(100vh-300px)]', baseClassNames)}>\n          <DicomUploadProgress\n            dicomFileUploaderArr={Array.from(dicomFileUploaderArr)}\n            onComplete={onComplete}\n          />\n        </div>\n      ) : (\n        <div className={classNames('h-[480px]', baseClassNames)}>{getDropZoneComponent()}</div>\n      )}\n    </>\n  );\n}\n\nDicomUpload.propTypes = {\n  dataSource: PropTypes.object.isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onStarted: PropTypes.func.isRequired,\n};\n\nexport default DicomUpload;\n","// The following are the default window level presets and can be further\n// configured via the customization service.\nconst defaultWindowLevelPresets = {\n  CT: [\n    { description: 'Soft tissue', window: '400', level: '40' },\n    { description: 'Lung', window: '1500', level: '-600' },\n    { description: 'Liver', window: '150', level: '90' },\n    { description: 'Bone', window: '2500', level: '480' },\n    { description: 'Brain', window: '80', level: '40' },\n  ],\n\n  PT: [\n    { description: 'Default', window: '5', level: '2.5' },\n    { description: 'SUV', window: '0', level: '3' },\n    { description: 'SUV', window: '0', level: '5' },\n    { description: 'SUV', window: '0', level: '7' },\n    { description: 'SUV', window: '0', level: '8' },\n    { description: 'SUV', window: '0', level: '10' },\n    { description: 'SUV', window: '0', level: '15' },\n  ],\n};\n\nexport default defaultWindowLevelPresets;\n","import { Enums } from '@cornerstonejs/tools';\nimport { toolNames } from './initCornerstoneTools';\nimport DicomUpload from './components/DicomUpload/DicomUpload';\nimport defaultWindowLevelPresets from './components/WindowLevelActionMenu/defaultWindowLevelPresets';\nimport { colormaps } from './utils/colormaps';\nimport { CONSTANTS } from '@cornerstonejs/core';\n\nconst DefaultColormap = 'Grayscale';\nconst { VIEWPORT_PRESETS } = CONSTANTS;\n\nconst tools = {\n  active: [\n    {\n      toolName: toolNames.WindowLevel,\n      bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n    },\n    {\n      toolName: toolNames.Pan,\n      bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n    },\n    {\n      toolName: toolNames.Zoom,\n      bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\n    },\n    { toolName: toolNames.StackScrollMouseWheel, bindings: [] },\n  ],\n  enabled: [{ toolName: toolNames.SegmentationDisplay }],\n};\n\nfunction getCustomizationModule() {\n  return [\n    {\n      name: 'cornerstoneDicomUploadComponent',\n      value: {\n        id: 'dicomUploadComponent',\n        component: DicomUpload,\n      },\n    },\n    {\n      name: 'default',\n      value: [\n        {\n          id: 'cornerstone.overlayViewportTools',\n          tools,\n        },\n        {\n          id: 'cornerstone.windowLevelPresets',\n          presets: defaultWindowLevelPresets,\n        },\n        {\n          id: 'cornerstone.colorbar',\n          width: '16px',\n          colorbarTickPosition: 'left',\n          colormaps,\n          colorbarContainerPosition: 'right',\n          colorbarInitialColormap: DefaultColormap,\n        },\n        {\n          id: 'cornerstone.3dVolumeRendering',\n          volumeRenderingPresets: VIEWPORT_PRESETS,\n          volumeRenderingQualityRange: {\n            min: 1,\n            max: 4,\n            step: 1,\n          },\n        },\n        {\n          id: 'cornerstone.measurements',\n          Angle: {\n            displayText: [],\n            report: [],\n          },\n          CobbAngle: {\n            displayText: [],\n            report: [],\n          },\n          ArrowAnnotate: {\n            displayText: [],\n            report: [],\n          },\n          RectangleROi: {\n            displayText: [],\n            report: [],\n          },\n          CircleROI: {\n            displayText: [],\n            report: [],\n          },\n          EllipticalROI: {\n            displayText: [],\n            report: [],\n          },\n          Bidirectional: {\n            displayText: [],\n            report: [],\n          },\n          Length: {\n            displayText: [],\n            report: [],\n          },\n          LivewireContour: {\n            displayText: [],\n            report: [],\n          },\n          SplineROI: {\n            displayText: [\n              {\n                displayName: 'Area',\n                value: 'area',\n                type: 'value',\n              },\n              {\n                value: 'areaUnit',\n                for: ['area'],\n                type: 'unit',\n              },\n              /**\n              {\n                displayName: 'Modality',\n                value: 'Modality',\n                type: 'value',\n              },\n              */\n            ],\n            report: [\n              {\n                displayName: 'Area',\n                value: 'area',\n                type: 'value',\n              },\n              {\n                displayName: 'Unit',\n                value: 'areaUnit',\n                type: 'value',\n              },\n            ],\n          },\n          PlanarFreehandROI: {\n            displayText: [\n              {\n                displayName: 'Mean',\n                value: 'mean',\n                type: 'value',\n              },\n              {\n                displayName: 'Max',\n                value: 'max',\n                type: 'value',\n              },\n              {\n                displayName: 'Area',\n                value: 'area',\n                type: 'value',\n              },\n              {\n                value: 'modalityUnit',\n                for: ['mean', 'max' /** 'stdDev **/],\n                type: 'unit',\n              },\n              {\n                value: 'areaUnit',\n                for: ['area'],\n                type: 'unit',\n              },\n              /**\n              {\n                displayName: 'Std Dev',\n                value: 'stdDev',\n                type: 'value',\n              },\n              */\n            ],\n            report: [\n              {\n                displayName: 'Mean',\n                value: 'mean',\n                type: 'value',\n              },\n              {\n                displayName: 'Max',\n                value: 'max',\n                type: 'value',\n              },\n              {\n                displayName: 'Area',\n                value: 'area',\n                type: 'value',\n              },\n              {\n                displayName: 'Unit',\n                value: 'unit',\n                type: 'value',\n              },\n            ],\n          },\n        },\n      ],\n    },\n  ];\n}\n\nexport default getCustomizationModule;\n","import React, { useEffect } from 'react';\nimport html2canvas from 'html2canvas';\nimport {\n  Enums,\n  getEnabledElement,\n  getOrCreateCanvas,\n  StackViewport,\n  BaseVolumeViewport,\n} from '@cornerstonejs/core';\nimport { ToolGroupManager } from '@cornerstonejs/tools';\nimport PropTypes from 'prop-types';\nimport { ViewportDownloadForm } from '@ohif/ui';\n\nimport { getEnabledElement as OHIFgetEnabledElement } from '../state';\n\nconst MINIMUM_SIZE = 100;\nconst DEFAULT_SIZE = 512;\nconst MAX_TEXTURE_SIZE = 10000;\nconst VIEWPORT_ID = 'cornerstone-viewport-download-form';\n\nconst CornerstoneViewportDownloadForm = ({\n  onClose,\n  activeViewportId: activeViewportIdProp,\n  cornerstoneViewportService,\n}) => {\n  const enabledElement = OHIFgetEnabledElement(activeViewportIdProp);\n  const activeViewportElement = enabledElement?.element;\n  const activeViewportEnabledElement = getEnabledElement(activeViewportElement);\n\n  const {\n    viewportId: activeViewportId,\n    renderingEngineId,\n    viewport: activeViewport,\n  } = activeViewportEnabledElement;\n\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(activeViewportId, renderingEngineId);\n\n  const toolModeAndBindings = Object.keys(toolGroup.toolOptions).reduce((acc, toolName) => {\n    const tool = toolGroup.toolOptions[toolName];\n    const { mode, bindings } = tool;\n\n    return {\n      ...acc,\n      [toolName]: {\n        mode,\n        bindings,\n      },\n    };\n  }, {});\n\n  useEffect(() => {\n    return () => {\n      Object.keys(toolModeAndBindings).forEach(toolName => {\n        const { mode, bindings } = toolModeAndBindings[toolName];\n        toolGroup.setToolMode(toolName, mode, { bindings });\n      });\n    };\n  }, []);\n\n  const enableViewport = viewportElement => {\n    if (viewportElement) {\n      const { renderingEngine, viewport } = getEnabledElement(activeViewportElement);\n\n      const viewportInput = {\n        viewportId: VIEWPORT_ID,\n        element: viewportElement,\n        type: viewport.type,\n        defaultOptions: {\n          background: viewport.defaultOptions.background,\n          orientation: viewport.defaultOptions.orientation,\n        },\n      };\n\n      renderingEngine.enableElement(viewportInput);\n    }\n  };\n\n  const disableViewport = viewportElement => {\n    if (viewportElement) {\n      const { renderingEngine } = getEnabledElement(viewportElement);\n      return new Promise(resolve => {\n        renderingEngine.disableElement(VIEWPORT_ID);\n      });\n    }\n  };\n\n  const updateViewportPreview = (downloadViewportElement, internalCanvas, fileType) =>\n    new Promise(resolve => {\n      const enabledElement = getEnabledElement(downloadViewportElement);\n\n      const { viewport: downloadViewport, renderingEngine } = enabledElement;\n\n      // Note: Since any trigger of dimensions will update the viewport,\n      // we need to resize the offScreenCanvas to accommodate for the new\n      // dimensions, this is due to the reason that we are using the GPU offScreenCanvas\n      // to render the viewport for the downloadViewport.\n      renderingEngine.resize();\n\n      // Trigger the render on the viewport to update the on screen\n      // downloadViewport.resetCamera();\n      downloadViewport.render();\n\n      downloadViewportElement.addEventListener(\n        Enums.Events.IMAGE_RENDERED,\n        function updateViewport(event) {\n          const enabledElement = getEnabledElement(event.target);\n          const { viewport } = enabledElement;\n          const { element } = viewport;\n\n          const downloadCanvas = getOrCreateCanvas(element);\n\n          const type = 'image/' + fileType;\n          const dataUrl = downloadCanvas.toDataURL(type, 1);\n\n          let newWidth = element.offsetHeight;\n          let newHeight = element.offsetWidth;\n\n          if (newWidth > DEFAULT_SIZE || newHeight > DEFAULT_SIZE) {\n            const multiplier = DEFAULT_SIZE / Math.max(newWidth, newHeight);\n            newHeight *= multiplier;\n            newWidth *= multiplier;\n          }\n\n          resolve({ dataUrl, width: newWidth, height: newHeight });\n\n          downloadViewportElement.removeEventListener(Enums.Events.IMAGE_RENDERED, updateViewport);\n\n          // for some reason we need a reset camera here, and I don't know why\n          downloadViewport.resetCamera();\n          const presentation = activeViewport.getViewPresentation();\n          downloadViewport.setView(activeViewport.getViewReference(), presentation);\n          downloadViewport.render();\n        }\n      );\n    });\n\n  const loadImage = (activeViewportElement, viewportElement, width, height) =>\n    new Promise(resolve => {\n      if (activeViewportElement && viewportElement) {\n        const activeViewportEnabledElement = getEnabledElement(activeViewportElement);\n\n        if (!activeViewportEnabledElement) {\n          return;\n        }\n\n        const { viewport } = activeViewportEnabledElement;\n\n        const renderingEngine = cornerstoneViewportService.getRenderingEngine();\n        const downloadViewport = renderingEngine.getViewport(VIEWPORT_ID);\n\n        if (downloadViewport instanceof StackViewport) {\n          const imageId = viewport.getCurrentImageId();\n          const properties = viewport.getProperties();\n\n          downloadViewport.setStack([imageId]).then(() => {\n            try {\n              downloadViewport.setProperties(properties);\n              const newWidth = Math.min(width || image.width, MAX_TEXTURE_SIZE);\n              const newHeight = Math.min(height || image.height, MAX_TEXTURE_SIZE);\n\n              resolve({ width: newWidth, height: newHeight });\n            } catch (e) {\n              // Happens on clicking the cancel button\n              console.warn('Unable to set properties', e);\n            }\n          });\n        } else if (downloadViewport instanceof BaseVolumeViewport) {\n          const actors = viewport.getActors();\n          // downloadViewport.setActors(actors);\n          actors.forEach(actor => {\n            downloadViewport.addActor(actor);\n          });\n\n          downloadViewport.render();\n\n          const newWidth = Math.min(width || image.width, MAX_TEXTURE_SIZE);\n          const newHeight = Math.min(height || image.height, MAX_TEXTURE_SIZE);\n\n          resolve({ width: newWidth, height: newHeight });\n        }\n      }\n    });\n\n  const toggleAnnotations = (toggle, viewportElement, activeViewportElement) => {\n    const activeViewportEnabledElement = getEnabledElement(activeViewportElement);\n\n    const downloadViewportElement = getEnabledElement(viewportElement);\n\n    const { viewportId: activeViewportId, renderingEngineId } = activeViewportEnabledElement;\n    const { viewportId: downloadViewportId } = downloadViewportElement;\n\n    if (!activeViewportEnabledElement || !downloadViewportElement) {\n      return;\n    }\n\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(activeViewportId, renderingEngineId);\n\n    // add the viewport to the toolGroup\n    toolGroup.addViewport(downloadViewportId, renderingEngineId);\n\n    Object.keys(toolGroup.getToolInstances()).forEach(toolName => {\n      // make all tools Enabled so that they can not be interacted with\n      // in the download viewport\n      if (toggle && toolName !== 'Crosshairs') {\n        try {\n          toolGroup.setToolEnabled(toolName);\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        toolGroup.setToolDisabled(toolName);\n      }\n    });\n  };\n\n  const downloadBlob = (filename, fileType) => {\n    const file = `${filename}.${fileType}`;\n    const divForDownloadViewport = document.querySelector(\n      `div[data-viewport-uid=\"${VIEWPORT_ID}\"]`\n    );\n\n    html2canvas(divForDownloadViewport).then(canvas => {\n      const link = document.createElement('a');\n      link.download = file;\n      link.href = canvas.toDataURL(fileType, 1.0);\n      link.click();\n    });\n  };\n\n  return (\n    <ViewportDownloadForm\n      onClose={onClose}\n      minimumSize={MINIMUM_SIZE}\n      maximumSize={MAX_TEXTURE_SIZE}\n      defaultSize={DEFAULT_SIZE}\n      activeViewportElement={activeViewportElement}\n      enableViewport={enableViewport}\n      disableViewport={disableViewport}\n      updateViewportPreview={updateViewportPreview}\n      loadImage={loadImage}\n      toggleAnnotations={toggleAnnotations}\n      downloadBlob={downloadBlob}\n    />\n  );\n};\n\nCornerstoneViewportDownloadForm.propTypes = {\n  onClose: PropTypes.func,\n  activeViewportId: PropTypes.string.isRequired,\n};\n\nexport default CornerstoneViewportDownloadForm;\n","const IMAGE_SLICE_SYNC_NAME = 'IMAGE_SLICE_SYNC';\n\nexport default function toggleImageSliceSync({\n  servicesManager,\n  viewports: providedViewports,\n  syncId,\n}) {\n  const { syncGroupService, viewportGridService, displaySetService, cornerstoneViewportService } =\n    servicesManager.services;\n\n  syncId ||= IMAGE_SLICE_SYNC_NAME;\n\n  const viewports =\n    providedViewports || getReconstructableStackViewports(viewportGridService, displaySetService);\n\n  // Todo: right now we don't have a proper way to define specific\n  // viewports to add to synchronizers, and right now it is global or not\n  // after we do that, we should do fine grained control of the synchronizers\n  const someViewportHasSync = viewports.some(viewport => {\n    const syncStates = syncGroupService.getSynchronizersForViewport(\n      viewport.viewportOptions.viewportId\n    );\n\n    const imageSync = syncStates.find(syncState => syncState.id === syncId);\n\n    return !!imageSync;\n  });\n\n  if (someViewportHasSync) {\n    return disableSync(syncId, servicesManager);\n  }\n\n  // create synchronization group and add the viewports to it.\n  viewports.forEach(gridViewport => {\n    const { viewportId } = gridViewport.viewportOptions;\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n    if (!viewport) {\n      return;\n    }\n    syncGroupService.addViewportToSyncGroup(viewportId, viewport.getRenderingEngine().id, {\n      type: 'imageSlice',\n      id: syncId,\n      source: true,\n      target: true,\n    });\n  });\n}\n\nfunction disableSync(syncName, servicesManager) {\n  const { syncGroupService, viewportGridService, displaySetService, cornerstoneViewportService } =\n    servicesManager.services;\n  const viewports = getReconstructableStackViewports(viewportGridService, displaySetService);\n  viewports.forEach(gridViewport => {\n    const { viewportId } = gridViewport.viewportOptions;\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n    if (!viewport) {\n      return;\n    }\n    syncGroupService.removeViewportFromSyncGroup(\n      viewport.id,\n      viewport.getRenderingEngine().id,\n      syncName\n    );\n  });\n}\n\n/**\n * Gets the consistent spacing stack viewport types, which are the ones which\n * can be navigated using the stack image sync right now.\n */\nfunction getReconstructableStackViewports(viewportGridService, displaySetService) {\n  let { viewports } = viewportGridService.getState();\n\n  viewports = [...viewports.values()];\n  // filter empty viewports\n  viewports = viewports.filter(\n    viewport => viewport.displaySetInstanceUIDs && viewport.displaySetInstanceUIDs.length\n  );\n\n  // filter reconstructable viewports\n  viewports = viewports.filter(viewport => {\n    const { displaySetInstanceUIDs } = viewport;\n\n    for (const displaySetInstanceUID of displaySetInstanceUIDs) {\n      const displaySet = displaySetService.getDisplaySetByUID(displaySetInstanceUID);\n\n      // TODO - add a better test than isReconstructable\n      if (displaySet && displaySet.isReconstructable) {\n        return true;\n      }\n\n      return false;\n    }\n  });\n  return viewports;\n}\n","const VOI_SYNC_NAME = 'VOI_SYNC';\n\nconst getSyncId = modality => `${VOI_SYNC_NAME}_${modality}`;\n\nexport default function toggleVOISliceSync({\n  servicesManager,\n  viewports: providedViewports,\n  syncId,\n}) {\n  const { syncGroupService, viewportGridService, displaySetService, cornerstoneViewportService } =\n    servicesManager.services;\n\n  const viewports =\n    providedViewports || groupViewportsByModality(viewportGridService, displaySetService);\n\n  // Todo: right now we don't have a proper way to define specific\n  // viewports to add to synchronizers, and right now it is global or not\n  // after we do that, we should do fine grained control of the synchronizers\n\n  // we can apply voi sync within each modality group\n  for (const [modality, modalityViewports] of Object.entries(viewports)) {\n    const syncIdToUse = syncId || getSyncId(modality);\n\n    const someViewportHasSync = modalityViewports.some(viewport => {\n      const syncStates = syncGroupService.getSynchronizersForViewport(\n        viewport.viewportOptions.viewportId\n      );\n\n      const imageSync = syncStates.find(syncState => syncState.id === syncIdToUse);\n\n      return !!imageSync;\n    });\n\n    if (someViewportHasSync) {\n      return disableSync(modalityViewports, syncIdToUse, servicesManager);\n    }\n\n    // create synchronization group and add the modalityViewports to it.\n    modalityViewports.forEach(gridViewport => {\n      const { viewportId } = gridViewport.viewportOptions;\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n      if (!viewport) {\n        return;\n      }\n      syncGroupService.addViewportToSyncGroup(viewportId, viewport.getRenderingEngine().id, {\n        type: 'voi',\n        id: syncIdToUse,\n        source: true,\n        target: true,\n      });\n    });\n  }\n}\n\nfunction disableSync(modalityViewports, syncId, servicesManager) {\n  const { syncGroupService, cornerstoneViewportService } = servicesManager.services;\n\n  const viewports = modalityViewports;\n  viewports.forEach(gridViewport => {\n    const { viewportId } = gridViewport.viewportOptions;\n    const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n    if (!viewport) {\n      return;\n    }\n    syncGroupService.removeViewportFromSyncGroup(\n      viewport.id,\n      viewport.getRenderingEngine().id,\n      syncId\n    );\n  });\n}\n\nfunction groupViewportsByModality(viewportGridService, displaySetService) {\n  let { viewports } = viewportGridService.getState();\n\n  viewports = [...viewports.values()];\n\n  // group the viewports by modality\n  return viewports.reduce((acc, viewport) => {\n    const { displaySetInstanceUIDs } = viewport;\n    // Todo: add proper fusion support\n    const displaySetInstanceUID = displaySetInstanceUIDs[0];\n    const displaySet = displaySetService.getDisplaySetByUID(displaySetInstanceUID);\n\n    const modality = displaySet.Modality;\n    if (!acc[modality]) {\n      acc[modality] = [];\n    }\n\n    acc[modality].push(viewport);\n\n    return acc;\n  }, {});\n}\n","import {\n  getEnabledElement,\n  StackViewport,\n  VolumeViewport,\n  utilities as csUtils,\n  Types as CoreTypes,\n  BaseVolumeViewport,\n} from '@cornerstonejs/core';\nimport {\n  ToolGroupManager,\n  Enums,\n  utilities as cstUtils,\n  ReferenceLinesTool,\n} from '@cornerstonejs/tools';\nimport { Types as OhifTypes } from '@ohif/core';\nimport { vec3, mat4 } from 'gl-matrix';\n\nimport CornerstoneViewportDownloadForm from './utils/CornerstoneViewportDownloadForm';\nimport { callLabelAutocompleteDialog, showLabelAnnotationPopup } from './utils/callInputDialog';\nimport toggleImageSliceSync from './utils/imageSliceSync/toggleImageSliceSync';\nimport { getFirstAnnotationSelected } from './utils/measurementServiceMappings/utils/selection';\nimport getActiveViewportEnabledElement from './utils/getActiveViewportEnabledElement';\nimport { CornerstoneServices } from './types';\nimport toggleVOISliceSync from './utils/toggleVOISliceSync';\n\nconst toggleSyncFunctions = {\n  imageSlice: toggleImageSliceSync,\n  voi: toggleVOISliceSync,\n};\n\nfunction commandsModule({\n  servicesManager,\n  commandsManager,\n}: OhifTypes.Extensions.ExtensionParams): OhifTypes.Extensions.CommandsModule {\n  const {\n    viewportGridService,\n    toolGroupService,\n    cineService,\n    uiDialogService,\n    cornerstoneViewportService,\n    uiNotificationService,\n    measurementService,\n    customizationService,\n    colorbarService,\n    hangingProtocolService,\n    syncGroupService,\n  } = servicesManager.services as CornerstoneServices;\n\n  const { measurementServiceSource } = this;\n\n  function _getActiveViewportEnabledElement() {\n    return getActiveViewportEnabledElement(viewportGridService);\n  }\n\n  function _getActiveViewportToolGroupId() {\n    const viewport = _getActiveViewportEnabledElement();\n    return toolGroupService.getToolGroupForViewport(viewport.id);\n  }\n\n  const actions = {\n    /**\n     * Generates the selector props for the context menu, specific to\n     * the cornerstone viewport, and then runs the context menu.\n     */\n    showCornerstoneContextMenu: options => {\n      const element = _getActiveViewportEnabledElement()?.viewport?.element;\n\n      const optionsToUse = { ...options, element };\n      const { useSelectedAnnotation, nearbyToolData, event } = optionsToUse;\n\n      // This code is used to invoke the context menu via keyboard shortcuts\n      if (useSelectedAnnotation && !nearbyToolData) {\n        const firstAnnotationSelected = getFirstAnnotationSelected(element);\n        // filter by allowed selected tools from config property (if there is any)\n        const isToolAllowed =\n          !optionsToUse.allowedSelectedTools ||\n          optionsToUse.allowedSelectedTools.includes(firstAnnotationSelected?.metadata?.toolName);\n        if (isToolAllowed) {\n          optionsToUse.nearbyToolData = firstAnnotationSelected;\n        } else {\n          return;\n        }\n      }\n\n      optionsToUse.defaultPointsPosition = [];\n      // if (optionsToUse.nearbyToolData) {\n      //   optionsToUse.defaultPointsPosition = commandsManager.runCommand(\n      //     'getToolDataActiveCanvasPoints',\n      //     { toolData: optionsToUse.nearbyToolData }\n      //   );\n      // }\n\n      // TODO - make the selectorProps richer by including the study metadata and display set.\n      optionsToUse.selectorProps = {\n        toolName: optionsToUse.nearbyToolData?.metadata?.toolName,\n        value: optionsToUse.nearbyToolData,\n        uid: optionsToUse.nearbyToolData?.annotationUID,\n        nearbyToolData: optionsToUse.nearbyToolData,\n        event,\n        ...optionsToUse.selectorProps,\n      };\n\n      commandsManager.run(options, optionsToUse);\n    },\n\n    getNearbyToolData({ nearbyToolData, element, canvasCoordinates }) {\n      return nearbyToolData ?? cstUtils.getAnnotationNearPoint(element, canvasCoordinates);\n    },\n    getNearbyAnnotation({ element, canvasCoordinates }) {\n      const nearbyToolData = actions.getNearbyToolData({\n        nearbyToolData: null,\n        element,\n        canvasCoordinates,\n      });\n\n      const isAnnotation = toolName => {\n        const enabledElement = getEnabledElement(element);\n\n        if (!enabledElement) {\n          return;\n        }\n\n        const { renderingEngineId, viewportId } = enabledElement;\n        const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n\n        const toolInstance = toolGroup.getToolInstance(toolName);\n\n        return toolInstance?.constructor?.isAnnotation ?? true;\n      };\n\n      return nearbyToolData?.metadata?.toolName && isAnnotation(nearbyToolData.metadata.toolName)\n        ? nearbyToolData\n        : null;\n    },\n    /** Delete the given measurement */\n    deleteMeasurement: ({ uid }) => {\n      if (uid) {\n        measurementServiceSource.remove(uid);\n      }\n    },\n    /**\n     * Show the measurement labelling input dialog and update the label\n     * on the measurement with a response if not cancelled.\n     */\n    setMeasurementLabel: ({ uid }) => {\n      const labelConfig = customizationService.get('measurementLabels');\n      const measurement = measurementService.getMeasurement(uid);\n      showLabelAnnotationPopup(measurement, uiDialogService, labelConfig).then(\n        (val: Map<any, any>) => {\n          measurementService.update(\n            uid,\n            {\n              ...val,\n            },\n            true\n          );\n        }\n      );\n    },\n\n    /**\n     *\n     * @param props - containing the updates to apply\n     * @param props.measurementKey - chooses the measurement key to apply the\n     *        code to.  This will typically be finding or site to apply a\n     *        finding code or a findingSites code.\n     * @param props.code - A coding scheme value from DICOM, including:\n     *       * CodeValue - the language independent code, for example '1234'\n     *       * CodingSchemeDesignator - the issue of the code value\n     *       * CodeMeaning - the text value shown to the user\n     *       * ref - a string reference in the form `<designator>:<codeValue>`\n     *       * Other fields\n     *     Note it is a valid option to remove the finding or site values by\n     *     supplying null for the code.\n     * @param props.uid - the measurement UID to find it with\n     * @param props.label - the text value for the code.  Has NOTHING to do with\n     *        the measurement label, which can be set with textLabel\n     * @param props.textLabel is the measurement label to apply.  Set to null to\n     *            delete.\n     *\n     * If the measurementKey is `site`, then the code will also be added/replace\n     * the 0 element of findingSites.  This behaviour is expected to be enhanced\n     * in the future with ability to set other site information.\n     */\n    updateMeasurement: props => {\n      const { code, uid, textLabel, label } = props;\n      const measurement = measurementService.getMeasurement(uid);\n      const updatedMeasurement = {\n        ...measurement,\n      };\n      // Call it textLabel as the label value\n      // TODO - remove the label setting when direct rendering of findingSites is enabled\n      if (textLabel !== undefined) {\n        updatedMeasurement.label = textLabel;\n      }\n      if (code !== undefined) {\n        const measurementKey = code.type || 'finding';\n\n        if (code.ref && !code.CodeValue) {\n          const split = code.ref.indexOf(':');\n          code.CodeValue = code.ref.substring(split + 1);\n          code.CodeMeaning = code.text || label;\n          code.CodingSchemeDesignator = code.ref.substring(0, split);\n        }\n        updatedMeasurement[measurementKey] = code;\n        // TODO - remove this line once the measurements table customizations are in\n        if (measurementKey !== 'finding') {\n          if (updatedMeasurement.findingSites) {\n            updatedMeasurement.findingSites = updatedMeasurement.findingSites.filter(\n              it => it.type !== measurementKey\n            );\n            updatedMeasurement.findingSites.push(code);\n          } else {\n            updatedMeasurement.findingSites = [code];\n          }\n        }\n      }\n      measurementService.update(updatedMeasurement.uid, updatedMeasurement, true);\n    },\n\n    // Retrieve value commands\n    getActiveViewportEnabledElement: _getActiveViewportEnabledElement,\n\n    setViewportActive: ({ viewportId }) => {\n      const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\n      if (!viewportInfo) {\n        console.warn('No viewport found for viewportId:', viewportId);\n        return;\n      }\n\n      viewportGridService.setActiveViewportId(viewportId);\n    },\n    arrowTextCallback: ({ callback, data, uid }) => {\n      const labelConfig = customizationService.get('measurementLabels');\n      callLabelAutocompleteDialog(uiDialogService, callback, {}, labelConfig);\n    },\n    toggleCine: () => {\n      const { viewports } = viewportGridService.getState();\n      const { isCineEnabled } = cineService.getState();\n      cineService.setIsCineEnabled(!isCineEnabled);\n      viewports.forEach((_, index) => cineService.setCine({ id: index, isPlaying: false }));\n    },\n\n    setViewportWindowLevel({ viewportId, window, level }) {\n      // convert to numbers\n      const windowWidthNum = Number(window);\n      const windowCenterNum = Number(level);\n\n      // get actor from the viewport\n      const renderingEngine = cornerstoneViewportService.getRenderingEngine();\n      const viewport = renderingEngine.getViewport(viewportId);\n\n      const { lower, upper } = csUtils.windowLevel.toLowHighRange(windowWidthNum, windowCenterNum);\n\n      viewport.setProperties({\n        voiRange: {\n          upper,\n          lower,\n        },\n      });\n      viewport.render();\n    },\n\n    toggleViewportColorbar: ({ viewportId, displaySetInstanceUIDs, options = {} }) => {\n      const hasColorbar = colorbarService.hasColorbar(viewportId);\n      if (hasColorbar) {\n        colorbarService.removeColorbar(viewportId);\n        return;\n      }\n      colorbarService.addColorbar(viewportId, displaySetInstanceUIDs, options);\n    },\n\n    setWindowLevel(props) {\n      const { toolGroupId } = props;\n      const { viewportId } = _getActiveViewportEnabledElement();\n      const viewportToolGroupId = toolGroupService.getToolGroupForViewport(viewportId);\n\n      if (toolGroupId && toolGroupId !== viewportToolGroupId) {\n        return;\n      }\n\n      actions.setViewportWindowLevel({ ...props, viewportId });\n    },\n    setToolEnabled: ({ toolName, toggle, toolGroupId }) => {\n      const { viewports } = viewportGridService.getState();\n\n      if (!viewports.size) {\n        return;\n      }\n\n      const toolGroup = toolGroupService.getToolGroup(toolGroupId ?? null);\n\n      if (!toolGroup || !toolGroup.hasTool(toolName)) {\n        return;\n      }\n\n      const toolIsEnabled = toolGroup.getToolOptions(toolName).mode === Enums.ToolModes.Enabled;\n\n      // Toggle the tool's state only if the toggle is true\n      if (toggle) {\n        toolIsEnabled ? toolGroup.setToolDisabled(toolName) : toolGroup.setToolEnabled(toolName);\n      } else {\n        toolGroup.setToolEnabled(toolName);\n      }\n\n      const renderingEngine = cornerstoneViewportService.getRenderingEngine();\n      renderingEngine.render();\n    },\n    toggleEnabledDisabledToolbar({ value, itemId, toolGroupId }) {\n      const toolName = itemId || value;\n      toolGroupId = toolGroupId ?? _getActiveViewportToolGroupId();\n\n      const toolGroup = toolGroupService.getToolGroup(toolGroupId);\n      if (!toolGroup || !toolGroup.hasTool(toolName)) {\n        return;\n      }\n\n      const toolIsEnabled = toolGroup.getToolOptions(toolName).mode === Enums.ToolModes.Enabled;\n\n      toolIsEnabled ? toolGroup.setToolDisabled(toolName) : toolGroup.setToolEnabled(toolName);\n    },\n    toggleActiveDisabledToolbar({ value, itemId, toolGroupId }) {\n      const toolName = itemId || value;\n      toolGroupId = toolGroupId ?? _getActiveViewportToolGroupId();\n      const toolGroup = toolGroupService.getToolGroup(toolGroupId);\n      if (!toolGroup || !toolGroup.hasTool(toolName)) {\n        return;\n      }\n\n      const toolIsActive = [\n        Enums.ToolModes.Active,\n        Enums.ToolModes.Enabled,\n        Enums.ToolModes.Passive,\n      ].includes(toolGroup.getToolOptions(toolName).mode);\n\n      toolIsActive\n        ? toolGroup.setToolDisabled(toolName)\n        : actions.setToolActive({ toolName, toolGroupId });\n\n      // we should set the previously active tool to active after we set the\n      // current tool disabled\n      if (toolIsActive) {\n        const prevToolName = toolGroup.getPrevActivePrimaryToolName();\n        if (prevToolName !== toolName) {\n          actions.setToolActive({ toolName: prevToolName, toolGroupId });\n        }\n      }\n    },\n    setToolActiveToolbar: ({ value, itemId, toolName, toolGroupIds = [] }) => {\n      // Sometimes it is passed as value (tools with options), sometimes as itemId (toolbar buttons)\n      toolName = toolName || itemId || value;\n\n      toolGroupIds = toolGroupIds.length ? toolGroupIds : toolGroupService.getToolGroupIds();\n\n      toolGroupIds.forEach(toolGroupId => {\n        actions.setToolActive({ toolName, toolGroupId });\n      });\n    },\n    setToolActive: ({ toolName, toolGroupId = null }) => {\n      const { viewports } = viewportGridService.getState();\n\n      if (!viewports.size) {\n        return;\n      }\n\n      const toolGroup = toolGroupService.getToolGroup(toolGroupId);\n\n      if (!toolGroup) {\n        return;\n      }\n\n      if (!toolGroup.hasTool(toolName)) {\n        return;\n      }\n\n      const activeToolName = toolGroup.getActivePrimaryMouseButtonTool();\n\n      if (activeToolName) {\n        const activeToolOptions = toolGroup.getToolConfiguration(activeToolName);\n        activeToolOptions?.disableOnPassive\n          ? toolGroup.setToolDisabled(activeToolName)\n          : toolGroup.setToolPassive(activeToolName);\n      }\n\n      // Set the new toolName to be active\n      toolGroup.setToolActive(toolName, {\n        bindings: [\n          {\n            mouseButton: Enums.MouseBindings.Primary,\n          },\n        ],\n      });\n    },\n    showDownloadViewportModal: () => {\n      const { activeViewportId } = viewportGridService.getState();\n\n      if (!cornerstoneViewportService.getCornerstoneViewport(activeViewportId)) {\n        // Cannot download a non-cornerstone viewport (image).\n        uiNotificationService.show({\n          title: 'Download Image',\n          message: 'Image cannot be downloaded',\n          type: 'error',\n        });\n        return;\n      }\n\n      const { uiModalService } = servicesManager.services;\n\n      if (uiModalService) {\n        uiModalService.show({\n          content: CornerstoneViewportDownloadForm,\n          title: 'Download High Quality Image',\n          contentProps: {\n            activeViewportId,\n            onClose: uiModalService.hide,\n            cornerstoneViewportService,\n          },\n          containerDimensions: 'w-[70%] max-w-[900px]',\n        });\n      }\n    },\n    rotateViewport: ({ rotation }) => {\n      const enabledElement = _getActiveViewportEnabledElement();\n      if (!enabledElement) {\n        return;\n      }\n\n      const { viewport } = enabledElement;\n\n      if (viewport instanceof BaseVolumeViewport) {\n        const camera = viewport.getCamera();\n        const rotAngle = (rotation * Math.PI) / 180;\n        const rotMat = mat4.identity(new Float32Array(16));\n        mat4.rotate(rotMat, rotMat, rotAngle, camera.viewPlaneNormal);\n        const rotatedViewUp = vec3.transformMat4(vec3.create(), camera.viewUp, rotMat);\n        viewport.setCamera({ viewUp: rotatedViewUp as CoreTypes.Point3 });\n        viewport.render();\n      } else if (viewport.getRotation !== undefined) {\n        const currentRotation = viewport.getRotation();\n        const newRotation = (currentRotation + rotation) % 360;\n        viewport.setProperties({ rotation: newRotation });\n        viewport.render();\n      }\n    },\n    flipViewportHorizontal: () => {\n      const enabledElement = _getActiveViewportEnabledElement();\n\n      if (!enabledElement) {\n        return;\n      }\n\n      const { viewport } = enabledElement;\n\n      const { flipHorizontal } = viewport.getCamera();\n      viewport.setCamera({ flipHorizontal: !flipHorizontal });\n      viewport.render();\n    },\n    flipViewportVertical: () => {\n      const enabledElement = _getActiveViewportEnabledElement();\n\n      if (!enabledElement) {\n        return;\n      }\n\n      const { viewport } = enabledElement;\n\n      const { flipVertical } = viewport.getCamera();\n      viewport.setCamera({ flipVertical: !flipVertical });\n      viewport.render();\n    },\n    invertViewport: ({ element }) => {\n      let enabledElement;\n\n      if (element === undefined) {\n        enabledElement = _getActiveViewportEnabledElement();\n      } else {\n        enabledElement = element;\n      }\n\n      if (!enabledElement) {\n        return;\n      }\n\n      const { viewport } = enabledElement;\n\n      const { invert } = viewport.getProperties();\n      viewport.setProperties({ invert: !invert });\n      viewport.render();\n    },\n    resetViewport: () => {\n      const enabledElement = _getActiveViewportEnabledElement();\n\n      if (!enabledElement) {\n        return;\n      }\n\n      const { viewport } = enabledElement;\n\n      viewport.resetProperties?.();\n      viewport.resetCamera();\n\n      viewport.render();\n    },\n    scaleViewport: ({ direction }) => {\n      const enabledElement = _getActiveViewportEnabledElement();\n      const scaleFactor = direction > 0 ? 0.9 : 1.1;\n\n      if (!enabledElement) {\n        return;\n      }\n      const { viewport } = enabledElement;\n\n      if (viewport instanceof StackViewport) {\n        if (direction) {\n          const { parallelScale } = viewport.getCamera();\n          viewport.setCamera({ parallelScale: parallelScale * scaleFactor });\n          viewport.render();\n        } else {\n          viewport.resetCamera();\n          viewport.render();\n        }\n      }\n    },\n\n    /** Jumps the active viewport or the specified one to the given slice index */\n    jumpToImage: ({ imageIndex, viewport: gridViewport }): void => {\n      // Get current active viewport (return if none active)\n      let viewport;\n      if (!gridViewport) {\n        const enabledElement = _getActiveViewportEnabledElement();\n        if (!enabledElement) {\n          return;\n        }\n        viewport = enabledElement.viewport;\n      } else {\n        viewport = cornerstoneViewportService.getCornerstoneViewport(gridViewport.id);\n      }\n\n      // Get number of slices\n      // -> Copied from cornerstone3D jumpToSlice\\_getImageSliceData()\n      let numberOfSlices = 0;\n\n      if (viewport instanceof StackViewport) {\n        numberOfSlices = viewport.getImageIds().length;\n      } else if (viewport instanceof VolumeViewport) {\n        numberOfSlices = csUtils.getImageSliceDataForVolumeViewport(viewport).numberOfSlices;\n      } else {\n        throw new Error('Unsupported viewport type');\n      }\n\n      const jumpIndex = imageIndex < 0 ? numberOfSlices + imageIndex : imageIndex;\n      if (jumpIndex >= numberOfSlices || jumpIndex < 0) {\n        throw new Error(`Can't jump to ${imageIndex}`);\n      }\n\n      // Set slice to last slice\n      const options = { imageIndex: jumpIndex };\n      cstUtils.jumpToSlice(viewport.element, options);\n    },\n    scroll: ({ direction }) => {\n      const enabledElement = _getActiveViewportEnabledElement();\n\n      if (!enabledElement) {\n        return;\n      }\n\n      const { viewport } = enabledElement;\n      const options = { delta: direction };\n\n      cstUtils.scroll(viewport, options);\n    },\n    setViewportColormap: ({\n      viewportId,\n      displaySetInstanceUID,\n      colormap,\n      opacity = 1,\n      immediate = false,\n    }) => {\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n\n      const actorEntries = viewport.getActors();\n      let hpOpacity;\n      // Retrieve active protocol's viewport match details\n      const { viewportMatchDetails } = hangingProtocolService.getActiveProtocol();\n      // Get display set options for the specified viewport ID\n      const displaySetsInfo = viewportMatchDetails.get(viewportId)?.displaySetsInfo;\n\n      if (displaySetsInfo) {\n        // Find the display set that matches the given UID\n        const matchingDisplaySet = displaySetsInfo.find(\n          displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\n        );\n        // If a matching display set is found, update the opacity with its value\n        hpOpacity = matchingDisplaySet?.displaySetOptions?.options?.colormap?.opacity;\n      }\n\n      // HP takes priority over the default opacity\n      colormap = { ...colormap, opacity: hpOpacity || opacity };\n\n      const setViewportProperties = (viewport, uid) => {\n        const actorEntry = actorEntries.find(entry => entry.uid.includes(uid));\n        const { actor: volumeActor, uid: volumeId } = actorEntry;\n        viewport.setProperties({ colormap, volumeActor }, volumeId);\n      };\n\n      if (viewport instanceof StackViewport) {\n        setViewportProperties(viewport, viewportId);\n      }\n\n      if (viewport instanceof VolumeViewport) {\n        if (!displaySetInstanceUID) {\n          const { viewports } = viewportGridService.getState();\n          displaySetInstanceUID = viewports.get(viewportId)?.displaySetInstanceUIDs[0];\n        }\n        setViewportProperties(viewport, displaySetInstanceUID);\n      }\n\n      if (immediate) {\n        viewport.render();\n      }\n    },\n    changeActiveViewport: ({ direction = 1 }) => {\n      const { activeViewportId, viewports } = viewportGridService.getState();\n      const viewportIds = Array.from(viewports.keys());\n      const currentIndex = viewportIds.indexOf(activeViewportId);\n      const nextViewportIndex =\n        (currentIndex + direction + viewportIds.length) % viewportIds.length;\n      viewportGridService.setActiveViewportId(viewportIds[nextViewportIndex] as string);\n    },\n    /**\n     * If the syncId is given and a synchronizer with that ID already exists, it will\n     * toggle it on/off for the provided viewports. If not, it will attempt to create\n     * a new synchronizer using the given syncId and type for the specified viewports.\n     * If no viewports are provided, you may notice some default behavior.\n     * - 'voi' type, we will aim to synchronize all viewports with the same modality\n     * -'imageSlice' type, we will aim to synchronize all viewports with the same orientation.\n     *\n     * @param options\n     * @param options.viewports - The viewports to synchronize\n     * @param options.syncId - The synchronization group ID\n     * @param options.type - The type of synchronization to perform\n     */\n    toggleSynchronizer: ({ type, viewports, syncId }) => {\n      const synchronizer = syncGroupService.getSynchronizer(syncId);\n\n      if (synchronizer) {\n        synchronizer.isDisabled() ? synchronizer.setEnabled(true) : synchronizer.setEnabled(false);\n        return;\n      }\n\n      const fn = toggleSyncFunctions[type];\n\n      if (fn) {\n        fn({\n          servicesManager,\n          viewports,\n          syncId,\n        });\n      }\n    },\n    setSourceViewportForReferenceLinesTool: ({ viewportId }) => {\n      if (!viewportId) {\n        const { activeViewportId } = viewportGridService.getState();\n        viewportId = activeViewportId ?? 'default';\n      }\n\n      const toolGroup = toolGroupService.getToolGroupForViewport(viewportId);\n\n      toolGroup?.setToolConfiguration(\n        ReferenceLinesTool.toolName,\n        {\n          sourceViewportId: viewportId,\n        },\n        true // overwrite\n      );\n\n      const renderingEngine = cornerstoneViewportService.getRenderingEngine();\n      renderingEngine.render();\n    },\n    storePresentation: ({ viewportId }) => {\n      cornerstoneViewportService.storePresentation({ viewportId });\n    },\n    updateVolumeData: ({ volume }) => {\n      // update vtkOpenGLTexture and imageData of computed volume\n      const { imageData, vtkOpenGLTexture } = volume;\n      const numSlices = imageData.getDimensions()[2];\n      const slicesToUpdate = [...Array(numSlices).keys()];\n      slicesToUpdate.forEach(i => {\n        vtkOpenGLTexture.setUpdatedFrame(i);\n      });\n      imageData.modified();\n    },\n\n    attachProtocolViewportDataListener: ({ protocol, stageIndex }) => {\n      const EVENT = cornerstoneViewportService.EVENTS.VIEWPORT_DATA_CHANGED;\n      const command = protocol.callbacks.onViewportDataInitialized;\n      const numPanes = protocol.stages?.[stageIndex]?.viewports.length ?? 1;\n      let numPanesWithData = 0;\n      const { unsubscribe } = cornerstoneViewportService.subscribe(EVENT, evt => {\n        numPanesWithData++;\n\n        if (numPanesWithData === numPanes) {\n          commandsManager.run(...command);\n\n          // Unsubscribe from the event\n          unsubscribe(EVENT);\n        }\n      });\n    },\n\n    setViewportPreset: ({ viewportId, preset }) => {\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n      if (!viewport) {\n        return;\n      }\n      viewport.setProperties({\n        preset,\n      });\n      viewport.render();\n    },\n\n    /**\n     * Sets the volume quality for a given viewport.\n     * @param {string} viewportId - The ID of the viewport to set the volume quality.\n     * @param {number} volumeQuality - The desired quality level of the volume rendering.\n     */\n\n    setVolumeRenderingQulaity: ({ viewportId, volumeQuality }) => {\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n      const { actor } = viewport.getActors()[0];\n      const mapper = actor.getMapper();\n      const image = mapper.getInputData();\n      const dims = image.getDimensions();\n      const spacing = image.getSpacing();\n      const spatialDiagonal = vec3.length(\n        vec3.fromValues(dims[0] * spacing[0], dims[1] * spacing[1], dims[2] * spacing[2])\n      );\n\n      let sampleDistance = spacing.reduce((a, b) => a + b) / 3.0;\n      sampleDistance /= volumeQuality > 1 ? 0.5 * volumeQuality ** 2 : 1.0;\n      const samplesPerRay = spatialDiagonal / sampleDistance + 1;\n      mapper.setMaximumSamplesPerRay(samplesPerRay);\n      mapper.setSampleDistance(sampleDistance);\n      viewport.render();\n    },\n\n    /**\n     * Shifts opacity points for a given viewport id.\n     * @param {string} viewportId - The ID of the viewport to set the mapping range.\n     * @param {number} shift - The shift value to shift the points by.\n     */\n    shiftVolumeOpacityPoints: ({ viewportId, shift }) => {\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n      const { actor } = viewport.getActors()[0];\n      const ofun = actor.getProperty().getScalarOpacity(0);\n\n      const opacityPointValues = []; // Array to hold values\n      // Gather Existing Values\n      const size = ofun.getSize();\n      for (let pointIdx = 0; pointIdx < size; pointIdx++) {\n        const opacityPointValue = [0, 0, 0, 0];\n        ofun.getNodeValue(pointIdx, opacityPointValue);\n        // opacityPointValue now holds [xLocation, opacity, midpoint, sharpness]\n        opacityPointValues.push(opacityPointValue);\n      }\n      // Add offset\n      opacityPointValues.forEach(opacityPointValue => {\n        opacityPointValue[0] += shift; // Change the location value\n      });\n      // Set new values\n      ofun.removeAllPoints();\n      opacityPointValues.forEach(opacityPointValue => {\n        ofun.addPoint(...opacityPointValue);\n      });\n      viewport.render();\n    },\n\n    /**\n     * Sets the volume lighting settings for a given viewport.\n     * @param {string} viewportId - The ID of the viewport to set the lighting settings.\n     * @param {Object} options - The lighting settings to be set.\n     * @param {boolean} options.shade - The shade setting for the lighting.\n     * @param {number} options.ambient - The ambient setting for the lighting.\n     * @param {number} options.diffuse - The diffuse setting for the lighting.\n     * @param {number} options.specular - The specular setting for the lighting.\n     **/\n\n    setVolumeLighting: ({ viewportId, options }) => {\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n      const { actor } = viewport.getActors()[0];\n      const property = actor.getProperty();\n\n      if (options.shade !== undefined) {\n        property.setShade(options.shade);\n      }\n\n      if (options.ambient !== undefined) {\n        property.setAmbient(options.ambient);\n      }\n\n      if (options.diffuse !== undefined) {\n        property.setDiffuse(options.diffuse);\n      }\n\n      if (options.specular !== undefined) {\n        property.setSpecular(options.specular);\n      }\n\n      viewport.render();\n    },\n    resetCrosshairs: ({ viewportId }) => {\n      const crosshairInstances = [];\n\n      const getCrosshairInstances = toolGroupId => {\n        const toolGroup = toolGroupService.getToolGroup(toolGroupId);\n        crosshairInstances.push(toolGroup.getToolInstance('Crosshairs'));\n      };\n\n      if (!viewportId) {\n        const toolGroupIds = toolGroupService.getToolGroupIds();\n        toolGroupIds.forEach(getCrosshairInstances);\n      } else {\n        const toolGroup = toolGroupService.getToolGroupForViewport(viewportId);\n        getCrosshairInstances(toolGroup.id);\n      }\n\n      crosshairInstances.forEach(ins => {\n        ins?.resetCrosshairs();\n      });\n    },\n  };\n\n  const definitions = {\n    // The command here is to show the viewer context menu, as being the\n    // context menu\n    showCornerstoneContextMenu: {\n      commandFn: actions.showCornerstoneContextMenu,\n      options: {\n        menuCustomizationId: 'measurementsContextMenu',\n        commands: [\n          {\n            commandName: 'showContextMenu',\n          },\n        ],\n      },\n    },\n\n    getNearbyToolData: {\n      commandFn: actions.getNearbyToolData,\n    },\n    getNearbyAnnotation: {\n      commandFn: actions.getNearbyAnnotation,\n      storeContexts: [],\n      options: {},\n    },\n    toggleViewportColorbar: {\n      commandFn: actions.toggleViewportColorbar,\n    },\n    deleteMeasurement: {\n      commandFn: actions.deleteMeasurement,\n    },\n    setMeasurementLabel: {\n      commandFn: actions.setMeasurementLabel,\n    },\n    updateMeasurement: {\n      commandFn: actions.updateMeasurement,\n    },\n    setViewportWindowLevel: {\n      commandFn: actions.setViewportWindowLevel,\n    },\n    setWindowLevel: {\n      commandFn: actions.setWindowLevel,\n    },\n    setToolActive: {\n      commandFn: actions.setToolActive,\n    },\n    setToolActiveToolbar: {\n      commandFn: actions.setToolActiveToolbar,\n    },\n    setToolEnabled: {\n      commandFn: actions.setToolEnabled,\n    },\n    rotateViewportCW: {\n      commandFn: actions.rotateViewport,\n      options: { rotation: 90 },\n    },\n    rotateViewportCCW: {\n      commandFn: actions.rotateViewport,\n      options: { rotation: -90 },\n    },\n    incrementActiveViewport: {\n      commandFn: actions.changeActiveViewport,\n    },\n    decrementActiveViewport: {\n      commandFn: actions.changeActiveViewport,\n      options: { direction: -1 },\n    },\n    flipViewportHorizontal: {\n      commandFn: actions.flipViewportHorizontal,\n    },\n    flipViewportVertical: {\n      commandFn: actions.flipViewportVertical,\n    },\n    invertViewport: {\n      commandFn: actions.invertViewport,\n    },\n    resetViewport: {\n      commandFn: actions.resetViewport,\n    },\n    scaleUpViewport: {\n      commandFn: actions.scaleViewport,\n      options: { direction: 1 },\n    },\n    scaleDownViewport: {\n      commandFn: actions.scaleViewport,\n      options: { direction: -1 },\n    },\n    fitViewportToWindow: {\n      commandFn: actions.scaleViewport,\n      options: { direction: 0 },\n    },\n    nextImage: {\n      commandFn: actions.scroll,\n      options: { direction: 1 },\n    },\n    previousImage: {\n      commandFn: actions.scroll,\n      options: { direction: -1 },\n    },\n    firstImage: {\n      commandFn: actions.jumpToImage,\n      options: { imageIndex: 0 },\n    },\n    lastImage: {\n      commandFn: actions.jumpToImage,\n      options: { imageIndex: -1 },\n    },\n    jumpToImage: {\n      commandFn: actions.jumpToImage,\n    },\n    showDownloadViewportModal: {\n      commandFn: actions.showDownloadViewportModal,\n    },\n    toggleCine: {\n      commandFn: actions.toggleCine,\n    },\n    arrowTextCallback: {\n      commandFn: actions.arrowTextCallback,\n    },\n    setViewportActive: {\n      commandFn: actions.setViewportActive,\n    },\n    setViewportColormap: {\n      commandFn: actions.setViewportColormap,\n    },\n    setSourceViewportForReferenceLinesTool: {\n      commandFn: actions.setSourceViewportForReferenceLinesTool,\n    },\n    storePresentation: {\n      commandFn: actions.storePresentation,\n    },\n    attachProtocolViewportDataListener: {\n      commandFn: actions.attachProtocolViewportDataListener,\n    },\n    setViewportPreset: {\n      commandFn: actions.setViewportPreset,\n    },\n    setVolumeRenderingQulaity: {\n      commandFn: actions.setVolumeRenderingQulaity,\n    },\n    shiftVolumeOpacityPoints: {\n      commandFn: actions.shiftVolumeOpacityPoints,\n    },\n    setVolumeLighting: {\n      commandFn: actions.setVolumeLighting,\n    },\n    resetCrosshairs: {\n      commandFn: actions.resetCrosshairs,\n    },\n    toggleSynchronizer: {\n      commandFn: actions.toggleSynchronizer,\n    },\n    updateVolumeData: {\n      commandFn: actions.updateVolumeData,\n    },\n    toggleEnabledDisabledToolbar: {\n      commandFn: actions.toggleEnabledDisabledToolbar,\n    },\n    toggleActiveDisabledToolbar: {\n      commandFn: actions.toggleActiveDisabledToolbar,\n    },\n  };\n\n  return {\n    actions,\n    definitions,\n    defaultContext: 'CORNERSTONE',\n  };\n}\n\nexport default commandsModule;\n","export const fourUp = {\n  id: 'fourUp',\n  locked: true,\n  name: '3D four up',\n  icon: 'layout-advanced-3d-four-up',\n  isPreset: true,\n  createdDate: '2023-03-15T10:29:44.894Z',\n  modifiedDate: '2023-03-15T10:29:44.894Z',\n  availableTo: {},\n  editableBy: {},\n  protocolMatchingRules: [],\n  imageLoadStrategy: 'interleaveCenter',\n  displaySetSelectors: {\n    mprDisplaySet: {\n      seriesMatchingRules: [\n        {\n          weight: 1,\n          attribute: 'isReconstructable',\n          constraint: {\n            equals: {\n              value: true,\n            },\n          },\n          required: true,\n        },\n      ],\n    },\n  },\n  stages: [\n    {\n      id: 'fourUpStage',\n      name: 'fourUp',\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 2,\n          columns: 2,\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'axial',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'volume3d',\n            viewportType: 'volume3d',\n            orientation: 'coronal',\n            customViewportProps: {\n              hideOverlays: true,\n            },\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n              options: {\n                displayPreset: {\n                  CT: 'CT-Bone',\n                  MR: 'MR-Default',\n                  default: 'CT-Bone',\n                },\n              },\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'coronal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'sagittal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","export const main3D = {\n  id: 'main3D',\n  locked: true,\n  name: '3D main',\n  icon: 'layout-advanced-3d-main',\n  isPreset: true,\n  createdDate: '2023-03-15T10:29:44.894Z',\n  modifiedDate: '2023-03-15T10:29:44.894Z',\n  availableTo: {},\n  editableBy: {},\n  protocolMatchingRules: [],\n  imageLoadStrategy: 'interleaveCenter',\n  displaySetSelectors: {\n    mprDisplaySet: {\n      seriesMatchingRules: [\n        {\n          weight: 1,\n          attribute: 'isReconstructable',\n          constraint: {\n            equals: {\n              value: true,\n            },\n          },\n          required: true,\n        },\n      ],\n    },\n  },\n  stages: [\n    {\n      id: 'main3DStage',\n      name: 'main3D',\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 2,\n          columns: 3,\n          layoutOptions: [\n            {\n              x: 0,\n              y: 0,\n              width: 1,\n              height: 1 / 2,\n            },\n            {\n              x: 0,\n              y: 1 / 2,\n              width: 1 / 3,\n              height: 1 / 2,\n            },\n            {\n              x: 1 / 3,\n              y: 1 / 2,\n              width: 1 / 3,\n              height: 1 / 2,\n            },\n            {\n              x: 2 / 3,\n              y: 1 / 2,\n              width: 1 / 3,\n              height: 1 / 2,\n            },\n          ],\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'volume3d',\n            viewportType: 'volume3d',\n            orientation: 'coronal',\n            customViewportProps: {\n              hideOverlays: true,\n            },\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n              options: {\n                displayPreset: {\n                  CT: 'CT-Bone',\n                  MR: 'MR-Default',\n                  default: 'CT-Bone',\n                },\n              },\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'axial',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'coronal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'sagittal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","import { Types } from '@ohif/core';\n\nexport const mpr: Types.HangingProtocol.Protocol = {\n  id: 'mpr',\n  name: 'MPR',\n  locked: true,\n  icon: 'layout-advanced-mpr',\n  isPreset: true,\n  createdDate: '2021-02-23',\n  modifiedDate: '2023-08-15',\n  availableTo: {},\n  editableBy: {},\n  // Unknown number of priors referenced - so just match any study\n  numberOfPriorsReferenced: 0,\n  protocolMatchingRules: [],\n  imageLoadStrategy: 'nth',\n  callbacks: {},\n  displaySetSelectors: {\n    activeDisplaySet: {\n      seriesMatchingRules: [\n        {\n          weight: 1,\n          attribute: 'isReconstructable',\n          constraint: {\n            equals: {\n              value: true,\n            },\n          },\n          required: true,\n        },\n      ],\n    },\n  },\n  stages: [\n    {\n      name: 'MPR 1x3',\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 1,\n          columns: 3,\n          layoutOptions: [\n            {\n              x: 0,\n              y: 0,\n              width: 1 / 3,\n              height: 1,\n            },\n            {\n              x: 1 / 3,\n              y: 0,\n              width: 1 / 3,\n              height: 1,\n            },\n            {\n              x: 2 / 3,\n              y: 0,\n              width: 1 / 3,\n              height: 1,\n            },\n          ],\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            viewportId: 'mpr-axial',\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'axial',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'activeDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            viewportId: 'mpr-sagittal',\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'sagittal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'activeDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            viewportId: 'mpr-coronal',\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'coronal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'activeDisplaySet',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","export const mprAnd3DVolumeViewport = {\n  id: 'mprAnd3DVolumeViewport',\n  locked: true,\n  name: 'mpr',\n  createdDate: '2023-03-15T10:29:44.894Z',\n  modifiedDate: '2023-03-15T10:29:44.894Z',\n  availableTo: {},\n  editableBy: {},\n  protocolMatchingRules: [],\n  imageLoadStrategy: 'interleaveCenter',\n  displaySetSelectors: {\n    mprDisplaySet: {\n      seriesMatchingRules: [\n        {\n          weight: 1,\n          attribute: 'isReconstructable',\n          constraint: {\n            equals: {\n              value: true,\n            },\n          },\n          required: true,\n        },\n        {\n          attribute: 'Modality',\n          constraint: {\n            equals: {\n              value: 'CT',\n            },\n          },\n          required: true,\n        },\n      ],\n    },\n  },\n  stages: [\n    {\n      id: 'mpr3Stage',\n      name: 'mpr',\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 2,\n          columns: 2,\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'axial',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'volume3d',\n            viewportType: 'volume3d',\n            orientation: 'coronal',\n            customViewportProps: {\n              hideOverlays: true,\n            },\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n              options: {\n                displayPreset: {\n                  CT: 'CT-Bone',\n                  MR: 'MR-Default',\n                  default: 'CT-Bone',\n                },\n              },\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'coronal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'sagittal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","export const only3D = {\n  id: 'only3D',\n  locked: true,\n  name: '3D only',\n  icon: 'layout-advanced-3d-only',\n  isPreset: true,\n  createdDate: '2023-03-15T10:29:44.894Z',\n  modifiedDate: '2023-03-15T10:29:44.894Z',\n  availableTo: {},\n  editableBy: {},\n  protocolMatchingRules: [],\n  imageLoadStrategy: 'interleaveCenter',\n  displaySetSelectors: {\n    mprDisplaySet: {\n      seriesMatchingRules: [\n        {\n          weight: 1,\n          attribute: 'isReconstructable',\n          constraint: {\n            equals: {\n              value: true,\n            },\n          },\n          required: true,\n        },\n      ],\n    },\n  },\n  stages: [\n    {\n      id: 'only3DStage',\n      name: 'only3D',\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 1,\n          columns: 1,\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'volume3d',\n            viewportType: 'volume3d',\n            orientation: 'coronal',\n            customViewportProps: {\n              hideOverlays: true,\n            },\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n              options: {\n                displayPreset: {\n                  CT: 'CT-Bone',\n                  MR: 'MR-Default',\n                  default: 'CT-Bone',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","export const primary3D = {\n  id: 'primary3D',\n  locked: true,\n  name: '3D primary',\n  icon: 'layout-advanced-3d-primary',\n  isPreset: true,\n  createdDate: '2023-03-15T10:29:44.894Z',\n  modifiedDate: '2023-03-15T10:29:44.894Z',\n  availableTo: {},\n  editableBy: {},\n  protocolMatchingRules: [],\n  imageLoadStrategy: 'interleaveCenter',\n  displaySetSelectors: {\n    mprDisplaySet: {\n      seriesMatchingRules: [\n        {\n          weight: 1,\n          attribute: 'isReconstructable',\n          constraint: {\n            equals: {\n              value: true,\n            },\n          },\n          required: true,\n        },\n      ],\n    },\n  },\n  stages: [\n    {\n      id: 'primary3DStage',\n      name: 'primary3D',\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 3,\n          columns: 3,\n          layoutOptions: [\n            {\n              x: 0,\n              y: 0,\n              width: 2 / 3,\n              height: 1,\n            },\n            {\n              x: 2 / 3,\n              y: 0,\n              width: 1 / 3,\n              height: 1 / 3,\n            },\n            {\n              x: 2 / 3,\n              y: 1 / 3,\n              width: 1 / 3,\n              height: 1 / 3,\n            },\n            {\n              x: 2 / 3,\n              y: 2 / 3,\n              width: 1 / 3,\n              height: 1 / 3,\n            },\n          ],\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'volume3d',\n            viewportType: 'volume3d',\n            orientation: 'coronal',\n            customViewportProps: {\n              hideOverlays: true,\n            },\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n              options: {\n                displayPreset: {\n                  CT: 'CT-Bone',\n                  MR: 'MR-Default',\n                  default: 'CT-Bone',\n                },\n              },\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'axial',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'coronal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'sagittal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","export const primaryAxial = {\n  id: 'primaryAxial',\n  locked: true,\n  name: 'Axial Primary',\n  icon: 'layout-advanced-axial-primary',\n  isPreset: true,\n  createdDate: '2023-03-15T10:29:44.894Z',\n  modifiedDate: '2023-03-15T10:29:44.894Z',\n  availableTo: {},\n  editableBy: {},\n  protocolMatchingRules: [],\n  imageLoadStrategy: 'interleaveCenter',\n  displaySetSelectors: {\n    mprDisplaySet: {\n      seriesMatchingRules: [\n        {\n          weight: 1,\n          attribute: 'isReconstructable',\n          constraint: {\n            equals: {\n              value: true,\n            },\n          },\n          required: true,\n        },\n      ],\n    },\n  },\n  stages: [\n    {\n      id: 'primaryAxialStage',\n      name: 'primaryAxial',\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 2,\n          columns: 3,\n          layoutOptions: [\n            {\n              x: 0,\n              y: 0,\n              width: 2 / 3,\n              height: 1,\n            },\n            {\n              x: 2 / 3,\n              y: 0,\n              width: 1 / 3,\n              height: 1 / 2,\n            },\n            {\n              x: 2 / 3,\n              y: 1 / 2,\n              width: 1 / 3,\n              height: 1 / 2,\n            },\n          ],\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'axial',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'sagittal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'mpr',\n            viewportType: 'volume',\n            orientation: 'coronal',\n            initialImageOptions: {\n              preset: 'middle',\n            },\n            syncGroups: [\n              {\n                type: 'voi',\n                id: 'mpr',\n                source: true,\n                target: true,\n                options: {\n                  syncColormap: true,\n                },\n              },\n            ],\n          },\n          displaySets: [\n            {\n              id: 'mprDisplaySet',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","import { fourUp } from './hps/fourUp';\nimport { main3D } from './hps/main3D';\nimport { mpr } from './hps/mpr';\nimport { mprAnd3DVolumeViewport } from './hps/mprAnd3DVolumeViewport';\nimport { only3D } from './hps/only3D';\nimport { primary3D } from './hps/primary3D';\nimport { primaryAxial } from './hps/primaryAxial';\n\nfunction getHangingProtocolModule() {\n  return [\n    {\n      name: mpr.id,\n      protocol: mpr,\n    },\n    {\n      name: mprAnd3DVolumeViewport.id,\n      protocol: mprAnd3DVolumeViewport,\n    },\n    {\n      name: fourUp.id,\n      protocol: fourUp,\n    },\n    {\n      name: main3D.id,\n      protocol: main3D,\n    },\n    {\n      name: primaryAxial.id,\n      protocol: primaryAxial,\n    },\n    {\n      name: only3D.id,\n      protocol: only3D,\n    },\n    {\n      name: primary3D.id,\n      protocol: primary3D,\n    },\n  ];\n}\n\nexport default getHangingProtocolModule;\n","import { Enums } from '@cornerstonejs/tools';\n\nconst getToggledClassName = (isToggled: boolean) => {\n  return isToggled\n    ? '!text-primary-active'\n    : '!text-common-bright hover:!bg-primary-dark hover:text-primary-light';\n};\n\nexport default function getToolbarModule({ commandsManager, servicesManager }) {\n  const {\n    toolGroupService,\n    toolbarService,\n    syncGroupService,\n    cornerstoneViewportService,\n    hangingProtocolService,\n    displaySetService,\n    viewportGridService,\n  } = servicesManager.services;\n\n  return [\n    // functions/helpers to be used by the toolbar buttons to decide if they should\n    // enabled or not\n    {\n      name: 'evaluate.cornerstoneTool',\n      evaluate: ({ viewportId, button, toolNames, disabledText }) => {\n        const toolGroup = toolGroupService.getToolGroupForViewport(viewportId);\n\n        if (!toolGroup) {\n          return;\n        }\n\n        const toolName = toolbarService.getToolNameForButton(button);\n\n        if (!toolGroup || (!toolGroup.hasTool(toolName) && !toolNames)) {\n          return {\n            disabled: true,\n            className: '!text-common-bright ohif-disabled',\n            disabledText: disabledText ?? 'Not available on the current viewport',\n          };\n        }\n\n        const isPrimaryActive = toolNames\n          ? toolNames.includes(toolGroup.getActivePrimaryMouseButtonTool())\n          : toolGroup.getActivePrimaryMouseButtonTool() === toolName;\n\n        return {\n          disabled: false,\n          className: isPrimaryActive\n            ? '!text-black bg-primary-light rounded'\n            : '!text-common-bright hover:!bg-primary-dark hover:!text-primary-light rounded',\n          // Todo: isActive right now is used for nested buttons where the primary\n          // button needs to be fully rounded (vs partial rounded) when active\n          // otherwise it does not have any other use\n          isActive: isPrimaryActive,\n        };\n      },\n    },\n    {\n      name: 'evaluate.group.promoteToPrimaryIfCornerstoneToolNotActiveInTheList',\n      evaluate: ({ viewportId, button, itemId }) => {\n        const { items } = button.props;\n\n        const toolGroup = toolGroupService.getToolGroupForViewport(viewportId);\n\n        if (!toolGroup) {\n          return {\n            primary: button.props.primary,\n            items,\n          };\n        }\n\n        const activeToolName = toolGroup.getActivePrimaryMouseButtonTool();\n\n        // check if the active toolName is part of the items then we need\n        // to move it to the primary button\n        const activeToolIndex = items.findIndex(item => {\n          const toolName = toolbarService.getToolNameForButton(item);\n          return toolName === activeToolName;\n        });\n\n        // if there is an active tool in the items dropdown bound to the primary mouse/touch\n        // we should show that no matter what\n        if (activeToolIndex > -1) {\n          return {\n            primary: items[activeToolIndex],\n            items,\n          };\n        }\n\n        if (!itemId) {\n          return {\n            primary: button.props.primary,\n            items,\n          };\n        }\n\n        // other wise we can move the clicked tool to the primary button\n        const clickedItemProps = items.find(item => item.id === itemId || item.itemId === itemId);\n\n        return {\n          primary: clickedItemProps,\n          items,\n        };\n      },\n    },\n    {\n      name: 'evaluate.action',\n      evaluate: ({ viewportId, button }) => {\n        return {\n          className: '!text-common-bright hover:!bg-primary-dark hover:text-primary-light',\n        };\n      },\n    },\n    {\n      name: 'evaluate.cornerstoneTool.toggle.ifStrictlyDisabled',\n      evaluate: ({ viewportId, button, disabledText }) =>\n        _evaluateToggle({\n          viewportId,\n          button,\n          toolbarService,\n          disabledText,\n          offModes: [Enums.ToolModes.Disabled],\n          toolGroupService,\n        }),\n    },\n    {\n      name: 'evaluate.cornerstoneTool.toggle',\n      evaluate: ({ viewportId, button, disabledText }) =>\n        _evaluateToggle({\n          viewportId,\n          button,\n          toolbarService,\n          disabledText,\n          offModes: [Enums.ToolModes.Disabled, Enums.ToolModes.Passive],\n          toolGroupService,\n        }),\n    },\n    {\n      name: 'evaluate.cornerstone.synchronizer',\n      evaluate: ({ viewportId, button }) => {\n        let synchronizers = syncGroupService.getSynchronizersForViewport(viewportId);\n\n        if (!synchronizers?.length) {\n          return {\n            className: getToggledClassName(false),\n          };\n        }\n\n        const isArray = Array.isArray(button.commands);\n\n        const synchronizerType = isArray\n          ? button.commands?.[0].commandOptions.type\n          : button.commands?.commandOptions.type;\n\n        synchronizers = syncGroupService.getSynchronizersOfType(synchronizerType);\n\n        if (!synchronizers?.length) {\n          return {\n            className: getToggledClassName(false),\n          };\n        }\n\n        // Todo: we need a better way to find the synchronizers based on their\n        // type, but for now we just check the first one and see if it is\n        // enabled\n        const synchronizer = synchronizers[0];\n\n        const isEnabled = synchronizer?._enabled;\n\n        return {\n          className: getToggledClassName(isEnabled),\n        };\n      },\n    },\n    {\n      name: 'evaluate.not3D',\n      evaluate: ({ viewportId, disabledText }) => {\n        const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n\n        if (viewport?.type === 'volume3d') {\n          return {\n            disabled: true,\n            className: '!text-common-bright ohif-disabled',\n            disabledText: disabledText ?? 'Not available on the current viewport',\n          };\n        }\n      },\n    },\n    {\n      name: 'evaluate.isUS',\n      evaluate: ({ viewportId, disabledText }) => {\n        const displaySetUIDs = viewportGridService.getDisplaySetsUIDsForViewport(viewportId);\n\n        if (!displaySetUIDs?.length) {\n          return;\n        }\n\n        const displaySets = displaySetUIDs.map(displaySetService.getDisplaySetByUID);\n        const isUS = displaySets.some(displaySet => displaySet?.Modality === 'US');\n        if (!isUS) {\n          return {\n            disabled: true,\n            className: '!text-common-bright ohif-disabled',\n            disabledText: disabledText ?? 'Not available on the current viewport',\n          };\n        }\n      },\n    },\n    {\n      name: 'evaluate.viewportProperties.toggle',\n      evaluate: ({ viewportId, button }) => {\n        const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n\n        if (!viewport || viewport.isDisabled) {\n          return;\n        }\n\n        const propId = button.id;\n\n        const properties = viewport.getProperties();\n        const camera = viewport.getCamera();\n\n        const prop = camera?.[propId] || properties?.[propId];\n\n        if (!prop) {\n          return {\n            disabled: false,\n            className: '!text-common-bright hover:!bg-primary-dark hover:text-primary-light',\n          };\n        }\n\n        const isToggled = prop;\n\n        return {\n          className: getToggledClassName(isToggled),\n        };\n      },\n    },\n    {\n      name: 'evaluate.mpr',\n      evaluate: ({ viewportId, disabledText = 'Selected viewport is not reconstructable' }) => {\n        const { protocol } = hangingProtocolService.getActiveProtocol();\n\n        const displaySetUIDs = viewportGridService.getDisplaySetsUIDsForViewport(viewportId);\n\n        if (!displaySetUIDs?.length) {\n          return;\n        }\n\n        const displaySets = displaySetUIDs.map(displaySetService.getDisplaySetByUID);\n\n        const areReconstructable = displaySets.every(displaySet => {\n          return displaySet.isReconstructable;\n        });\n\n        if (!areReconstructable) {\n          return {\n            disabled: true,\n            className: '!text-common-bright ohif-disabled',\n            disabledText: disabledText ?? 'Not available on the current viewport',\n          };\n        }\n\n        const isMpr = protocol?.id === 'mpr';\n\n        return {\n          disabled: false,\n          className: getToggledClassName(isMpr),\n        };\n      },\n    },\n  ];\n}\n\nfunction _evaluateToggle({\n  viewportId,\n  toolbarService,\n  button,\n  disabledText,\n  offModes,\n  toolGroupService,\n}) {\n  const toolGroup = toolGroupService.getToolGroupForViewport(viewportId);\n\n  if (!toolGroup) {\n    return;\n  }\n  const toolName = toolbarService.getToolNameForButton(button);\n\n  if (!toolGroup.hasTool(toolName)) {\n    return {\n      disabled: true,\n      className: '!text-common-bright ohif-disabled',\n      disabledText: disabledText ?? 'Not available on the current viewport',\n    };\n  }\n\n  const isOff = offModes.includes(toolGroup.getToolOptions(toolName).mode);\n\n  return {\n    className: getToggledClassName(!isOff),\n  };\n}\n","import { ToolGroupManager, Enums, Types } from '@cornerstonejs/tools';\nimport { eventTarget } from '@cornerstonejs/core';\n\nimport { Types as OhifTypes, pubSubServiceInterface } from '@ohif/core';\nimport getActiveViewportEnabledElement from '../../utils/getActiveViewportEnabledElement';\n\nconst EVENTS = {\n  VIEWPORT_ADDED: 'event::cornerstone::toolgroupservice:viewportadded',\n  TOOLGROUP_CREATED: 'event::cornerstone::toolgroupservice:toolgroupcreated',\n  TOOL_ACTIVATED: 'event::cornerstone::toolgroupservice:toolactivated',\n  PRIMARY_TOOL_ACTIVATED: 'event::cornerstone::toolgroupservice:primarytoolactivated',\n};\n\ntype Tool = {\n  toolName: string;\n  bindings?: typeof Enums.MouseBindings | Enums.KeyboardBindings;\n};\n\ntype Tools = {\n  active: Tool[];\n  passive?: Tool[];\n  enabled?: Tool[];\n  disabled?: Tool[];\n};\n\nexport default class ToolGroupService {\n  public static REGISTRATION = {\n    name: 'toolGroupService',\n    altName: 'ToolGroupService',\n    create: ({ servicesManager }: OhifTypes.Extensions.ExtensionParams): ToolGroupService => {\n      return new ToolGroupService(servicesManager);\n    },\n  };\n\n  serviceManager: any;\n  private toolGroupIds: Set<string> = new Set();\n  /**\n   * Service-specific\n   */\n  listeners: { [key: string]: Function[] };\n  EVENTS: { [key: string]: string };\n\n  constructor(serviceManager) {\n    const { cornerstoneViewportService, viewportGridService, uiNotificationService } =\n      serviceManager.services;\n    this.cornerstoneViewportService = cornerstoneViewportService;\n    this.viewportGridService = viewportGridService;\n    this.uiNotificationService = uiNotificationService;\n    this.listeners = {};\n    this.EVENTS = EVENTS;\n    Object.assign(this, pubSubServiceInterface);\n\n    this._init();\n  }\n\n  onModeExit() {\n    this.destroy();\n  }\n\n  private _init() {\n    eventTarget.addEventListener(Enums.Events.TOOL_ACTIVATED, this._onToolActivated);\n  }\n\n  /**\n   * Retrieves a tool group from the ToolGroupManager by tool group ID.\n   * If no tool group ID is provided, it retrieves the tool group of the active viewport.\n   * @param toolGroupId - Optional ID of the tool group to retrieve.\n   * @returns The tool group or undefined if it is not found.\n   */\n  public getToolGroup(toolGroupId?: string): Types.IToolGroup | void {\n    let toolGroupIdToUse = toolGroupId;\n\n    if (!toolGroupIdToUse) {\n      // Use the active viewport's tool group if no tool group id is provided\n      const enabledElement = getActiveViewportEnabledElement(this.viewportGridService);\n\n      if (!enabledElement) {\n        return;\n      }\n\n      const { renderingEngineId, viewportId } = enabledElement;\n      const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n\n      if (!toolGroup) {\n        console.warn(\n          'No tool group found for viewportId:',\n          viewportId,\n          'and renderingEngineId:',\n          renderingEngineId\n        );\n        return;\n      }\n\n      toolGroupIdToUse = toolGroup.id;\n    }\n\n    const toolGroup = ToolGroupManager.getToolGroup(toolGroupIdToUse);\n    return toolGroup;\n  }\n\n  public getToolGroupIds(): string[] {\n    return Array.from(this.toolGroupIds);\n  }\n\n  public getToolGroupForViewport(viewportId: string): Types.IToolGroup | void {\n    const renderingEngine = this.cornerstoneViewportService.getRenderingEngine();\n    return ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngine.id);\n  }\n\n  public getActiveToolForViewport(viewportId: string): string {\n    const toolGroup = this.getToolGroupForViewport(viewportId);\n    if (!toolGroup) {\n      return;\n    }\n\n    return toolGroup.getActivePrimaryMouseButtonTool();\n  }\n\n  public destroy(): void {\n    ToolGroupManager.destroy();\n    this.toolGroupIds = new Set();\n\n    eventTarget.removeEventListener(Enums.Events.TOOL_ACTIVATED, this._onToolActivated);\n  }\n\n  public destroyToolGroup(toolGroupId: string): void {\n    ToolGroupManager.destroyToolGroup(toolGroupId);\n    this.toolGroupIds.delete(toolGroupId);\n  }\n\n  public removeViewportFromToolGroup(\n    viewportId: string,\n    renderingEngineId: string,\n    deleteToolGroupIfEmpty?: boolean\n  ): void {\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n\n    if (!toolGroup) {\n      return;\n    }\n\n    toolGroup.removeViewports(renderingEngineId, viewportId);\n\n    const viewportIds = toolGroup.getViewportIds();\n\n    if (viewportIds.length === 0 && deleteToolGroupIfEmpty) {\n      ToolGroupManager.destroyToolGroup(toolGroup.id);\n    }\n  }\n\n  public addViewportToToolGroup(\n    viewportId: string,\n    renderingEngineId: string,\n    toolGroupId?: string\n  ): void {\n    if (!toolGroupId) {\n      // If toolGroupId is not provided, add the viewport to all toolGroups\n      const toolGroups = ToolGroupManager.getAllToolGroups();\n      toolGroups.forEach(toolGroup => {\n        toolGroup.addViewport(viewportId, renderingEngineId);\n      });\n    } else {\n      let toolGroup = ToolGroupManager.getToolGroup(toolGroupId);\n      if (!toolGroup) {\n        toolGroup = this.createToolGroup(toolGroupId);\n      }\n\n      toolGroup.addViewport(viewportId, renderingEngineId);\n    }\n\n    this._broadcastEvent(EVENTS.VIEWPORT_ADDED, {\n      viewportId,\n      toolGroupId,\n    });\n  }\n\n  public createToolGroup(toolGroupId: string): Types.IToolGroup {\n    if (this.getToolGroup(toolGroupId)) {\n      throw new Error(`ToolGroup ${toolGroupId} already exists`);\n    }\n\n    // if the toolGroup doesn't exist, create it\n    const toolGroup = ToolGroupManager.createToolGroup(toolGroupId);\n    this.toolGroupIds.add(toolGroupId);\n\n    this._broadcastEvent(EVENTS.TOOLGROUP_CREATED, {\n      toolGroupId,\n    });\n\n    return toolGroup;\n  }\n\n  public addToolsToToolGroup(toolGroupId: string, tools: Array<Tool>, configs: any = {}): void {\n    const toolGroup = ToolGroupManager.getToolGroup(toolGroupId);\n    // this.changeConfigurationIfNecessary(toolGroup, volumeId);\n    this._addTools(toolGroup, tools, configs);\n    this._setToolsMode(toolGroup, tools);\n  }\n\n  public createToolGroupAndAddTools(toolGroupId: string, tools: Array<Tool>): Types.IToolGroup {\n    const toolGroup = this.createToolGroup(toolGroupId);\n    this.addToolsToToolGroup(toolGroupId, tools);\n    return toolGroup;\n  }\n  /**\n   * Get the tool's configuration based on the tool name and tool group id\n   * @param toolGroupId - The id of the tool group that the tool instance belongs to.\n   * @param toolName - The name of the tool\n   * @returns The configuration of the tool.\n   */\n  public getToolConfiguration(toolGroupId: string, toolName: string) {\n    const toolGroup = ToolGroupManager.getToolGroup(toolGroupId);\n    if (!toolGroup) {\n      return null;\n    }\n\n    const tool = toolGroup.getToolInstance(toolName);\n    if (!tool) {\n      return null;\n    }\n\n    return tool.configuration;\n  }\n\n  /**\n   * Set the tool instance configuration. This will update the tool instance configuration\n   * on the toolGroup\n   * @param toolGroupId - The id of the tool group that the tool instance belongs to.\n   * @param toolName - The name of the tool\n   * @param config - The configuration object that you want to set.\n   */\n  public setToolConfiguration(toolGroupId, toolName, config) {\n    const toolGroup = ToolGroupManager.getToolGroup(toolGroupId);\n    const toolInstance = toolGroup.getToolInstance(toolName);\n    toolInstance.configuration = config;\n  }\n\n  public getActivePrimaryMouseButtonTool(toolGroupId?: string): string {\n    return this.getToolGroup(toolGroupId)?.getActivePrimaryMouseButtonTool();\n  }\n\n  private _setToolsMode(toolGroup, tools) {\n    const { active, passive, enabled, disabled } = tools;\n\n    if (active) {\n      active.forEach(({ toolName, bindings }) => {\n        toolGroup.setToolActive(toolName, { bindings });\n      });\n    }\n\n    if (passive) {\n      passive.forEach(({ toolName }) => {\n        toolGroup.setToolPassive(toolName);\n      });\n    }\n\n    if (enabled) {\n      enabled.forEach(({ toolName }) => {\n        toolGroup.setToolEnabled(toolName);\n      });\n    }\n\n    if (disabled) {\n      disabled.forEach(({ toolName }) => {\n        toolGroup.setToolDisabled(toolName);\n      });\n    }\n  }\n\n  private _addTools(toolGroup, tools) {\n    const addTools = tools => {\n      tools.forEach(({ toolName, parentTool, configuration }) => {\n        if (parentTool) {\n          toolGroup.addToolInstance(toolName, parentTool, {\n            ...configuration,\n          });\n        } else {\n          toolGroup.addTool(toolName, { ...configuration });\n        }\n      });\n    };\n\n    if (tools.active) {\n      addTools(tools.active);\n    }\n\n    if (tools.passive) {\n      addTools(tools.passive);\n    }\n\n    if (tools.enabled) {\n      addTools(tools.enabled);\n    }\n\n    if (tools.disabled) {\n      addTools(tools.disabled);\n    }\n  }\n\n  private _onToolActivated = (evt: Types.EventTypes.ToolActivatedEventType) => {\n    const { toolGroupId, toolName, toolBindingsOptions } = evt.detail;\n    const isPrimaryTool = toolBindingsOptions.bindings?.some(\n      binding => binding.mouseButton === Enums.MouseBindings.Primary\n    );\n\n    const callbackProps = {\n      toolGroupId,\n      toolName,\n      toolBindingsOptions,\n    };\n\n    this._broadcastEvent(EVENTS.TOOL_ACTIVATED, callbackProps);\n\n    if (isPrimaryTool) {\n      this._broadcastEvent(EVENTS.PRIMARY_TOOL_ACTIVATED, callbackProps);\n    }\n  };\n}\n","import ToolGroupService from './ToolGroupService';\n\nexport default ToolGroupService;\n","import { synchronizers, SynchronizerManager, Synchronizer } from '@cornerstonejs/tools';\nimport { getRenderingEngines, utilities } from '@cornerstonejs/core';\n\nimport { pubSubServiceInterface, Types, ServicesManager } from '@ohif/core';\n\nconst EVENTS = {\n  TOOL_GROUP_CREATED: 'event::cornerstone::syncgroupservice:toolgroupcreated',\n};\n\n/**\n * @params options - are an optional set of options associated with the first\n * sync group declared.\n */\nexport type SyncCreator = (id: string, options?: Record<string, unknown>) => Synchronizer;\n\nexport type SyncGroup = {\n  type: string;\n  id?: string;\n  // Source and target default to true if not specified\n  source?: boolean;\n  target?: boolean;\n  options?: Record<string, unknown>;\n};\n\nconst POSITION = 'cameraposition';\nconst VOI = 'voi';\nconst ZOOMPAN = 'zoompan';\nconst STACKIMAGE = 'stackimage';\nconst IMAGE_SLICE = 'imageslice';\n\nconst asSyncGroup = (syncGroup: string | SyncGroup): SyncGroup =>\n  typeof syncGroup === 'string' ? { type: syncGroup } : syncGroup;\n\nexport default class SyncGroupService {\n  static REGISTRATION = {\n    name: 'syncGroupService',\n    altName: 'SyncGroupService',\n    create: ({ servicesManager }: Types.Extensions.ExtensionParams): SyncGroupService => {\n      return new SyncGroupService(servicesManager);\n    },\n  };\n\n  servicesManager: ServicesManager;\n  listeners: { [key: string]: (...args: any[]) => void } = {};\n  EVENTS: { [key: string]: string };\n  synchronizerCreators: Record<string, SyncCreator> = {\n    [POSITION]: synchronizers.createCameraPositionSynchronizer,\n    [VOI]: synchronizers.createVOISynchronizer,\n    [ZOOMPAN]: synchronizers.createZoomPanSynchronizer,\n    // todo: remove stack image since it is legacy now and the image_slice\n    // handles both stack and volume viewports\n    [STACKIMAGE]: synchronizers.createImageSliceSynchronizer,\n    [IMAGE_SLICE]: synchronizers.createImageSliceSynchronizer,\n  };\n\n  synchronizersByType: { [key: string]: Synchronizer[] } = {};\n\n  constructor(serviceManager: ServicesManager) {\n    this.servicesManager = serviceManager;\n    this.listeners = {};\n    this.EVENTS = EVENTS;\n    //\n    Object.assign(this, pubSubServiceInterface);\n  }\n\n  private _createSynchronizer(type: string, id: string, options): Synchronizer | undefined {\n    // Initialize if not already done\n    this.synchronizersByType[type] = this.synchronizersByType[type] || [];\n\n    const syncCreator = this.synchronizerCreators[type.toLowerCase()];\n\n    if (syncCreator) {\n      const synchronizer = syncCreator(id, options);\n\n      if (synchronizer) {\n        this.synchronizersByType[type].push(synchronizer);\n        return synchronizer;\n      }\n    } else {\n      console.warn(`Unknown synchronizer type: ${type}, id: ${id}`);\n    }\n  }\n\n  public getSyncCreatorForType(type: string): SyncCreator {\n    return this.synchronizerCreators[type.toLowerCase()];\n  }\n\n  /**\n   * Creates a synchronizer type.\n   * @param type is the type of the synchronizer to create\n   * @param creator\n   */\n  public addSynchronizerType(type: string, creator: SyncCreator): void {\n    this.synchronizerCreators[type.toLowerCase()] = creator;\n  }\n\n  public getSynchronizer(id: string): Synchronizer | void {\n    return SynchronizerManager.getSynchronizer(id);\n  }\n\n  /**\n   * Retrieves an array of synchronizers of a specific type.\n   * @param type - The type of synchronizers to retrieve.\n   * @returns An array of synchronizers of the specified type.\n   */\n  public getSynchronizersOfType(type: string): Synchronizer[] {\n    return this.synchronizersByType[type];\n  }\n\n  protected _getOrCreateSynchronizer(\n    type: string,\n    id: string,\n    options: Record<string, unknown>\n  ): Synchronizer | undefined {\n    let synchronizer = SynchronizerManager.getSynchronizer(id);\n\n    if (!synchronizer) {\n      synchronizer = this._createSynchronizer(type, id, options);\n    }\n    return synchronizer;\n  }\n\n  public addViewportToSyncGroup(\n    viewportId: string,\n    renderingEngineId: string,\n    syncGroups?: SyncGroup | string | SyncGroup[] | string[]\n  ): void {\n    if (!syncGroups) {\n      return;\n    }\n\n    const syncGroupsArray = Array.isArray(syncGroups) ? syncGroups : [syncGroups];\n\n    syncGroupsArray.forEach(syncGroup => {\n      const syncGroupObj = asSyncGroup(syncGroup);\n      const { type, target = true, source = true, options = {}, id = type } = syncGroupObj;\n\n      const synchronizer = this._getOrCreateSynchronizer(type, id, options);\n      synchronizer.setOptions(viewportId, options);\n\n      const viewportInfo = { viewportId, renderingEngineId };\n      if (target && source) {\n        synchronizer.add(viewportInfo);\n        return;\n      } else if (source) {\n        synchronizer.addSource(viewportInfo);\n      } else if (target) {\n        synchronizer.addTarget(viewportInfo);\n      }\n    });\n  }\n\n  public destroy(): void {\n    SynchronizerManager.destroy();\n  }\n\n  public getSynchronizersForViewport(viewportId: string): Synchronizer[] {\n    const renderingEngine =\n      getRenderingEngines().find(re => {\n        return re.getViewports().find(vp => vp.id === viewportId);\n      }) || getRenderingEngines()[0];\n\n    const synchronizers = SynchronizerManager.getAllSynchronizers();\n    return synchronizers.filter(\n      s =>\n        s.hasSourceViewport(renderingEngine.id, viewportId) ||\n        s.hasTargetViewport(renderingEngine.id, viewportId)\n    );\n  }\n\n  public removeViewportFromSyncGroup(\n    viewportId: string,\n    renderingEngineId: string,\n    syncGroupId?: string\n  ): void {\n    const synchronizers = SynchronizerManager.getAllSynchronizers();\n\n    const filteredSynchronizers = syncGroupId\n      ? synchronizers.filter(s => s.id === syncGroupId)\n      : synchronizers;\n\n    filteredSynchronizers.forEach(synchronizer => {\n      if (!synchronizer) {\n        return;\n      }\n\n      // Only image slice synchronizer register spatial registration\n      if (this.isImageSliceSyncronizer(synchronizer)) {\n        this.unRegisterSpatialRegistration(synchronizer);\n      }\n\n      synchronizer.remove({\n        viewportId,\n        renderingEngineId,\n      });\n\n      // check if any viewport is left in any of the sync groups, if not, delete that sync group\n      const sourceViewports = synchronizer.getSourceViewports();\n      const targetViewports = synchronizer.getTargetViewports();\n\n      if (!sourceViewports.length && !targetViewports.length) {\n        SynchronizerManager.destroySynchronizer(synchronizer.id);\n      }\n    });\n  }\n  /**\n   * Clean up the spatial registration metadata created by synchronizer\n   * This is needed to be able to re-sync images slices if needed\n   * @param synchronizer\n   */\n  unRegisterSpatialRegistration(synchronizer: Synchronizer) {\n    const sourceViewports = synchronizer.getSourceViewports().map(vp => vp.viewportId);\n    const targetViewports = synchronizer.getTargetViewports().map(vp => vp.viewportId);\n\n    // Create an array of pair of viewports to remove from spatialRegistrationMetadataProvider\n    // All sourceViewports combined with all targetViewports\n    const toUnregister = sourceViewports\n      .map((sourceViewportId: string) => {\n        return targetViewports.map(targetViewportId => [targetViewportId, sourceViewportId]);\n      })\n      .reduce((acc, c) => acc.concat(c), []);\n\n    toUnregister.forEach(viewportIdPair => {\n      utilities.spatialRegistrationMetadataProvider.add(viewportIdPair, undefined);\n    });\n  }\n  /**\n   * Check if the synchronizer type is IMAGE_SLICE\n   * Need to convert to lowercase here because the types are lowercase\n   * e.g: synchronizerCreators\n   * @param synchronizer\n   */\n  isImageSliceSyncronizer(synchronizer: Synchronizer) {\n    return this.getSynchronizerType(synchronizer).toLowerCase() === IMAGE_SLICE;\n  }\n  /**\n   * Returns the syncronizer type\n   * @param synchronizer\n   */\n  getSynchronizerType(synchronizer: Synchronizer): string {\n    const synchronizerTypes = Object.keys(this.synchronizersByType);\n    const syncType = synchronizerTypes.find(syncType =>\n      this.getSynchronizersOfType(syncType).includes(synchronizer)\n    );\n    return syncType;\n  }\n}\n","import SyncGroupService from './SyncGroupService';\n\nexport default SyncGroupService;\n","/**\n * It is a bell curved function that uses ease in out quadratic for css\n * transition timing function for each side of the curve.\n *\n * @param {number} x - The current time, in the range [0, 1].\n * @param {number} baseline - The baseline value to start from and return to.\n * @returns the value of the transition at time x.\n */\nexport function easeInOutBell(x: number, baseline: number): number {\n  const alpha = 1 - baseline;\n\n  // prettier-ignore\n  if (x < 1 / 4) {\n    return  4 * Math.pow(2 * x, 3) * alpha + baseline;\n  } else if (x < 1 / 2) {\n    return (1 - Math.pow(-4 * x + 2, 3) / 2) * alpha + baseline;\n  } else if (x < 3 / 4) {\n    return (1 - Math.pow(4 * x - 2, 3) / 2) * alpha + baseline;\n  } else {\n    return (- 4 * Math.pow(2 * x - 2, 3)) * alpha + baseline;\n  }\n}\n\n/**\n * A reversed bell curved function that starts from 1 and goes to baseline and\n * come back to 1 again. It uses ease in out quadratic for css transition\n * timing function for each side of the curve.\n *\n * @param {number} x - The current time, in the range [0, 1].\n * @param {number} baseline - The baseline value to start from and return to.\n * @returns the value of the transition at time x.\n */\nexport function reverseEaseInOutBell(x: number, baseline: number): number {\n  const y = easeInOutBell(x, baseline);\n  return -y + 1 + baseline;\n}\n","import { Types as OhifTypes, ServicesManager, PubSubService } from '@ohif/core';\nimport {\n  cache,\n  Enums as csEnums,\n  geometryLoader,\n  eventTarget,\n  getEnabledElementByIds,\n  utilities as csUtils,\n  volumeLoader,\n} from '@cornerstonejs/core';\nimport {\n  Enums as csToolsEnums,\n  segmentation as cstSegmentation,\n  Types as cstTypes,\n  utilities as cstUtils,\n} from '@cornerstonejs/tools';\nimport isEqual from 'lodash.isequal';\nimport { Types as ohifTypes } from '@ohif/core';\nimport { easeInOutBell, reverseEaseInOutBell } from '../../utils/transitions';\nimport { Segment, Segmentation, SegmentationConfig } from './SegmentationServiceTypes';\nimport { mapROIContoursToRTStructData } from './RTSTRUCT/mapROIContoursToRTStructData';\n\nconst LABELMAP = csToolsEnums.SegmentationRepresentations.Labelmap;\nconst CONTOUR = csToolsEnums.SegmentationRepresentations.Contour;\n\nconst EVENTS = {\n  // fired when the segmentation is updated (e.g. when a segment is added, removed, or modified, locked, visibility changed etc.)\n  SEGMENTATION_UPDATED: 'event::segmentation_updated',\n  // fired when the segmentation data (e.g., labelmap pixels) is modified\n  SEGMENTATION_DATA_MODIFIED: 'event::segmentation_data_modified',\n  // fired when the segmentation is added to the cornerstone\n  SEGMENTATION_ADDED: 'event::segmentation_added',\n  // fired when the segmentation is removed\n  SEGMENTATION_REMOVED: 'event::segmentation_removed',\n  // fired when the configuration for the segmentation is changed (e.g., brush size, render fill, outline thickness, etc.)\n  SEGMENTATION_CONFIGURATION_CHANGED: 'event::segmentation_configuration_changed',\n  // fired when the active segment is loaded in SEG or RTSTRUCT\n  SEGMENT_LOADING_COMPLETE: 'event::segment_loading_complete',\n  // loading completed for all segments\n  SEGMENTATION_LOADING_COMPLETE: 'event::segmentation_loading_complete',\n};\n\nconst VALUE_TYPES = {};\n\nconst SEGMENT_CONSTANT = {\n  opacity: 255,\n  isVisible: true,\n  isLocked: false,\n};\n\nconst VOLUME_LOADER_SCHEME = 'cornerstoneStreamingImageVolume';\n\nclass SegmentationService extends PubSubService {\n  static REGISTRATION = {\n    name: 'segmentationService',\n    altName: 'SegmentationService',\n    create: ({ servicesManager }: OhifTypes.Extensions.ExtensionParams): SegmentationService => {\n      return new SegmentationService({ servicesManager });\n    },\n  };\n\n  segmentations: Record<string, Segmentation>;\n  readonly servicesManager: ServicesManager;\n  highlightIntervalId = null;\n  readonly EVENTS = EVENTS;\n\n  constructor({ servicesManager }) {\n    super(EVENTS);\n    this.segmentations = {};\n\n    this.servicesManager = servicesManager;\n\n    this._initSegmentationService();\n  }\n\n  public destroy = () => {\n    eventTarget.removeEventListener(\n      csToolsEnums.Events.SEGMENTATION_MODIFIED,\n      this._onSegmentationModifiedFromSource\n    );\n\n    eventTarget.removeEventListener(\n      csToolsEnums.Events.SEGMENTATION_DATA_MODIFIED,\n      this._onSegmentationDataModified\n    );\n\n    // remove the segmentations from the cornerstone\n    Object.keys(this.segmentations).forEach(segmentationId => {\n      this._removeSegmentationFromCornerstone(segmentationId);\n    });\n\n    this.segmentations = {};\n    this.listeners = {};\n  };\n\n  /**\n   * Adds a new segment to the specified segmentation.\n   * @param segmentationId - The ID of the segmentation to add the segment to.\n   * @param config - An object containing the configuration options for the new segment.\n   *   - segmentIndex: (optional) The index of the segment to add. If not provided, the next available index will be used.\n   *   - toolGroupId: (optional) The ID of the tool group to associate the new segment with. If not provided, the first available tool group will be used.\n   *   - properties: (optional) An object containing the properties of the new segment.\n   *     - label: (optional) The label of the new segment. If not provided, a default label will be used.\n   *     - color: (optional) The color of the new segment in RGB format. If not provided, a default color will be used.\n   *     - opacity: (optional) The opacity of the new segment. If not provided, a default opacity will be used.\n   *     - visibility: (optional) Whether the new segment should be visible. If not provided, the segment will be visible by default.\n   *     - isLocked: (optional) Whether the new segment should be locked for editing. If not provided, the segment will not be locked by default.\n   *     - active: (optional) Whether the new segment should be the active segment to be edited. If not provided, the segment will not be active by default.\n   */\n  public addSegment(\n    segmentationId: string,\n    config: {\n      segmentIndex?: number;\n      toolGroupId?: string;\n      properties?: {\n        label?: string;\n        color?: ohifTypes.RGB;\n        opacity?: number;\n        visibility?: boolean;\n        isLocked?: boolean;\n        active?: boolean;\n      };\n    } = {}\n  ): void {\n    if (config?.segmentIndex === 0) {\n      throw new Error('Segment index 0 is reserved for \"no label\"');\n    }\n\n    const toolGroupId = config.toolGroupId ?? this._getApplicableToolGroupId();\n\n    const { segmentationRepresentationUID, segmentation } = this._getSegmentationInfo(\n      segmentationId,\n      toolGroupId\n    );\n\n    let segmentIndex = config.segmentIndex;\n    if (!segmentIndex) {\n      // grab the next available segment index\n      segmentIndex = segmentation.segments.length === 0 ? 1 : segmentation.segments.length;\n    }\n\n    if (this._getSegmentInfo(segmentation, segmentIndex)) {\n      throw new Error(`Segment ${segmentIndex} already exists`);\n    }\n\n    const rgbaColor = cstSegmentation.config.color.getColorForSegmentIndex(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex\n    );\n\n    segmentation.segments[segmentIndex] = {\n      label: config.properties?.label ?? `Segment ${segmentIndex}`,\n      segmentIndex: segmentIndex,\n      color: [rgbaColor[0], rgbaColor[1], rgbaColor[2]],\n      opacity: rgbaColor[3],\n      isVisible: true,\n      isLocked: false,\n    };\n\n    segmentation.segmentCount++;\n\n    // make the newly added segment the active segment\n    this._setActiveSegment(segmentationId, segmentIndex);\n\n    const suppressEvents = true;\n    if (config.properties !== undefined) {\n      const { color: newColor, opacity, isLocked, visibility, active } = config.properties;\n\n      if (newColor !== undefined) {\n        this._setSegmentColor(segmentationId, segmentIndex, newColor, toolGroupId, suppressEvents);\n      }\n\n      if (opacity !== undefined) {\n        this._setSegmentOpacity(segmentationId, segmentIndex, opacity, toolGroupId, suppressEvents);\n      }\n\n      if (visibility !== undefined) {\n        this._setSegmentVisibility(\n          segmentationId,\n          segmentIndex,\n          visibility,\n          toolGroupId,\n          suppressEvents\n        );\n      }\n\n      if (active === true) {\n        this._setActiveSegment(segmentationId, segmentIndex, suppressEvents);\n      }\n\n      if (isLocked !== undefined) {\n        this._setSegmentLocked(segmentationId, segmentIndex, isLocked, suppressEvents);\n      }\n    }\n\n    if (segmentation.activeSegmentIndex === null) {\n      this._setActiveSegment(segmentationId, segmentIndex, suppressEvents);\n    }\n\n    // Todo: this includes non-hydrated segmentations which might not be\n    // persisted in the store\n    this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n      segmentation,\n    });\n  }\n\n  public removeSegment(segmentationId: string, segmentIndex: number): void {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    if (segmentIndex === 0) {\n      throw new Error('Segment index 0 is reserved for \"no label\"');\n    }\n\n    if (!this._getSegmentInfo(segmentation, segmentIndex)) {\n      return;\n    }\n\n    segmentation.segmentCount--;\n\n    segmentation.segments[segmentIndex] = null;\n\n    // Get volume and delete the labels\n    // Todo: handle other segmentations other than labelmap\n    const labelmapVolume = this.getLabelmapVolume(segmentationId);\n\n    const { dimensions } = labelmapVolume;\n    const scalarData = labelmapVolume.getScalarData();\n\n    // Set all values of this segment to zero and get which frames have been edited.\n    const frameLength = dimensions[0] * dimensions[1];\n    const numFrames = dimensions[2];\n\n    let voxelIndex = 0;\n\n    const modifiedFrames = new Set() as Set<number>;\n\n    for (let frame = 0; frame < numFrames; frame++) {\n      for (let p = 0; p < frameLength; p++) {\n        if (scalarData[voxelIndex] === segmentIndex) {\n          scalarData[voxelIndex] = 0;\n          modifiedFrames.add(frame);\n        }\n\n        voxelIndex++;\n      }\n    }\n\n    const modifiedFramesArray: number[] = Array.from(modifiedFrames);\n\n    // Trigger texture update of modified segmentation frames.\n    cstSegmentation.triggerSegmentationEvents.triggerSegmentationDataModified(\n      segmentationId,\n      modifiedFramesArray\n    );\n\n    if (segmentation.activeSegmentIndex === segmentIndex) {\n      const segmentIndices = Object.keys(segmentation.segments);\n\n      const newActiveSegmentIndex = segmentIndices.length ? Number(segmentIndices[0]) : 1;\n\n      this._setActiveSegment(segmentationId, newActiveSegmentIndex, true);\n    }\n\n    this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n      segmentation,\n    });\n  }\n\n  public setSegmentVisibility(\n    segmentationId: string,\n    segmentIndex: number,\n    isVisible: boolean,\n    toolGroupId?: string,\n    suppressEvents = false\n  ): void {\n    this._setSegmentVisibility(\n      segmentationId,\n      segmentIndex,\n      isVisible,\n      toolGroupId,\n      suppressEvents\n    );\n  }\n\n  public setSegmentLocked(segmentationId: string, segmentIndex: number, isLocked: boolean): void {\n    const suppressEvents = false;\n    this._setSegmentLocked(segmentationId, segmentIndex, isLocked, suppressEvents);\n  }\n\n  /**\n   * Toggles the locked state of a segment in a segmentation.\n   * @param segmentationId - The ID of the segmentation.\n   * @param segmentIndex - The index of the segment to toggle.\n   */\n  public toggleSegmentLocked(segmentationId: string, segmentIndex: number): void {\n    const segmentation = this.getSegmentation(segmentationId);\n    const segment = this._getSegmentInfo(segmentation, segmentIndex);\n    const isLocked = !segment.isLocked;\n    this._setSegmentLocked(segmentationId, segmentIndex, isLocked);\n  }\n\n  public setSegmentColor(\n    segmentationId: string,\n    segmentIndex: number,\n    color: ohifTypes.RGB,\n    toolGroupId?: string\n  ): void {\n    this._setSegmentColor(segmentationId, segmentIndex, color, toolGroupId);\n  }\n\n  public setSegmentRGBA = (\n    segmentationId: string,\n    segmentIndex: number,\n    rgbaColor: cstTypes.Color,\n    toolGroupId?: string\n  ): void => {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    const suppressEvents = true;\n    this._setSegmentOpacity(\n      segmentationId,\n      segmentIndex,\n      rgbaColor[3],\n      toolGroupId,\n      suppressEvents\n    );\n\n    this._setSegmentColor(\n      segmentationId,\n      segmentIndex,\n      [rgbaColor[0], rgbaColor[1], rgbaColor[2]],\n      toolGroupId,\n      suppressEvents\n    );\n\n    this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n      segmentation,\n    });\n  };\n\n  public setSegmentOpacity(\n    segmentationId: string,\n    segmentIndex: number,\n    opacity: number,\n    toolGroupId?: string\n  ): void {\n    this._setSegmentOpacity(segmentationId, segmentIndex, opacity, toolGroupId);\n  }\n\n  public setActiveSegmentationForToolGroup(segmentationId: string, toolGroupId?: string): void {\n    toolGroupId = toolGroupId ?? this._getApplicableToolGroupId();\n\n    const suppressEvents = false;\n    this._setActiveSegmentationForToolGroup(segmentationId, toolGroupId, suppressEvents);\n  }\n\n  public setActiveSegment(segmentationId: string, segmentIndex: number): void {\n    this._setActiveSegment(segmentationId, segmentIndex, false);\n  }\n\n  /**\n   * Get all segmentations.\n   *\n   * * @param filterNonHydratedSegmentations - If true, only return hydrated segmentations\n   * hydrated segmentations are those that have been loaded and persisted\n   * in the state, but non hydrated segmentations are those that are\n   * only created for the SEG displayset (SEG viewport) and the user might not\n   * have loaded them yet fully.\n   *\n\n   * @return Array of segmentations\n   */\n  public getSegmentations(filterNonHydratedSegmentations = true): Segmentation[] {\n    const segmentations = this._getSegmentations();\n\n    return (\n      segmentations &&\n      segmentations.filter(segmentation => {\n        return !filterNonHydratedSegmentations || segmentation.hydrated;\n      })\n    );\n  }\n\n  private _getSegmentations(): Segmentation[] {\n    const segmentations = this.arrayOfObjects(this.segmentations);\n    return segmentations && segmentations.map(m => this.segmentations[Object.keys(m)[0]]);\n  }\n\n  public getActiveSegmentation(): Segmentation {\n    const segmentations = this.getSegmentations();\n\n    return segmentations.find(segmentation => segmentation.isActive);\n  }\n\n  public getActiveSegment() {\n    const activeSegmentation = this.getActiveSegmentation();\n    const { activeSegmentIndex, segments } = activeSegmentation;\n\n    if (activeSegmentIndex === null) {\n      return;\n    }\n\n    return segments[activeSegmentIndex];\n  }\n\n  /**\n   * Get specific segmentation by its id.\n   *\n   * @param segmentationId If of the segmentation\n   * @return segmentation instance\n   */\n  public getSegmentation(segmentationId: string): Segmentation {\n    return this.segmentations[segmentationId];\n  }\n\n  public addOrUpdateSegmentation(\n    segmentation: Segmentation,\n    suppressEvents = false,\n    notYetUpdatedAtSource = false\n  ): string {\n    const { id: segmentationId } = segmentation;\n    let cachedSegmentation = this.segmentations[segmentationId];\n    if (cachedSegmentation) {\n      // Update the segmentation (mostly for assigning metadata/labels)\n      Object.assign(cachedSegmentation, segmentation);\n\n      this._updateCornerstoneSegmentations({\n        segmentationId,\n        notYetUpdatedAtSource,\n      });\n\n      if (!suppressEvents) {\n        this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n          segmentation: cachedSegmentation,\n        });\n      }\n\n      return segmentationId;\n    }\n\n    const representationType = segmentation.type;\n    const representationData = segmentation.representationData[representationType];\n    cstSegmentation.addSegmentations([\n      {\n        segmentationId,\n        representation: {\n          type: representationType,\n          data: {\n            ...representationData,\n          },\n        },\n      },\n    ]);\n\n    this.segmentations[segmentationId] = {\n      ...segmentation,\n      label: segmentation.label || '',\n      segments: segmentation.segments || [null],\n      activeSegmentIndex: segmentation.activeSegmentIndex ?? null,\n      segmentCount: segmentation.segmentCount ?? 0,\n      isActive: false,\n      isVisible: true,\n    };\n\n    cachedSegmentation = this.segmentations[segmentationId];\n\n    this._updateCornerstoneSegmentations({\n      segmentationId,\n      notYetUpdatedAtSource: true,\n    });\n\n    if (!suppressEvents) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_ADDED, {\n        segmentation: cachedSegmentation,\n      });\n    }\n\n    return cachedSegmentation.id;\n  }\n\n  public async createSegmentationForSEGDisplaySet(\n    segDisplaySet,\n    segmentationId?: string,\n    suppressEvents = false\n  ): Promise<string> {\n    // Todo: we only support creating labelmap for SEG displaySets for now\n    const representationType = LABELMAP;\n\n    segmentationId = segmentationId ?? segDisplaySet.displaySetInstanceUID;\n\n    const defaultScheme = this._getDefaultSegmentationScheme();\n\n    const segmentation: Segmentation = {\n      ...defaultScheme,\n      id: segmentationId,\n      displaySetInstanceUID: segDisplaySet.displaySetInstanceUID,\n      type: representationType,\n      label: segDisplaySet.SeriesDescription,\n      representationData: {\n        [LABELMAP]: {\n          volumeId: segmentationId,\n          referencedVolumeId: segDisplaySet.referencedVolumeId,\n        },\n      },\n    };\n\n    const labelmap = this.getLabelmapVolume(segmentationId);\n    const cachedSegmentation = this.getSegmentation(segmentationId);\n    if (labelmap && cachedSegmentation) {\n      // if the labelmap with the same segmentationId already exists, we can\n      // just assume that the segmentation is already created and move on with\n      // updating the state\n      return this.addOrUpdateSegmentation(\n        Object.assign(segmentation, cachedSegmentation),\n        suppressEvents\n      );\n    }\n\n    const { labelmapBufferArray, referencedVolumeId } = segDisplaySet;\n\n    if (!labelmapBufferArray || !referencedVolumeId) {\n      throw new Error('No labelmapBufferArray or referencedVolumeId found for the SEG displaySet');\n    }\n\n    // if the labelmap doesn't exist, we need to create it first from the\n    // DICOM SEG displaySet data\n    const referencedVolume = cache.getVolume(referencedVolumeId);\n\n    if (!referencedVolume) {\n      throw new Error(`No volume found for referencedVolumeId: ${referencedVolumeId}`);\n    }\n\n    // Force use of a Uint8Array SharedArrayBuffer for the segmentation to save space and so\n    // it is easily compressible in worker thread.\n    const derivedVolume = await volumeLoader.createAndCacheDerivedVolume(referencedVolumeId, {\n      volumeId: segmentationId,\n      targetBuffer: {\n        type: 'Uint8Array',\n        sharedArrayBuffer: window.SharedArrayBuffer,\n      },\n    });\n    const derivedVolumeScalarData = derivedVolume.getScalarData();\n\n    const segmentsInfo = segDisplaySet.segMetadata.data;\n    derivedVolumeScalarData.set(new Uint8Array(labelmapBufferArray[0]));\n\n    segmentation.segments = segmentsInfo.map((segmentInfo, segmentIndex) => {\n      if (segmentIndex === 0) {\n        return;\n      }\n\n      const {\n        SegmentedPropertyCategoryCodeSequence,\n        SegmentNumber,\n        SegmentLabel,\n        SegmentAlgorithmType,\n        SegmentAlgorithmName,\n        SegmentedPropertyTypeCodeSequence,\n        rgba,\n      } = segmentInfo;\n\n      const { x, y, z } = segDisplaySet.centroids.get(segmentIndex);\n      const centerWorld = derivedVolume.imageData.indexToWorld([x, y, z]);\n\n      segmentation.cachedStats = {\n        ...segmentation.cachedStats,\n        segmentCenter: {\n          ...segmentation.cachedStats.segmentCenter,\n          [segmentIndex]: {\n            center: {\n              image: [x, y, z],\n              world: centerWorld,\n            },\n            modifiedTime: segDisplaySet.SeriesDate,\n          },\n        },\n      };\n\n      return {\n        label: SegmentLabel || `Segment ${SegmentNumber}`,\n        segmentIndex: Number(SegmentNumber),\n        category: SegmentedPropertyCategoryCodeSequence\n          ? SegmentedPropertyCategoryCodeSequence.CodeMeaning\n          : '',\n        type: SegmentedPropertyTypeCodeSequence\n          ? SegmentedPropertyTypeCodeSequence.CodeMeaning\n          : '',\n        algorithmType: SegmentAlgorithmType,\n        algorithmName: SegmentAlgorithmName,\n        color: rgba,\n        opacity: 255,\n        isVisible: true,\n        isLocked: false,\n      };\n    });\n\n    segmentation.segmentCount = segmentsInfo.length - 1;\n\n    segDisplaySet.isLoaded = true;\n\n    this._broadcastEvent(EVENTS.SEGMENTATION_LOADING_COMPLETE, {\n      segmentationId,\n      segDisplaySet,\n    });\n\n    return this.addOrUpdateSegmentation(segmentation, suppressEvents);\n  }\n\n  public async createSegmentationForRTDisplaySet(\n    rtDisplaySet,\n    segmentationId?: string,\n    suppressEvents = false\n  ): Promise<string> {\n    // Todo: we currently only have support for contour representation for initial\n    // RT display\n    const representationType = CONTOUR;\n    segmentationId = segmentationId ?? rtDisplaySet.displaySetInstanceUID;\n    const { structureSet } = rtDisplaySet;\n\n    if (!structureSet) {\n      throw new Error(\n        'To create the contours from RT displaySet, the displaySet should be loaded first, you can perform rtDisplaySet.load() before calling this method.'\n      );\n    }\n\n    const defaultScheme = this._getDefaultSegmentationScheme();\n    const rtDisplaySetUID = rtDisplaySet.displaySetInstanceUID;\n\n    const allRTStructData = mapROIContoursToRTStructData(structureSet, rtDisplaySetUID);\n\n    // sort by segmentIndex\n    allRTStructData.sort((a, b) => a.segmentIndex - b.segmentIndex);\n\n    const geometryIds = allRTStructData.map(({ geometryId }) => geometryId);\n\n    const segmentation: Segmentation = {\n      ...defaultScheme,\n      id: segmentationId,\n      displaySetInstanceUID: rtDisplaySetUID,\n      type: representationType,\n      label: rtDisplaySet.SeriesDescription,\n      representationData: {\n        [CONTOUR]: {\n          geometryIds,\n        },\n      },\n    };\n\n    const cachedSegmentation = this.getSegmentation(segmentationId);\n\n    if (cachedSegmentation) {\n      // if the labelmap with the same segmentationId already exists, we can\n      // just assume that the segmentation is already created and move on with\n      // updating the state\n      return this.addOrUpdateSegmentation(\n        Object.assign(segmentation, cachedSegmentation),\n        suppressEvents\n      );\n    }\n\n    if (!structureSet.ROIContours?.length) {\n      throw new Error(\n        'The structureSet does not contain any ROIContours. Please ensure the structureSet is loaded first.'\n      );\n    }\n    const segmentsCachedStats = {};\n    const initializeContour = async rtStructData => {\n      const { data, id, color, segmentIndex, geometryId } = rtStructData;\n\n      // catch error instead of failing to allow loading to continue\n      try {\n        const geometry = await geometryLoader.createAndCacheGeometry(geometryId, {\n          geometryData: {\n            data,\n            id,\n            color,\n            frameOfReferenceUID: structureSet.frameOfReferenceUID,\n            segmentIndex,\n          },\n          type: csEnums.GeometryType.CONTOUR,\n        });\n\n        const contourSet = geometry.data;\n        const centroid = contourSet.getCentroid();\n\n        segmentsCachedStats[segmentIndex] = {\n          center: { world: centroid },\n          modifiedTime: rtDisplaySet.SeriesDate, // we use the SeriesDate as the modifiedTime since this is the first time we are creating the segmentation\n        };\n\n        segmentation.segments[segmentIndex] = {\n          label: id,\n          segmentIndex,\n          color,\n          ...SEGMENT_CONSTANT,\n        };\n\n        const numInitialized = Object.keys(segmentsCachedStats).length;\n\n        // Calculate percentage completed\n        const percentComplete = Math.round((numInitialized / allRTStructData.length) * 100);\n\n        this._broadcastEvent(EVENTS.SEGMENT_LOADING_COMPLETE, {\n          percentComplete,\n          // Note: this is not the geometryIds length since there might be\n          // some missing ROINumbers\n          numSegments: allRTStructData.length,\n        });\n      } catch (e) {\n        console.warn(e);\n      }\n    };\n\n    const promiseArray = [];\n\n    for (let i = 0; i < allRTStructData.length; i++) {\n      const promise = new Promise<void>((resolve, reject) => {\n        setTimeout(() => {\n          initializeContour(allRTStructData[i]).then(() => {\n            resolve();\n          });\n        }, 0);\n      });\n\n      promiseArray.push(promise);\n    }\n\n    await Promise.all(promiseArray);\n\n    segmentation.segmentCount = allRTStructData.length;\n    rtDisplaySet.isLoaded = true;\n\n    segmentation.cachedStats = {\n      ...segmentation.cachedStats,\n      segmentCenter: {\n        ...segmentation.cachedStats.segmentCenter,\n        ...segmentsCachedStats,\n      },\n    };\n\n    this._broadcastEvent(EVENTS.SEGMENTATION_LOADING_COMPLETE, {\n      segmentationId,\n      rtDisplaySet,\n    });\n\n    return this.addOrUpdateSegmentation(segmentation, suppressEvents);\n  }\n\n  // Todo: this should not run on the main thread\n  public calculateCentroids = (\n    segmentationId: string,\n    segmentIndex?: number\n  ): Map<number, { x: number; y: number; z: number; world: number[] }> => {\n    const segmentation = this.getSegmentation(segmentationId);\n    const volume = this.getLabelmapVolume(segmentationId);\n    const { dimensions, imageData } = volume;\n    const scalarData = volume.getScalarData();\n    const [dimX, dimY, numFrames] = dimensions;\n    const frameLength = dimX * dimY;\n\n    const segmentIndices = segmentIndex\n      ? [segmentIndex]\n      : segmentation.segments\n          .filter(segment => segment?.segmentIndex)\n          .map(segment => segment.segmentIndex);\n\n    const segmentIndicesSet = new Set(segmentIndices);\n\n    const centroids = new Map();\n    for (const index of segmentIndicesSet) {\n      centroids.set(index, { x: 0, y: 0, z: 0, count: 0 });\n    }\n\n    let voxelIndex = 0;\n    for (let frame = 0; frame < numFrames; frame++) {\n      for (let p = 0; p < frameLength; p++) {\n        const segmentIndex = scalarData[voxelIndex++];\n        if (segmentIndicesSet.has(segmentIndex)) {\n          const centroid = centroids.get(segmentIndex);\n          centroid.x += p % dimX;\n          centroid.y += (p / dimX) | 0;\n          centroid.z += frame;\n          centroid.count++;\n        }\n      }\n    }\n\n    const result = new Map();\n    for (const [index, centroid] of centroids) {\n      const count = centroid.count;\n      const normalizedCentroid = {\n        x: centroid.x / count,\n        y: centroid.y / count,\n        z: centroid.z / count,\n      };\n      normalizedCentroid.world = imageData.indexToWorld([\n        normalizedCentroid.x,\n        normalizedCentroid.y,\n        normalizedCentroid.z,\n      ]);\n      result.set(index, normalizedCentroid);\n    }\n\n    this.setCentroids(segmentationId, result);\n    return result;\n  };\n\n  private setCentroids = (\n    segmentationId: string,\n    centroids: Map<number, { image: number[]; world?: number[] }>\n  ): void => {\n    const segmentation = this.getSegmentation(segmentationId);\n    const imageData = this.getLabelmapVolume(segmentationId).imageData; // Assuming this method returns imageData\n\n    if (!segmentation.cachedStats) {\n      segmentation.cachedStats = { segmentCenter: {} };\n    } else if (!segmentation.cachedStats.segmentCenter) {\n      segmentation.cachedStats.segmentCenter = {};\n    }\n\n    for (const [segmentIndex, centroid] of centroids) {\n      let world = centroid.world;\n\n      // If world coordinates are not provided, calculate them\n      if (!world || world.length === 0) {\n        world = imageData.indexToWorld(centroid.image);\n      }\n\n      segmentation.cachedStats.segmentCenter[segmentIndex] = {\n        center: {\n          image: centroid.image,\n          world: world,\n        },\n      };\n    }\n\n    this.addOrUpdateSegmentation(segmentation, true, true);\n  };\n\n  public jumpToSegmentCenter(\n    segmentationId: string,\n    segmentIndex: number,\n    toolGroupId?: string,\n    highlightAlpha = 0.9,\n    highlightSegment = true,\n    animationLength = 750,\n    highlightHideOthers = false,\n    highlightFunctionType = 'ease-in-out' // todo: make animation functions configurable from outside\n  ): void {\n    const { toolGroupService } = this.servicesManager.services;\n    const center = this._getSegmentCenter(segmentationId, segmentIndex);\n\n    if (!center?.world) {\n      return;\n    }\n\n    const { world } = center;\n\n    // todo: generalize\n    toolGroupId = toolGroupId || this._getToolGroupIdsWithSegmentation(segmentationId);\n\n    const toolGroups = [];\n\n    if (Array.isArray(toolGroupId)) {\n      toolGroupId.forEach(toolGroup => {\n        toolGroups.push(toolGroupService.getToolGroup(toolGroup));\n      });\n    } else {\n      toolGroups.push(toolGroupService.getToolGroup(toolGroupId));\n    }\n\n    toolGroups.forEach(toolGroup => {\n      const viewportsInfo = toolGroup.getViewportsInfo();\n\n      // @ts-ignore\n      for (const { viewportId, renderingEngineId } of viewportsInfo) {\n        const { viewport } = getEnabledElementByIds(viewportId, renderingEngineId);\n        cstUtils.viewport.jumpToWorld(viewport, world);\n      }\n\n      if (highlightSegment) {\n        this.highlightSegment(\n          segmentationId,\n          segmentIndex,\n          toolGroup.id,\n          highlightAlpha,\n          animationLength,\n          highlightHideOthers,\n          highlightFunctionType\n        );\n      }\n    });\n  }\n\n  public highlightSegment(\n    segmentationId: string,\n    segmentIndex: number,\n    toolGroupId?: string,\n    alpha = 0.9,\n    animationLength = 750,\n    hideOthers = true,\n    highlightFunctionType = 'ease-in-out'\n  ): void {\n    if (this.highlightIntervalId) {\n      clearInterval(this.highlightIntervalId);\n    }\n\n    const segmentation = this.getSegmentation(segmentationId);\n    toolGroupId = toolGroupId ?? this._getApplicableToolGroupId();\n\n    const segmentationRepresentation = this._getSegmentationRepresentation(\n      segmentationId,\n      toolGroupId\n    );\n\n    const { type } = segmentationRepresentation;\n    const { segments } = segmentation;\n\n    const highlightFn =\n      type === LABELMAP ? this._highlightLabelmap.bind(this) : this._highlightContour.bind(this);\n\n    const adjustedAlpha = type === LABELMAP ? alpha : 1 - alpha;\n\n    highlightFn(\n      segmentIndex,\n      adjustedAlpha,\n      hideOthers,\n      segments,\n      toolGroupId,\n      animationLength,\n      segmentationRepresentation\n    );\n  }\n\n  public createSegmentationForDisplaySet = async (\n    displaySetInstanceUID: string,\n    options?: {\n      segmentationId: string;\n      FrameOfReferenceUID: string;\n      label: string;\n    }\n  ): Promise<string> => {\n    const { displaySetService } = this.servicesManager.services;\n\n    const displaySet = displaySetService.getDisplaySetByUID(displaySetInstanceUID);\n\n    // Todo: we currently only support labelmap for segmentation for a displaySet\n    const representationType = LABELMAP;\n\n    const volumeId = this._getVolumeIdForDisplaySet(displaySet);\n\n    const segmentationId = options?.segmentationId ?? `${csUtils.uuidv4()}`;\n\n    // Force use of a Uint8Array SharedArrayBuffer for the segmentation to save space and so\n    // it is easily compressible in worker thread.\n    await volumeLoader.createAndCacheDerivedSegmentationVolume(volumeId, {\n      volumeId: segmentationId,\n      targetBuffer: {\n        type: 'Uint8Array',\n        sharedArrayBuffer: window.SharedArrayBuffer,\n      },\n    });\n\n    const defaultScheme = this._getDefaultSegmentationScheme();\n\n    const segmentation: Segmentation = {\n      ...defaultScheme,\n      id: segmentationId,\n      displaySetInstanceUID,\n      label: options?.label,\n      // We should set it as active by default, as it created for display\n      isActive: true,\n      type: representationType,\n      FrameOfReferenceUID:\n        options?.FrameOfReferenceUID || displaySet.instances?.[0]?.FrameOfReferenceUID,\n      representationData: {\n        LABELMAP: {\n          volumeId: segmentationId,\n          referencedVolumeId: volumeId, // Todo: this is so ugly\n        },\n      },\n      description: `S${displaySet.SeriesNumber}: ${displaySet.SeriesDescription}`,\n    };\n\n    this.addOrUpdateSegmentation(segmentation);\n\n    return segmentationId;\n  };\n\n  /**\n   * Toggles the visibility of a segmentation in the state, and broadcasts the event.\n   * Note: this method does not update the segmentation state in the source. It only\n   * updates the state, and there should be separate listeners for that.\n   * @param ids segmentation ids\n   */\n  public toggleSegmentationVisibility = (segmentationId: string): void => {\n    this._toggleSegmentationVisibility(segmentationId, false);\n  };\n\n  public addSegmentationRepresentationToToolGroup = async (\n    toolGroupId: string,\n    segmentationId: string,\n    hydrateSegmentation = false,\n    representationType = csToolsEnums.SegmentationRepresentations.Labelmap,\n    suppressEvents = false\n  ): Promise<void> => {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (!segmentation) {\n      throw new Error(`Segmentation with segmentationId ${segmentationId} not found.`);\n    }\n\n    if (hydrateSegmentation) {\n      // hydrate the segmentation if it's not hydrated yet\n      segmentation.hydrated = true;\n    }\n\n    // Based on the segmentationId, set the colorLUTIndex.\n    const segmentationRepresentationUIDs = await cstSegmentation.addSegmentationRepresentations(\n      toolGroupId,\n      [\n        {\n          segmentationId,\n          type: representationType,\n        },\n      ]\n    );\n\n    // set the latest segmentation representation as active one\n    this._setActiveSegmentationForToolGroup(\n      segmentationId,\n      toolGroupId,\n      segmentationRepresentationUIDs[0]\n    );\n\n    // add the segmentation segments properly\n    for (const segment of segmentation.segments) {\n      if (segment === null || segment === undefined) {\n        continue;\n      }\n\n      const { segmentIndex, color, isLocked, isVisible: visibility, opacity } = segment;\n\n      const suppressEvents = true;\n\n      if (color !== undefined) {\n        this._setSegmentColor(segmentationId, segmentIndex, color, toolGroupId, suppressEvents);\n      }\n\n      if (opacity !== undefined) {\n        this._setSegmentOpacity(segmentationId, segmentIndex, opacity, toolGroupId, suppressEvents);\n      }\n\n      if (visibility !== undefined) {\n        this._setSegmentVisibility(\n          segmentationId,\n          segmentIndex,\n          visibility,\n          toolGroupId,\n          suppressEvents\n        );\n      }\n\n      if (isLocked) {\n        this._setSegmentLocked(segmentationId, segmentIndex, isLocked, suppressEvents);\n      }\n    }\n\n    if (!suppressEvents) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  };\n\n  public setSegmentRGBAColor = (\n    segmentationId: string,\n    segmentIndex: number,\n    rgbaColor,\n    toolGroupId?: string\n  ) => {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    this._setSegmentOpacity(\n      segmentationId,\n      segmentIndex,\n      rgbaColor[3],\n      toolGroupId, // toolGroupId\n      true\n    );\n    this._setSegmentColor(\n      segmentationId,\n      segmentIndex,\n      [rgbaColor[0], rgbaColor[1], rgbaColor[2]],\n      toolGroupId, // toolGroupId\n      true\n    );\n\n    this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n      segmentation,\n    });\n  };\n\n  public getToolGroupIdsWithSegmentation = (segmentationId: string): string[] => {\n    const toolGroupIds = cstSegmentation.state.getToolGroupIdsWithSegmentation(segmentationId);\n    return toolGroupIds;\n  };\n\n  public hydrateSegmentation = (segmentationId: string, suppressEvents = false): void => {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (!segmentation) {\n      throw new Error(`Segmentation with segmentationId ${segmentationId} not found.`);\n    }\n    segmentation.hydrated = true;\n\n    // Not all segmentations have dipslaysets, some of them are derived in the client\n    this._setDisplaySetIsHydrated(segmentationId, true);\n\n    if (!suppressEvents) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  };\n\n  private _setDisplaySetIsHydrated(displaySetUID: string, isHydrated: boolean): void {\n    const { displaySetService } = this.servicesManager.services;\n    const displaySet = displaySetService.getDisplaySetByUID(displaySetUID);\n\n    if (!displaySet) {\n      return;\n    }\n\n    displaySet.isHydrated = isHydrated;\n    displaySetService.setDisplaySetMetadataInvalidated(displaySetUID, false);\n\n    this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n      segmentation: this.getSegmentation(displaySetUID),\n    });\n  }\n\n  private _highlightLabelmap(\n    segmentIndex: number,\n    alpha: number,\n    hideOthers: boolean,\n    segments: Segment[],\n    toolGroupId: string,\n    animationLength: number,\n    segmentationRepresentation: cstTypes.ToolGroupSpecificRepresentation\n  ) {\n    const newSegmentSpecificConfig = {\n      [segmentIndex]: {\n        LABELMAP: {\n          fillAlpha: alpha,\n        },\n      },\n    };\n\n    if (hideOthers) {\n      for (let i = 0; i < segments.length; i++) {\n        if (i !== segmentIndex) {\n          newSegmentSpecificConfig[i] = {\n            LABELMAP: {\n              fillAlpha: 0,\n            },\n          };\n        }\n      }\n    }\n\n    const { fillAlpha } = this.getConfiguration(toolGroupId);\n\n    let startTime: number = null;\n    const animation = (timestamp: number) => {\n      if (startTime === null) {\n        startTime = timestamp;\n      }\n\n      const elapsed = timestamp - startTime;\n      const progress = Math.min(elapsed / animationLength, 1);\n\n      cstSegmentation.config.setSegmentSpecificConfig(\n        toolGroupId,\n        segmentationRepresentation.segmentationRepresentationUID,\n        {\n          [segmentIndex]: {\n            LABELMAP: {\n              fillAlpha: easeInOutBell(progress, fillAlpha),\n            },\n          },\n        }\n      );\n\n      if (progress < 1) {\n        requestAnimationFrame(animation);\n      } else {\n        cstSegmentation.config.setSegmentSpecificConfig(\n          toolGroupId,\n          segmentationRepresentation.segmentationRepresentationUID,\n          {}\n        );\n      }\n    };\n\n    requestAnimationFrame(animation);\n  }\n\n  private _highlightContour(\n    segmentIndex: number,\n    alpha: number,\n    hideOthers: boolean,\n    segments: Segment[],\n    toolGroupId: string,\n    animationLength: number,\n    segmentationRepresentation: cstTypes.ToolGroupSpecificRepresentation\n  ) {\n    const startTime = performance.now();\n\n    const animate = (currentTime: number) => {\n      const progress = (currentTime - startTime) / animationLength;\n      if (progress >= 1) {\n        cstSegmentation.config.setSegmentSpecificConfig(\n          toolGroupId,\n          segmentationRepresentation.segmentationRepresentationUID,\n          {}\n        );\n        return;\n      }\n\n      const reversedProgress = reverseEaseInOutBell(progress, 0.1);\n      cstSegmentation.config.setSegmentSpecificConfig(\n        toolGroupId,\n        segmentationRepresentation.segmentationRepresentationUID,\n        {\n          [segmentIndex]: {\n            CONTOUR: {\n              fillAlpha: reversedProgress,\n            },\n          },\n        }\n      );\n\n      requestAnimationFrame(animate);\n    };\n\n    requestAnimationFrame(animate);\n  }\n\n  public removeSegmentationRepresentationFromToolGroup(\n    toolGroupId: string,\n    segmentationRepresentationUIDsIds?: string[]\n  ): void {\n    const uids = segmentationRepresentationUIDsIds || [];\n    if (!uids.length) {\n      const representations = cstSegmentation.state.getSegmentationRepresentations(toolGroupId);\n\n      if (!representations || !representations.length) {\n        return;\n      }\n\n      uids.push(...representations.map(rep => rep.segmentationRepresentationUID));\n    }\n\n    cstSegmentation.removeSegmentationsFromToolGroup(toolGroupId, uids);\n  }\n\n  /**\n   * Removes a segmentation and broadcasts the removed event.\n   *\n   * @param {string} segmentationId The segmentation id\n   */\n  public remove(segmentationId: string): void {\n    const segmentation = this.segmentations[segmentationId];\n    const wasActive = segmentation.isActive;\n\n    if (!segmentationId || !segmentation) {\n      console.warn(`No segmentationId provided, or unable to find segmentation by id.`);\n      return;\n    }\n\n    const { colorLUTIndex } = segmentation;\n    const { updatedToolGroupIds } = this._removeSegmentationFromCornerstone(segmentationId);\n\n    // Delete associated colormap\n    // Todo: bring this back\n    cstSegmentation.state.removeColorLUT(colorLUTIndex);\n\n    delete this.segmentations[segmentationId];\n\n    // If this segmentation was active, and there is another segmentation, set another one active.\n\n    if (wasActive) {\n      const remainingSegmentations = this._getSegmentations();\n\n      const remainingHydratedSegmentations = remainingSegmentations.filter(\n        segmentation => segmentation.hydrated\n      );\n\n      if (remainingHydratedSegmentations.length) {\n        const { id } = remainingHydratedSegmentations[0];\n\n        updatedToolGroupIds.forEach(toolGroupId => {\n          this._setActiveSegmentationForToolGroup(id, toolGroupId, false);\n        });\n      }\n    }\n\n    this._setDisplaySetIsHydrated(segmentationId, false);\n\n    this._broadcastEvent(this.EVENTS.SEGMENTATION_REMOVED, {\n      segmentationId,\n    });\n  }\n\n  public getConfiguration = (toolGroupId?: string): SegmentationConfig => {\n    toolGroupId = toolGroupId ?? this._getApplicableToolGroupId();\n\n    const brushSize = 1;\n    // const brushSize = cstUtils.segmentation.getBrushSizeForToolGroup(\n    //   toolGroupId\n    // );\n\n    const brushThresholdGate = 1;\n    // const brushThresholdGate = cstUtils.segmentation.getBrushThresholdForToolGroup(\n    //   toolGroupId\n    // );\n\n    const segmentationRepresentations =\n      this.getSegmentationRepresentationsForToolGroup(toolGroupId);\n\n    const typeToUse = segmentationRepresentations?.[0]?.type || LABELMAP;\n\n    const config = cstSegmentation.config.getGlobalConfig();\n    const { renderInactiveSegmentations } = config;\n\n    const representation = config.representations[typeToUse];\n\n    const {\n      renderOutline,\n      outlineWidthActive,\n      renderFill,\n      fillAlpha,\n      fillAlphaInactive,\n      outlineOpacity,\n      outlineOpacityInactive,\n    } = representation;\n\n    return {\n      brushSize,\n      brushThresholdGate,\n      fillAlpha,\n      fillAlphaInactive,\n      outlineWidthActive,\n      renderFill,\n      renderInactiveSegmentations,\n      renderOutline,\n      outlineOpacity,\n      outlineOpacityInactive,\n    };\n  };\n\n  public setConfiguration = (configuration: SegmentationConfig): void => {\n    const {\n      fillAlpha,\n      fillAlphaInactive,\n      outlineWidthActive,\n      outlineOpacity,\n      renderFill,\n      renderInactiveSegmentations,\n      renderOutline,\n    } = configuration;\n\n    const setConfigValueIfDefined = (key, value, transformFn = null) => {\n      if (value !== undefined) {\n        const transformedValue = transformFn ? transformFn(value) : value;\n        this._setSegmentationConfig(key, transformedValue);\n      }\n    };\n\n    setConfigValueIfDefined('renderOutline', renderOutline);\n    setConfigValueIfDefined('outlineWidthActive', outlineWidthActive);\n    setConfigValueIfDefined('outlineOpacity', outlineOpacity, v => v / 100);\n    setConfigValueIfDefined('fillAlpha', fillAlpha, v => v / 100);\n    setConfigValueIfDefined('renderFill', renderFill);\n    setConfigValueIfDefined('fillAlphaInactive', fillAlphaInactive, v => v / 100);\n    setConfigValueIfDefined('outlineOpacityInactive', fillAlphaInactive, v =>\n      Math.max(0.75, v / 100)\n    );\n\n    if (renderInactiveSegmentations !== undefined) {\n      const config = cstSegmentation.config.getGlobalConfig();\n      config.renderInactiveSegmentations = renderInactiveSegmentations;\n      cstSegmentation.config.setGlobalConfig(config);\n    }\n\n    // if (brushSize !== undefined) {\n    //   const { toolGroupService } = this.servicesManager.services;\n\n    //   const toolGroupIds = toolGroupService.getToolGroupIds();\n\n    //   toolGroupIds.forEach(toolGroupId => {\n    //     cstUtils.segmentation.setBrushSizeForToolGroup(toolGroupId, brushSize);\n    //   });\n    // }\n\n    // if (brushThresholdGate !== undefined) {\n    //   const { toolGroupService } = this.servicesManager.services;\n\n    //   const toolGroupIds = toolGroupService.getFirstToolGroupIds();\n\n    //   toolGroupIds.forEach(toolGroupId => {\n    //     cstUtils.segmentation.setBrushThresholdForToolGroup(\n    //       toolGroupId,\n    //       brushThresholdGate\n    //     );\n    //   });\n    // }\n\n    this._broadcastEvent(this.EVENTS.SEGMENTATION_CONFIGURATION_CHANGED, this.getConfiguration());\n  };\n\n  public getLabelmapVolume = (segmentationId: string) => {\n    return cache.getVolume(segmentationId);\n  };\n\n  public getSegmentationRepresentationsForToolGroup = toolGroupId => {\n    return cstSegmentation.state.getSegmentationRepresentations(toolGroupId);\n  };\n\n  public setSegmentLabel(segmentationId: string, segmentIndex: number, label: string) {\n    this._setSegmentLabel(segmentationId, segmentIndex, label);\n  }\n\n  private _setSegmentLabel(\n    segmentationId: string,\n    segmentIndex: number,\n    label: string,\n    suppressEvents = false\n  ) {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    const segmentInfo = segmentation.segments[segmentIndex];\n\n    if (segmentInfo === undefined) {\n      throw new Error(`Segment ${segmentIndex} not yet added to segmentation: ${segmentationId}`);\n    }\n\n    segmentInfo.label = label;\n\n    if (suppressEvents === false) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  }\n\n  public shouldRenderSegmentation(viewportDisplaySetInstanceUIDs, segmentationFrameOfReferenceUID) {\n    if (!viewportDisplaySetInstanceUIDs?.length) {\n      return false;\n    }\n\n    const { displaySetService } = this.servicesManager.services;\n\n    let shouldDisplaySeg = false;\n\n    // check if the displaySet is sharing the same frameOfReferenceUID\n    // with the new segmentation\n    for (const displaySetInstanceUID of viewportDisplaySetInstanceUIDs) {\n      const displaySet = displaySetService.getDisplaySetByUID(displaySetInstanceUID);\n\n      // Todo: this might not be ideal for use cases such as 4D, since we\n      // don't want to show the segmentation for all the frames\n      if (\n        displaySet.isReconstructable &&\n        displaySet?.images?.[0]?.FrameOfReferenceUID === segmentationFrameOfReferenceUID\n      ) {\n        shouldDisplaySeg = true;\n        break;\n      }\n    }\n\n    return shouldDisplaySeg;\n  }\n\n  private _getDefaultSegmentationScheme() {\n    return {\n      activeSegmentIndex: 1,\n      cachedStats: {},\n      label: '',\n      segmentsLocked: [],\n      displayText: [],\n      hydrated: false, // by default we don't hydrate the segmentation for SEG displaySets\n      segmentCount: 0,\n      segments: [],\n      isVisible: true,\n      isActive: false,\n    };\n  }\n\n  private _setActiveSegmentationForToolGroup(\n    segmentationId: string,\n    toolGroupId: string,\n    suppressEvents = false\n  ) {\n    const segmentations = this._getSegmentations();\n    const targetSegmentation = this.getSegmentation(segmentationId);\n\n    if (targetSegmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    segmentations.forEach(segmentation => {\n      segmentation.isActive = segmentation.id === segmentationId;\n    });\n\n    const representation = this._getSegmentationRepresentation(segmentationId, toolGroupId);\n\n    cstSegmentation.activeSegmentation.setActiveSegmentationRepresentation(\n      toolGroupId,\n      representation.segmentationRepresentationUID\n    );\n\n    if (suppressEvents === false) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation: targetSegmentation,\n      });\n    }\n  }\n\n  private _toggleSegmentationVisibility = (segmentationId: string, suppressEvents = false) => {\n    const segmentation = this.segmentations[segmentationId];\n\n    if (!segmentation) {\n      throw new Error(`Segmentation with segmentationId ${segmentationId} not found.`);\n    }\n\n    segmentation.isVisible = !segmentation.isVisible;\n\n    this._updateCornerstoneSegmentationVisibility(segmentationId);\n\n    if (suppressEvents === false) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  };\n\n  private _setActiveSegment(segmentationId: string, segmentIndex: number, suppressEvents = false) {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    cstSegmentation.segmentIndex.setActiveSegmentIndex(segmentationId, segmentIndex);\n\n    segmentation.activeSegmentIndex = segmentIndex;\n\n    if (suppressEvents === false) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  }\n\n  private _getSegmentInfo(segmentation: Segmentation, segmentIndex: number) {\n    const segments = segmentation.segments;\n\n    if (!segments) {\n      return;\n    }\n\n    if (segments && segments.length > 0) {\n      return segments[segmentIndex];\n    }\n  }\n\n  private _getVolumeIdForDisplaySet(displaySet) {\n    const volumeLoaderSchema = displaySet.volumeLoaderSchema ?? VOLUME_LOADER_SCHEME;\n\n    return `${volumeLoaderSchema}:${displaySet.displaySetInstanceUID}`;\n  }\n\n  private _setSegmentColor = (\n    segmentationId: string,\n    segmentIndex: number,\n    color: ohifTypes.RGB,\n    toolGroupId?: string,\n    suppressEvents = false\n  ) => {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    const segmentInfo = this._getSegmentInfo(segmentation, segmentIndex);\n\n    if (segmentInfo === undefined) {\n      throw new Error(`Segment ${segmentIndex} not yet added to segmentation: ${segmentationId}`);\n    }\n\n    toolGroupId = toolGroupId ?? this._getApplicableToolGroupId();\n\n    const segmentationRepresentation = this._getSegmentationRepresentation(\n      segmentationId,\n      toolGroupId\n    );\n\n    if (!segmentationRepresentation) {\n      throw new Error('Must add representation to toolgroup before setting segments');\n    }\n    const { segmentationRepresentationUID } = segmentationRepresentation;\n\n    const rgbaColor = cstSegmentation.config.color.getColorForSegmentIndex(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex\n    );\n\n    cstSegmentation.config.color.setColorForSegmentIndex(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex,\n      [...color, rgbaColor[3]]\n    );\n\n    segmentInfo.color = color;\n\n    if (suppressEvents === false) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  };\n\n  private _getSegmentCenter(segmentationId, segmentIndex) {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (!segmentation) {\n      return;\n    }\n\n    const { cachedStats } = segmentation;\n\n    if (!cachedStats) {\n      return;\n    }\n\n    const { segmentCenter } = cachedStats;\n\n    if (!segmentCenter) {\n      return;\n    }\n\n    const { center } = segmentCenter[segmentIndex];\n\n    return center;\n  }\n\n  private _setSegmentLocked(\n    segmentationId: string,\n    segmentIndex: number,\n    isLocked: boolean,\n    suppressEvents = false\n  ) {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    const segmentInfo = this._getSegmentInfo(segmentation, segmentIndex);\n\n    if (segmentInfo === undefined) {\n      throw new Error(`Segment ${segmentIndex} not yet added to segmentation: ${segmentationId}`);\n    }\n\n    segmentInfo.isLocked = isLocked;\n\n    cstSegmentation.segmentLocking.setSegmentIndexLocked(segmentationId, segmentIndex, isLocked);\n\n    if (suppressEvents === false) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  }\n\n  private _setSegmentVisibility(\n    segmentationId: string,\n    segmentIndex: number,\n    isVisible: boolean,\n    toolGroupId?: string,\n    suppressEvents = false\n  ) {\n    toolGroupId = toolGroupId ?? this._getApplicableToolGroupId();\n\n    const { segmentationRepresentationUID, segmentation } = this._getSegmentationInfo(\n      segmentationId,\n      toolGroupId\n    );\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    const segmentInfo = this._getSegmentInfo(segmentation, segmentIndex);\n\n    if (segmentInfo === undefined) {\n      throw new Error(`Segment ${segmentIndex} not yet added to segmentation: ${segmentationId}`);\n    }\n\n    segmentInfo.isVisible = isVisible;\n\n    cstSegmentation.config.visibility.setSegmentVisibility(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex,\n      isVisible\n    );\n\n    // make sure to update the isVisible flag on the segmentation\n    // if a segment becomes invisible then the segmentation should be invisible\n    // in the status as well, and show correct icon\n    segmentation.isVisible = segmentation.segments\n      .filter(Boolean)\n      .every(segment => segment.isVisible);\n\n    if (suppressEvents === false) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  }\n\n  private _setSegmentOpacity = (\n    segmentationId: string,\n    segmentIndex: number,\n    opacity: number,\n    toolGroupId?: string,\n    suppressEvents = false\n  ) => {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    const segmentInfo = this._getSegmentInfo(segmentation, segmentIndex);\n\n    if (segmentInfo === undefined) {\n      throw new Error(`Segment ${segmentIndex} not yet added to segmentation: ${segmentationId}`);\n    }\n\n    toolGroupId = toolGroupId ?? this._getApplicableToolGroupId();\n\n    const segmentationRepresentation = this._getSegmentationRepresentation(\n      segmentationId,\n      toolGroupId\n    );\n\n    if (!segmentationRepresentation) {\n      throw new Error('Must add representation to toolgroup before setting segments');\n    }\n    const { segmentationRepresentationUID } = segmentationRepresentation;\n\n    const rgbaColor = cstSegmentation.config.color.getColorForSegmentIndex(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex\n    );\n\n    cstSegmentation.config.color.setColorForSegmentIndex(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex,\n      [rgbaColor[0], rgbaColor[1], rgbaColor[2], opacity]\n    );\n\n    segmentInfo.opacity = opacity;\n\n    if (suppressEvents === false) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  };\n\n  private _setSegmentLabel(\n    segmentationId: string,\n    segmentIndex: number,\n    segmentLabel: string,\n    suppressEvents = false\n  ) {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n\n    const segmentInfo = this._getSegmentInfo(segmentation, segmentIndex);\n\n    if (segmentInfo === undefined) {\n      throw new Error(`Segment ${segmentIndex} not yet added to segmentation: ${segmentationId}`);\n    }\n\n    segmentInfo.label = segmentLabel;\n\n    if (suppressEvents === false) {\n      this._broadcastEvent(this.EVENTS.SEGMENTATION_UPDATED, {\n        segmentation,\n      });\n    }\n  }\n\n  private _getSegmentationRepresentation(segmentationId, toolGroupId) {\n    const segmentationRepresentations =\n      this.getSegmentationRepresentationsForToolGroup(toolGroupId);\n\n    if (!segmentationRepresentations?.length) {\n      return;\n    }\n\n    // Todo: this finds the first segmentation representation that matches the segmentationId\n    // If there are two labelmap representations from the same segmentation, this will not work\n    const representation = segmentationRepresentations.find(\n      representation => representation.segmentationId === segmentationId\n    );\n\n    return representation;\n  }\n\n  private _setSegmentationConfig = (property, value) => {\n    // Todo: currently we only support global config, and we get the type\n    // from the first segmentation\n    const typeToUse = this.getSegmentations()[0].type;\n\n    const { cornerstoneViewportService } = this.servicesManager.services;\n\n    const config = cstSegmentation.config.getGlobalConfig();\n\n    config.representations[typeToUse][property] = value;\n\n    // Todo: add non global (representation specific config as well)\n    cstSegmentation.config.setGlobalConfig(config);\n\n    const renderingEngine = cornerstoneViewportService.getRenderingEngine();\n    const viewportIds = cornerstoneViewportService.getViewportIds();\n\n    renderingEngine.renderViewports(viewportIds);\n  };\n\n  private _initSegmentationService() {\n    // Connect Segmentation Service to Cornerstone3D.\n    eventTarget.addEventListener(\n      csToolsEnums.Events.SEGMENTATION_MODIFIED,\n      this._onSegmentationModifiedFromSource\n    );\n\n    eventTarget.addEventListener(\n      csToolsEnums.Events.SEGMENTATION_DATA_MODIFIED,\n      this._onSegmentationDataModified\n    );\n  }\n\n  private _onSegmentationDataModified = evt => {\n    const { segmentationId } = evt.detail;\n\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      // Part of add operation, not update operation, exit early.\n      return;\n    }\n\n    this._broadcastEvent(this.EVENTS.SEGMENTATION_DATA_MODIFIED, {\n      segmentation,\n    });\n  };\n\n  private _onSegmentationModifiedFromSource = evt => {\n    const { segmentationId } = evt.detail;\n\n    const segmentation = this.segmentations[segmentationId];\n\n    if (segmentation === undefined) {\n      // Part of add operation, not update operation, exit early.\n      return;\n    }\n\n    const segmentationState = cstSegmentation.state.getSegmentation(segmentationId);\n\n    if (!segmentationState) {\n      return;\n    }\n\n    const { activeSegmentIndex, cachedStats, segmentsLocked, label, type } = segmentationState;\n\n    if (![LABELMAP, CONTOUR].includes(type)) {\n      throw new Error(\n        `Unsupported segmentation type: ${type}. Only ${LABELMAP} and ${CONTOUR} are supported.`\n      );\n    }\n\n    const representationData = segmentationState.representationData[type];\n\n    // TODO: handle other representations when available in cornerstone3D\n    const segmentationSchema = {\n      ...segmentation,\n      activeSegmentIndex,\n      cachedStats,\n      displayText: [],\n      id: segmentationId,\n      label,\n      segmentsLocked,\n      type,\n      representationData: {\n        [type]: {\n          ...representationData,\n        },\n      },\n    };\n\n    try {\n      this.addOrUpdateSegmentation(segmentationSchema);\n    } catch (error) {\n      console.warn(`Failed to add/update segmentation ${segmentationId}`, error);\n    }\n  };\n\n  private _getSegmentationInfo(segmentationId: string, toolGroupId: string) {\n    const segmentation = this.getSegmentation(segmentationId);\n\n    if (segmentation === undefined) {\n      throw new Error(`no segmentation for segmentationId: ${segmentationId}`);\n    }\n    const segmentationRepresentation = this._getSegmentationRepresentation(\n      segmentationId,\n      toolGroupId\n    );\n\n    if (!segmentationRepresentation) {\n      throw new Error('Must add representation to toolgroup before setting segments');\n    }\n\n    const { segmentationRepresentationUID } = segmentationRepresentation;\n\n    return { segmentationRepresentationUID, segmentation };\n  }\n\n  private _removeSegmentationFromCornerstone(segmentationId: string) {\n    // TODO: This should be from the configuration\n    const removeFromCache = true;\n    const segmentationState = cstSegmentation.state;\n    const sourceSegState = segmentationState.getSegmentation(segmentationId);\n    const updatedToolGroupIds: Set<string> = new Set();\n\n    if (!sourceSegState) {\n      return;\n    }\n\n    const toolGroupIds = segmentationState.getToolGroupIdsWithSegmentation(segmentationId);\n\n    toolGroupIds.forEach(toolGroupId => {\n      const segmentationRepresentations =\n        segmentationState.getSegmentationRepresentations(toolGroupId);\n\n      const UIDsToRemove = [];\n      segmentationRepresentations.forEach(representation => {\n        if (representation.segmentationId === segmentationId) {\n          UIDsToRemove.push(representation.segmentationRepresentationUID);\n          updatedToolGroupIds.add(toolGroupId);\n        }\n      });\n\n      // remove segmentation representations\n      cstSegmentation.removeSegmentationsFromToolGroup(\n        toolGroupId,\n        UIDsToRemove,\n        true // immediate\n      );\n    });\n\n    // cleanup the segmentation state too\n    segmentationState.removeSegmentation(segmentationId);\n\n    if (removeFromCache && cache.getVolumeLoadObject(segmentationId)) {\n      cache.removeVolumeLoadObject(segmentationId);\n    }\n\n    return { updatedToolGroupIds: Array.from(updatedToolGroupIds) };\n  }\n\n  private _updateCornerstoneSegmentations({ segmentationId, notYetUpdatedAtSource }) {\n    if (notYetUpdatedAtSource === false) {\n      return;\n    }\n    const segmentationState = cstSegmentation.state;\n    const sourceSegmentation = segmentationState.getSegmentation(segmentationId);\n    const segmentation = this.segmentations[segmentationId];\n    const { label, cachedStats } = segmentation;\n\n    // Update the label in the source if necessary\n    if (sourceSegmentation.label !== label) {\n      sourceSegmentation.label = label;\n    }\n\n    if (!isEqual(sourceSegmentation.cachedStats, cachedStats)) {\n      sourceSegmentation.cachedStats = cachedStats;\n    }\n  }\n\n  private _updateCornerstoneSegmentationVisibility = segmentationId => {\n    const segmentationState = cstSegmentation.state;\n    const toolGroupIds = segmentationState.getToolGroupIdsWithSegmentation(segmentationId);\n\n    toolGroupIds.forEach(toolGroupId => {\n      const segmentationRepresentations =\n        cstSegmentation.state.getSegmentationRepresentations(toolGroupId);\n\n      if (segmentationRepresentations.length === 0) {\n        return;\n      }\n\n      // Todo: this finds the first segmentation representation that matches the segmentationId\n      // If there are two labelmap representations from the same segmentation, this will not work\n      const representation = segmentationRepresentations.find(\n        representation => representation.segmentationId === segmentationId\n      );\n\n      const { segmentsHidden } = representation;\n\n      const currentVisibility = segmentsHidden.size === 0 ? true : false;\n      const newVisibility = !currentVisibility;\n\n      cstSegmentation.config.visibility.setSegmentationVisibility(\n        toolGroupId,\n        representation.segmentationRepresentationUID,\n        newVisibility\n      );\n\n      // update segments visibility\n      const { segmentation } = this._getSegmentationInfo(segmentationId, toolGroupId);\n\n      const segments = segmentation.segments.filter(Boolean);\n\n      segments.forEach(segment => {\n        segment.isVisible = newVisibility;\n      });\n    });\n  };\n\n  private _getToolGroupIdsWithSegmentation(segmentationId: string) {\n    const segmentationState = cstSegmentation.state;\n    const toolGroupIds = segmentationState.getToolGroupIdsWithSegmentation(segmentationId);\n\n    return toolGroupIds;\n  }\n\n  private _getFrameOfReferenceUIDForSeg(displaySet) {\n    const frameOfReferenceUID = displaySet.instance?.FrameOfReferenceUID;\n\n    if (frameOfReferenceUID) {\n      return frameOfReferenceUID;\n    }\n\n    // if not found we should try the ReferencedFrameOfReferenceSequence\n    const referencedFrameOfReferenceSequence =\n      displaySet.instance?.ReferencedFrameOfReferenceSequence;\n\n    if (referencedFrameOfReferenceSequence) {\n      return referencedFrameOfReferenceSequence.FrameOfReferenceUID;\n    }\n  }\n\n  private _getApplicableToolGroupId = () => {\n    const { toolGroupService, viewportGridService, cornerstoneViewportService } =\n      this.servicesManager.services;\n\n    const viewportInfo = cornerstoneViewportService.getViewportInfo(\n      viewportGridService.getActiveViewportId()\n    );\n\n    if (!viewportInfo) {\n      const toolGroupIds = toolGroupService.getToolGroupIds();\n\n      return toolGroupIds[0];\n    }\n\n    return viewportInfo.getToolGroupId();\n  };\n\n  /**\n   * Converts object of objects to array.\n   *\n   * @return {Array} Array of objects\n   */\n  private arrayOfObjects = obj => {\n    return Object.entries(obj).map(e => ({ [e[0]]: e[1] }));\n  };\n}\n\nexport default SegmentationService;\nexport { EVENTS, VALUE_TYPES };\n","/**\n * Maps a DICOM RT Struct ROI Contour to a RTStruct data that can be used\n * in Segmentation Service\n *\n * @param structureSet - A DICOM RT Struct ROI Contour\n * @param rtDisplaySetUID - A CornerstoneTools DisplaySet UID\n * @returns An array of object that includes data, id, segmentIndex, color\n * and geometry Id\n */\nexport function mapROIContoursToRTStructData(structureSet: unknown, rtDisplaySetUID: unknown) {\n  return structureSet.ROIContours.map(({ contourPoints, ROINumber, ROIName, colorArray }) => {\n    const data = contourPoints.map(({ points, ...rest }) => {\n      const newPoints = points.map(({ x, y, z }) => {\n        return [x, y, z];\n      });\n\n      return {\n        ...rest,\n        points: newPoints,\n      };\n    });\n\n    const id = ROIName || ROINumber;\n\n    return {\n      data,\n      id,\n      segmentIndex: ROINumber,\n      color: colorArray,\n      geometryId: `${rtDisplaySetUID}:${id}:segmentIndex-${ROINumber}`,\n    };\n  });\n}\n","import SegmentationService from './SegmentationService';\n\nexport default SegmentationService;\n","import { Enums } from '@cornerstonejs/core';\n\nconst STACK = 'stack';\nconst VOLUME = 'volume';\nconst ORTHOGRAPHIC = 'orthographic';\nconst VOLUME_3D = 'volume3d';\n\nexport default function getCornerstoneViewportType(viewportType: string): Enums.ViewportType {\n  const lowerViewportType = viewportType.toLowerCase();\n  if (lowerViewportType === STACK) {\n    return Enums.ViewportType.STACK;\n  }\n\n  if (lowerViewportType === VOLUME || lowerViewportType === ORTHOGRAPHIC) {\n    return Enums.ViewportType.ORTHOGRAPHIC;\n  }\n\n  if (lowerViewportType === VOLUME_3D) {\n    return Enums.ViewportType.VOLUME_3D;\n  }\n\n  throw new Error(`Invalid viewport type: ${viewportType}. Valid types are: stack, volume`);\n}\n","import { ServicesManager, Types } from '@ohif/core';\nimport { cache as cs3DCache, Enums, volumeLoader, utilities as utils } from '@cornerstonejs/core';\n\nimport getCornerstoneViewportType from '../../utils/getCornerstoneViewportType';\nimport { StackViewportData, VolumeViewportData } from '../../types/CornerstoneCacheService';\n\nconst VOLUME_LOADER_SCHEME = 'cornerstoneStreamingImageVolume';\n\nclass CornerstoneCacheService {\n  static REGISTRATION = {\n    name: 'cornerstoneCacheService',\n    altName: 'CornerstoneCacheService',\n    create: ({ servicesManager }: Types.Extensions.ExtensionParams): CornerstoneCacheService => {\n      return new CornerstoneCacheService(servicesManager);\n    },\n  };\n\n  stackImageIds: Map<string, string[]> = new Map();\n  volumeImageIds: Map<string, string[]> = new Map();\n  readonly servicesManager: ServicesManager;\n\n  constructor(servicesManager: ServicesManager) {\n    this.servicesManager = servicesManager;\n  }\n\n  public getCacheSize() {\n    return cs3DCache.getCacheSize();\n  }\n\n  public getCacheFreeSpace() {\n    return cs3DCache.getBytesAvailable();\n  }\n\n  public async createViewportData(\n    displaySets: unknown[],\n    viewportOptions: Record<string, unknown>,\n    dataSource: unknown,\n    initialImageIndex?: number\n  ): Promise<StackViewportData | VolumeViewportData> {\n    let viewportType = viewportOptions.viewportType as string;\n\n    // Todo: Since Cornerstone 3D currently doesn't support segmentation\n    // on stack viewport, we should check if whether the the displaySets\n    // that are about to be displayed are referenced in a segmentation\n    // as a reference volume, if so, we should hang a volume viewport\n    // instead of a stack viewport\n    if (this._shouldRenderSegmentation(displaySets)) {\n      // if the viewport type is volume 3D, we should let it be as it is\n      // Todo: in future here we should kick start the conversion of the\n      // segmentation to closed surface\n      viewportType =\n        viewportType === Enums.ViewportType.VOLUME_3D ? Enums.ViewportType.VOLUME_3D : 'volume';\n\n      // update viewportOptions to reflect the new viewport type\n      viewportOptions.viewportType = viewportType;\n    }\n\n    const cs3DViewportType = getCornerstoneViewportType(viewportType);\n    let viewportData: StackViewportData | VolumeViewportData;\n\n    if (cs3DViewportType === Enums.ViewportType.STACK) {\n      viewportData = await this._getStackViewportData(\n        dataSource,\n        displaySets,\n        initialImageIndex,\n        cs3DViewportType\n      );\n    }\n\n    if (\n      cs3DViewportType === Enums.ViewportType.ORTHOGRAPHIC ||\n      cs3DViewportType === Enums.ViewportType.VOLUME_3D\n    ) {\n      viewportData = await this._getVolumeViewportData(dataSource, displaySets, cs3DViewportType);\n    }\n\n    viewportData.viewportType = cs3DViewportType;\n\n    return viewportData;\n  }\n\n  public async invalidateViewportData(\n    viewportData: VolumeViewportData,\n    invalidatedDisplaySetInstanceUID: string,\n    dataSource,\n    displaySetService\n  ) {\n    if (viewportData.viewportType === Enums.ViewportType.STACK) {\n      return this._getCornerstoneStackImageIds(\n        displaySetService.getDisplaySetByUID(invalidatedDisplaySetInstanceUID),\n        dataSource\n      );\n    }\n\n    // Todo: grab the volume and get the id from the viewport itself\n    const volumeId = `${VOLUME_LOADER_SCHEME}:${invalidatedDisplaySetInstanceUID}`;\n\n    const volume = cs3DCache.getVolume(volumeId);\n\n    if (volume) {\n      if (volume.imageIds) {\n        // also for each imageId in the volume, remove the imageId from the cache\n        // since that will hold the old metadata as well\n\n        volume.imageIds.forEach(imageId => {\n          if (cs3DCache.getImageLoadObject(imageId)) {\n            cs3DCache.removeImageLoadObject(imageId);\n          }\n        });\n      }\n\n      // this shouldn't be via removeVolumeLoadObject, since that will\n      // remove the texture as well, but here we really just need a remove\n      // from registry so that we load it again\n      cs3DCache._volumeCache.delete(volumeId);\n      this.volumeImageIds.delete(volumeId);\n    }\n\n    const displaySets = viewportData.data.map(({ displaySetInstanceUID }) =>\n      displaySetService.getDisplaySetByUID(displaySetInstanceUID)\n    );\n\n    const newViewportData = await this._getVolumeViewportData(\n      dataSource,\n      displaySets,\n      viewportData.viewportType\n    );\n\n    return newViewportData;\n  }\n\n  private _getStackViewportData(\n    dataSource,\n    displaySets,\n    initialImageIndex,\n    viewportType: Enums.ViewportType\n  ): StackViewportData {\n    // For Stack Viewport we don't have fusion currently\n    const displaySet = displaySets[0];\n\n    let stackImageIds = this.stackImageIds.get(displaySet.displaySetInstanceUID);\n\n    if (!stackImageIds) {\n      stackImageIds = this._getCornerstoneStackImageIds(displaySet, dataSource);\n      this.stackImageIds.set(displaySet.displaySetInstanceUID, stackImageIds);\n    }\n\n    const { displaySetInstanceUID, StudyInstanceUID, isCompositeStack } = displaySet;\n\n    const StackViewportData: StackViewportData = {\n      viewportType,\n      data: {\n        StudyInstanceUID,\n        displaySetInstanceUID,\n        isCompositeStack,\n        imageIds: stackImageIds,\n      },\n    };\n\n    if (typeof initialImageIndex === 'number') {\n      StackViewportData.data.initialImageIndex = initialImageIndex;\n    }\n\n    return StackViewportData;\n  }\n\n  private async _getVolumeViewportData(\n    dataSource,\n    displaySets,\n    viewportType: Enums.ViewportType\n  ): Promise<VolumeViewportData> {\n    // Todo: Check the cache for multiple scenarios to see if we need to\n    // decache the volume data from other viewports or not\n\n    const volumeData = [];\n\n    for (const displaySet of displaySets) {\n      // Don't create volumes for the displaySets that have custom load\n      // function (e.g., SEG, RT, since they rely on the reference volumes\n      // and they take care of their own loading after they are created in their\n      // getSOPClassHandler method\n\n      if (displaySet.load && displaySet.load instanceof Function) {\n        const { userAuthenticationService } = this.servicesManager.services;\n        const headers = userAuthenticationService.getAuthorizationHeader();\n        await displaySet.load({ headers });\n\n        volumeData.push({\n          studyInstanceUID: displaySet.StudyInstanceUID,\n          displaySetInstanceUID: displaySet.displaySetInstanceUID,\n        });\n\n        // Todo: do some cache check and empty the cache if needed\n        continue;\n      }\n\n      const volumeLoaderSchema = displaySet.volumeLoaderSchema ?? VOLUME_LOADER_SCHEME;\n\n      const volumeId = `${volumeLoaderSchema}:${displaySet.displaySetInstanceUID}`;\n\n      let volumeImageIds = this.volumeImageIds.get(displaySet.displaySetInstanceUID);\n\n      let volume = cs3DCache.getVolume(volumeId);\n\n      if (!volumeImageIds || !volume) {\n        volumeImageIds = this._getCornerstoneVolumeImageIds(displaySet, dataSource);\n\n        volume = await volumeLoader.createAndCacheVolume(volumeId, {\n          imageIds: volumeImageIds,\n        });\n\n        this.volumeImageIds.set(displaySet.displaySetInstanceUID, volumeImageIds);\n      }\n\n      volumeData.push({\n        StudyInstanceUID: displaySet.StudyInstanceUID,\n        displaySetInstanceUID: displaySet.displaySetInstanceUID,\n        volume,\n        volumeId,\n        imageIds: volumeImageIds,\n        isDynamicVolume: displaySet.isDynamicVolume,\n      });\n    }\n\n    return {\n      viewportType,\n      data: volumeData,\n    };\n  }\n\n  private _shouldRenderSegmentation(displaySets) {\n    const { segmentationService, displaySetService } = this.servicesManager.services;\n\n    const viewportDisplaySetInstanceUIDs = displaySets.map(\n      ({ displaySetInstanceUID }) => displaySetInstanceUID\n    );\n\n    // check inside segmentations if any of them are referencing the displaySets\n    // that are about to be displayed\n    const segmentations = segmentationService.getSegmentations();\n\n    for (const segmentation of segmentations) {\n      const segDisplaySetInstanceUID = segmentation.displaySetInstanceUID;\n      const segDisplaySet = displaySetService.getDisplaySetByUID(segDisplaySetInstanceUID);\n\n      const instance = segDisplaySet.instances?.[0] || segDisplaySet.instance;\n\n      const shouldDisplaySeg = segmentationService.shouldRenderSegmentation(\n        viewportDisplaySetInstanceUIDs,\n        instance?.FrameOfReferenceUID || segDisplaySet.FrameOfReferenceUID\n      );\n\n      if (shouldDisplaySeg) {\n        return true;\n      }\n    }\n  }\n\n  private _getCornerstoneStackImageIds(displaySet, dataSource): string[] {\n    return dataSource.getImageIdsForDisplaySet(displaySet);\n  }\n\n  private _getCornerstoneVolumeImageIds(displaySet, dataSource): string[] {\n    const stackImageIds = this._getCornerstoneStackImageIds(displaySet, dataSource);\n\n    return stackImageIds;\n  }\n}\n\nexport default CornerstoneCacheService;\n","import CornerstoneCacheService from './CornerstoneCacheService';\n\nexport default CornerstoneCacheService;\n","const RENDERING_ENGINE_ID = 'OHIFCornerstoneRenderingEngine';\n\nexport { RENDERING_ENGINE_ID };\n","import {\n  Types,\n  Enums,\n  getEnabledElementByViewportId,\n  VolumeViewport,\n  utilities,\n} from '@cornerstonejs/core';\nimport { Types as CoreTypes } from '@ohif/core';\nimport { StackViewportData, VolumeViewportData } from '../../types/CornerstoneCacheService';\nimport getCornerstoneBlendMode from '../../utils/getCornerstoneBlendMode';\nimport getCornerstoneOrientation from '../../utils/getCornerstoneOrientation';\nimport getCornerstoneViewportType from '../../utils/getCornerstoneViewportType';\nimport JumpPresets from '../../utils/JumpPresets';\nimport { SyncGroup } from '../SyncGroupService/SyncGroupService';\n\nexport type InitialImageOptions = {\n  index?: number;\n  preset?: JumpPresets;\n};\n\nexport type ViewportOptions = {\n  id?: string;\n  viewportType: Enums.ViewportType;\n  toolGroupId: string;\n  viewportId: string;\n  // Presentation ID to store/load presentation state from\n  presentationIds?: CoreTypes.PresentationIds;\n  orientation?: Enums.OrientationAxis;\n  background?: Types.Point3;\n  displayArea?: Types.DisplayArea;\n  syncGroups?: SyncGroup[];\n  initialImageOptions?: InitialImageOptions;\n  customViewportProps?: Record<string, unknown>;\n  /*\n   * Allows drag and drop of display sets not matching viewport options, but\n   * doesn't show them initially.  Displays initially blank if no required match\n   */\n  allowUnmatchedView?: boolean;\n};\n\nexport type PublicViewportOptions = {\n  id?: string;\n  viewportType?: string;\n  toolGroupId?: string;\n  presentationIds?: CoreTypes.PresentationIds;\n  viewportId?: string;\n  orientation?: Enums.OrientationAxis;\n  background?: Types.Point3;\n  displayArea?: Types.DisplayArea;\n  syncGroups?: SyncGroup[];\n  initialImageOptions?: InitialImageOptions;\n  customViewportProps?: Record<string, unknown>;\n  allowUnmatchedView?: boolean;\n};\n\nexport type DisplaySetSelector = {\n  id?: string;\n  options?: PublicDisplaySetOptions;\n};\n\nexport type PublicDisplaySetOptions = {\n  /** The display set options can have an id in order to distinguish\n   * it from other similar items.\n   */\n  id?: string;\n  voi?: VOI;\n  voiInverted?: boolean;\n  blendMode?: string;\n  slabThickness?: number;\n  colormap?: string;\n  displayPreset?: string;\n};\n\nexport type DisplaySetOptions = {\n  id?: string;\n  voi?: VOI;\n  voiInverted: boolean;\n  blendMode?: Enums.BlendModes;\n  slabThickness?: number;\n  colormap?: { name: string; opacity?: number };\n  displayPreset?: string;\n};\n\ntype VOI = {\n  windowWidth: number;\n  windowCenter: number;\n};\n\nexport type DisplaySet = {\n  displaySetInstanceUID: string;\n};\n\nconst STACK = 'stack';\nconst DEFAULT_TOOLGROUP_ID = 'default';\n\n// Return true if the data contains the given display set UID OR the imageId\n// if it is a composite object.\nconst dataContains = ({ data, displaySetUID, imageId, viewport }): boolean => {\n  if (imageId && data.isCompositeStack && data.imageIds) {\n    return !!data.imageIds.find(dataId => dataId === imageId);\n  }\n\n  if (imageId && (data.volumeId || viewport instanceof VolumeViewport)) {\n    const isAcquisition = !!viewport.getCurrentImageId();\n\n    if (!isAcquisition) {\n      return false;\n    }\n\n    const imageURI = utilities.imageIdToURI(imageId);\n    const hasImageId = viewport.hasImageURI(imageURI);\n\n    if (hasImageId) {\n      return true;\n    }\n  }\n\n  if (data.displaySetInstanceUID === displaySetUID) {\n    return true;\n  }\n\n  return false;\n};\n\nclass ViewportInfo {\n  private viewportId = '';\n  private element: HTMLDivElement;\n  private viewportOptions: ViewportOptions;\n  private displaySetOptions: Array<DisplaySetOptions>;\n  private viewportData: StackViewportData | VolumeViewportData;\n  private renderingEngineId: string;\n\n  constructor(viewportId: string) {\n    this.viewportId = viewportId;\n    this.setPublicViewportOptions({});\n    this.setPublicDisplaySetOptions([{}]);\n  }\n\n  /**\n   * Return true if the viewport contains the given display set UID,\n   * OR if it is a composite stack and contains the given imageId\n   */\n  public contains(displaySetUID: string, imageId: string): boolean {\n    if (!this.viewportData?.data) {\n      return false;\n    }\n\n    const { viewport } = getEnabledElementByViewportId(this.viewportId) || {};\n\n    if (this.viewportData.data.length) {\n      return !!this.viewportData.data.find(data =>\n        dataContains({ data, displaySetUID, imageId, viewport })\n      );\n    }\n\n    return dataContains({\n      data: this.viewportData.data,\n      displaySetUID,\n      imageId,\n      viewport,\n    });\n  }\n\n  public destroy = (): void => {\n    this.element = null;\n    this.viewportData = null;\n    this.viewportOptions = null;\n    this.displaySetOptions = null;\n  };\n\n  public setRenderingEngineId(renderingEngineId: string): void {\n    this.renderingEngineId = renderingEngineId;\n  }\n\n  public getRenderingEngineId(): string {\n    return this.renderingEngineId;\n  }\n\n  public setViewportId(viewportId: string): void {\n    this.viewportId = viewportId;\n  }\n\n  public setElement(element: HTMLDivElement): void {\n    this.element = element;\n  }\n\n  public setViewportData(viewportData: StackViewportData | VolumeViewportData): void {\n    this.viewportData = viewportData;\n  }\n\n  public getViewportData(): StackViewportData | VolumeViewportData {\n    return this.viewportData;\n  }\n\n  public getElement(): HTMLDivElement {\n    return this.element;\n  }\n\n  public getViewportId(): string {\n    return this.viewportId;\n  }\n\n  public setPublicDisplaySetOptions(\n    publicDisplaySetOptions: PublicDisplaySetOptions[] | DisplaySetSelector[]\n  ): Array<DisplaySetOptions> {\n    // map the displaySetOptions and check if they are undefined then set them to default values\n    const displaySetOptions = this.mapDisplaySetOptions(publicDisplaySetOptions);\n\n    this.setDisplaySetOptions(displaySetOptions);\n\n    return this.displaySetOptions;\n  }\n\n  public hasDisplaySet(displaySetInstanceUID: string): boolean {\n    // Todo: currently this does not work for non image & referenceImage displaySets.\n    // Since SEG and other derived displaySets are loaded in a different way, and not\n    // via cornerstoneViewportService\n    let viewportData = this.getViewportData();\n\n    if (\n      viewportData.viewportType === Enums.ViewportType.ORTHOGRAPHIC ||\n      viewportData.viewportType === Enums.ViewportType.VOLUME_3D\n    ) {\n      viewportData = viewportData as VolumeViewportData;\n      return viewportData.data.some(\n        ({ displaySetInstanceUID: dsUID }) => dsUID === displaySetInstanceUID\n      );\n    }\n\n    viewportData = viewportData as StackViewportData;\n    return viewportData.data.displaySetInstanceUID === displaySetInstanceUID;\n  }\n\n  public setPublicViewportOptions(viewportOptionsEntry: PublicViewportOptions): ViewportOptions {\n    let viewportType = viewportOptionsEntry.viewportType;\n    const { toolGroupId = DEFAULT_TOOLGROUP_ID, presentationIds } = viewportOptionsEntry;\n    let orientation;\n\n    if (!viewportType) {\n      viewportType = getCornerstoneViewportType(STACK);\n    } else {\n      viewportType = getCornerstoneViewportType(viewportOptionsEntry.viewportType);\n    }\n\n    // map SAGITTAL, AXIAL, CORONAL orientation to be used by cornerstone\n    if (viewportOptionsEntry.viewportType?.toLowerCase() !== STACK) {\n      orientation = getCornerstoneOrientation(viewportOptionsEntry.orientation);\n    }\n\n    if (!toolGroupId) {\n      toolGroupId = DEFAULT_TOOLGROUP_ID;\n    }\n\n    this.setViewportOptions({\n      ...viewportOptionsEntry,\n      viewportId: this.viewportId,\n      viewportType: viewportType as Enums.ViewportType,\n      orientation,\n      toolGroupId,\n      presentationIds,\n    });\n\n    return this.viewportOptions;\n  }\n\n  public setViewportOptions(viewportOptions: ViewportOptions): void {\n    this.viewportOptions = viewportOptions;\n  }\n\n  public getViewportOptions(): ViewportOptions {\n    return this.viewportOptions;\n  }\n\n  public getPresentationIds(): CoreTypes.PresentationIds {\n    const { presentationIds } = this.viewportOptions;\n    return presentationIds;\n  }\n\n  public setDisplaySetOptions(displaySetOptions: Array<DisplaySetOptions>): void {\n    this.displaySetOptions = displaySetOptions;\n  }\n\n  public getSyncGroups(): SyncGroup[] {\n    this.viewportOptions.syncGroups ||= [];\n    return this.viewportOptions.syncGroups;\n  }\n\n  public getDisplaySetOptions(): Array<DisplaySetOptions> {\n    return this.displaySetOptions;\n  }\n\n  public getViewportType(): Enums.ViewportType {\n    return this.viewportOptions.viewportType || Enums.ViewportType.STACK;\n  }\n\n  public getToolGroupId(): string {\n    return this.viewportOptions.toolGroupId;\n  }\n\n  public getBackground(): Types.Point3 {\n    return this.viewportOptions.background || [0, 0, 0];\n  }\n\n  public getOrientation(): Enums.OrientationAxis {\n    return this.viewportOptions.orientation;\n  }\n\n  public getDisplayArea(): Types.DisplayArea {\n    return this.viewportOptions.displayArea;\n  }\n\n  public getInitialImageOptions(): InitialImageOptions {\n    return this.viewportOptions.initialImageOptions;\n  }\n\n  // Handle incoming public display set options or a display set select\n  // with a contained options.\n  private mapDisplaySetOptions(\n    options: PublicDisplaySetOptions[] | DisplaySetSelector[] = [{}]\n  ): Array<DisplaySetOptions> {\n    const displaySetOptions: Array<DisplaySetOptions> = [];\n\n    options.forEach(item => {\n      let option = item?.options || item;\n      if (!option) {\n        option = {\n          blendMode: undefined,\n          slabThickness: undefined,\n          colormap: undefined,\n          voi: {},\n          voiInverted: false,\n        };\n      }\n      const blendMode = getCornerstoneBlendMode(option.blendMode);\n\n      displaySetOptions.push({\n        voi: option.voi,\n        voiInverted: option.voiInverted,\n        colormap: option.colormap,\n        slabThickness: option.slabThickness,\n        blendMode,\n        displayPreset: option.displayPreset,\n      });\n    });\n\n    return displaySetOptions;\n  }\n}\n\nexport default ViewportInfo;\n","import { Enums } from '@cornerstonejs/core';\n\nconst AXIAL = 'axial';\nconst SAGITTAL = 'sagittal';\nconst CORONAL = 'coronal';\n\nexport default function getCornerstoneOrientation(orientation: string): Enums.OrientationAxis {\n  if (orientation) {\n    switch (orientation.toLowerCase()) {\n      case AXIAL:\n        return Enums.OrientationAxis.AXIAL;\n      case SAGITTAL:\n        return Enums.OrientationAxis.SAGITTAL;\n      case CORONAL:\n        return Enums.OrientationAxis.CORONAL;\n      default:\n        return Enums.OrientationAxis.ACQUISITION;\n    }\n  }\n\n  return Enums.OrientationAxis.ACQUISITION;\n}\n","import { Enums } from '@cornerstonejs/core';\n\nconst MIP = 'mip';\nconst MINIP = 'minip';\nconst AVG = 'avg';\n\nexport default function getCornerstoneBlendMode(blendMode: string): Enums.BlendModes {\n  if (!blendMode) {\n    return Enums.BlendModes.COMPOSITE;\n  }\n\n  if (blendMode.toLowerCase() === MIP) {\n    return Enums.BlendModes.MAXIMUM_INTENSITY_BLEND;\n  }\n\n  if (blendMode.toLowerCase() === MINIP) {\n    return Enums.BlendModes.MINIMUM_INTENSITY_BLEND;\n  }\n\n  if (blendMode.toLowerCase() === AVG) {\n    return Enums.BlendModes.AVERAGE_INTENSITY_BLEND;\n  }\n\n  throw new Error(`Unsupported blend mode: ${blendMode}`);\n}\n","/**\n * Jump Presets - This enum defines the 3 jump states which are available\n * to be used with the jumpToSlice utility function.\n */\nenum JumpPresets {\n  /** Jumps to first slice */\n  First = 'first',\n  /** Jumps to last slice */\n  Last = 'last',\n  /** Jumps to the middle slice */\n  Middle = 'middle',\n}\n\nexport default JumpPresets;\n","import { PubSubService, ServicesManager } from '@ohif/core';\nimport * as OhifTypes from '@ohif/core/types';\nimport {\n  RenderingEngine,\n  StackViewport,\n  Types,\n  getRenderingEngine,\n  utilities as csUtils,\n  VolumeViewport,\n  VolumeViewport3D,\n  cache,\n  Enums as csEnums,\n  BaseVolumeViewport,\n} from '@cornerstonejs/core';\n\nimport { utilities as csToolsUtils, Enums as csToolsEnums } from '@cornerstonejs/tools';\nimport { IViewportService } from './IViewportService';\nimport { RENDERING_ENGINE_ID } from './constants';\nimport ViewportInfo, { DisplaySetOptions, PublicViewportOptions } from './Viewport';\nimport { StackViewportData, VolumeViewportData } from '../../types/CornerstoneCacheService';\nimport { LutPresentation, PositionPresentation, Presentations } from '../../types/Presentation';\n\nimport JumpPresets from '../../utils/JumpPresets';\n\nconst EVENTS = {\n  VIEWPORT_DATA_CHANGED: 'event::cornerstoneViewportService:viewportDataChanged',\n  VIEWPORT_VOLUMES_CHANGED: 'event::cornerstoneViewportService:viewportVolumesChanged',\n};\n\n/**\n * Handles cornerstone viewport logic including enabling, disabling, and\n * updating the viewport.\n */\nclass CornerstoneViewportService extends PubSubService implements IViewportService {\n  static REGISTRATION = {\n    name: 'cornerstoneViewportService',\n    altName: 'CornerstoneViewportService',\n    create: ({\n      servicesManager,\n    }: OhifTypes.Extensions.ExtensionParams): CornerstoneViewportService => {\n      return new CornerstoneViewportService(servicesManager);\n    },\n  };\n\n  renderingEngine: Types.IRenderingEngine | null;\n  viewportsById: Map<string, ViewportInfo> = new Map();\n  viewportGridResizeObserver: ResizeObserver | null;\n  viewportsDisplaySets: Map<string, string[]> = new Map();\n  beforeResizePositionPresentations: Map<string, PositionPresentation> = new Map();\n\n  // Some configs\n  enableResizeDetector: true;\n  resizeRefreshRateMs: 200;\n  resizeRefreshMode: 'debounce';\n  servicesManager = null;\n\n  resizeQueue = [];\n  viewportResizeTimer = null;\n  gridResizeDelay = 50;\n  gridResizeTimeOut = null;\n\n  constructor(servicesManager: ServicesManager) {\n    super(EVENTS);\n    this.renderingEngine = null;\n    this.viewportGridResizeObserver = null;\n    this.servicesManager = servicesManager;\n  }\n\n  /**\n   * Adds the HTML element to the viewportService\n   * @param {*} viewportId\n   * @param {*} elementRef\n   */\n  public enableViewport(viewportId: string, elementRef: HTMLDivElement): void {\n    const viewportInfo = new ViewportInfo(viewportId);\n    viewportInfo.setElement(elementRef);\n    this.viewportsById.set(viewportId, viewportInfo);\n  }\n\n  public getViewportIds(): string[] {\n    return Array.from(this.viewportsById.keys());\n  }\n\n  /**\n   * It retrieves the renderingEngine if it does exist, or creates one otherwise\n   * @returns {RenderingEngine} rendering engine\n   */\n  public getRenderingEngine() {\n    // get renderingEngine from cache if it exists\n    const renderingEngine = getRenderingEngine(RENDERING_ENGINE_ID);\n\n    if (renderingEngine) {\n      this.renderingEngine = renderingEngine;\n      return this.renderingEngine;\n    }\n\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      this.renderingEngine = new RenderingEngine(RENDERING_ENGINE_ID);\n    }\n\n    return this.renderingEngine;\n  }\n\n  /**\n   * It triggers the resize on the rendering engine, and renders the viewports\n   *\n   * @param isGridResize - if the resize is triggered by a grid resize\n   * this is used to avoid double resize of the viewports since if the\n   * grid is resized, all viewports will be resized so there is no need\n   * to resize them individually which will get triggered by their\n   * individual resize observers\n   */\n  public resize(isGridResize = false) {\n    // if there is a grid resize happening, it means the viewport grid\n    // has been manipulated (e.g., panels closed, added, etc.) and we need\n    // to resize all viewports, so we will add a timeout here to make sure\n    // we don't double resize the viewports when viewports in the grid are\n    // resized individually\n    if (isGridResize) {\n      this.performResize();\n      this.resetGridResizeTimeout();\n      this.resizeQueue = [];\n      clearTimeout(this.viewportResizeTimer);\n    } else {\n      this.enqueueViewportResizeRequest();\n    }\n  }\n\n  /**\n   * Removes the viewport from cornerstone, and destroys the rendering engine\n   */\n  public destroy() {\n    this._removeResizeObserver();\n    this.viewportGridResizeObserver = null;\n    try {\n      this.renderingEngine?.destroy?.();\n    } catch (e) {\n      console.warn('Rendering engine not destroyed', e);\n    }\n    this.viewportsDisplaySets.clear();\n    this.renderingEngine = null;\n    cache.purgeCache();\n  }\n\n  /**\n   * Disables the viewport inside the renderingEngine, if no viewport is left\n   * it destroys the renderingEngine.\n   *\n   * This is called when the element goes away entirely - with new viewportId's\n   * created for every new viewport, this will be called whenever the set of\n   * viewports is changed, but NOT when the viewport position changes only.\n   *\n   * @param viewportId - The viewportId to disable\n   */\n  public disableElement(viewportId: string): void {\n    this.renderingEngine?.disableElement(viewportId);\n\n    // clean up\n    this.viewportsById.delete(viewportId);\n    this.viewportsDisplaySets.delete(viewportId);\n  }\n\n  /**\n   * Sets the presentations for a given viewport. Presentations is an object\n   * that can define the lut or position for a viewport.\n   *\n   * @param viewportId - The ID of the viewport.\n   * @param presentations - The presentations to apply to the viewport.\n   */\n  public setPresentations(viewportId: string, presentations?: Presentations): void {\n    const viewport = this.getCornerstoneViewport(viewportId) as\n      | Types.IStackViewport\n      | Types.IVolumeViewport;\n\n    if (!viewport) {\n      return;\n    }\n\n    if (!presentations) {\n      return;\n    }\n\n    const { lutPresentation, positionPresentation } = presentations;\n    if (lutPresentation) {\n      const { presentation } = lutPresentation;\n      if (viewport instanceof BaseVolumeViewport) {\n        if (presentation instanceof Map) {\n          presentation.forEach((properties, volumeId) => {\n            viewport.setProperties(properties, volumeId);\n          });\n        } else {\n          viewport.setProperties(presentation);\n        }\n      } else {\n        viewport.setProperties(presentation);\n      }\n    }\n\n    if (positionPresentation) {\n      const { viewPlaneNormal, viewUp, zoom, pan } = positionPresentation.presentation;\n      viewport.setCamera({ viewPlaneNormal, viewUp });\n\n      if (zoom !== undefined) {\n        viewport.setZoom(zoom);\n      }\n\n      if (pan !== undefined) {\n        viewport.setPan(pan);\n      }\n    }\n  }\n\n  /**\n   * Retrieves the position presentation information for a given viewport.\n   * @param viewportId The ID of the viewport.\n   * @returns The position presentation object containing various properties\n   * such as ID, viewport type, initial image index, view plane normal, view up, zoom, and pan.\n   */\n  public getPositionPresentation(viewportId: string): PositionPresentation {\n    const viewportInfo = this.viewportsById.get(viewportId);\n    if (!viewportInfo) {\n      return;\n    }\n\n    const presentationIds = viewportInfo.getPresentationIds();\n\n    if (!presentationIds) {\n      return;\n    }\n\n    const { positionPresentationId } = presentationIds;\n\n    const csViewport = this.getCornerstoneViewport(viewportId);\n    if (!csViewport) {\n      return;\n    }\n\n    const { viewPlaneNormal, viewUp } = csViewport.getCamera();\n    const initialImageIndex = csViewport.getCurrentImageIdIndex() || 0;\n    const zoom = csViewport.getZoom();\n    const pan = csViewport.getPan();\n\n    return {\n      id: positionPresentationId,\n      viewportType: viewportInfo.getViewportType(),\n      presentation: {\n        initialImageIndex,\n        viewUp,\n        viewPlaneNormal,\n        zoom,\n        pan,\n      },\n    };\n  }\n\n  /**\n   * Retrieves the LUT (Lookup Table) presentation for a given viewport.\n   * @param viewportId The ID of the viewport.\n   * @returns The LUT presentation object, or undefined if the viewport does not exist.\n   */\n  public getLutPresentation(viewportId: string): LutPresentation {\n    const viewportInfo = this.viewportsById.get(viewportId);\n    if (!viewportInfo) {\n      return;\n    }\n\n    const presentationIds = viewportInfo.getPresentationIds();\n\n    if (!presentationIds) {\n      return;\n    }\n\n    const { lutPresentationId } = presentationIds;\n\n    const csViewport = this.getCornerstoneViewport(viewportId) as\n      | Types.IStackViewport\n      | Types.IVolumeViewport;\n\n    if (!csViewport) {\n      return;\n    }\n\n    const cleanProperties = properties => {\n      if (properties.isComputedVOI) {\n        delete properties.voiRange;\n        delete properties.VOILUTFunction;\n      }\n      return properties;\n    };\n\n    const presentation =\n      csViewport instanceof BaseVolumeViewport\n        ? new Map()\n        : cleanProperties(csViewport.getProperties());\n\n    if (presentation instanceof Map) {\n      csViewport.getActors().forEach(({ uid: volumeId }) => {\n        const properties = cleanProperties(csViewport.getProperties(volumeId));\n        presentation.set(volumeId, properties);\n      });\n    }\n\n    return {\n      id: lutPresentationId,\n      viewportType: viewportInfo.getViewportType(),\n      presentation,\n    };\n  }\n\n  /**\n   * Retrieves the presentations for a given viewport.\n   * @param viewportId - The ID of the viewport.\n   * @returns The presentations for the viewport.\n   */\n  public getPresentations(viewportId: string): Presentations {\n    const viewportInfo = this.viewportsById.get(viewportId);\n    if (!viewportInfo) {\n      return;\n    }\n\n    const positionPresentation = this.getPositionPresentation(viewportId);\n    const lutPresentation = this.getLutPresentation(viewportId);\n\n    return {\n      positionPresentation,\n      lutPresentation,\n    };\n  }\n\n  /**\n   * Stores the presentation state for a given viewport inside the\n   * stateSyncService. This is used to persist the presentation state\n   * across different scenarios e.g., when the viewport is changing the\n   * display set, or when the viewport is moving to a different layout.\n   *\n   * @param viewportId The ID of the viewport.\n   */\n  public storePresentation({ viewportId }) {\n    let presentations = null as Presentations;\n    try {\n      presentations = this.getPresentations(viewportId);\n      if (!presentations?.positionPresentation && !presentations?.lutPresentation) {\n        return;\n      }\n    } catch (error) {\n      console.warn(error);\n      return;\n    }\n\n    const { stateSyncService, syncGroupService } = this.servicesManager.services;\n\n    const synchronizers = syncGroupService.getSynchronizersForViewport(viewportId);\n\n    const { positionPresentationStore, synchronizersStore, lutPresentationStore } =\n      stateSyncService.getState();\n\n    const { lutPresentation, positionPresentation } = presentations;\n    const { id: positionPresentationId } = positionPresentation;\n    const { id: lutPresentationId } = lutPresentation;\n\n    const updateStore = (store, id, value) => ({ ...store, [id]: value });\n\n    const newState = {} as { [key: string]: any };\n\n    if (lutPresentationId) {\n      newState.lutPresentationStore = updateStore(\n        lutPresentationStore,\n        lutPresentationId,\n        lutPresentation\n      );\n    }\n\n    if (positionPresentationId) {\n      newState.positionPresentationStore = updateStore(\n        positionPresentationStore,\n        positionPresentationId,\n        positionPresentation\n      );\n    }\n\n    if (synchronizers?.length) {\n      newState.synchronizersStore = updateStore(\n        synchronizersStore,\n        viewportId,\n        synchronizers.map(synchronizer => ({\n          id: synchronizer.id,\n          sourceViewports: [...synchronizer.getSourceViewports()],\n          targetViewports: [...synchronizer.getTargetViewports()],\n        }))\n      );\n    }\n\n    stateSyncService.store(newState);\n  }\n\n  /**\n   * Sets the viewport data for a viewport.\n   * @param viewportId - The ID of the viewport to set the data for.\n   * @param viewportData - The viewport data to set.\n   * @param publicViewportOptions - The public viewport options.\n   * @param publicDisplaySetOptions - The public display set options.\n   * @param presentations - The presentations to set.\n   */\n  public setViewportData(\n    viewportId: string,\n    viewportData: StackViewportData | VolumeViewportData,\n    publicViewportOptions: PublicViewportOptions,\n    publicDisplaySetOptions: DisplaySetOptions[],\n    presentations?: Presentations\n  ): void {\n    const renderingEngine = this.getRenderingEngine();\n\n    // This is the old viewportInfo, which may have old options but we might be\n    // using its viewport (same viewportId as the new viewportInfo)\n    const viewportInfo = this.viewportsById.get(viewportId);\n\n    // We should store the presentation for the current viewport since we can't only\n    // rely to store it WHEN the viewport is disabled since we might keep around the\n    // same viewport/element and just change the viewportData for it (drag and drop etc.)\n    // the disableElement storePresentation handle would not be called in this case\n    // and we would lose the presentation.\n    this.storePresentation({ viewportId: viewportInfo.getViewportId() });\n\n    if (!viewportInfo) {\n      throw new Error('element is not enabled for the given viewportId');\n    }\n\n    // override the viewportOptions and displaySetOptions with the public ones\n    // since those are the newly set ones, we set them here so that it handles defaults\n    const displaySetOptions = viewportInfo.setPublicDisplaySetOptions(publicDisplaySetOptions);\n    const viewportOptions = viewportInfo.setPublicViewportOptions(publicViewportOptions);\n\n    const element = viewportInfo.getElement();\n    const type = viewportInfo.getViewportType();\n    const background = viewportInfo.getBackground();\n    const orientation = viewportInfo.getOrientation();\n    const displayArea = viewportInfo.getDisplayArea();\n\n    const viewportInput: Types.PublicViewportInput = {\n      viewportId,\n      element,\n      type,\n      defaultOptions: {\n        background,\n        orientation,\n        displayArea,\n      },\n    };\n\n    // Rendering Engine Id set should happen before enabling the element\n    // since there are callbacks that depend on the renderingEngine id\n    // Todo: however, this is a limitation which means that we can't change\n    // the rendering engine id for a given viewport which might be a super edge\n    // case\n    viewportInfo.setRenderingEngineId(renderingEngine.id);\n\n    // Todo: this is not optimal at all, we are re-enabling the already enabled\n    // element which is not what we want. But enabledElement as part of the\n    // renderingEngine is designed to be used like this. This will trigger\n    // ENABLED_ELEMENT again and again, which will run onEnableElement callbacks\n    renderingEngine.enableElement(viewportInput);\n\n    viewportInfo.setViewportOptions(viewportOptions);\n    viewportInfo.setDisplaySetOptions(displaySetOptions);\n    viewportInfo.setViewportData(viewportData);\n    viewportInfo.setViewportId(viewportId);\n\n    this.viewportsById.set(viewportId, viewportInfo);\n\n    const viewport = renderingEngine.getViewport(viewportId);\n    const displaySetPromise = this._setDisplaySets(\n      viewport,\n      viewportData,\n      viewportInfo,\n      presentations\n    );\n\n    // The broadcast event here ensures that listeners have a valid, up to date\n    // viewport to access.  Doing it too early can result in exceptions or\n    // invalid data.\n    displaySetPromise.then(() => {\n      this._broadcastEvent(this.EVENTS.VIEWPORT_DATA_CHANGED, {\n        viewportData,\n        viewportId,\n      });\n    });\n  }\n\n  /**\n   * Retrieves the Cornerstone viewport with the specified ID.\n   *\n   * @param viewportId - The ID of the viewport.\n   * @returns The Cornerstone viewport object if found, otherwise null.\n   */\n  public getCornerstoneViewport(viewportId: string): Types.IViewport | null {\n    const viewportInfo = this.getViewportInfo(viewportId);\n\n    if (!viewportInfo || !this.renderingEngine || this.renderingEngine.hasBeenDestroyed) {\n      return null;\n    }\n\n    const viewport = this.renderingEngine.getViewport(viewportId);\n\n    return viewport;\n  }\n\n  /**\n   * Retrieves the viewport information for a given viewport ID. The viewport information\n   * is the OHIF construct that holds different options and data for a given viewport and\n   * is different from the cornerstone viewport.\n   *\n   * @param viewportId The ID of the viewport.\n   * @returns The viewport information.\n   */\n  public getViewportInfo(viewportId: string): ViewportInfo {\n    return this.viewportsById.get(viewportId);\n  }\n\n  /**\n   * Looks through the viewports to see if the specified measurement can be\n   * displayed in one of the viewports.\n   *\n   * @param measurement\n   *          The measurement that is desired to view.\n   * @param activeViewportId - the index that was active at the time the jump\n   *          was initiated.\n   * @return the viewportId that the measurement should be displayed in.\n   */\n  public getViewportIdToJump(\n    activeViewportId: string,\n    displaySetInstanceUID: string,\n    cameraProps: unknown\n  ): string {\n    const viewportInfo = this.getViewportInfo(activeViewportId);\n\n    if (viewportInfo.getViewportType() === csEnums.ViewportType.VOLUME_3D) {\n      return null;\n    }\n\n    const { referencedImageId } = cameraProps;\n    if (viewportInfo?.contains(displaySetInstanceUID, referencedImageId)) {\n      return activeViewportId;\n    }\n\n    return (\n      [...this.viewportsById.values()].find(viewportInfo =>\n        viewportInfo.contains(displaySetInstanceUID, referencedImageId)\n      )?.viewportId ?? null\n    );\n  }\n\n  private async _setStackViewport(\n    viewport: Types.IStackViewport,\n    viewportData: StackViewportData,\n    viewportInfo: ViewportInfo,\n    presentations: Presentations = {}\n  ): Promise<void> {\n    const displaySetOptions = viewportInfo.getDisplaySetOptions();\n\n    const { imageIds, initialImageIndex, displaySetInstanceUID } = viewportData.data;\n\n    this.viewportsDisplaySets.set(viewport.id, [displaySetInstanceUID]);\n\n    let initialImageIndexToUse =\n      presentations?.positionPresentation?.initialImageIndex ?? initialImageIndex;\n\n    if (initialImageIndexToUse === undefined || initialImageIndexToUse === null) {\n      initialImageIndexToUse = this._getInitialImageIndexForViewport(viewportInfo, imageIds) || 0;\n    }\n\n    const properties = { ...presentations.lutPresentation?.properties };\n    if (!presentations.lutPresentation?.properties) {\n      const { voi, voiInverted, colormap } = displaySetOptions[0];\n      if (voi && (voi.windowWidth || voi.windowCenter)) {\n        const { lower, upper } = csUtils.windowLevel.toLowHighRange(\n          voi.windowWidth,\n          voi.windowCenter\n        );\n        properties.voiRange = { lower, upper };\n      }\n\n      if (voiInverted !== undefined) {\n        properties.invert = voiInverted;\n      }\n\n      if (colormap !== undefined) {\n        properties.colormap = colormap;\n      }\n    }\n\n    return viewport.setStack(imageIds, initialImageIndexToUse).then(() => {\n      viewport.setProperties({ ...properties });\n      this.setPresentations(viewport.id, presentations);\n    });\n  }\n\n  private _getInitialImageIndexForViewport(\n    viewportInfo: ViewportInfo,\n    imageIds?: string[]\n  ): number {\n    const initialImageOptions = viewportInfo.getInitialImageOptions();\n\n    if (!initialImageOptions) {\n      return;\n    }\n\n    const { index, preset } = initialImageOptions;\n    const viewportType = viewportInfo.getViewportType();\n\n    let numberOfSlices;\n    if (viewportType === csEnums.ViewportType.STACK) {\n      numberOfSlices = imageIds.length;\n    } else if (viewportType === csEnums.ViewportType.ORTHOGRAPHIC) {\n      const viewport = this.getCornerstoneViewport(viewportInfo.getViewportId());\n      const imageSliceData = csUtils.getImageSliceDataForVolumeViewport(viewport);\n\n      if (!imageSliceData) {\n        return;\n      }\n\n      ({ numberOfSlices } = imageSliceData);\n    } else {\n      return;\n    }\n\n    return this._getInitialImageIndex(numberOfSlices, index, preset);\n  }\n\n  _getInitialImageIndex(numberOfSlices: number, imageIndex?: number, preset?: JumpPresets): number {\n    const lastSliceIndex = numberOfSlices - 1;\n\n    if (imageIndex !== undefined) {\n      return csToolsUtils.clip(imageIndex, 0, lastSliceIndex);\n    }\n\n    if (preset === JumpPresets.First) {\n      return 0;\n    }\n\n    if (preset === JumpPresets.Last) {\n      return lastSliceIndex;\n    }\n\n    if (preset === JumpPresets.Middle) {\n      // Note: this is a simple but yet very important formula.\n      // since viewport reset works with the middle slice\n      // if the below formula is not correct, on a viewport reset\n      // it will jump to a different slice than the middle one which\n      // was the initial slice, and we have some tools such as Crosshairs\n      // which rely on a relative camera modifications and those will break.\n      return lastSliceIndex % 2 === 0 ? lastSliceIndex / 2 : (lastSliceIndex + 1) / 2;\n    }\n\n    return 0;\n  }\n\n  async _setVolumeViewport(\n    viewport: Types.IVolumeViewport,\n    viewportData: VolumeViewportData,\n    viewportInfo: ViewportInfo,\n    presentations: Presentations = {}\n  ): Promise<void> {\n    // TODO: We need to overhaul the way data sources work so requests can be made\n    // async. I think we should follow the image loader pattern which is async and\n    // has a cache behind it.\n    // The problem is that to set this volume, we need the metadata, but the request is\n    // already in-flight, and the promise is not cached, so we have no way to wait for\n    // it and know when it has fully arrived.\n    // loadStudyMetadata(StudyInstanceUID) => Promise([instances for study])\n    // loadSeriesMetadata(StudyInstanceUID, SeriesInstanceUID) => Promise([instances for series])\n    // If you call loadStudyMetadata and it's not in the DicomMetadataStore cache, it should fire\n    // a request through the data source?\n    // (This call may or may not create sub-requests for series metadata)\n    const volumeInputArray = [];\n    const displaySetOptionsArray = viewportInfo.getDisplaySetOptions();\n    const { hangingProtocolService } = this.servicesManager.services;\n\n    const volumeToLoad = [];\n    const displaySetInstanceUIDs = [];\n\n    for (const [index, data] of viewportData.data.entries()) {\n      const { volume, imageIds, displaySetInstanceUID } = data;\n\n      displaySetInstanceUIDs.push(displaySetInstanceUID);\n\n      if (!volume) {\n        console.log('Volume display set not found');\n        continue;\n      }\n\n      volumeToLoad.push(volume);\n\n      const displaySetOptions = displaySetOptionsArray[index];\n      const { volumeId } = volume;\n\n      volumeInputArray.push({\n        imageIds,\n        volumeId,\n        blendMode: displaySetOptions.blendMode,\n        slabThickness: this._getSlabThickness(displaySetOptions, volumeId),\n      });\n    }\n\n    this.viewportsDisplaySets.set(viewport.id, displaySetInstanceUIDs);\n\n    const volumesNotLoaded = volumeToLoad.filter(volume => !volume.loadStatus.loaded);\n\n    if (volumesNotLoaded.length) {\n      if (hangingProtocolService.getShouldPerformCustomImageLoad()) {\n        // delegate the volume loading to the hanging protocol service if it has a custom image load strategy\n        return hangingProtocolService.runImageLoadStrategy({\n          viewportId: viewport.id,\n          volumeInputArray,\n        });\n      }\n\n      volumesNotLoaded.forEach(volume => {\n        if (!volume.loadStatus.loading) {\n          volume.load();\n        }\n      });\n    }\n\n    // This returns the async continuation only\n    return this.setVolumesForViewport(viewport, volumeInputArray, presentations);\n  }\n\n  public async setVolumesForViewport(viewport, volumeInputArray, presentations) {\n    const { displaySetService, toolGroupService, viewportGridService } =\n      this.servicesManager.services;\n\n    const viewportInfo = this.getViewportInfo(viewport.id);\n    const displaySetOptions = viewportInfo.getDisplaySetOptions();\n    const displaySetUIDs = viewportGridService.getDisplaySetsUIDsForViewport(viewport.id);\n    const displaySet = displaySetService.getDisplaySetByUID(displaySetUIDs[0]);\n    const displaySetModality = displaySet?.Modality;\n\n    // Todo: use presentations states\n    const volumesProperties = volumeInputArray.map((volumeInput, index) => {\n      const { volumeId } = volumeInput;\n      const displaySetOption = displaySetOptions[index];\n      const { voi, voiInverted, colormap, displayPreset } = displaySetOption;\n      const properties = {};\n\n      if (voi && (voi.windowWidth || voi.windowCenter)) {\n        const { lower, upper } = csUtils.windowLevel.toLowHighRange(\n          voi.windowWidth,\n          voi.windowCenter\n        );\n        properties.voiRange = { lower, upper };\n      }\n\n      if (voiInverted !== undefined) {\n        properties.invert = voiInverted;\n      }\n\n      if (colormap !== undefined) {\n        properties.colormap = colormap;\n      }\n\n      if (displayPreset !== undefined) {\n        properties.preset = displayPreset[displaySetModality] || displayPreset.default;\n      }\n\n      return { properties, volumeId };\n    });\n\n    await viewport.setVolumes(volumeInputArray);\n    volumesProperties.forEach(({ properties, volumeId }) => {\n      viewport.setProperties(properties, volumeId);\n    });\n\n    this.setPresentations(viewport.id, presentations);\n\n    // load any secondary displaySets\n    const displaySetInstanceUIDs = this.viewportsDisplaySets.get(viewport.id);\n\n    // can be SEG or RTSTRUCT for now\n    const overlayDisplaySet = displaySetInstanceUIDs\n      .map(displaySetService.getDisplaySetByUID)\n      .find(displaySet => displaySet?.isOverlayDisplaySet);\n\n    if (overlayDisplaySet) {\n      this.addOverlayRepresentationForDisplaySet(overlayDisplaySet, viewport);\n    } else {\n      // If the displaySet is not a SEG displaySet we assume it is a primary displaySet\n      // and we can look into hydrated segmentations to check if any of them are\n      // associated with the primary displaySet\n\n      // get segmentations only returns the hydrated segmentations\n      this._addSegmentationRepresentationToToolGroupIfNecessary(displaySetInstanceUIDs, viewport);\n    }\n\n    const toolGroup = toolGroupService.getToolGroupForViewport(viewport.id);\n    csToolsUtils.segmentation.triggerSegmentationRender(toolGroup.id);\n\n    const imageIndex = this._getInitialImageIndexForViewport(viewportInfo);\n\n    if (imageIndex !== undefined) {\n      csToolsUtils.jumpToSlice(viewport.element, {\n        imageIndex,\n      });\n    }\n\n    viewport.render();\n\n    this._broadcastEvent(this.EVENTS.VIEWPORT_VOLUMES_CHANGED, {\n      viewportInfo,\n    });\n  }\n\n  private _addSegmentationRepresentationToToolGroupIfNecessary(\n    displaySetInstanceUIDs: string[],\n    viewport: any\n  ) {\n    const { segmentationService, toolGroupService } = this.servicesManager.services;\n\n    const toolGroup = toolGroupService.getToolGroupForViewport(viewport.id);\n\n    // this only returns hydrated segmentations\n    const segmentations = segmentationService.getSegmentations();\n\n    for (const segmentation of segmentations) {\n      const toolGroupSegmentationRepresentations =\n        segmentationService.getSegmentationRepresentationsForToolGroup(toolGroup.id) || [];\n\n      // if there is already a segmentation representation for this segmentation\n      // for this toolGroup, don't bother at all\n      const isSegmentationInToolGroup = toolGroupSegmentationRepresentations.find(\n        representation => representation.segmentationId === segmentation.id\n      );\n\n      if (isSegmentationInToolGroup) {\n        continue;\n      }\n\n      // otherwise, check if the hydrated segmentations are in the same FrameOfReferenceUID\n      // as the primary displaySet, if so add the representation (since it was not there)\n      const { id: segDisplaySetInstanceUID } = segmentation;\n      let segFrameOfReferenceUID = this._getFrameOfReferenceUID(segDisplaySetInstanceUID);\n\n      if (!segFrameOfReferenceUID) {\n        // if the segmentation displaySet does not have a FrameOfReferenceUID, we might check the\n        // segmentation itself maybe it has a FrameOfReferenceUID\n        const { FrameOfReferenceUID } = segmentation;\n        if (FrameOfReferenceUID) {\n          segFrameOfReferenceUID = FrameOfReferenceUID;\n        }\n      }\n\n      if (!segFrameOfReferenceUID) {\n        return;\n      }\n\n      let shouldDisplaySeg = false;\n\n      for (const displaySetInstanceUID of displaySetInstanceUIDs) {\n        const primaryFrameOfReferenceUID = this._getFrameOfReferenceUID(displaySetInstanceUID);\n\n        if (segFrameOfReferenceUID === primaryFrameOfReferenceUID) {\n          shouldDisplaySeg = true;\n          break;\n        }\n      }\n\n      if (!shouldDisplaySeg) {\n        return;\n      }\n\n      segmentationService.addSegmentationRepresentationToToolGroup(\n        toolGroup.id,\n        segmentation.id,\n        false, // already hydrated,\n        segmentation.type\n      );\n    }\n  }\n\n  private addOverlayRepresentationForDisplaySet(displaySet: any, viewport: any) {\n    const { segmentationService, toolGroupService } = this.servicesManager.services;\n\n    const { referencedVolumeId } = displaySet;\n    const segmentationId = displaySet.displaySetInstanceUID;\n\n    const toolGroup = toolGroupService.getToolGroupForViewport(viewport.id);\n\n    const representationType =\n      referencedVolumeId && cache.getVolume(referencedVolumeId) !== undefined\n        ? csToolsEnums.SegmentationRepresentations.Labelmap\n        : csToolsEnums.SegmentationRepresentations.Contour;\n\n    segmentationService.addSegmentationRepresentationToToolGroup(\n      toolGroup.id,\n      segmentationId,\n      false,\n      representationType\n    );\n  }\n\n  // Todo: keepCamera is an interim solution until we have a better solution for\n  // keeping the camera position when the viewport data is changed\n  public updateViewport(viewportId: string, viewportData, keepCamera = false) {\n    const viewportInfo = this.getViewportInfo(viewportId);\n    const viewport = this.getCornerstoneViewport(viewportId);\n    const viewportCamera = viewport.getCamera();\n\n    let displaySetPromise;\n\n    if (viewport instanceof VolumeViewport || viewport instanceof VolumeViewport3D) {\n      displaySetPromise = this._setVolumeViewport(viewport, viewportData, viewportInfo).then(() => {\n        if (keepCamera) {\n          viewport.setCamera(viewportCamera);\n          viewport.render();\n        }\n      });\n    }\n\n    if (viewport instanceof StackViewport) {\n      displaySetPromise = this._setStackViewport(viewport, viewportData, viewportInfo);\n    }\n\n    displaySetPromise.then(() => {\n      this._broadcastEvent(this.EVENTS.VIEWPORT_DATA_CHANGED, {\n        viewportData,\n        viewportId,\n      });\n    });\n  }\n\n  _setDisplaySets(\n    viewport: Types.IViewport,\n    viewportData: StackViewportData | VolumeViewportData,\n    viewportInfo: ViewportInfo,\n    presentations: Presentations = {}\n  ): Promise<void> {\n    if (viewport instanceof StackViewport) {\n      return this._setStackViewport(\n        viewport,\n        viewportData as StackViewportData,\n        viewportInfo,\n        presentations\n      );\n    }\n\n    if ([VolumeViewport, VolumeViewport3D].some(type => viewport instanceof type)) {\n      return this._setVolumeViewport(\n        viewport as Types.IVolumeViewport,\n        viewportData as VolumeViewportData,\n        viewportInfo,\n        presentations\n      );\n    }\n\n    throw new Error('Unknown viewport type');\n  }\n\n  /**\n   * Removes the resize observer from the viewport element\n   */\n  _removeResizeObserver() {\n    if (this.viewportGridResizeObserver) {\n      this.viewportGridResizeObserver.disconnect();\n    }\n  }\n\n  _getSlabThickness(displaySetOptions, volumeId) {\n    const { blendMode } = displaySetOptions;\n    if (blendMode === undefined || displaySetOptions.slabThickness === undefined) {\n      return;\n    }\n\n    // if there is a slabThickness set as a number then use it\n    if (typeof displaySetOptions.slabThickness === 'number') {\n      return displaySetOptions.slabThickness;\n    }\n\n    if (displaySetOptions.slabThickness.toLowerCase() === 'fullvolume') {\n      // calculate the slab thickness based on the volume dimensions\n      const imageVolume = cache.getVolume(volumeId);\n\n      const { dimensions } = imageVolume;\n      const slabThickness = Math.sqrt(\n        dimensions[0] * dimensions[0] +\n          dimensions[1] * dimensions[1] +\n          dimensions[2] * dimensions[2]\n      );\n\n      return slabThickness;\n    }\n  }\n\n  _getFrameOfReferenceUID(displaySetInstanceUID) {\n    const { displaySetService } = this.servicesManager.services;\n    const displaySet = displaySetService.getDisplaySetByUID(displaySetInstanceUID);\n\n    if (!displaySet) {\n      return;\n    }\n\n    if (displaySet.frameOfReferenceUID) {\n      return displaySet.frameOfReferenceUID;\n    }\n\n    if (displaySet.Modality === 'SEG') {\n      const { instance } = displaySet;\n      return instance.FrameOfReferenceUID;\n    }\n\n    if (displaySet.Modality === 'RTSTRUCT') {\n      const { instance } = displaySet;\n      return instance.ReferencedFrameOfReferenceSequence.FrameOfReferenceUID;\n    }\n\n    const { images } = displaySet;\n    if (images && images.length) {\n      return images[0].FrameOfReferenceUID;\n    }\n  }\n\n  private enqueueViewportResizeRequest() {\n    this.resizeQueue.push(false); // false indicates viewport resize\n\n    clearTimeout(this.viewportResizeTimer);\n    this.viewportResizeTimer = setTimeout(() => {\n      this.processViewportResizeQueue();\n    }, this.gridResizeDelay);\n  }\n\n  private processViewportResizeQueue() {\n    const isGridResizeInQueue = this.resizeQueue.some(isGridResize => isGridResize);\n    if (this.resizeQueue.length > 0 && !isGridResizeInQueue && !this.gridResizeTimeOut) {\n      this.performResize();\n    }\n\n    // Clear the queue after processing viewport resizes\n    this.resizeQueue = [];\n  }\n\n  private performResize() {\n    const isImmediate = false;\n\n    try {\n      const viewports = this.getRenderingEngine().getViewports();\n\n      // Store the current position presentations for each viewport.\n      viewports.forEach(({ id }) => {\n        const presentation = this.getPositionPresentation(id);\n        this.beforeResizePositionPresentations.set(id, presentation);\n      });\n\n      // Resize the rendering engine and render.\n      const renderingEngine = this.renderingEngine;\n      renderingEngine.resize(isImmediate);\n      renderingEngine.render();\n\n      // Reset the camera for viewports that should reset their camera on resize,\n      // which means only those viewports that have a zoom level of 1.\n      this.beforeResizePositionPresentations.forEach((positionPresentation, viewportId) => {\n        this.setPresentations(viewportId, { positionPresentation });\n      });\n\n      // Resize and render the rendering engine again.\n      renderingEngine.resize(isImmediate);\n      renderingEngine.render();\n    } catch (e) {\n      // This can happen if the resize is too close to navigation or shutdown\n      console.warn('Caught resize exception', e);\n    }\n  }\n\n  private resetGridResizeTimeout() {\n    clearTimeout(this.gridResizeTimeOut);\n    this.gridResizeTimeOut = setTimeout(() => {\n      this.gridResizeTimeOut = null;\n    }, this.gridResizeDelay);\n  }\n}\n\nexport default CornerstoneViewportService;\n","import { ColorMapPreset } from './Colormap';\nimport { CommandsManager, ServicesManager } from '@ohif/core';\n\nexport type ColorbarOptions = {\n  position: string;\n  colormaps: Array<ColorMapPreset>;\n  activeColormapName: string;\n  ticks: object;\n  width: string;\n};\n\nexport type ColorbarProps = {\n  viewportId: string;\n  commandsManager: CommandsManager;\n  serviceManager: ServicesManager;\n  displaySets: Array<any>;\n  colorbarProperties: ColorbarProperties;\n};\n\nexport type ColorbarProperties = {\n  width: string;\n  colorbarTickPosition: string;\n  colorbarContainerPosition: string;\n  colormaps: Array<ColorMapPreset>;\n  colorbarInitialColormap: string;\n};\n\nexport enum ChangeTypes {\n  Removed = 'removed',\n  Added = 'added',\n  Modified = 'modified',\n}\n","import { PubSubService } from '@ohif/core';\nimport { RENDERING_ENGINE_ID } from '../ViewportService/constants';\nimport { StackViewport, VolumeViewport, getRenderingEngine } from '@cornerstonejs/core';\nimport { utilities } from '@cornerstonejs/tools';\nimport { ColorbarOptions, ChangeTypes } from '../../types/Colorbar';\nconst { ViewportColorbar } = utilities.voi.colorbar;\n\nexport default class ColorbarService extends PubSubService {\n  static EVENTS = {\n    STATE_CHANGED: 'event::ColorbarService:stateChanged',\n  };\n\n  static defaultStyles = {\n    position: 'absolute',\n    boxSizing: 'border-box',\n    border: 'solid 1px #555',\n    cursor: 'initial',\n  };\n\n  static positionStyles = {\n    left: { left: '5%' },\n    right: { right: '5%' },\n    top: { top: '5%' },\n    bottom: { bottom: '5%' },\n  };\n\n  static defaultTickStyles = {\n    position: 'left',\n    style: {\n      font: '12px Arial',\n      color: '#fff',\n      maxNumTicks: 8,\n      tickSize: 5,\n      tickWidth: 1,\n      labelMargin: 3,\n    },\n  };\n\n  public static REGISTRATION = {\n    name: 'colorbarService',\n    create: () => {\n      return new ColorbarService();\n    },\n  };\n  colorbars = {};\n\n  constructor() {\n    super(ColorbarService.EVENTS);\n  }\n\n  /**\n   * Adds a colorbar to a specific viewport identified by `viewportId`, using the provided `displaySetInstanceUIDs` and `options`.\n   * This method sets up the colorbar, associates it with the viewport, and applies initial configurations based on the provided options.\n   *\n   * @param viewportId The identifier for the viewport where the colorbar will be added.\n   * @param displaySetInstanceUIDs An array of display set instance UIDs to associate with the colorbar.\n   * @param options Configuration options for the colorbar, including position, colormaps, active colormap name, ticks, and width.\n   */\n  public addColorbar(viewportId, displaySetInstanceUIDs, options = {} as ColorbarOptions) {\n    const renderingEngine = getRenderingEngine(RENDERING_ENGINE_ID);\n    const viewport = renderingEngine.getViewport(viewportId);\n    const { element } = viewport;\n    const actorEntries = viewport.getActors();\n    const { position, width: thickness, activeColormapName, colormaps } = options;\n\n    const numContainers = displaySetInstanceUIDs.length;\n\n    const containers = this.createContainers(\n      numContainers,\n      element,\n      position,\n      thickness,\n      viewportId\n    );\n\n    displaySetInstanceUIDs.forEach((displaySetInstanceUID, index) => {\n      const actorEntry = actorEntries.find(entry => entry.uid.includes(displaySetInstanceUID));\n      const volumeId = actorEntry?.uid;\n      const properties = viewport?.getProperties(volumeId);\n      const colormap = properties?.colormap;\n      // if there's an initial colormap set, and no colormap on the viewport, set it\n      if (activeColormapName && !colormap) {\n        this.setViewportColormap(\n          viewportId,\n          displaySetInstanceUID,\n          colormaps[activeColormapName],\n          true\n        );\n      }\n\n      const colorbarContainer = containers[index];\n\n      const colorbar = new ViewportColorbar({\n        id: `ctColorbar-${viewportId}-${index}`,\n        element,\n        colormaps: options.colormaps || {},\n        // if there's an existing colormap set, we use it, otherwise we use the activeColormapName, otherwise, grayscale\n        activeColormapName: colormap?.name || options?.activeColormapName || 'Grayscale',\n        container: colorbarContainer,\n        ticks: {\n          ...ColorbarService.defaultTickStyles,\n          ...options.ticks,\n        },\n        volumeId: viewport instanceof VolumeViewport ? volumeId : undefined,\n      });\n      if (this.colorbars[viewportId]) {\n        this.colorbars[viewportId].push({ colorbar, container: colorbarContainer });\n      } else {\n        this.colorbars[viewportId] = [{ colorbar, container: colorbarContainer }];\n      }\n    });\n\n    this._broadcastEvent(ColorbarService.EVENTS.STATE_CHANGED, {\n      viewportId,\n      changeType: ChangeTypes.Added,\n    });\n  }\n\n  /**\n   * Removes the colorbar associated with a given viewport ID. This involves cleaning up any created DOM elements and internal references.\n   *\n   * @param viewportId The identifier for the viewport from which the colorbar will be removed.\n   */\n  public removeColorbar(viewportId) {\n    const colorbarInfo = this.colorbars[viewportId];\n    if (!colorbarInfo) {\n      return;\n    }\n\n    colorbarInfo.forEach(({ colorbar, container }) => {\n      container.parentNode.removeChild(container);\n    });\n\n    delete this.colorbars[viewportId];\n\n    this._broadcastEvent(ColorbarService.EVENTS.STATE_CHANGED, {\n      viewportId,\n      changeType: ChangeTypes.Removed,\n    });\n  }\n\n  /**\n   * Checks whether a colorbar is associated with a given viewport ID.\n   *\n   * @param viewportId The identifier for the viewport to check.\n   * @returns `true` if a colorbar exists for the specified viewport, otherwise `false`.\n   */\n  public hasColorbar(viewportId) {\n    return this.colorbars[viewportId] ? true : false;\n  }\n\n  /**\n   * Retrieves the current state of colorbars, including all active colorbars and their configurations.\n   *\n   * @returns An object representing the current state of all colorbars managed by this service.\n   */\n  public getState() {\n    return this.colorbars;\n  }\n\n  /**\n   * Retrieves colorbar information for a specific viewport ID.\n   *\n   * @param viewportId The identifier for the viewport to retrieve colorbar information for.\n   * @returns The colorbar information associated with the specified viewport, if available.\n   */\n  public getViewportColorbar(viewportId) {\n    return this.colorbars[viewportId];\n  }\n\n  /**\n   * Handles the cleanup and removal of all colorbars from the viewports. This is typically called\n   * when exiting the mode or context in which the colorbars are used, ensuring that no DOM\n   * elements or references are left behind.\n   */\n  public onModeExit() {\n    const viewportIds = Object.keys(this.colorbars);\n    viewportIds.forEach(viewportId => {\n      this.removeColorbar(viewportId);\n    });\n  }\n\n  /**\n   * Sets the colormap for a viewport. This function is used internally to update the colormap the viewport\n   *\n   * @param viewportId The identifier of the viewport to update.\n   * @param displaySetInstanceUID The display set instance UID associated with the viewport.\n   * @param colormap The colormap object to set on the viewport.\n   * @param immediate A boolean indicating whether the viewport should be re-rendered immediately after setting the colormap.\n   */\n  private setViewportColormap(viewportId, displaySetInstanceUID, colormap, immediate = false) {\n    const renderingEngine = getRenderingEngine(RENDERING_ENGINE_ID);\n    const viewport = renderingEngine.getViewport(viewportId);\n    const actorEntries = viewport?.getActors();\n    if (!viewport || !actorEntries || actorEntries.length === 0) {\n      return;\n    }\n    const setViewportProperties = (viewport, uid) => {\n      const actorEntry = actorEntries.find(entry => entry.uid.includes(uid));\n      const { actor: volumeActor, uid: volumeId } = actorEntry;\n      viewport.setProperties({ colormap, volumeActor }, volumeId);\n    };\n\n    if (viewport instanceof StackViewport) {\n      setViewportProperties(viewport, viewportId);\n    }\n\n    if (viewport instanceof VolumeViewport) {\n      setViewportProperties(viewport, displaySetInstanceUID);\n    }\n\n    if (immediate) {\n      viewport.render();\n    }\n  }\n\n  /**\n   * Creates the container elements for colorbars based on the specified parameters. This function dynamically\n   * generates and styles DOM elements to host the colorbars, positioning them according to the specified options.\n   *\n   * @param numContainers The number of containers to create, typically corresponding to the number of colorbars.\n   * @param element The DOM element within which the colorbar containers will be placed.\n   * @param position The position of the colorbar containers (e.g., 'top', 'bottom', 'left', 'right').\n   * @param thickness The thickness of the colorbar containers, affecting their width or height depending on their position.\n   * @param viewportId The identifier of the viewport for which the containers are being created.\n   * @returns An array of the created container DOM elements.\n   */\n  private createContainers(numContainers, element, position, thickness, viewportId) {\n    const containers = [];\n    const dimensions = {\n      1: 50,\n      2: 33,\n    };\n    const dimension = dimensions[numContainers] || 50 / numContainers;\n\n    Array.from({ length: numContainers }).forEach((_, i) => {\n      const colorbarContainer = document.createElement('div');\n      colorbarContainer.id = `ctColorbarContainer-${viewportId}-${i + 1}`;\n\n      Object.assign(colorbarContainer.style, ColorbarService.defaultStyles);\n\n      if (['top', 'bottom'].includes(position)) {\n        Object.assign(colorbarContainer.style, {\n          width: `${dimension}%`,\n          height: thickness || '2.5%',\n          left: `${(i + 1) * dimension}%`,\n          transform: 'translateX(-50%)',\n          ...ColorbarService.positionStyles[position],\n        });\n      } else if (['left', 'right'].includes(position)) {\n        Object.assign(colorbarContainer.style, {\n          height: `${dimension}%`,\n          width: thickness || '2.5%',\n          top: `${(i + 1) * dimension}%`,\n          transform: 'translateY(-50%)',\n          ...ColorbarService.positionStyles[position],\n        });\n      }\n\n      element.appendChild(colorbarContainer);\n      containers.push(colorbarContainer);\n    });\n\n    return containers;\n  }\n}\n","import ColorbarService from './ColorbarService';\nexport default ColorbarService;\n","import { imageLoader } from '@cornerstonejs/core';\nimport dicomImageLoader from '@cornerstonejs/dicom-image-loader';\nimport { api } from 'dicomweb-client';\nimport { DICOMWeb, errorHandler } from '@ohif/core';\n\nconst getImageId = imageObj => {\n  if (!imageObj) {\n    return;\n  }\n\n  return typeof imageObj.getImageId === 'function' ? imageObj.getImageId() : imageObj.url;\n};\n\nconst findImageIdOnStudies = (studies, displaySetInstanceUID) => {\n  const study = studies.find(study => {\n    const displaySet = study.displaySets.some(\n      displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\n    );\n    return displaySet;\n  });\n  const { series = [] } = study;\n  const { instances = [] } = series[0] || {};\n  const instance = instances[0];\n\n  return getImageId(instance);\n};\n\nconst someInvalidStrings = strings => {\n  const stringsArray = Array.isArray(strings) ? strings : [strings];\n  const emptyString = string => !string;\n  let invalid = stringsArray.some(emptyString);\n  return invalid;\n};\n\nconst getImageInstance = dataset => {\n  return dataset && dataset.images && dataset.images[0];\n};\n\nconst getNonImageInstance = dataset => {\n  return dataset && dataset.instance;\n};\n\nconst getImageInstanceId = imageInstance => {\n  return getImageId(imageInstance);\n};\n\nconst fetchIt = (url, headers = DICOMWeb.getAuthorizationHeader()) => {\n  return fetch(url, headers).then(response => response.arrayBuffer());\n};\n\nconst cornerstoneRetriever = imageId => {\n  return imageLoader.loadAndCacheImage(imageId).then(image => {\n    return image && image.data && image.data.byteArray.buffer;\n  });\n};\n\nconst wadorsRetriever = (\n  url,\n  studyInstanceUID,\n  seriesInstanceUID,\n  sopInstanceUID,\n  headers = DICOMWeb.getAuthorizationHeader(),\n  errorInterceptor = errorHandler.getHTTPErrorHandler()\n) => {\n  const config = {\n    url,\n    headers,\n    errorInterceptor,\n  };\n  const dicomWeb = new api.DICOMwebClient(config);\n\n  return dicomWeb.retrieveInstance({\n    studyInstanceUID,\n    seriesInstanceUID,\n    sopInstanceUID,\n  });\n};\n\nconst getImageLoaderType = imageId => {\n  const loaderRegExp = /^\\w+\\:/;\n  const loaderType = loaderRegExp.exec(imageId);\n\n  return (\n    (loaderRegExp.lastIndex === 0 &&\n      loaderType &&\n      loaderType[0] &&\n      loaderType[0].replace(':', '')) ||\n    ''\n  );\n};\n\nclass DicomLoaderService {\n  getLocalData(dataset, studies) {\n    // Use referenced imageInstance\n    const imageInstance = getImageInstance(dataset);\n    const nonImageInstance = getNonImageInstance(dataset);\n\n    if (\n      (!imageInstance && !nonImageInstance) ||\n      !nonImageInstance.imageId?.startsWith('dicomfile')\n    ) {\n      return;\n    }\n\n    const instance = imageInstance || nonImageInstance;\n\n    let imageId = getImageInstanceId(instance);\n\n    // or Try to get it from studies\n    if (someInvalidStrings(imageId)) {\n      imageId = findImageIdOnStudies(studies, dataset.displaySetInstanceUID);\n    }\n\n    if (!someInvalidStrings(imageId)) {\n      return dicomImageLoader.wadouri.loadFileRequest(imageId);\n    }\n  }\n\n  getDataByImageType(dataset) {\n    const imageInstance = getImageInstance(dataset);\n\n    if (imageInstance) {\n      const imageId = getImageInstanceId(imageInstance);\n      let getDicomDataMethod = fetchIt;\n      const loaderType = getImageLoaderType(imageId);\n\n      switch (loaderType) {\n        case 'dicomfile':\n          getDicomDataMethod = cornerstoneRetriever.bind(this, imageId);\n          break;\n        case 'wadors':\n          const url = imageInstance.getData().wadoRoot;\n          const studyInstanceUID = imageInstance.getStudyInstanceUID();\n          const seriesInstanceUID = imageInstance.getSeriesInstanceUID();\n          const sopInstanceUID = imageInstance.getSOPInstanceUID();\n          const invalidParams = someInvalidStrings([\n            url,\n            studyInstanceUID,\n            seriesInstanceUID,\n            sopInstanceUID,\n          ]);\n          if (invalidParams) {\n            return;\n          }\n\n          getDicomDataMethod = wadorsRetriever.bind(\n            this,\n            url,\n            studyInstanceUID,\n            seriesInstanceUID,\n            sopInstanceUID\n          );\n          break;\n        case 'wadouri':\n          // Strip out the image loader specifier\n          imageId = imageId.substring(imageId.indexOf(':') + 1);\n\n          if (someInvalidStrings(imageId)) {\n            return;\n          }\n          getDicomDataMethod = fetchIt.bind(this, imageId);\n          break;\n        default:\n          throw new Error(`Unsupported image type: ${loaderType} for imageId: ${imageId}`);\n      }\n\n      return getDicomDataMethod();\n    }\n  }\n\n  getDataByDatasetType(dataset) {\n    const {\n      StudyInstanceUID,\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      authorizationHeaders,\n      wadoRoot,\n      wadoUri,\n      instance,\n    } = dataset;\n    // Retrieve wadors or just try to fetch wadouri\n    if (!someInvalidStrings(wadoRoot)) {\n      return wadorsRetriever(\n        wadoRoot,\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        SOPInstanceUID,\n        authorizationHeaders\n      );\n    } else if (!someInvalidStrings(wadoUri)) {\n      return fetchIt(wadoUri, { headers: authorizationHeaders });\n    } else if (!someInvalidStrings(instance?.url)) {\n      // make sure the url is absolute, remove the scope\n      // from it if it is not absolute. For instance it might be dicomweb:http://....\n      // and we need to remove the dicomweb: part\n      const url = instance.url;\n      const absoluteUrl = url.startsWith('http') ? url : url.substring(url.indexOf(':') + 1);\n      return fetchIt(absoluteUrl, { headers: authorizationHeaders });\n    }\n  }\n\n  *getLoaderIterator(dataset, studies, headers) {\n    yield this.getLocalData(dataset, studies);\n    yield this.getDataByImageType(dataset);\n    yield this.getDataByDatasetType(dataset);\n  }\n\n  findDicomDataPromise(dataset, studies, headers) {\n    dataset.authorizationHeaders = headers;\n    const loaderIterator = this.getLoaderIterator(dataset, studies);\n    // it returns first valid retriever method.\n    for (const loader of loaderIterator) {\n      if (loader) {\n        return loader;\n      }\n    }\n\n    // in case of no valid loader\n    throw new Error('Invalid dicom data loader');\n  }\n}\n\nconst dicomLoaderService = new DicomLoaderService();\n\nexport default dicomLoaderService;\n","import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import { getWebWorkerManager } from '@cornerstonejs/core';\n\nconst workerManager = getWebWorkerManager();\n\nconst WorkerOptions = {\n  maxWorkerInstances: 1,\n  autoTerminateOnIdle: {\n    enabled: true,\n    idleTimeThreshold: 1000,\n  },\n};\n\n// Register the task\nconst workerFn = () => {\n  return new Worker(new URL('./histogramWorker.js', import.meta.url), {\n    name: 'histogram-worker', // name used by the browser to name the worker\n  });\n};\n\nconst getViewportVolumeHistogram = async (viewport, volume, options?) => {\n  workerManager.registerWorker('histogram-worker', workerFn, WorkerOptions);\n\n  if (!volume?.loadStatus.loaded) {\n    return undefined;\n  }\n\n  const volumeImageData = viewport.getImageData(volume.volumeId);\n\n  if (!volumeImageData) {\n    return undefined;\n  }\n\n  let scalarData = volume.scalarData;\n\n  let prevTimePoint;\n  if (volume.numTimePoints > 1) {\n    prevTimePoint = volume.timePointIndex;\n    const middleTimePoint = Math.round(volume.numTimePoints / 2);\n    volume.timePointIndex = middleTimePoint;\n    scalarData = volume.getScalarData(middleTimePoint);\n  }\n\n  const { dimensions, origin, direction, spacing } = volume;\n\n  const range = await workerManager.executeTask('histogram-worker', 'getRange', {\n    dimensions,\n    origin,\n    direction,\n    spacing,\n    scalarData,\n  });\n\n  // after we calculate the range let's reset the timePointIndex\n  if (volume.numTimePoints > 1) {\n    volume.timePointIndex = prevTimePoint;\n  }\n  const { minimum: min, maximum: max } = range;\n  const calcHistOptions = {\n    numBins: 256,\n    min: Math.max(min, options?.min ?? min),\n    max: Math.min(max, options?.max ?? max),\n  };\n\n  const histogram = await workerManager.executeTask('histogram-worker', 'calcHistogram', {\n    data: scalarData,\n    options: calcHistOptions,\n  });\n\n  return histogram;\n};\n\nexport { getViewportVolumeHistogram };\n","import React, { useEffect, useCallback, useState, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\nimport { ServicesManager } from '@ohif/core';\nimport { PanelSection, WindowLevel } from '@ohif/ui';\nimport vtkColorMaps from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\nimport { Enums, eventTarget, cache as cs3DCache, utilities as csUtils } from '@cornerstonejs/core';\nimport { getViewportVolumeHistogram } from './getViewportVolumeHistogram';\n\nconst { Events } = Enums;\n\nconst ViewportWindowLevel = ({\n  servicesManager,\n  viewportId,\n}: {\n  servicesManager: ServicesManager;\n  viewportId: string;\n}): ReactElement => {\n  const { cornerstoneViewportService } = servicesManager.services;\n  const [windowLevels, setWindowLevels] = useState([]);\n  const [cachedHistograms, setCachedHistograms] = useState({});\n\n  /**\n   * Looks for all viewports that has exactly all volumeIds passed as parameter.\n   */\n  const getViewportsWithVolumeIds = useCallback(\n    (volumeIds: string[]) => {\n      const renderingEngine = cornerstoneViewportService.getRenderingEngine();\n      const viewports = renderingEngine.getVolumeViewports();\n\n      return viewports.filter(vp => {\n        const viewportVolumeIds = vp.getActors().map(actor => actor.uid);\n\n        return (\n          volumeIds.length === viewportVolumeIds.length &&\n          volumeIds.every(volumeId => viewportVolumeIds.includes(volumeId))\n        );\n      });\n    },\n    [cornerstoneViewportService]\n  );\n\n  const getNodeOpacity = (volumeActor, nodeIndex) => {\n    const volumeOpacity = volumeActor.getProperty().getScalarOpacity(0);\n    const nodeValue = [];\n\n    volumeOpacity.getNodeValue(nodeIndex, nodeValue);\n\n    return nodeValue[1];\n  };\n\n  /**\n   * Checks if the opacity applied to the PET volume is something like\n   * [{x: 0, y: 0}, {x: 0.1, y: [C]}, {x: [ANY], y: [C]}] where C is a\n   * constant opacity value for all x's greater than 0.1\n   */\n  const isPetVolumeWithDefaultOpacity = (volumeId, volumeActor) => {\n    const volume = cs3DCache.getVolume(volumeId);\n\n    if (!volume) {\n      return false;\n    }\n\n    const modality = volume.metadata.Modality;\n\n    if (modality !== 'PT') {\n      return false;\n    }\n\n    const volumeOpacity = volumeActor.getProperty().getScalarOpacity(0);\n\n    // It must have at least two points (0 and 0.1)\n    if (volumeOpacity.getSize() < 2) {\n      return false;\n    }\n\n    const node1Value = [];\n    const node2Value = [];\n\n    volumeOpacity.getNodeValue(0, node1Value);\n    volumeOpacity.getNodeValue(1, node2Value);\n\n    // First node must be (x:0, y:0} and the second one {x:0.1, y:any}\n    if (node1Value[0] !== 0 || node1Value[1] !== 0 || node2Value[0] !== 0.1) {\n      return false;\n    }\n\n    const expectedOpacity = node2Value[1];\n    const opacitySize = volumeOpacity.getSize();\n    const currentNodeValue = [];\n\n    // Any point after 0.1 must have the same opacity\n    for (let i = 2; i < opacitySize; i++) {\n      volumeOpacity.getNodeValue(i, currentNodeValue);\n\n      if (currentNodeValue[1] !== expectedOpacity) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Checks if the opacity function has a constance opacity value for all x's\n   */\n  const isVolumeWithConstantOpacity = volumeActor => {\n    const volumeOpacity = volumeActor.getProperty().getScalarOpacity(0);\n    const opacitySize = volumeOpacity.getSize();\n    const firstNodeValue = [];\n\n    volumeOpacity.getNodeValue(0, firstNodeValue);\n\n    const firstNodeOpacity = firstNodeValue[1];\n\n    for (let i = 0; i < opacitySize; i++) {\n      const currentNodeValue = [];\n\n      volumeOpacity.getNodeValue(0, currentNodeValue);\n\n      if (currentNodeValue[1] !== firstNodeOpacity) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const getVolumeOpacity = useCallback((viewport, volumeId) => {\n    const volumeActor = viewport.getActor(volumeId).actor;\n\n    if (isPetVolumeWithDefaultOpacity(volumeId, volumeActor)) {\n      // Get the opacity from the second node at 0.1\n      return getNodeOpacity(volumeActor, 1);\n    } else if (isVolumeWithConstantOpacity(volumeActor)) {\n      return getNodeOpacity(volumeActor, 0);\n    }\n\n    return undefined;\n  }, []);\n\n  const getWindowLevelsData = useCallback(\n    async (viewportId: number) => {\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n\n      if (!viewport) {\n        return [];\n      }\n\n      const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\n\n      const volumeIds = viewport.getActors().map(actor => actor.uid);\n      const viewportProperties = viewport.getProperties();\n      const { voiRange } = viewportProperties;\n      const viewportVoi = voiRange\n        ? {\n            windowWidth: voiRange.upper - voiRange.lower,\n            windowCenter: voiRange.lower + (voiRange.upper - voiRange.lower) / 2,\n          }\n        : undefined;\n\n      const windowLevels = await Promise.all(\n        volumeIds.map(async (volumeId, volumeIndex) => {\n          const volume = cs3DCache.getVolume(volumeId);\n\n          if (!volume) {\n            return null;\n          }\n\n          const opacity = getVolumeOpacity(viewport, volumeId);\n          const { metadata, scaling } = volume;\n          const modality = metadata.Modality;\n\n          // TODO: find a proper way to fix the histogram\n          const options = {\n            min: modality === 'PT' ? 0.1 : -999,\n            max: modality === 'PT' ? 5 : 10000,\n          };\n\n          const histogram =\n            cachedHistograms[volumeId] ??\n            (await getViewportVolumeHistogram(viewport, volume, options));\n          const { voi: displaySetVOI, colormap: displaySetColormap } =\n            viewportInfo.displaySetOptions[volumeIndex];\n          let colormap;\n          if (displaySetColormap) {\n            colormap =\n              csUtils.colormap.getColormap(displaySetColormap.name) ??\n              vtkColorMaps.getPresetByName(displaySetColormap.name);\n          }\n\n          const voi = !volumeIndex ? viewportVoi ?? displaySetVOI : displaySetVOI;\n\n          return {\n            viewportId,\n            modality,\n            volumeId,\n            volumeIndex,\n            voi,\n            histogram,\n            colormap,\n            step: scaling?.PT ? 0.05 : 1,\n            opacity,\n            showOpacitySlider: volumeIndex === 1 && opacity !== undefined,\n          };\n        })\n      );\n\n      const data = windowLevels.filter(Boolean);\n      return data;\n    },\n\n    [cachedHistograms, cornerstoneViewportService, getVolumeOpacity]\n  );\n\n  const updateViewportHistograms = useCallback(() => {\n    getWindowLevelsData(viewportId).then(windowLevels => {\n      setWindowLevels(windowLevels);\n    });\n  }, [viewportId, getWindowLevelsData]);\n\n  const handleCornerstoneVOIModified = useCallback(\n    e => {\n      const { detail } = e;\n      const { volumeId, range } = detail;\n      const oldWindowLevel = windowLevels.find(wl => wl.volumeId === volumeId);\n\n      if (!oldWindowLevel) {\n        return;\n      }\n\n      const oldVOI = oldWindowLevel.voi;\n      const windowWidth = range.upper - range.lower;\n      const windowCenter = range.lower + windowWidth / 2;\n\n      if (windowWidth === oldVOI.windowWidth && windowCenter === oldVOI.windowCenter) {\n        return;\n      }\n\n      const newWindowLevel = {\n        ...oldWindowLevel,\n        voi: {\n          windowWidth,\n          windowCenter,\n        },\n      };\n\n      setWindowLevels(\n        windowLevels.map(windowLevel =>\n          windowLevel === oldWindowLevel ? newWindowLevel : windowLevel\n        )\n      );\n    },\n    [windowLevels]\n  );\n\n  const debouncedHandleCornerstoneVOIModified = useCallback(\n    debounce(handleCornerstoneVOIModified, 100),\n    [handleCornerstoneVOIModified]\n  );\n\n  const handleVOIChange = useCallback(\n    (volumeId, voi) => {\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n\n      const newRange = {\n        lower: voi.windowCenter - voi.windowWidth / 2,\n        upper: voi.windowCenter + voi.windowWidth / 2,\n      };\n\n      viewport.setProperties({ voiRange: newRange }, volumeId);\n      viewport.render();\n    },\n    [cornerstoneViewportService, viewportId]\n  );\n\n  const handleOpacityChange = useCallback(\n    (viewportId, _volumeIndex, volumeId, opacity) => {\n      const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportId);\n\n      if (!viewport) {\n        return;\n      }\n\n      const viewportVolumeIds = viewport.getActors().map(actor => actor.uid);\n      const viewports = getViewportsWithVolumeIds(viewportVolumeIds);\n\n      viewports.forEach(vp => {\n        vp.setProperties({ colormap: { opacity } }, volumeId);\n        vp.render();\n      });\n    },\n    [getViewportsWithVolumeIds, cornerstoneViewportService]\n  );\n\n  // Listen to windowLevels changes and caches all the new ones\n  useEffect(() => {\n    const newVolumeHistograms = windowLevels\n      .filter(windowLevel => !cachedHistograms[windowLevel.volumeId] && windowLevel.histogram)\n      .reduce((volumeHistograms, windowLevel) => {\n        // If the histogram exists, add it to the volumeHistograms object\n        if (windowLevel?.histogram) {\n          volumeHistograms[windowLevel.volumeId] = windowLevel.histogram;\n        }\n        return volumeHistograms;\n      }, {});\n\n    if (Object.keys(newVolumeHistograms).length) {\n      setCachedHistograms(prev => ({ ...prev, ...newVolumeHistograms }));\n    }\n  }, [windowLevels, cachedHistograms]);\n\n  // Updates the histogram when the viewport index prop has changed\n  useEffect(() => updateViewportHistograms(), [viewportId, updateViewportHistograms]);\n\n  // Listen to cornerstone events on \"eventTarget\" and at the document level\n  useEffect(() => {\n    eventTarget.addEventListener(Events.IMAGE_VOLUME_LOADING_COMPLETED, updateViewportHistograms);\n\n    document.addEventListener(Events.VOI_MODIFIED, debouncedHandleCornerstoneVOIModified, true);\n\n    return () => {\n      eventTarget.removeEventListener(\n        Events.IMAGE_VOLUME_LOADING_COMPLETED,\n        updateViewportHistograms\n      );\n\n      document.removeEventListener(\n        Events.VOI_MODIFIED,\n        debouncedHandleCornerstoneVOIModified,\n        true\n      );\n    };\n  }, [updateViewportHistograms, debouncedHandleCornerstoneVOIModified]);\n\n  // Updates the viewport when the context of the viewport has changed. This is\n  // necessary when moving across different stages because the viewport index\n  // may not change but the volumes loaded on it may change.\n  useEffect(() => {\n    const { unsubscribe } = cornerstoneViewportService.subscribe(\n      cornerstoneViewportService.EVENTS.VIEWPORT_VOLUMES_CHANGED,\n      ({ viewportInfo }) => {\n        if (viewportInfo.viewportId === viewportId) {\n          updateViewportHistograms();\n        }\n      }\n    );\n\n    return () => {\n      unsubscribe();\n    };\n  }, [viewportId, cornerstoneViewportService, updateViewportHistograms]);\n\n  return (\n    <PanelSection title=\"Window Level\">\n      {windowLevels.map((windowLevel, i) => {\n        if (!windowLevel.histogram) {\n          return null;\n        }\n\n        return (\n          <WindowLevel\n            key={windowLevel.volumeId}\n            title={`${windowLevel.modality}`}\n            histogram={windowLevel.histogram}\n            voi={windowLevel.voi}\n            step={windowLevel.step}\n            showOpacitySlider={windowLevel.showOpacitySlider}\n            colormap={windowLevel.colormap}\n            onVOIChange={voi => handleVOIChange(windowLevel.volumeId, voi)}\n            opacity={windowLevel.opacity}\n            onOpacityChange={opacity =>\n              handleOpacityChange(windowLevel.viewportId, i, windowLevel.volumeId, opacity)\n            }\n          />\n        );\n      })}\n    </PanelSection>\n  );\n};\n\nViewportWindowLevel.propTypes = {\n  servicesManager: PropTypes.instanceOf(ServicesManager),\n  viewportId: PropTypes.string.isRequired,\n};\n\nexport default ViewportWindowLevel;\n","import React, { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { ServicesManager } from '@ohif/core';\nimport { useViewportGrid } from '@ohif/ui';\nimport ViewportWindowLevel from '../ViewportWindowLevel/ViewportWindowLevel';\n\nconst ActiveViewportWindowLevel = ({\n  servicesManager,\n}: {\n  servicesManager: ServicesManager;\n}): ReactElement => {\n  const [viewportGrid] = useViewportGrid();\n  const { activeViewportId } = viewportGrid;\n\n  return (\n    <>\n      {activeViewportId && (\n        <ViewportWindowLevel\n          servicesManager={servicesManager}\n          viewportId={activeViewportId}\n        />\n      )}\n    </>\n  );\n};\n\nActiveViewportWindowLevel.propTypes = {\n  servicesManager: PropTypes.instanceOf(ServicesManager),\n};\n\nexport default ActiveViewportWindowLevel;\n","import React from 'react';\nimport * as cornerstone from '@cornerstonejs/core';\nimport * as cornerstoneTools from '@cornerstonejs/tools';\nimport {\n  Enums as cs3DEnums,\n  imageLoadPoolManager,\n  imageRetrievalPoolManager,\n} from '@cornerstonejs/core';\nimport * as csStreamingImageVolumeLoader from '@cornerstonejs/streaming-image-volume-loader';\nimport { Enums as cs3DToolsEnums } from '@cornerstonejs/tools';\nimport { ServicesManager, Types } from '@ohif/core';\n\nimport init from './init';\nimport getCustomizationModule from './getCustomizationModule';\nimport getCommandsModule from './commandsModule';\nimport getHangingProtocolModule from './getHangingProtocolModule';\nimport getToolbarModule from './getToolbarModule';\nimport ToolGroupService from './services/ToolGroupService';\nimport SyncGroupService from './services/SyncGroupService';\nimport SegmentationService from './services/SegmentationService';\nimport CornerstoneCacheService from './services/CornerstoneCacheService';\nimport CornerstoneViewportService from './services/ViewportService/CornerstoneViewportService';\nimport ColorbarService from './services/ColorbarService';\nimport * as CornerstoneExtensionTypes from './types';\n\nimport { toolNames } from './initCornerstoneTools';\nimport { getEnabledElement, reset as enabledElementReset } from './state';\nimport dicomLoaderService from './utils/dicomLoaderService';\nimport getActiveViewportEnabledElement from './utils/getActiveViewportEnabledElement';\n\nimport { id } from './id';\nimport { measurementMappingUtils } from './utils/measurementServiceMappings';\nimport type { PublicViewportOptions } from './services/ViewportService/Viewport';\nimport ImageOverlayViewerTool from './tools/ImageOverlayViewerTool';\nimport { showLabelAnnotationPopup } from './utils/callInputDialog';\nimport ViewportActionCornersService from './services/ViewportActionCornersService/ViewportActionCornersService';\nimport { ViewportActionCornersProvider } from './contextProviders/ViewportActionCornersProvider';\nimport ActiveViewportWindowLevel from './components/ActiveViewportWindowLevel';\n\nconst { helpers: volumeLoaderHelpers } = csStreamingImageVolumeLoader;\nconst { getDynamicVolumeInfo } = volumeLoaderHelpers ?? {};\n\nconst Component = React.lazy(() => {\n  return import(/* webpackPrefetch: true */ './Viewport/OHIFCornerstoneViewport');\n});\n\nconst OHIFCornerstoneViewport = props => {\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n};\n\n/**\n *\n */\nconst cornerstoneExtension: Types.Extensions.Extension = {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id,\n\n  onModeEnter: ({ servicesManager }): void => {\n    const { cornerstoneViewportService, toolbarService, segmentationService } =\n      servicesManager.services;\n    toolbarService.registerEventForToolbarUpdate(cornerstoneViewportService, [\n      cornerstoneViewportService.EVENTS.VIEWPORT_DATA_CHANGED,\n    ]);\n\n    toolbarService.registerEventForToolbarUpdate(segmentationService, [\n      segmentationService.EVENTS.SEGMENTATION_ADDED,\n      segmentationService.EVENTS.SEGMENTATION_REMOVED,\n      segmentationService.EVENTS.SEGMENTATION_UPDATED,\n    ]);\n\n    toolbarService.registerEventForToolbarUpdate(cornerstone.eventTarget, [\n      cornerstoneTools.Enums.Events.TOOL_ACTIVATED,\n    ]);\n  },\n\n  onModeExit: ({ servicesManager }): void => {\n    const { cineService } = servicesManager.services;\n    // Empty out the image load and retrieval pools to prevent memory leaks\n    // on the mode exits\n    Object.values(cs3DEnums.RequestType).forEach(type => {\n      imageLoadPoolManager.clearRequestStack(type);\n      imageRetrievalPoolManager.clearRequestStack(type);\n    });\n\n    cineService.setIsCineEnabled(false);\n\n    enabledElementReset();\n  },\n\n  /**\n   * Register the Cornerstone 3D services and set them up for use.\n   *\n   * @param configuration.csToolsConfig - Passed directly to `initCornerstoneTools`\n   */\n  preRegistration: function (props: Types.Extensions.ExtensionParams): Promise<void> {\n    const { servicesManager, serviceProvidersManager } = props;\n    servicesManager.registerService(CornerstoneViewportService.REGISTRATION);\n    servicesManager.registerService(ToolGroupService.REGISTRATION);\n    servicesManager.registerService(SyncGroupService.REGISTRATION);\n    servicesManager.registerService(SegmentationService.REGISTRATION);\n    servicesManager.registerService(CornerstoneCacheService.REGISTRATION);\n    servicesManager.registerService(ViewportActionCornersService.REGISTRATION);\n    servicesManager.registerService(ColorbarService.REGISTRATION);\n\n    serviceProvidersManager.registerProvider(\n      ViewportActionCornersService.REGISTRATION.name,\n      ViewportActionCornersProvider\n    );\n    return init.call(this, props);\n  },\n\n  getToolbarModule,\n  getPanelModule({ servicesManager }) {\n    return [\n      {\n        name: 'activeViewportWindowLevel',\n        component: () => {\n          return <ActiveViewportWindowLevel servicesManager={servicesManager} />;\n        },\n      },\n    ];\n  },\n  getHangingProtocolModule,\n  getViewportModule({ servicesManager, commandsManager }) {\n    const ExtendedOHIFCornerstoneViewport = props => {\n      // const onNewImageHandler = jumpData => {\n      //   commandsManager.runCommand('jumpToImage', jumpData);\n      // };\n      const { toolbarService } = (servicesManager as ServicesManager).services;\n\n      return (\n        <OHIFCornerstoneViewport\n          {...props}\n          toolbarService={toolbarService}\n          servicesManager={servicesManager}\n          commandsManager={commandsManager}\n        />\n      );\n    };\n\n    return [\n      {\n        name: 'cornerstone',\n        component: ExtendedOHIFCornerstoneViewport,\n      },\n    ];\n  },\n  getCommandsModule,\n  getCustomizationModule,\n  getUtilityModule({ servicesManager }) {\n    return [\n      {\n        name: 'common',\n        exports: {\n          getCornerstoneLibraries: () => {\n            return { cornerstone, cornerstoneTools };\n          },\n          getEnabledElement,\n          dicomLoaderService,\n          showLabelAnnotationPopup,\n        },\n      },\n      {\n        name: 'core',\n        exports: {\n          Enums: cs3DEnums,\n        },\n      },\n      {\n        name: 'tools',\n        exports: {\n          toolNames,\n          Enums: cs3DToolsEnums,\n        },\n      },\n      {\n        name: 'volumeLoader',\n        exports: {\n          getDynamicVolumeInfo,\n        },\n      },\n    ];\n  },\n};\n\nexport type { PublicViewportOptions };\nexport {\n  measurementMappingUtils,\n  CornerstoneExtensionTypes as Types,\n  toolNames,\n  getActiveViewportEnabledElement,\n  ImageOverlayViewerTool,\n};\nexport default cornerstoneExtension;\n","import { PubSubService } from '@ohif/core';\nimport { ViewportActionCornersLocations } from '@ohif/ui';\nimport { ReactNode } from 'react';\n\nexport type ActionComponentInfo = {\n  viewportId: string;\n  id: string;\n  component: ReactNode;\n  location: ViewportActionCornersLocations;\n  indexPriority: number;\n};\n\nclass ViewportActionCornersService extends PubSubService {\n  public static readonly EVENTS = {};\n  public static readonly LOCATIONS = ViewportActionCornersLocations;\n\n  public static REGISTRATION = {\n    name: 'viewportActionCornersService',\n    altName: 'ViewportActionCornersService',\n    create: ({ configuration = {} }) => {\n      return new ViewportActionCornersService();\n    },\n  };\n\n  serviceImplementation = {};\n\n  public LOCATIONS = ViewportActionCornersService.LOCATIONS;\n\n  constructor() {\n    super(ViewportActionCornersService.EVENTS);\n    this.serviceImplementation = {};\n  }\n\n  public setServiceImplementation({\n    getState: getStateImplementation,\n    setComponent: setComponentImplementation,\n    setComponents: setComponentsImplementation,\n    clear: clearImplementation,\n  }): void {\n    if (getStateImplementation) {\n      this.serviceImplementation._getState = getStateImplementation;\n    }\n    if (setComponentImplementation) {\n      this.serviceImplementation._setComponent = setComponentImplementation;\n    }\n    if (setComponentsImplementation) {\n      this.serviceImplementation._setComponents = setComponentsImplementation;\n    }\n    if (clearImplementation) {\n      this.serviceImplementation._clear = clearImplementation;\n    }\n  }\n\n  public getState() {\n    return this.serviceImplementation._getState();\n  }\n\n  public setComponent(component: ActionComponentInfo) {\n    this.serviceImplementation._setComponent(component);\n  }\n\n  public setComponents(components: Array<ActionComponentInfo>) {\n    this.serviceImplementation._setComponents(components);\n  }\n\n  public clear(viewportId: string) {\n    this.serviceImplementation._clear(viewportId);\n  }\n}\n\nexport default ViewportActionCornersService;\n","const state = {\n  // The `defaultContext` of an extension's commandsModule\n  DEFAULT_CONTEXT: 'CORNERSTONE',\n  enabledElements: {},\n};\n\n/**\n * Sets the enabled element `dom` reference for an active viewport.\n * @param {HTMLElement} dom Active viewport element.\n * @return void\n */\nconst setEnabledElement = (viewportId: string, element: HTMLElement, context?: string): void => {\n  const targetContext = context || state.DEFAULT_CONTEXT;\n\n  state.enabledElements[viewportId] = {\n    element,\n    context: targetContext,\n  };\n};\n\n/**\n * Grabs the enabled element `dom` reference of an active viewport.\n *\n * @return {HTMLElement} Active viewport element.\n */\nconst getEnabledElement = viewportId => {\n  return state.enabledElements[viewportId];\n};\n\nconst reset = () => {\n  state.enabledElements = {};\n};\n\nexport { setEnabledElement, getEnabledElement, reset };\n","import * as cornerstone from '@cornerstonejs/core';\n\n/**\n * It checks if the imageId is provided then it uses it to query\n * the metadata and get the SOPInstanceUID, SeriesInstanceUID and StudyInstanceUID.\n * If the imageId is not provided then undefined is returned.\n * @param {string} imageId The image id of the referenced image\n * @returns\n */\nexport default function getSOPInstanceAttributes(imageId) {\n  if (imageId) {\n    return _getUIDFromImageID(imageId);\n  }\n\n  // Todo: implement for volume viewports and use the referencedSeriesInstanceUID\n}\n\nfunction _getUIDFromImageID(imageId) {\n  const instance = cornerstone.metaData.get('instance', imageId);\n\n  return {\n    SOPInstanceUID: instance.SOPInstanceUID,\n    SeriesInstanceUID: instance.SeriesInstanceUID,\n    StudyInstanceUID: instance.StudyInstanceUID,\n    frameNumber: instance.frameNumber || 1,\n  };\n}\n"],"names":["DEFAULT_STATE","default","ViewportActionCornersLocations","topLeft","topRight","bottomLeft","bottomRight","ViewportActionCornersContext","createContext","ViewportActionCornersProvider","children","service","viewportActionCornersState","dispatch","useReducer","viewportActionCornersReducer","state","action","type","viewportId","id","component","location","indexPriority","payload","locationComponents","deletionIndex","findIndex","slice","insertionIndex","nextState","getState","useCallback","setComponent","actionComponentInfo","setComponents","actionComponentInfos","forEach","clear","useEffect","setServiceImplementation","api","props","contextValue","useMemo","React","Provider","value","propTypes","PropTypes","ViewportActionCornersService","isRequired","useViewportActionCornersContext","useContext","registerVolumeLoader","volumeLoader","initialized","initWADOImageLoader","userAuthenticationService","appConfig","extensionManager","dicomImageLoader","cornerstone","dicomParser","cornerstoneStreamingImageVolumeLoader","cornerstoneStreamingDynamicImageVolumeLoader","decodeConfig","convertFloatPixelDataToInt","use16BitDataType","Boolean","useNorm16Texture","preferSizeOverAccuracy","beforeSend","xhr","sourceConfig","getActiveDataSource","getConfig","headers","getAuthorizationHeader","xhrRequestHeaders","Accept","utils","generateAcceptHeader","acceptHeader","requestTransferSyntaxUID","omitQuotationForMultipartRequest","Object","assign","errorInterceptor","error","errorHandler","getHTTPErrorHandler","config","maxWebWorkers","Math","min","max","navigator","hardwareConcurrency","maxNumberOfWebWorkers","startWebWorkersOnDemand","taskConfiguration","decodeTask","initializeCodecsOnStartup","usePDFJS","strict","initialize","initWebWorkers","showLabelAnnotationPopup","measurement","uiDialogService","labelConfig","exclusive","dropDownItems","items","Promise","resolve","reject","create","isDraggable","showOverlay","content","LabellingFlow","defaultPosition","x","window","innerWidth","y","innerHeight","contentProps","labellingDoneCallback","dismiss","label","measurementData","componentClassName","labelData","data","callback","isArrowAnnotateInputDialog","dialogConfig","dialogId","text","dialogTitle","inputLabel","validateFunc","onSubmitHandler","centralize","Dialog","title","noCloseButton","onClose","actions","ButtonEnums","secondary","primary","onSubmit","body","setValue","Input","autoFocus","className","labelClassName","onChange","event","persist","target","onKeyPress","key","getActiveViewportEnabledElement","viewportGridService","activeViewportId","element","OHIFgetEnabledElement","getEnabledElement","calibrateImageSpacing","utilities","CalibrationLineTool","LengthTool","constructor","args","_renderingViewport","_lengthToolRenderAnnotation","this","renderAnnotation","enabledElement","svgDrawingHelper","viewport","_getTextLines","targetId","canvasPoint1","canvasPoint2","handles","points","map","p","worldToCanvas","round","point1","point2","dx","dy","sqrt","calculateLength2","toolName","onCompletedCalibrationLine","servicesManager","csToolsEvent","services","annotationAddedEventDetail","detail","annotation","metadata","annotationData","referencedImageId","imageId","length","pos1","pos2","dz","calculateLength3","callInputDialog","newLength","spacingScale","getRenderingEngine","scale","adjustCalibration","Number","parseFloat","val","v","isNaN","_cachedOverlayMetadata","Map","OverlayPlaneModuleProvider","add","get","set","query","Array","isArray","metaData","ImageOverlayViewerTool","AnnotationDisplayTool","toolProps","defaultToolProps","supportedInteractionTypes","configuration","fillColor","super","onSetToolDisabled","getReferencedImageId","overlayMetadata","overlays","overlay","addOverlayPlaneModule","_getCachedStat","then","cachedStat","_renderOverlay","VolumeViewport","getTargetId","split","overlayData","_id","columns","width","rows","height","overlayTopLeftWorldPos","overlayTopLeftOnCanvas","overlayBottomRightWorldPos","overlayBottomRightOnCanvas","svgNodeHash","existingImageElement","getSvgNode","attributes","href","dataUrl","console","warn","drawing","setNodeTouched","newImageElement","document","createElementNS","appendNode","color","filter","pixelData","all","async","idx","Value","retrieveBulkData","InlineBinary","blob","b64toBlob","arrayBuffer","_renderOverlayToDataUrl","guid","_isSameColor","color1","color2","pixelDataRaw","pixelDataView","DataView","totalBits","canvas","createElement","ctx","getContext","clearRect","globalCompositeOperation","imageData","getImageData","i","bitIdx","byteIdx","getUint8","putImageData","toDataURL","toolNames","Pan","PanTool","ArrowAnnotate","ArrowAnnotateTool","WindowLevel","WindowLevelTool","StackScroll","StackScrollTool","StackScrollMouseWheel","StackScrollMouseWheelTool","Zoom","ZoomTool","VolumeRotateMouseWheel","VolumeRotateMouseWheelTool","MipJumpToClick","MIPJumpToClickTool","Length","DragProbe","DragProbeTool","Probe","ProbeTool","RectangleROI","RectangleROITool","RectangleROIThreshold","RectangleROIThresholdTool","EllipticalROI","EllipticalROITool","CircleROI","CircleROITool","Bidirectional","BidirectionalTool","Angle","AngleTool","CobbAngle","CobbAngleTool","Magnify","MagnifyTool","Crosshairs","CrosshairsTool","SegmentationDisplay","SegmentationDisplayTool","Brush","BrushTool","PaintFill","PaintFillTool","ReferenceLines","ReferenceLinesTool","CalibrationLine","TrackballRotateTool","CircleScissors","CircleScissorsTool","RectangleScissors","RectangleScissorsTool","SphereScissors","SphereScissorsTool","ImageOverlayViewer","AdvancedMagnify","AdvancedMagnifyTool","UltrasoundDirectional","UltrasoundDirectionalTool","SplineROI","SplineROITool","LivewireContour","LivewireContourTool","PlanarFreehandROI","PlanarFreehandROITool","OrientationMarker","OrientationMarkerTool","toAnnotation","toMeasurement","csToolsEventDetail","displaySetService","cornerstoneViewportService","getValueTypeFromToolType","customizationService","annotationUID","FrameOfReferenceUID","SUPPORTED_TOOLS","includes","Error","SOPInstanceUID","SeriesInstanceUID","StudyInstanceUID","getSOPInstanceAttributes","displaySet","getDisplaySetForSOPInstanceUID","getDisplaySetsForSeries","textBox","mappedAnnotations","cachedStats","keys","annotations","targetStats","frameNumber","SeriesNumber","unit","push","getMappedAnnotations","displayText","instance","images","find","image","InstanceNumber","instanceText","frameText","isMultiFrame","roundedLength","roundNumber","getDisplayText","uid","referenceSeriesUID","referenceStudyUID","displaySetInstanceUID","getReport","values","join","_getReport","getHandlesFromPoints","longAxis","shortAxis","start","end","perpendicularStart","perpendicularEnd","reduce","obj","item","isAnnotationSelected","cs3dToolAnnotationUtils","setAnnotationSelected","selected","getFirstAnnotationSelected","selectedAnnotationUID","referencedSeriesInstanceUID","roundedWidth","getDisplayUnit","getStatisticDisplayString","numbers","results","number","charAt","toUpperCase","result","mean","stdDev","area","Modality","areaUnit","modalityUnit","roundedArea","mappedAnnotation","str","DisplaySetService","CornerstoneViewportService","angle","undefined","roundedAngle","displayTextArray","stats","roundValues","displayName","findUnitForValue","displayTextItems","for","formatDisplayText","contour","polyline","report","name","getColumnValueReport","roundedValue","xValues","yValues","units","isUnitless","isHorizontal","seriesText","dist1","abs","dist2","measurementServiceMappingsFactory","measurementService","_getValueTypeFromToolType","toolType","POLYLINE","ELLIPSE","CIRCLE","RECTANGLE","BIDIRECTIONAL","POINT","ANGLE","MeasurementService","VALUE_TYPES","csToolsAnnotation","matchingCriteria","valueType","removeAnnotation","csToolsEvents","Enums","CORNERSTONE_3D_TOOLS_SOURCE_NAME","connectToolsToMeasurementService","csTools3DVer1MeasurementSource","initMeasurementService","createSource","addMapping","connectMeasurementServiceToTools","annotationToMeasurement","remove","addMeasurement","completedEvt","log","finally","removeMeasurement","resize","annotationRemovedEventDetail","getMeasurement","addedEvt","ANNOTATION_ADDED","ANNOTATION_COMPLETED","updatedEvt","ANNOTATION_MODIFIED","removedEvt","ANNOTATION_REMOVED","selectionEvt","ANNOTATION_SELECTION_CHANGE","eventTarget","addEventListener","annotationModifiedEventDetail","annotationSelectionEventDetail","added","addedSelectedAnnotationUIDs","removed","removedSelectedAnnotationUIDs","setMeasurementSelected","measurementSource","MEASUREMENT_REMOVED","MEASUREMENTS_CLEARED","MEASUREMENT_UPDATED","RAW_MEASUREMENT_ADDED","EVENTS","getSource","subscribe","measurements","source","notYetUpdatedAtSource","sourceAnnotation","dataSource","DicomMetadataStore","getInstance","getImageIdsForInstance","addAnnotation","highlighted","isLocked","invalidated","removedMeasurementId","render","_getVolumeFromViewport","volumes","getActors","actor","cache","getVolume","_getVolumesFromViewport","volume","isDynamicVolume","cineService","getSyncedViewports","srcViewportId","viewports","viewportsStates","srcViewportState","viewportOptions","viewportType","srcViewport","getCornerstoneViewport","srcVolume","volumeId","srcVolumeId","from","hasVolumeId","_getSyncedViewports","playClip","playClipOptions","stopClip","stopClipOptions","volumeIdMapsToLoad","viewportIdVolumeInputArrayMap","interleaveCenterLoader","volumeInputArray","displaySetsMatchDetails","viewportMatchDetails","matchDetails","volumeInput","has","uniqueViewportVolumeDisplaySetUIDs","Set","uniqueMatchedDisplaySetUIDs","matchDetail","displaySetsInfo","size","AllRequests","requests","getImageLoadRequests","reOrderedRequests","imageIds","maxImageIdIndex","middleImageIdIndex","floor","lowerImageIdIndex","upperImageIdIndex","imageIdsToPrefetch","imageIdIndex","prefetchQueuedFilled","currentPositionDownToMinimum","currentPositionUpToMaximum","getInterleavedFrames","request","req","interleavedRequests","compact","flatten","zip","finalRequests","volumeRequests","volumeImageIdRequest","requestType","Prefetch","callLoadImage","additionalDetails","options","callLoadImageBound","bind","imageLoadPoolManager","addRequest","viewportIdVolumeInputArrayMapCopy","interleaveNthLoader","lists","time","useLists","ret","list","splice","indexOf","timeEnd","interleave","frames","centerStart","centerEnd","getNthFrames","interleaveTopToBottom","filteredMatchDetails","displaySetsToLoad","curMatchDetails","numDisplaySetsToLoad","displaySetOptions","skipLoading","reverse","findNearbyToolData","commandsManager","evt","currentPoints","runCommand","canvasCoordinates","cs3DToolsEvents","DEFAULT_CONTEXT_MENU_CLICKS","button1","commands","commandName","button3","commandOptions","requireNearbyToolData","menuId","cornerstoneViewportHandleClick","button","which","nameArr","altKey","ctrlKey","shiftKey","getEventName","cornerstoneViewportHandleEvent","toRun","nearbyToolData","some","command","run","ELEMENT_ENABLED","getViewportInfo","setEnabledElement","MOUSE_CLICK","ELEMENT_DISABLED","removeEventListener","DEFAULT_DOUBLE_CLICK","doubleClick","cornerstoneViewportHandleDoubleClick","eventName","getDoubleClickEventName","MOUSE_DOUBLE_CLICK","IMAGE_TIMING_KEYS","imageTiming","viewportsWaiting","imageRenderedListener","viewportStatus","TimingEnum","DISPLAY_SETS_TO_FIRST_IMAGE","STUDY_TO_FIRST_IMAGE","SCRIPT_TO_VIEW","IMAGE_RENDERED","DISPLAY_SETS_TO_ALL_IMAGES","colormaps","ColorSpace","Name","NanColor","RGBPoints","description","registerColormap","csUtilities","init","useSharedArrayBuffer","sharedArrayBufferDisabled","csEnums","AUTO","FALSE","TRUE","cs3DInit","rendering","useCPURendering","strictZSpacingForVolumeViewport","maxCacheSize","setMaxCacheSize","isAnnotation","addTool","defaultStyles","getDefaultToolStyles","setDefaultToolStyles","global","textBoxFontSize","lineWidth","initCornerstoneTools","Settings","getRuntimeSettings","useCursors","uiModalService","uiNotificationService","hangingProtocolService","stateSyncService","showWarningMessageForCrossOrigin","crossOriginIsolated","show","message","showCPUFallbackMessage","progress","CPUModal","unsubscribe","PROTOCOL_CHANGED","_showCPURenderingModal","register","clearOnModeExit","labelmapRepresentation","cornerstoneTools","Labelmap","fillAlpha","fillAlphaInactive","outlineOpacity","outlineOpacityInactive","metadataProvider","OHIF","MetadataProvider","registerImageLoadStrategy","nthLoader","maxNumRequests","interaction","thumbnail","prefetch","measurementServiceSource","initCineService","CUSTOM_IMAGE_LOAD_PERFORMED","volumeInputArrayMap","entry","entries","ohifViewport","lutPresentationStore","positionPresentationStore","presentationIds","getViewportOptions","presentations","positionPresentation","positionPresentationId","lutPresentation","lutPresentationId","setVolumesForViewport","GRID_SIZE_CHANGED","initContextMenu","initDoubleClick","imageLoadFailedHandler","handler","STACK_VIEWPORT_NEW_STACK","enable","IMAGE_LOAD_FAILED","IMAGE_LOAD_ERROR","CAMERA_RESET","timingKeys","initViewTiming","addEventListenerDebounced","ERROR_EVENT","PROGRESS","UploadStatus","UploadRejection","status","DicomFileUploader","PubSubService","file","_file","_fileId","_dataSource","_loadPromise","_abortController","AbortController","_status","NotStarted","_percentComplete","fileManager","getFileId","getFileName","getFileSize","cancel","abort","getStatus","getPercentComplete","load","uploadCallbacks","lengthComputable","InProgress","loaded","total","_broadcastEvent","fileId","percentComplete","timeout","_reject","Failed","Cancelled","loadFileRequest","dicomFile","signal","aborted","_checkDicomFile","XMLHttpRequest","_addRequestCallbacks","store","dicom","Success","catch","reason","_isRejected","abortCallback","upload","cleanUpCallback","arr","Uint8Array","every","char","charCodeAt","DicomUploadProgressItem","memo","dicomFileUploader","setPercentComplete","useState","failedReason","setFailedReason","setStatus","isComplete","progressSubscription","dicomFileUploaderProgressEvent","cancelUpload","getStatusIcon","Icon","onClick","ONE_SECOND","ONE_MINUTE","ONE_HOUR","BASE_INTERVAL_TIME","NO_WRAP_ELLIPSIS_CLASS_NAMES","DicomUploadProgress","dicomFileUploaderArr","onComplete","totalUploadSize","acc","fileUploader","currentUploadSizeRef","useRef","uploadRateRef","timeRemaining","setTimeRemaining","numFilesCompleted","setNumFilesCompleted","numFails","setNumFails","showFailedOnly","setShowFailedOnly","progressBarContainerRef","timeoutId","intervalStartUploadSize","intervalStartTime","Date","now","setUploadRateRef","uploadSizeFromStartOfInterval","current","timeSinceStartOfInterval","setTimeout","clearTimeout","currentTimeRemaining","subscriptions","currentFileUploadSize","updateProgress","previousFileUploadSize","uploadSizeRemaining","currentSecondsRemaining","ceil","delta","currentMinutesRemaining","rejection","numCompleted","progressEvent","subscription","cancelAllUploads","getFormattedTimeRemaining","secondsRemaining","minutesRemaining","hoursRemaining","getPercentCompleteRounded","showInfiniteProgressBar","offsetWidth","getNofMFilesStyle","toString","getShowFailedOnlyIconComponent","currentShowFailedOnly","Button","disabled","style","classNames","ref","ProgressLoadingBar","DicomUpload","onStarted","baseClassNames","setDicomFileUploaderArr","onDrop","acceptedFiles","Dropzone","noClick","getRootProps","_extends","noDrag","getInputProps","webkitdirectory","mozdirectory","CT","level","PT","VIEWPORT_PRESETS","CONSTANTS","tools","active","bindings","mouseButton","Primary","Auxiliary","Secondary","enabled","presets","defaultWindowLevelPresets","colorbarTickPosition","colorbarContainerPosition","colorbarInitialColormap","volumeRenderingPresets","volumeRenderingQualityRange","step","RectangleROi","DEFAULT_SIZE","MAX_TEXTURE_SIZE","VIEWPORT_ID","CornerstoneViewportDownloadForm","activeViewportIdProp","activeViewportElement","activeViewportEnabledElement","renderingEngineId","activeViewport","toolGroup","ToolGroupManager","toolModeAndBindings","toolOptions","tool","mode","setToolMode","ViewportDownloadForm","minimumSize","maximumSize","defaultSize","enableViewport","viewportElement","renderingEngine","viewportInput","defaultOptions","background","orientation","enableElement","disableViewport","disableElement","updateViewportPreview","downloadViewportElement","internalCanvas","fileType","downloadViewport","updateViewport","downloadCanvas","getOrCreateCanvas","newWidth","offsetHeight","newHeight","multiplier","resetCamera","presentation","getViewPresentation","setView","getViewReference","loadImage","getViewport","StackViewport","getCurrentImageId","properties","getProperties","setStack","setProperties","e","BaseVolumeViewport","addActor","toggleAnnotations","toggle","downloadViewportId","addViewport","getToolInstances","setToolEnabled","setToolDisabled","downloadBlob","filename","divForDownloadViewport","querySelector","html2canvas","link","download","click","getReconstructableStackViewports","displaySetInstanceUIDs","getDisplaySetByUID","isReconstructable","getSyncId","modality","disableSync","modalityViewports","syncId","syncGroupService","gridViewport","removeViewportFromSyncGroup","toggleSyncFunctions","imageSlice","providedViewports","getSynchronizersForViewport","syncState","syncName","addViewportToSyncGroup","voi","groupViewportsByModality","syncIdToUse","toolGroupService","colorbarService","_getActiveViewportEnabledElement","_getActiveViewportToolGroupId","getToolGroupForViewport","showCornerstoneContextMenu","optionsToUse","useSelectedAnnotation","firstAnnotationSelected","allowedSelectedTools","defaultPointsPosition","selectorProps","getNearbyToolData","cstUtils","getNearbyAnnotation","toolInstance","getToolInstance","deleteMeasurement","setMeasurementLabel","update","updateMeasurement","code","textLabel","updatedMeasurement","measurementKey","CodeValue","substring","CodeMeaning","CodingSchemeDesignator","findingSites","it","setViewportActive","setActiveViewportId","arrowTextCallback","callLabelAutocompleteDialog","toggleCine","isCineEnabled","setIsCineEnabled","_","index","setCine","isPlaying","setViewportWindowLevel","windowWidthNum","windowCenterNum","lower","upper","csUtils","voiRange","toggleViewportColorbar","hasColorbar","removeColorbar","addColorbar","setWindowLevel","toolGroupId","viewportToolGroupId","getToolGroup","hasTool","toolIsEnabled","getToolOptions","Enabled","toggleEnabledDisabledToolbar","itemId","toggleActiveDisabledToolbar","toolIsActive","Active","Passive","setToolActive","prevToolName","getPrevActivePrimaryToolName","setToolActiveToolbar","toolGroupIds","getToolGroupIds","activeToolName","getActivePrimaryMouseButtonTool","activeToolOptions","getToolConfiguration","disableOnPassive","setToolPassive","showDownloadViewportModal","hide","containerDimensions","rotateViewport","rotation","camera","getCamera","rotAngle","PI","rotMat","mat4","Float32Array","viewPlaneNormal","rotatedViewUp","vec3","viewUp","setCamera","getRotation","newRotation","flipViewportHorizontal","flipHorizontal","flipViewportVertical","flipVertical","invertViewport","invert","resetViewport","resetProperties","scaleViewport","direction","scaleFactor","parallelScale","jumpToImage","imageIndex","numberOfSlices","getImageIds","jumpIndex","scroll","setViewportColormap","colormap","opacity","immediate","actorEntries","hpOpacity","getActiveProtocol","matchingDisplaySet","setViewportProperties","actorEntry","volumeActor","changeActiveViewport","viewportIds","nextViewportIndex","toggleSynchronizer","synchronizer","getSynchronizer","isDisabled","setEnabled","fn","setSourceViewportForReferenceLinesTool","setToolConfiguration","sourceViewportId","storePresentation","updateVolumeData","vtkOpenGLTexture","numSlices","getDimensions","setUpdatedFrame","modified","attachProtocolViewportDataListener","protocol","stageIndex","EVENT","VIEWPORT_DATA_CHANGED","callbacks","onViewportDataInitialized","numPanes","stages","numPanesWithData","setViewportPreset","preset","setVolumeRenderingQulaity","volumeQuality","mapper","getMapper","getInputData","dims","spacing","getSpacing","spatialDiagonal","sampleDistance","a","b","samplesPerRay","setMaximumSamplesPerRay","setSampleDistance","shiftVolumeOpacityPoints","shift","ofun","getProperty","getScalarOpacity","opacityPointValues","getSize","pointIdx","opacityPointValue","getNodeValue","removeAllPoints","addPoint","setVolumeLighting","property","shade","setShade","ambient","setAmbient","diffuse","setDiffuse","specular","setSpecular","resetCrosshairs","crosshairInstances","getCrosshairInstances","ins","definitions","commandFn","menuCustomizationId","storeContexts","rotateViewportCW","rotateViewportCCW","incrementActiveViewport","decrementActiveViewport","scaleUpViewport","scaleDownViewport","fitViewportToWindow","nextImage","previousImage","firstImage","lastImage","defaultContext","fourUp","locked","icon","isPreset","createdDate","modifiedDate","availableTo","editableBy","protocolMatchingRules","imageLoadStrategy","displaySetSelectors","mprDisplaySet","seriesMatchingRules","weight","attribute","constraint","equals","required","viewportStructure","layoutType","initialImageOptions","syncGroups","syncColormap","displaySets","customViewportProps","hideOverlays","displayPreset","MR","main3D","layoutOptions","mpr","numberOfPriorsReferenced","activeDisplaySet","mprAnd3DVolumeViewport","only3D","primary3D","primaryAxial","getToggledClassName","isToggled","_evaluateToggle","toolbarService","disabledText","offModes","getToolNameForButton","isOff","VIEWPORT_ADDED","TOOLGROUP_CREATED","TOOL_ACTIVATED","PRIMARY_TOOL_ACTIVATED","ToolGroupService","serviceManager","listeners","_onToolActivated","toolBindingsOptions","isPrimaryTool","binding","callbackProps","pubSubServiceInterface","_init","onModeExit","destroy","toolGroupIdToUse","getActiveToolForViewport","destroyToolGroup","delete","removeViewportFromToolGroup","deleteToolGroupIfEmpty","removeViewports","getViewportIds","addViewportToToolGroup","createToolGroup","addToolsToToolGroup","configs","_addTools","_setToolsMode","createToolGroupAndAddTools","passive","addTools","parentTool","addToolInstance","_ToolGroupService","REGISTRATION","altName","TOOL_GROUP_CREATED","POSITION","VOI","ZOOMPAN","STACKIMAGE","IMAGE_SLICE","SyncGroupService","synchronizerCreators","synchronizers","synchronizersByType","_createSynchronizer","syncCreator","toLowerCase","getSyncCreatorForType","addSynchronizerType","creator","SynchronizerManager","getSynchronizersOfType","_getOrCreateSynchronizer","syncGroup","syncGroupObj","asSyncGroup","setOptions","viewportInfo","addSource","addTarget","getRenderingEngines","re","getViewports","vp","s","hasSourceViewport","hasTargetViewport","syncGroupId","isImageSliceSyncronizer","unRegisterSpatialRegistration","sourceViewports","getSourceViewports","targetViewports","getTargetViewports","targetViewportId","c","concat","viewportIdPair","getSynchronizerType","syncType","_SyncGroupService","easeInOutBell","baseline","alpha","pow","LABELMAP","csToolsEnums","CONTOUR","Contour","SEGMENTATION_UPDATED","SEGMENTATION_DATA_MODIFIED","SEGMENTATION_ADDED","SEGMENTATION_REMOVED","SEGMENTATION_CONFIGURATION_CHANGED","SEGMENT_LOADING_COMPLETE","SEGMENTATION_LOADING_COMPLETE","SEGMENT_CONSTANT","isVisible","SegmentationService","segmentations","highlightIntervalId","SEGMENTATION_MODIFIED","_onSegmentationModifiedFromSource","_onSegmentationDataModified","segmentationId","_removeSegmentationFromCornerstone","setSegmentRGBA","segmentIndex","rgbaColor","segmentation","getSegmentation","suppressEvents","_setSegmentOpacity","_setSegmentColor","calculateCentroids","getLabelmapVolume","dimensions","scalarData","getScalarData","dimX","dimY","numFrames","frameLength","segmentIndices","segments","segment","segmentIndicesSet","centroids","z","count","voxelIndex","frame","centroid","normalizedCentroid","world","indexToWorld","setCentroids","segmentCenter","center","addOrUpdateSegmentation","createSegmentationForDisplaySet","representationType","_getVolumeIdForDisplaySet","targetBuffer","sharedArrayBuffer","SharedArrayBuffer","_getDefaultSegmentationScheme","isActive","instances","representationData","referencedVolumeId","SeriesDescription","toggleSegmentationVisibility","_toggleSegmentationVisibility","addSegmentationRepresentationToToolGroup","hydrateSegmentation","hydrated","segmentationRepresentationUIDs","cstSegmentation","_setActiveSegmentationForToolGroup","visibility","_setSegmentVisibility","_setSegmentLocked","setSegmentRGBAColor","getToolGroupIdsWithSegmentation","_setDisplaySetIsHydrated","getConfiguration","_getApplicableToolGroupId","segmentationRepresentations","getSegmentationRepresentationsForToolGroup","typeToUse","renderInactiveSegmentations","representation","representations","renderOutline","outlineWidthActive","renderFill","brushSize","brushThresholdGate","setConfiguration","setConfigValueIfDefined","transformFn","transformedValue","_setSegmentationConfig","_updateCornerstoneSegmentationVisibility","segmentInfo","_getSegmentInfo","segmentationRepresentation","_getSegmentationRepresentation","segmentationRepresentationUID","getSegmentations","renderViewports","segmentationState","activeSegmentIndex","segmentsLocked","segmentationSchema","segmentsHidden","newVisibility","_getSegmentationInfo","getActiveViewportId","getToolGroupId","arrayOfObjects","_initSegmentationService","addSegment","segmentCount","_setActiveSegment","newColor","removeSegment","labelmapVolume","modifiedFrames","modifiedFramesArray","newActiveSegmentIndex","setSegmentVisibility","setSegmentLocked","toggleSegmentLocked","setSegmentColor","setSegmentOpacity","setActiveSegmentationForToolGroup","setActiveSegment","filterNonHydratedSegmentations","_getSegmentations","m","getActiveSegmentation","getActiveSegment","activeSegmentation","cachedSegmentation","_updateCornerstoneSegmentations","createSegmentationForSEGDisplaySet","segDisplaySet","labelmap","labelmapBufferArray","derivedVolume","derivedVolumeScalarData","segmentsInfo","segMetadata","SegmentedPropertyCategoryCodeSequence","SegmentNumber","SegmentLabel","SegmentAlgorithmType","SegmentAlgorithmName","SegmentedPropertyTypeCodeSequence","rgba","centerWorld","modifiedTime","SeriesDate","category","algorithmType","algorithmName","isLoaded","createSegmentationForRTDisplaySet","rtDisplaySet","structureSet","defaultScheme","rtDisplaySetUID","allRTStructData","ROIContours","contourPoints","ROINumber","ROIName","colorArray","rest","geometryId","mapROIContoursToRTStructData","sort","geometryIds","segmentsCachedStats","initializeContour","rtStructData","geometry","geometryLoader","geometryData","frameOfReferenceUID","getCentroid","numInitialized","numSegments","promiseArray","promise","jumpToSegmentCenter","highlightAlpha","highlightSegment","animationLength","highlightHideOthers","highlightFunctionType","_getSegmentCenter","_getToolGroupIdsWithSegmentation","toolGroups","viewportsInfo","getViewportsInfo","getEnabledElementByIds","hideOthers","clearInterval","_highlightLabelmap","_highlightContour","displaySetUID","isHydrated","setDisplaySetMetadataInvalidated","newSegmentSpecificConfig","startTime","animation","timestamp","elapsed","requestAnimationFrame","performance","animate","currentTime","reversedProgress","removeSegmentationRepresentationFromToolGroup","segmentationRepresentationUIDsIds","uids","rep","wasActive","colorLUTIndex","updatedToolGroupIds","remainingHydratedSegmentations","setSegmentLabel","_setSegmentLabel","shouldRenderSegmentation","viewportDisplaySetInstanceUIDs","segmentationFrameOfReferenceUID","shouldDisplaySeg","targetSegmentation","volumeLoaderSchema","segmentLabel","sourceSegState","getSegmentationRepresentations","UIDsToRemove","removeSegmentation","getVolumeLoadObject","removeVolumeLoadObject","sourceSegmentation","isEqual","_getFrameOfReferenceUIDForSeg","referencedFrameOfReferenceSequence","ReferencedFrameOfReferenceSequence","_SegmentationService","getCornerstoneViewportType","lowerViewportType","STACK","ORTHOGRAPHIC","VOLUME_3D","VOLUME_LOADER_SCHEME","CornerstoneCacheService","stackImageIds","volumeImageIds","getCacheSize","cs3DCache","getCacheFreeSpace","getBytesAvailable","createViewportData","initialImageIndex","_shouldRenderSegmentation","cs3DViewportType","viewportData","_getStackViewportData","_getVolumeViewportData","invalidateViewportData","invalidatedDisplaySetInstanceUID","_getCornerstoneStackImageIds","getImageLoadObject","removeImageLoadObject","_volumeCache","isCompositeStack","StackViewportData","volumeData","Function","studyInstanceUID","_getCornerstoneVolumeImageIds","segmentationService","segDisplaySetInstanceUID","getImageIdsForDisplaySet","_CornerstoneCacheService","RENDERING_ENGINE_ID","DEFAULT_TOOLGROUP_ID","dataContains","dataId","imageURI","hasImageURI","setPublicViewportOptions","setPublicDisplaySetOptions","contains","getEnabledElementByViewportId","setRenderingEngineId","getRenderingEngineId","setViewportId","setElement","setViewportData","getViewportData","getElement","getViewportId","publicDisplaySetOptions","mapDisplaySetOptions","setDisplaySetOptions","hasDisplaySet","dsUID","viewportOptionsEntry","AXIAL","SAGITTAL","CORONAL","ACQUISITION","getCornerstoneOrientation","setViewportOptions","getPresentationIds","getSyncGroups","getDisplaySetOptions","getViewportType","getBackground","getOrientation","getDisplayArea","displayArea","getInitialImageOptions","option","blendMode","slabThickness","voiInverted","COMPOSITE","MAXIMUM_INTENSITY_BLEND","MINIMUM_INTENSITY_BLEND","AVERAGE_INTENSITY_BLEND","getCornerstoneBlendMode","JumpPresets","VIEWPORT_VOLUMES_CHANGED","viewportsById","viewportGridResizeObserver","viewportsDisplaySets","beforeResizePositionPresentations","enableResizeDetector","resizeRefreshRateMs","resizeRefreshMode","resizeQueue","viewportResizeTimer","gridResizeDelay","gridResizeTimeOut","elementRef","ViewportInfo","hasBeenDestroyed","RenderingEngine","isGridResize","performResize","resetGridResizeTimeout","enqueueViewportResizeRequest","_removeResizeObserver","purgeCache","setPresentations","zoom","pan","setZoom","setPan","getPositionPresentation","csViewport","getCurrentImageIdIndex","getZoom","getPan","getLutPresentation","cleanProperties","isComputedVOI","VOILUTFunction","getPresentations","synchronizersStore","updateStore","newState","publicViewportOptions","_setDisplaySets","getViewportIdToJump","cameraProps","_setStackViewport","initialImageIndexToUse","_getInitialImageIndexForViewport","windowWidth","windowCenter","imageSliceData","_getInitialImageIndex","lastSliceIndex","csToolsUtils","First","Last","Middle","_setVolumeViewport","displaySetOptionsArray","volumeToLoad","_getSlabThickness","volumesNotLoaded","loadStatus","getShouldPerformCustomImageLoad","runImageLoadStrategy","loading","displaySetUIDs","getDisplaySetsUIDsForViewport","displaySetModality","volumesProperties","displaySetOption","setVolumes","overlayDisplaySet","isOverlayDisplaySet","addOverlayRepresentationForDisplaySet","_addSegmentationRepresentationToToolGroupIfNecessary","segFrameOfReferenceUID","_getFrameOfReferenceUID","keepCamera","viewportCamera","displaySetPromise","VolumeViewport3D","disconnect","imageVolume","processViewportResizeQueue","isGridResizeInQueue","isImmediate","_CornerstoneViewportService","ChangeTypes","ViewportColorbar","ColorbarService","colorbars","position","thickness","activeColormapName","numContainers","containers","createContainers","colorbarContainer","colorbar","container","ticks","defaultTickStyles","STATE_CHANGED","changeType","Added","colorbarInfo","parentNode","removeChild","Removed","getViewportColorbar","dimension","left","transform","positionStyles","top","appendChild","_ColorbarService","boxSizing","border","cursor","right","bottom","font","maxNumTicks","tickSize","tickWidth","labelMargin","getImageId","imageObj","url","someInvalidStrings","strings","string","getImageInstance","dataset","getImageInstanceId","imageInstance","fetchIt","DICOMWeb","fetch","response","cornerstoneRetriever","imageLoader","byteArray","buffer","wadorsRetriever","seriesInstanceUID","sopInstanceUID","DICOMwebClient","retrieveInstance","getLocalData","studies","nonImageInstance","getNonImageInstance","startsWith","findImageIdOnStudies","study","series","getDataByImageType","getDicomDataMethod","loaderType","loaderRegExp","exec","lastIndex","replace","getImageLoaderType","getData","wadoRoot","getStudyInstanceUID","getSeriesInstanceUID","getSOPInstanceUID","getDataByDatasetType","authorizationHeaders","wadoUri","absoluteUrl","getLoaderIterator","findDicomDataPromise","loaderIterator","loader","packageJson","workerManager","getWebWorkerManager","WorkerOptions","maxWorkerInstances","autoTerminateOnIdle","idleTimeThreshold","workerFn","Worker","URL","Events","ViewportWindowLevel","windowLevels","setWindowLevels","cachedHistograms","setCachedHistograms","getViewportsWithVolumeIds","volumeIds","getVolumeViewports","viewportVolumeIds","getNodeOpacity","nodeIndex","nodeValue","getVolumeOpacity","getActor","isPetVolumeWithDefaultOpacity","volumeOpacity","node1Value","node2Value","expectedOpacity","opacitySize","currentNodeValue","firstNodeValue","firstNodeOpacity","isVolumeWithConstantOpacity","getWindowLevelsData","viewportProperties","viewportVoi","volumeIndex","scaling","histogram","registerWorker","prevTimePoint","numTimePoints","timePointIndex","middleTimePoint","origin","range","executeTask","minimum","maximum","calcHistOptions","numBins","getViewportVolumeHistogram","displaySetVOI","displaySetColormap","vtkColorMaps","getPresetByName","showOpacitySlider","updateViewportHistograms","handleCornerstoneVOIModified","oldWindowLevel","wl","oldVOI","newWindowLevel","windowLevel","debouncedHandleCornerstoneVOIModified","debounce","handleVOIChange","newRange","handleOpacityChange","_volumeIndex","newVolumeHistograms","volumeHistograms","prev","IMAGE_VOLUME_LOADING_COMPLETED","VOI_MODIFIED","PanelSection","onVOIChange","onOpacityChange","ServicesManager","ActiveViewportWindowLevel","viewportGrid","useViewportGrid","helpers","volumeLoaderHelpers","csStreamingImageVolumeLoader","getDynamicVolumeInfo","Component","OHIFCornerstoneViewport","fallback","cornerstoneExtension","onModeEnter","registerEventForToolbarUpdate","cs3DEnums","clearRequestStack","imageRetrievalPoolManager","enabledElementReset","preRegistration","serviceProvidersManager","registerService","registerProvider","call","getToolbarModule","evaluate","isPrimaryActive","activeToolIndex","Disabled","synchronizerType","isEnabled","_enabled","propId","prop","getPanelModule","getHangingProtocolModule","getViewportModule","getCommandsModule","getCustomizationModule","getUtilityModule","exports","getCornerstoneLibraries","dicomLoaderService","cs3DToolsEnums","serviceImplementation","LOCATIONS","getStateImplementation","setComponentImplementation","setComponentsImplementation","clearImplementation","_getState","_setComponent","_setComponents","_clear","components","_ViewportActionCornersService","DEFAULT_CONTEXT","enabledElements","context","targetContext","reset","_getUIDFromImageID"],"sourceRoot":""}